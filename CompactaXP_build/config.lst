* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Tue Feb 28 14:07:05 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  28-Feb-2017 14:07:05
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=config.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01\r_lvd_rx,C:\Workspace\e2studio\git\MT01\r_lvd_rx\src,C:/Workspace/e2studio/git/MT01/r_tfa
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=config.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=1,EASYMAK=0,MOBILE=0,FREE_RTOS_PP
                                 ;config.c
                                 
                                 		.glb	_global_string_buf
                                 		.glb	_cfgArray
                                 		.glb	_cfg
                                 		.glb	_js
                                 		.glb	_configVarParMaq
                                 		.glb	_nvStr
                                 		.glb	_nvl
                                 		.glb	_nv_set
                                 		.glb	_nv_index_max
                                 		.glb	_nv_get
                                 		.glb	_nv_print
                                 		.glb	_nv_persist
                                 		.glb	_nv_index_lt_groups
                                 		.glb	_write_persistent_value
                                 		.glb	_config_init
                                 		.glb	_cm_set_units_mode
                                 		.glb	_nv_index_is_single
                                 		.glb	_sr_init_status_report
                                 		.glb	_rpt_print_initializing_message
                                 		.glb	_set_defaults
                                 		.glb	_config_init_assertions
                                 		.glb	_help_defa
                                 		.glb	_config_test_assertions
                                 		.glb	_get_nul
                                 		.glb	_get_ui8
                                 		.glb	_get_int
                                 		.glb	_get_data
                                 		.glb	_get_flt
                                 		.glb	_set_nul
                                 		.glb	_set_ui8
                                 		.glb	_set_01
                                 		.glb	_set_012
                                 		.glb	_set_0123
                                 		.glb	_set_int
                                 		.glb	_set_data
                                 		.glb	_set_flt
                                 		.glb	_get_grp
                                 		.glb	_set_grp
                                 		.glb	_nv_group_is_prefixed
                                 		.glb	_nv_get_index
                                 		.glb	_nv_get_type
                                 		.glb	_nv_get_nvObj
                                 		.glb	_nv_reset_nv
                                 		.glb	_nv_reset_nv_list
                                 		.glb	_nv_copy_string
                                 		.glb	_nv_add_object
                                 		.glb	_nv_add_integer
                                 		.glb	_nv_add_data
                                 		.glb	_nv_add_float
                                 		.glb	_nv_add_string
                                 		.glb	_nv_add_conditional_message
                                 		.glb	_nv_print_list
                                 		.glb	_json_print_list
                                 		.glb	_text_print_list
                                 		.glb	_nv_dump_nv
                                 		.glb	_printf
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _nv_set:
                                 		.STACK	_nv_set=16
                                 ;       1 /*
                                 ;       2  * config.c - application independent configuration handling
                                 ;       3  * This file is part of the TinyG project
                                 ;       4  *
                                 ;       5  * Copyright (c) 2010 - 2015 Alden S. Hart, Jr.
                                 ;       6  *
                                 ;       7  * This file ("the software") is free software: you can redistribute it and/or modify
                                 ;       8  * it under the terms of the GNU General Public License, version 2 as published by the
                                 ;       9  * Free Software Foundation. You should have received a copy of the GNU General Public
                                 ;      10  * License, version 2 along with the software.  If not, see <http://www.gnu.org/licenses/>.
                                 ;      11  *
                                 ;      12  * As a special exception, you may use this file as part of a software library without
                                 ;      13  * restriction. Specifically, if other files instantiate templates or use macros or
                                 ;      14  * inline functions from this file, or you compile this file and link it with  other
                                 ;      15  * files to produce an executable, this file does not by itself cause the resulting
                                 ;      16  * executable to be covered by the GNU General Public License. This exception does not
                                 ;      17  * however invalidate any other reasons why the executable file might be covered by the
                                 ;      18  * GNU General Public License.
                                 ;      19  *
                                 ;      20  * THE SOFTWARE IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY
                                 ;      21  * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
                                 ;      22  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
                                 ;      23  * SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                 ;      24  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
                                 ;      25  * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
                                 ;      26  */
                                 ;      27 /*
                                 ;      28  *	See config.h for a Config system overview and a bunch of details.
                                 ;      29  */
                                 ;      30 
                                 ;      31 #include "tinyg.h"		// #1
                                 ;      32 #include "config.h"		// #2
                                 ;      33 #include "report.h"
                                 ;      34 #include "controller.h"
                                 ;      35 #include "canonical_machine.h"
                                 ;      36 #include "json_parser.h"
                                 ;      37 #include "text_parser.h"
                                 ;      38 #include "persistence.h"
                                 ;      39 #include "hardware.h"
                                 ;      40 #include "help.h"
                                 ;      41 #include "util.h"
                                 ;      42 #include "xio.h"
                                 ;      43 #include "eeprom.h"
                                 ;      44 
                                 ;      45 #ifdef __cplusplus
                                 ;      46 extern "C"{
                                 ;      47 #endif
                                 ;      48 
                                 ;      49 static void _set_defa(nvObj_t *nv);
                                 ;      50 
                                 ;      51 /***********************************************************************************
                                 ;      52  **** STRUCTURE ALLOCATIONS ********************************************************
                                 ;      53  ***********************************************************************************/
                                 ;      54 
                                 ;      55 nvStr_t nvStr;
                                 ;      56 nvList_t nvl;
                                 ;      57 
                                 ;      58 /***********************************************************************************
                                 ;      59  **** CODE *************************************************************************
                                 ;      60  ***********************************************************************************/
                                 ;      61 /* Primary access points to functions bound to text mode / JSON functions
                                 ;      62  * These gatekeeper functions check index ranges so others don't have to
                                 ;      63  *
                                 ;      64  * nv_set() 	- Write a value or invoke a function - operates on single valued elements or groups
                                 ;      65  * nv_get() 	- Build a nvObj with the values from the target & return the value
                                 ;      66  *			   	  Populate nv body with single valued elements or groups (iterates)
                                 ;      67  * nv_print()	- Output a formatted string for the value.
                                 ;      68  * nv_persist() - persist value to non-volatile storage. Takes special cases into account
                                 ;      69  *
                                 ;      70  *	!!!! NOTE: nv_persist() cannot be called from an interrupt on the AVR due to the AVR1008 EEPROM workaround
                                 ;      71  */
                                 ;      72 stat_t nv_set(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",72
00000000 7EA6                    		PUSH.L R6
00000002 6080                    		SUB #08H, R0
00000004 A009                    		MOV.L R1, 04H[R0]
                                 ;      73 {
                                 ;      74 	if (nv->index >= nv_index_max())
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",74
00000006 B916                    		MOVU.W 08H[R1], R6
00000008 05rrrrrr             A  		BSR _nv_index_max
0000000C 4761                    		CMP R6, R1
0000000E 2Arr                    		BGT L35
00000010                         L34:	; bb2
                                 ;      75         return(STAT_INTERNAL_RANGE_ERROR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",75
00000010 3C0215                  		MOV.B #15H, 02H[R0]
00000013 2Err                 B  		BRA L36
00000015                         L35:	; bb12
                                 ;      76 	return (((fptrCmd)GET_TABLE_WORD(set))(nv));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",76
00000015 A809                    		MOV.L 04H[R0], R1
00000017 B912                    		MOVU.W 08H[R1], R2
00000019 6C52                    		SHLL #05H, R2
0000001B FB32rrrrrrrr            		MOV.L #_cfgArray, R3
00000021 4B23                    		ADD R2, R3
00000023 A93A                    		MOV.L 14H[R3], R2
00000025 7F12                    		JSR R2
00000027 8081                    		MOV.B R1, 02H[R0]
00000029                         L36:	; bb23
00000029 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;      77 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",77
0000002D B089                    		MOVU.B 03H[R0], R1
0000002F 3F6603                  		RTSD #0CH, R6-R6
00000032                         _nv_get:
                                 		.STACK	_nv_get=16
                                 ;      78 
                                 ;      79 stat_t nv_get(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",79
00000032 7EA6                    		PUSH.L R6
00000034 6080                    		SUB #08H, R0
00000036 A009                    		MOV.L R1, 04H[R0]
                                 ;      80 {
                                 ;      81 	if (nv->index >= nv_index_max())
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",81
00000038 B916                    		MOVU.W 08H[R1], R6
0000003A 05rrrrrr             A  		BSR _nv_index_max
0000003E 4761                    		CMP R6, R1
00000040 2Arr                    		BGT L39
00000042                         L38:	; bb2
                                 ;      82         return(STAT_INTERNAL_RANGE_ERROR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",82
00000042 3C0215                  		MOV.B #15H, 02H[R0]
00000045 2Err                 B  		BRA L40
00000047                         L39:	; bb12
                                 ;      83 	return (((fptrCmd)GET_TABLE_WORD(get))(nv));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",83
00000047 A809                    		MOV.L 04H[R0], R1
00000049 B912                    		MOVU.W 08H[R1], R2
0000004B 6C52                    		SHLL #05H, R2
0000004D FB32rrrrrrrr            		MOV.L #_cfgArray, R3
00000053 4B23                    		ADD R2, R3
00000055 A932                    		MOV.L 10H[R3], R2
00000057 7F12                    		JSR R2
00000059 8081                    		MOV.B R1, 02H[R0]
0000005B                         L40:	; bb23
0000005B C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;      84 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",84
0000005F B089                    		MOVU.B 03H[R0], R1
00000061 3F6603                  		RTSD #0CH, R6-R6
00000064                         _nv_print:
                                 		.STACK	_nv_print=12
                                 ;      85 
                                 ;      86 void nv_print(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",86
00000064 7EA6                    		PUSH.L R6
00000066 6040                    		SUB #04H, R0
00000068 E301                    		MOV.L R1, [R0]
                                 ;      87 {
                                 ;      88 	if (nv->index >= nv_index_max()) return;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",88
0000006A B916                    		MOVU.W 08H[R1], R6
0000006C 05rrrrrr             A  		BSR _nv_index_max
00000070 4761                    		CMP R6, R1
00000072 2Brr                    		BLE L43
00000074                         L42:	; bb11
                                 ;      89 	((fptrCmd)GET_TABLE_WORD(print))(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",89
00000074 EC01                    		MOV.L [R0], R1
00000076 B912                    		MOVU.W 08H[R1], R2
00000078 6C52                    		SHLL #05H, R2
0000007A FB32rrrrrrrr            		MOV.L #_cfgArray, R3
00000080 4B23                    		ADD R2, R3
00000082 A8BA                    		MOV.L 0CH[R3], R2
00000084 7F12                    		JSR R2
00000086 3F6602                  		RTSD #08H, R6-R6
00000089                         L43:	; return
                                 ;      90 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",90
00000089 3F6602                  		RTSD #08H, R6-R6
0000008C                         _nv_persist:
                                 		.STACK	_nv_persist=12
                                 ;      91 
                                 ;      92 stat_t nv_persist(nvObj_t *nv)	// nv_persist() cannot be called from an interrupt on the AVR due to the AVR1008 EEPROM workaround
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",92
0000008C 6080                    		SUB #08H, R0
0000008E A009                    		MOV.L R1, 04H[R0]
                                 ;      93 {
                                 ;      94 #ifndef __DISABLE_PERSISTENCE	// cutout for faster simulation in test
                                 ;      95 	if (nv_index_lt_groups(nv->index) == false)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",95
00000090 B911                    		MOVU.W 08H[R1], R1
00000092 05rrrrrr             A  		BSR _nv_index_lt_groups
00000096 6101                    		CMP #00H, R1
00000098 18                   S  		BNE L46
00000099                         L45:	; bb2
                                 ;      96         return(STAT_INTERNAL_RANGE_ERROR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",96
00000099 3C0215                  		MOV.B #15H, 02H[R0]
0000009C 2Err                 B  		BRA L49
0000009E                         L46:	; bb12
                                 ;      97 	if (GET_TABLE_BYTE(flags) & F_PERSIST)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",97
0000009E A809                    		MOV.L 04H[R0], R1
000000A0 B911                    		MOVU.W 08H[R1], R1
000000A2 6C51                    		SHLL #05H, R1
000000A4 FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
000000AA 4B1E                    		ADD R1, R14
000000AC F5E10A                  		BTST #01H, 0AH[R14].B
000000AF 10                   S  		BEQ L48
000000B0                         L47:	; bb13
                                 ;      98         return(write_persistent_value(nv));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",98
000000B0 A809                    		MOV.L 04H[R0], R1
000000B2 05rrrrrr             A  		BSR _write_persistent_value
000000B6 8081                    		MOV.B R1, 02H[R0]
000000B8 08                   S  		BRA L49
000000B9                         L48:	; bb29
                                 ;      99 #endif
                                 ;     100 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",100
000000B9 3C0200                  		MOV.B #00H, 02H[R0]
000000BC                         L49:	; bb31
000000BC C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     101 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",101
000000C0 B089                    		MOVU.B 03H[R0], R1
000000C2 6702                    		RTSD #08H
000000C4                         _config_init:
                                 		.STACK	_config_init=28
                                 ;     102 
                                 ;     103 /************************************************************************************
                                 ;     104  * config_init() - called once on hard reset
                                 ;     105  *
                                 ;     106  * Performs one of 2 actions:
                                 ;     107  *	(1) if persistence is set up or out-of-rev load RAM and NVM with settings.h defaults
                                 ;     108  *	(2) if persistence is set up and at current config version use NVM data for config
                                 ;     109  *
                                 ;     110  *	You can assume the cfg struct has been zeroed by a hard reset.
                                 ;     111  *	Do not clear it as the version and build numbers have already been set by tg_init()
                                 ;     112  *
                                 ;     113  * NOTE: Config assertions are handled from the controller
                                 ;     114  */
                                 ;     115 void config_init()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",115
000000C4 7EA6                    		PUSH.L R6
000000C6 7100EC                  		ADD #0FFFFFFECH, R0
                                 ;     116 {
                                 ;     117 	nvObj_t *nv = nv_reset_nv_list();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",117
000000C9 39rrrr               W  		BSR _nv_reset_nv_list
000000CC E301                    		MOV.L R1, [R0]
000000CE                         L51:	; entry.split
                                 ;     118 	char *P_str_axis[3] = {"x","y", "z"};
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",118
000000CE FBE2rrrrrrrr            		MOV.L #_L13, R14
000000D4 E4E001                  		MOV.L [R14], 04H[R0]
000000D7 E5E00102                		MOV.L 04H[R14], 08H[R0]
000000DB E5E00203                		MOV.L 08H[R14], 0CH[R0]
000000DF                         L52:	; entry.split1
                                 ;     119 	config_init_assertions();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",119
000000DF 39rrrr               W  		BSR _config_init_assertions
000000E2                         L53:	; entry.split2
                                 ;     120 
                                 ;     121 #ifdef __ARM
                                 ;     122 // ++++ The following code is offered until persistence is implemented.
                                 ;     123 // ++++ Then you can use the AVR code (or something like it)
                                 ;     124 	cfg.comm_mode = JSON_MODE;					// initial value until EEPROM is read
                                 ;     125 	_set_defa(nv);
                                 ;     126 #endif
                                 ;     127 #ifdef __AVR
                                 ;     128 	cm_set_units_mode(MILLIMETERS);				// must do inits in millimeter mode
                                 ;     129 	nv->index = 0;								// this will read the first record in NVM
                                 ;     130 
                                 ;     131 	read_persistent_value(nv);
                                 ;     132 	if (nv->value != cs.fw_build) {				// case (1) NVM is not setup or not in revision
                                 ;     133 //	if (fp_NE(nv->value, cs.fw_build)) {
                                 ;     134 		_set_defa(nv);
                                 ;     135 	} else {									// case (2) NVM is setup and in revision
                                 ;     136 		rpt_print_loading_configs_message();
                                 ;     137 		for (nv->index=0; nv_index_is_single(nv->index); nv->index++) {
                                 ;     138 			if (GET_TABLE_BYTE(flags) & F_INITIALIZE) {
                                 ;     139 				strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);	// read the token from the array
                                 ;     140 				read_persistent_value(nv);
                                 ;     141 				nv_set(nv);
                                 ;     142 			}
                                 ;     143 		}
                                 ;     144 		sr_init_status_report();
                                 ;     145 	}
                                 ;     146 #endif
                                 ;     147 #ifdef __RX
                                 ;     148 // ++++ The following code is offered until persistence is implemented.
                                 ;     149 // ++++ Then you can use the AVR code (or something like it)
                                 ;     150 	cfg.comm_mode = TEXT_MODE;					// initial value until EEPROM is read
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",150
000000E2 FB12rrrrrrrr            		MOV.L #_cfg, R1
000000E8 3C1200                  		MOV.B #00H, 02H[R1]
000000EB                         L54:	; entry.split3
                                 ;     151 	_set_defa(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",151
000000EB EC01                    		MOV.L [R0], R1
000000ED 39rrrr               W  		BSR __$_set_defa
000000F0                         L55:	; entry.split4
                                 ;     152 
                                 ;     153 	for (uint8_t i = 0; i < 3; i++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",153
000000F0 3C8000                  		MOV.B #00H, 10H[R0]
000000F3 2Err                 B  		BRA L61
000000F5                         L56:	; bb
000000F5 710E04                  		ADD #04H, R0, R14
                                 ;     154 	{
                                 ;     155 		nv->index = nv_get_index(P_str_axis[i], "vm");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",155
000000F8 B401                    		MOVU.B 10H[R0], R1
000000FA FE61E1                  		MOV.L [R1,R14], R1
000000FD EC06                    		MOV.L [R0], R6
000000FF FB22rrrrrrrr            		MOV.L #_L14, R2
00000105 39rrrr               W  		BSR _nv_get_index
00000108 9161                    		MOV.W R1, 08H[R6]
0000010A                         L57:	; bb.split
                                 ;     156 		nv->value = configVarParMaq[CFG_PAR_MAQ_VEL_X + i];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",156
0000010A B401                    		MOVU.B 10H[R0], R1
0000010C 6C21                    		SHLL #02H, R1
0000010E FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
00000114 4BE1                    		ADD R14, R1
00000116 EC02                    		MOV.L [R0], R2
00000118 E5120504                		MOV.L 14H[R1], 10H[R2]
0000011C                         L58:	; bb.split5
                                 ;     157 		strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",157
0000011C EC04                    		MOV.L [R0], R4
0000011E B941                    		MOVU.W 08H[R4], R1
00000120 6C51                    		SHLL #05H, R1
00000122 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
00000128 4B12                    		ADD R1, R2
0000012A 6242                    		ADD #04H, R2
0000012C 714118                  		ADD #18H, R4, R1
0000012F 6653                    		MOV.L #00000005H, R3
00000131 7F87                    		SMOVU
00000133 71441D                  		ADD #1DH, R4
00000136 EF41                    		MOV.L R4, R1
00000138 4331                    		SUB R3, R1
0000013A 6602                    		MOV.L #00000000H, R2
0000013C 7F88                    		SSTR.B
0000013E                         L59:	; bb.split6
                                 ;     158 		nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",158
0000013E EC01                    		MOV.L [R0], R1
00000140 39rrrr               W  		BSR _nv_set
00000143                         L60:	; bb.split7
                                 ;     159 		nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",159
00000143 EC01                    		MOV.L [R0], R1
00000145 39rrrr               W  		BSR _nv_persist
00000148 B401                    		MOVU.B 10H[R0], R1
0000014A 6211                    		ADD #01H, R1
0000014C 8401                    		MOV.B R1, 10H[R0]
0000014E                         L61:	; bb48
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",153
0000014E B401                    		MOVU.B 10H[R0], R1
00000150 6131                    		CMP #03H, R1
00000152 29rr                    		BLT L56
00000154                         L62:	; bb53
                                 ;     160 	}
                                 ;     161 
                                 ;     162 	for (uint8_t i = 0; i < 3; i++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",162
00000154 3C8100                  		MOV.B #00H, 11H[R0]
00000157 2Err                 B  		BRA L68
00000159                         L63:	; bb54
00000159 710E04                  		ADD #04H, R0, R14
                                 ;     163 	{
                                 ;     164 		nv->index = nv_get_index(P_str_axis[i], "fr");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",164
0000015C B409                    		MOVU.B 11H[R0], R1
0000015E FE61E1                  		MOV.L [R1,R14], R1
00000161 EC06                    		MOV.L [R0], R6
00000163 FB22rrrrrrrr            		MOV.L #_L15, R2
00000169 39rrrr               W  		BSR _nv_get_index
0000016C 9161                    		MOV.W R1, 08H[R6]
0000016E                         L64:	; bb54.split
                                 ;     165 		nv->value = configVarParMaq[CFG_PAR_MAQ_VEL_X + i];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",165
0000016E B409                    		MOVU.B 11H[R0], R1
00000170 6C21                    		SHLL #02H, R1
00000172 FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
00000178 4BE1                    		ADD R14, R1
0000017A EC02                    		MOV.L [R0], R2
0000017C E5120504                		MOV.L 14H[R1], 10H[R2]
00000180                         L65:	; bb54.split8
                                 ;     166 		strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",166
00000180 EC04                    		MOV.L [R0], R4
00000182 B941                    		MOVU.W 08H[R4], R1
00000184 6C51                    		SHLL #05H, R1
00000186 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
0000018C 4B12                    		ADD R1, R2
0000018E 6242                    		ADD #04H, R2
00000190 714118                  		ADD #18H, R4, R1
00000193 6653                    		MOV.L #00000005H, R3
00000195 7F87                    		SMOVU
00000197 71441D                  		ADD #1DH, R4
0000019A EF41                    		MOV.L R4, R1
0000019C 4331                    		SUB R3, R1
0000019E 6602                    		MOV.L #00000000H, R2
000001A0 7F88                    		SSTR.B
000001A2                         L66:	; bb54.split9
                                 ;     167 		nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",167
000001A2 EC01                    		MOV.L [R0], R1
000001A4 39rrrr               W  		BSR _nv_set
000001A7                         L67:	; bb54.split10
                                 ;     168 		nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",168
000001A7 EC01                    		MOV.L [R0], R1
000001A9 39rrrr               W  		BSR _nv_persist
000001AC B409                    		MOVU.B 11H[R0], R1
000001AE 6211                    		ADD #01H, R1
000001B0 8409                    		MOV.B R1, 11H[R0]
000001B2                         L68:	; bb86
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",162
000001B2 B409                    		MOVU.B 11H[R0], R1
000001B4 6131                    		CMP #03H, R1
000001B6 29rr                    		BLT L63
000001B8                         L69:	; bb92
                                 ;     169 	}
                                 ;     170 
                                 ;     171 	for (uint8_t i = 0; i < 2; i++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",171
000001B8 3C8200                  		MOV.B #00H, 12H[R0]
000001BB 2Err                 B  		BRA L75
000001BD                         L70:	; bb93
000001BD 710E04                  		ADD #04H, R0, R14
                                 ;     172 	{
                                 ;     173 		nv->index = nv_get_index(P_str_axis[i], "jm");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",173
000001C0 B481                    		MOVU.B 12H[R0], R1
000001C2 FE61E1                  		MOV.L [R1,R14], R1
000001C5 EC06                    		MOV.L [R0], R6
000001C7 FB22rrrrrrrr            		MOV.L #_L16, R2
000001CD 39rrrr               W  		BSR _nv_get_index
000001D0 9161                    		MOV.W R1, 08H[R6]
000001D2                         L71:	; bb93.split
                                 ;     174 		nv->value = configVarParMaq[CFG_PAR_MAQ_JERK_X + i];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",174
000001D2 B481                    		MOVU.B 12H[R0], R1
000001D4 6C21                    		SHLL #02H, R1
000001D6 FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
000001DC 4BE1                    		ADD R14, R1
000001DE EC02                    		MOV.L [R0], R2
000001E0 E5120304                		MOV.L 0CH[R1], 10H[R2]
000001E4                         L72:	; bb93.split11
                                 ;     175 		strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",175
000001E4 EC04                    		MOV.L [R0], R4
000001E6 B941                    		MOVU.W 08H[R4], R1
000001E8 6C51                    		SHLL #05H, R1
000001EA FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000001F0 4B12                    		ADD R1, R2
000001F2 6242                    		ADD #04H, R2
000001F4 714118                  		ADD #18H, R4, R1
000001F7 6653                    		MOV.L #00000005H, R3
000001F9 7F87                    		SMOVU
000001FB 71441D                  		ADD #1DH, R4
000001FE EF41                    		MOV.L R4, R1
00000200 4331                    		SUB R3, R1
00000202 6602                    		MOV.L #00000000H, R2
00000204 7F88                    		SSTR.B
00000206                         L73:	; bb93.split12
                                 ;     176 		nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",176
00000206 EC01                    		MOV.L [R0], R1
00000208 39rrrr               W  		BSR _nv_set
0000020B                         L74:	; bb93.split13
                                 ;     177 		nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",177
0000020B EC01                    		MOV.L [R0], R1
0000020D 39rrrr               W  		BSR _nv_persist
00000210 B481                    		MOVU.B 12H[R0], R1
00000212 6211                    		ADD #01H, R1
00000214 8481                    		MOV.B R1, 12H[R0]
00000216                         L75:	; bb125
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",171
00000216 B481                    		MOVU.B 12H[R0], R1
00000218 6121                    		CMP #02H, R1
0000021A 29rr                    		BLT L70
0000021C                         L76:	; bb131
                                 ;     178 	}
                                 ;     179 
                                 ;     180 	for (uint8_t i = 0; i < 3; i++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",180
0000021C 3C8300                  		MOV.B #00H, 13H[R0]
0000021F 2Err                 B  		BRA L82
00000221                         L77:	; bb132
00000221 710E04                  		ADD #04H, R0, R14
                                 ;     181 	{
                                 ;     182 		nv->index = nv_get_index(P_str_axis[i], "jd");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",182
00000224 B489                    		MOVU.B 13H[R0], R1
00000226 FE61E1                  		MOV.L [R1,R14], R1
00000229 FB22rrrrrrrr            		MOV.L #_L17, R2
0000022F 39rrrr               W  		BSR _nv_get_index
00000232 9161                    		MOV.W R1, 08H[R6]
00000234                         L78:	; bb132.split
                                 ;     183 		nv->value = configVarParMaq[CFG_PAR_MAQ_JUNCTION_DEV];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",183
00000234 FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
0000023A EC06                    		MOV.L [R0], R6
0000023C E5E60804                		MOV.L 20H[R14], 10H[R6]
00000240                         L79:	; bb132.split14
                                 ;     184 		strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",184
00000240 EC06                    		MOV.L [R0], R6
00000242 B961                    		MOVU.W 08H[R6], R1
00000244 6C51                    		SHLL #05H, R1
00000246 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
0000024C 4B12                    		ADD R1, R2
0000024E 6242                    		ADD #04H, R2
00000250 716118                  		ADD #18H, R6, R1
00000253 6653                    		MOV.L #00000005H, R3
00000255 7F87                    		SMOVU
00000257 71661D                  		ADD #1DH, R6
0000025A EF61                    		MOV.L R6, R1
0000025C 4331                    		SUB R3, R1
0000025E 6602                    		MOV.L #00000000H, R2
00000260 7F88                    		SSTR.B
00000262                         L80:	; bb132.split15
                                 ;     185 		nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",185
00000262 EC01                    		MOV.L [R0], R1
00000264 39rrrr               W  		BSR _nv_set
00000267                         L81:	; bb132.split16
                                 ;     186 		nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",186
00000267 EC01                    		MOV.L [R0], R1
00000269 39rrrr               W  		BSR _nv_persist
0000026C B48E                    		MOVU.B 13H[R0], R6
0000026E 6216                    		ADD #01H, R6
00000270 848E                    		MOV.B R6, 13H[R0]
00000272                         L82:	; bb160
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",180
00000272 B48E                    		MOVU.B 13H[R0], R6
00000274 6136                    		CMP #03H, R6
00000276 EC06                    		MOV.L [R0], R6
00000278 29rr                    		BLT L77
0000027A                         L83:	; bb166
                                 ;     187 	}
                                 ;     188 
                                 ;     189 	nv->index = nv_get_index("", "ja");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",189
0000027A FB22rrrrrrrr            		MOV.L #_L19, R2
00000280 FB12rrrrrrrr            		MOV.L #_L18, R1
00000286 39rrrr               W  		BSR _nv_get_index
00000289 9161                    		MOV.W R1, 08H[R6]
0000028B                         L84:	; bb166.split
                                 ;     190 	nv->value = configVarParMaq[CFG_PAR_MAQ_JUNCTION_ACEL];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",190
0000028B FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
00000291 EC01                    		MOV.L [R0], R1
00000293 E5E10904                		MOV.L 24H[R14], 10H[R1]
00000297                         L85:	; bb166.split17
                                 ;     191 	strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",191
00000297 EC04                    		MOV.L [R0], R4
00000299 B941                    		MOVU.W 08H[R4], R1
0000029B 6C51                    		SHLL #05H, R1
0000029D FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000002A3 4B12                    		ADD R1, R2
000002A5 6242                    		ADD #04H, R2
000002A7 714118                  		ADD #18H, R4, R1
000002AA 6653                    		MOV.L #00000005H, R3
000002AC 7F87                    		SMOVU
000002AE 71441D                  		ADD #1DH, R4
000002B1 EF41                    		MOV.L R4, R1
000002B3 4331                    		SUB R3, R1
000002B5 6602                    		MOV.L #00000000H, R2
000002B7 7F88                    		SSTR.B
000002B9                         L86:	; bb166.split18
                                 ;     192 	nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",192
000002B9 EC01                    		MOV.L [R0], R1
000002BB 39rrrr               W  		BSR _nv_set
000002BE                         L87:	; bb166.split19
                                 ;     193 	nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",193
000002BE EC01                    		MOV.L [R0], R1
000002C0 39rrrr               W  		BSR _nv_persist
000002C3                         L88:	; bb166.split20
                                 ;     194 
                                 ;     195 	nv->index = nv_get_index("2", "tr");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",195
000002C3 EC06                    		MOV.L [R0], R6
000002C5 FB22rrrrrrrr            		MOV.L #_L21, R2
000002CB FB12rrrrrrrr            		MOV.L #_L20, R1
000002D1 39rrrr               W  		BSR _nv_get_index
000002D4 9161                    		MOV.W R1, 08H[R6]
000002D6                         L89:	; bb166.split21
                                 ;     196 	nv->value = configVarParMaq[CFG_PAR_MAQ_EIXO_Y];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",196
000002D6 FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
000002DC EC01                    		MOV.L [R0], R1
000002DE E5E10204                		MOV.L 08H[R14], 10H[R1]
000002E2                         L90:	; bb166.split22
                                 ;     197 	strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",197
000002E2 EC04                    		MOV.L [R0], R4
000002E4 B941                    		MOVU.W 08H[R4], R1
000002E6 6C51                    		SHLL #05H, R1
000002E8 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000002EE 4B12                    		ADD R1, R2
000002F0 6242                    		ADD #04H, R2
000002F2 714118                  		ADD #18H, R4, R1
000002F5 6653                    		MOV.L #00000005H, R3
000002F7 7F87                    		SMOVU
000002F9 71441D                  		ADD #1DH, R4
000002FC EF41                    		MOV.L R4, R1
000002FE 4331                    		SUB R3, R1
00000300 6602                    		MOV.L #00000000H, R2
00000302 7F88                    		SSTR.B
00000304                         L91:	; bb166.split23
                                 ;     198 	nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",198
00000304 EC01                    		MOV.L [R0], R1
00000306 39rrrr               W  		BSR _nv_set
00000309                         L92:	; bb166.split24
                                 ;     199 	nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",199
00000309 EC01                    		MOV.L [R0], R1
0000030B 39rrrr               W  		BSR _nv_persist
0000030E                         L93:	; bb166.split25
                                 ;     200 
                                 ;     201 	nv->index = nv_get_index("3", "tr");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",201
0000030E EC06                    		MOV.L [R0], R6
00000310 FB22rrrrrrrr            		MOV.L #_L21, R2
00000316 FB12rrrrrrrr            		MOV.L #_L22, R1
0000031C 39rrrr               W  		BSR _nv_get_index
0000031F 9161                    		MOV.W R1, 08H[R6]
00000321                         L94:	; bb166.split26
                                 ;     202 	nv->value = configVarParMaq[CFG_PAR_MAQ_EIXO_X1];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",202
00000321 FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
00000327 EC01                    		MOV.L [R0], R1
00000329 E4E104                  		MOV.L [R14], 10H[R1]
0000032C                         L95:	; bb166.split27
                                 ;     203 	strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",203
0000032C EC04                    		MOV.L [R0], R4
0000032E B941                    		MOVU.W 08H[R4], R1
00000330 6C51                    		SHLL #05H, R1
00000332 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
00000338 4B12                    		ADD R1, R2
0000033A 6242                    		ADD #04H, R2
0000033C 714118                  		ADD #18H, R4, R1
0000033F 6653                    		MOV.L #00000005H, R3
00000341 7F87                    		SMOVU
00000343 71441D                  		ADD #1DH, R4
00000346 EF41                    		MOV.L R4, R1
00000348 4331                    		SUB R3, R1
0000034A 6602                    		MOV.L #00000000H, R2
0000034C 7F88                    		SSTR.B
0000034E                         L96:	; bb166.split28
                                 ;     204 	nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",204
0000034E EC01                    		MOV.L [R0], R1
00000350 39rrrr               W  		BSR _nv_set
00000353                         L97:	; bb166.split29
                                 ;     205 	nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",205
00000353 EC01                    		MOV.L [R0], R1
00000355 39rrrr               W  		BSR _nv_persist
00000358                         L98:	; bb166.split30
                                 ;     206 
                                 ;     207 	nv->index = nv_get_index("4", "tr");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",207
00000358 EC06                    		MOV.L [R0], R6
0000035A FB22rrrrrrrr            		MOV.L #_L21, R2
00000360 FB12rrrrrrrr            		MOV.L #_L23, R1
00000366 39rrrr               W  		BSR _nv_get_index
00000369 9161                    		MOV.W R1, 08H[R6]
0000036B                         L99:	; bb166.split31
                                 ;     208 	nv->value = configVarParMaq[CFG_PAR_MAQ_EIXO_X2];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",208
0000036B FBE2rrrrrrrr            		MOV.L #_configVarParMaq, R14
00000371 EC01                    		MOV.L [R0], R1
00000373 E5E10104                		MOV.L 04H[R14], 10H[R1]
00000377                         L100:	; bb166.split32
                                 ;     209 	strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",209
00000377 EC04                    		MOV.L [R0], R4
00000379 B941                    		MOVU.W 08H[R4], R1
0000037B 6C51                    		SHLL #05H, R1
0000037D FB22rrrrrrrr            		MOV.L #_cfgArray, R2
00000383 4B12                    		ADD R1, R2
00000385 6242                    		ADD #04H, R2
00000387 714118                  		ADD #18H, R4, R1
0000038A 6653                    		MOV.L #00000005H, R3
0000038C 7F87                    		SMOVU
0000038E 71441D                  		ADD #1DH, R4
00000391 EF41                    		MOV.L R4, R1
00000393 4331                    		SUB R3, R1
00000395 6602                    		MOV.L #00000000H, R2
00000397 7F88                    		SSTR.B
00000399                         L101:	; bb166.split33
                                 ;     210 	nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",210
00000399 EC01                    		MOV.L [R0], R1
0000039B 39rrrr               W  		BSR _nv_set
0000039E                         L102:	; bb166.split34
                                 ;     211 	nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",211
0000039E EC01                    		MOV.L [R0], R1
000003A0 39rrrr               W  		BSR _nv_persist
000003A3 3F6606                  		RTSD #18H, R6-R6
000003A6                         __$_set_defa:
                                 		.STACK	__$_set_defa=8
                                 ;     212 
                                 ;     213 #endif
                                 ;     214 }
                                 ;     215 
                                 ;     216 /*
                                 ;     217  * set_defaults() - reset persistence with default values for machine profile
                                 ;     218  * _set_defa() - helper function and called directly from config_init()
                                 ;     219  */
                                 ;     220 
                                 ;     221 static void _set_defa(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",221
000003A6 6040                    		SUB #04H, R0
000003A8 E301                    		MOV.L R1, [R0]
000003AA 6611                    		MOV.L #00000001H, R1
                                 ;     222 {
                                 ;     223 	cm_set_units_mode(MILLIMETERS);				// must do inits in MM mode
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",223
000003AC 05rrrrrr             A  		BSR _cm_set_units_mode
000003B0                         L104:	; entry.split
                                 ;     224 	for (nv->index=0; nv_index_is_single(nv->index); nv->index++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",224
000003B0 EC01                    		MOV.L [R0], R1
000003B2 3D1400                  		MOV.W #0000H, 08H[R1]
000003B5 2Err                 B  		BRA L111
000003B7                         L105:	; bb4
                                 ;     225 		if (GET_TABLE_BYTE(flags) & F_INITIALIZE) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",225
000003B7 EC01                    		MOV.L [R0], R1
000003B9 B911                    		MOVU.W 08H[R1], R1
000003BB 6C51                    		SHLL #05H, R1
000003BD FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
000003C3 4B1E                    		ADD R1, R14
000003C5 F5E00A                  		BTST #00H, 0AH[R14].B
000003C8 20rr                    		BEQ L110
000003CA                         L106:	; bb5
                                 ;     226 			nv->value = GET_TABLE_FLOAT(def_value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",226
000003CA EC01                    		MOV.L [R0], R1
000003CC B912                    		MOVU.W 08H[R1], R2
000003CE 6C52                    		SHLL #05H, R2
000003D0 FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
000003D6 4B2E                    		ADD R2, R14
000003D8 E5E10704                		MOV.L 1CH[R14], 10H[R1]
000003DC                         L107:	; bb5.split
                                 ;     227 			strncpy_P(nv->token, cfgArray[nv->index].token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",227
000003DC EC04                    		MOV.L [R0], R4
000003DE B941                    		MOVU.W 08H[R4], R1
000003E0 6C51                    		SHLL #05H, R1
000003E2 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000003E8 4B12                    		ADD R1, R2
000003EA 6242                    		ADD #04H, R2
000003EC 714118                  		ADD #18H, R4, R1
000003EF 6653                    		MOV.L #00000005H, R3
000003F1 7F87                    		SMOVU
000003F3 71441D                  		ADD #1DH, R4
000003F6 EF41                    		MOV.L R4, R1
000003F8 4331                    		SUB R3, R1
000003FA 6602                    		MOV.L #00000000H, R2
000003FC 7F88                    		SSTR.B
000003FE                         L108:	; bb5.split1
                                 ;     228 			nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",228
000003FE EC01                    		MOV.L [R0], R1
00000400 39rrrr               W  		BSR _nv_set
00000403                         L109:	; bb5.split2
                                 ;     229 			nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",229
00000403 EC01                    		MOV.L [R0], R1
00000405 39rrrr               W  		BSR _nv_persist
00000408                         L110:	; bb40
00000408 EC01                    		MOV.L [R0], R1
0000040A 9912                    		MOV.W 08H[R1], R2
0000040C 6212                    		ADD #01H, R2
0000040E 9112                    		MOV.W R2, 08H[R1]
00000410                         L111:	; bb45
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",224
00000410 EC01                    		MOV.L [R0], R1
00000412 B911                    		MOVU.W 08H[R1], R1
00000414 05rrrrrr             A  		BSR _nv_index_is_single
00000418 6101                    		CMP #00H, R1
0000041A 21rr                    		BNE L105
0000041C                         L112:	; bb54
                                 ;     230 		}
                                 ;     231 	}
                                 ;     232 	sr_init_status_report();					// reset status reports
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",232
0000041C 05rrrrrr             A  		BSR _sr_init_status_report
00000420                         L113:	; bb54.split
                                 ;     233 	rpt_print_initializing_message();			// don't start TX until all the NVM persistence is done
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",233
00000420 05rrrrrr             A  		BSR _rpt_print_initializing_message
00000424 6701                    		RTSD #04H
00000426                         _set_defaults:
                                 		.STACK	_set_defaults=12
                                 ;     234 }
                                 ;     235 
                                 ;     236 stat_t set_defaults(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",236
00000426 6080                    		SUB #08H, R0
00000428 A009                    		MOV.L R1, 04H[R0]
                                 ;     237 {
                                 ;     238 	// failsafe. nv->value must be true or no action occurs
                                 ;     239 	if (fp_FALSE(nv->value)) return(help_defa(nv));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",239
0000042A A912                    		MOV.L 10H[R1], R2
0000042C FD7212BD378635          		FCMP #358637BDH, R2
00000433 26rr                    		BPZ L116
00000435                         L115:	; bb2
00000435 05rrrrrr             A  		BSR _help_defa
00000439 8081                    		MOV.B R1, 02H[R0]
0000043B 2Err                 B  		BRA L120
0000043D                         L116:	; bb11
                                 ;     240 	_set_defa(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",240
0000043D 39rrrr               W  		BSR __$_set_defa
00000440                         L117:	; bb11.split
                                 ;     241 
                                 ;     242 	// The values in nv are now garbage. Mark the nv as $defa so it displays nicely.
                                 ;     243 //	strncpy(nv->token, "defa", TOKEN_LEN);		// correct, but not required
                                 ;     244 //	nv->index = nv_get_index("", nv->token);	// correct, but not required
                                 ;     245 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",245
00000440 A809                    		MOV.L 04H[R0], R1
00000442 3C1B02                  		MOV.B #02H, 0BH[R1]
00000445                         L118:	; bb11.split1
                                 ;     246 	nv->value = 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",246
00000445 A809                    		MOV.L 04H[R0], R1
00000447 F912040000803F          		MOV.L #3F800000H, 10H[R1]
0000044E                         L119:	; bb11.split2
                                 ;     247 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",247
0000044E 3C0200                  		MOV.B #00H, 02H[R0]
00000451                         L120:	; bb18
00000451 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     248 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",248
00000455 B089                    		MOVU.B 03H[R0], R1
00000457 6702                    		RTSD #08H
00000459                         _config_init_assertions:
                                 		.STACK	_config_init_assertions=4
                                 ;     249 
                                 ;     250 /*
                                 ;     251  * config_init_assertions()
                                 ;     252  * config_test_assertions() - check memory integrity of config sub-system
                                 ;     253  */
                                 ;     254 
                                 ;     255 void config_init_assertions()
                                 ;     256 {
                                 ;     257 	cfg.magic_start = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",257
00000459 FBE2rrrrrrrr            		MOV.L #_cfg, R14
0000045F F8E9EF12                		MOV.W #12EFH, [R14]
00000463                         L122:	; entry.split
                                 ;     258 	cfg.magic_end = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",258
00000463 FBE2rrrrrrrr            		MOV.L #_cfg, R14
00000469 F9E924EF12              		MOV.W #12EFH, 48H[R14]
0000046E                         L123:	; entry.split1
                                 ;     259 	nvl.magic_start = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",259
0000046E FBE2rrrrrrrr            		MOV.L #_nvl, R14
00000474 F8E9EF12                		MOV.W #12EFH, [R14]
00000478                         L124:	; entry.split2
                                 ;     260 	nvl.magic_end = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",260
00000478 FBE2rrrrrrrr            		MOV.L #_nvl, R14
0000047E FAE94202EF12            		MOV.W #12EFH, 0484H[R14]
00000484                         L125:	; entry.split3
                                 ;     261 	nvStr.magic_start = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",261
00000484 FBE2rrrrrrrr            		MOV.L #_nvStr, R14
0000048A F8E9EF12                		MOV.W #12EFH, [R14]
0000048E                         L126:	; entry.split4
                                 ;     262 	nvStr.magic_end = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",262
0000048E FBE2rrrrrrrr            		MOV.L #_nvStr, R14
00000494 FAE90201EF12            		MOV.W #12EFH, 0204H[R14]
0000049A 02                      		RTS
0000049B                         _config_test_assertions:
                                 		.STACK	_config_test_assertions=12
                                 ;     263 }
                                 ;     264 
                                 ;     265 stat_t config_test_assertions()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",265
0000049B 6080                    		SUB #08H, R0
                                 ;     266 {
                                 ;     267 	if ((cfg.magic_start	!= MAGICNUM) || (cfg.magic_end != MAGICNUM)) return (STAT_CONFIG_ASSERTION_FAILURE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",267
0000049D FBE2rrrrrrrr            		MOV.L #_cfg, R14
000004A3 5CEE                    		MOVU.W [R14], R14
000004A5 760EEF12                		CMP #12EFH, R14
000004A9 21rr                    		BNE L130
000004AB 08                   S  		BRA L129
000004AC                         L128:	; bb1
000004AC 3C065A                  		MOV.B #5AH, 06H[R0]
000004AF 38rrrr               W  		BRA L148
000004B2                         L129:	; bb7
000004B2 FBE2rrrrrrrr            		MOV.L #_cfg, R14
000004B8 5DEE24                  		MOVU.W 48H[R14], R14
000004BB 760EEF12                		CMP #12EFH, R14
000004BF 10                   S  		BEQ L131
000004C0                         L130:	; bb12
000004C0 F80601                  		MOV.L #00000001H, [R0]
000004C3 08                   S  		BRA L132
000004C4                         L131:	; bb13
000004C4 F80600                  		MOV.L #00000000H, [R0]
000004C7                         L132:	; bb14
000004C7 EC01                    		MOV.L [R0], R1
000004C9 6101                    		CMP #00H, R1
000004CB 21rr                    		BNE L128
000004CD                         L133:	; bb19
                                 ;     268 	if ((nvl.magic_start	!= MAGICNUM) || (nvl.magic_end != MAGICNUM)) return (STAT_CONFIG_ASSERTION_FAILURE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",268
000004CD FBE2rrrrrrrr            		MOV.L #_nvl, R14
000004D3 5CEE                    		MOVU.W [R14], R14
000004D5 760EEF12                		CMP #12EFH, R14
000004D9 21rr                    		BNE L136
000004DB 08                   S  		BRA L135
000004DC                         L134:	; bb20
000004DC 3C065A                  		MOV.B #5AH, 06H[R0]
000004DF 2Err                 B  		BRA L148
000004E1                         L135:	; bb26
000004E1 FBE2rrrrrrrr            		MOV.L #_nvl, R14
000004E7 5EEE4202                		MOVU.W 0484H[R14], R14
000004EB 760EEF12                		CMP #12EFH, R14
000004EF 10                   S  		BEQ L137
000004F0                         L136:	; bb31
000004F0 F80601                  		MOV.L #00000001H, [R0]
000004F3 08                   S  		BRA L138
000004F4                         L137:	; bb32
000004F4 F80600                  		MOV.L #00000000H, [R0]
000004F7                         L138:	; bb33
000004F7 EC01                    		MOV.L [R0], R1
000004F9 6101                    		CMP #00H, R1
000004FB 21rr                    		BNE L134
000004FD                         L139:	; bb39
                                 ;     269 	if ((nvStr.magic_start	!= MAGICNUM) || (nvStr.magic_end != MAGICNUM)) return (STAT_CONFIG_ASSERTION_FAILURE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",269
000004FD FBE2rrrrrrrr            		MOV.L #_nvStr, R14
00000503 5CEE                    		MOVU.W [R14], R14
00000505 760EEF12                		CMP #12EFH, R14
00000509 21rr                    		BNE L142
0000050B 08                   S  		BRA L141
0000050C                         L140:	; bb40
0000050C 3C065A                  		MOV.B #5AH, 06H[R0]
0000050F 2Err                 B  		BRA L148
00000511                         L141:	; bb46
00000511 FBE2rrrrrrrr            		MOV.L #_nvStr, R14
00000517 5EEE0201                		MOVU.W 0204H[R14], R14
0000051B 760EEF12                		CMP #12EFH, R14
0000051F 10                   S  		BEQ L143
00000520                         L142:	; bb51
00000520 F80601                  		MOV.L #00000001H, [R0]
00000523 08                   S  		BRA L144
00000524                         L143:	; bb52
00000524 F80600                  		MOV.L #00000000H, [R0]
00000527                         L144:	; bb53
00000527 EC01                    		MOV.L [R0], R1
00000529 6101                    		CMP #00H, R1
0000052B 21rr                    		BNE L140
0000052D                         L145:	; bb59
                                 ;     270 	if (global_string_buf[MESSAGE_LEN-1] != NUL) return (STAT_CONFIG_ASSERTION_FAILURE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",270
0000052D FBE2rrrrrrrr            		MOV.L #_global_string_buf, R14
00000533 59EE4F                  		MOVU.B 4FH[R14], R14
00000536 610E                    		CMP #00H, R14
00000538 10                   S  		BEQ L147
00000539                         L146:	; bb60
00000539 3C065A                  		MOV.B #5AH, 06H[R0]
0000053C 08                   S  		BRA L148
0000053D                         L147:	; bb67
                                 ;     271 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",271
0000053D 3C0600                  		MOV.B #00H, 06H[R0]
00000540                         L148:	; bb69
00000540 C5000607                		MOV.B 06H[R0], 07H[R0]
                                 ;     272 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",272
00000544 B189                    		MOVU.B 07H[R0], R1
00000546 6702                    		RTSD #08H
00000548                         _get_nul:
                                 		.STACK	_get_nul=12
                                 ;     273 
                                 ;     274 /***** Generic Internal Functions *********************************************/
                                 ;     275 
                                 ;     276 /* Generic gets()
                                 ;     277  *	get_nul()  - get nothing (returns STAT_PARAMETER_CANNOT_BE_READ)
                                 ;     278  *	get_ui8()  - get value as 8 bit uint8_t
                                 ;     279  *	get_int()  - get value as 32 bit integer
                                 ;     280  *	get_data() - get value as 32 bit integer blind cast
                                 ;     281  *	get_flt()  - get value as float
                                 ;     282  *	get_format() - internal accessor for printf() format string
                                 ;     283  */
                                 ;     284 stat_t get_nul(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",284
00000548 6080                    		SUB #08H, R0
0000054A A009                    		MOV.L R1, 04H[R0]
                                 ;     285 {
                                 ;     286 	nv->valuetype = TYPE_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",286
0000054C 3C1B00                  		MOV.B #00H, 0BH[R1]
0000054F                         L150:	; entry.split
                                 ;     287 	return (STAT_PARAMETER_CANNOT_BE_READ);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",287
0000054F 3C0369                  		MOV.B #69H, 03H[R0]
00000552 B089                    		MOVU.B 03H[R0], R1
00000554                         L151:	; entry.split1
                                 ;     288 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",288
00000554 5B11                    		MOVU.B R1, R1
00000556 6702                    		RTSD #08H
00000558                         _get_ui8:
                                 		.STACK	_get_ui8=12
                                 ;     289 
                                 ;     290 stat_t get_ui8(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",290
00000558 6080                    		SUB #08H, R0
0000055A A009                    		MOV.L R1, 04H[R0]
                                 ;     291 {
                                 ;     292 	nv->value = (float)*((uint8_t *)GET_TABLE_WORD(target));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",292
0000055C B912                    		MOVU.W 08H[R1], R2
0000055E 6C52                    		SHLL #05H, R2
00000560 FB32rrrrrrrr            		MOV.L #_cfgArray, R3
00000566 4B23                    		ADD R2, R3
00000568 A9B2                    		MOV.L 18H[R3], R2
0000056A FC4422                  		ITOF [R2].UB, R2
0000056D A112                    		MOV.L R2, 10H[R1]
0000056F                         L153:	; entry.split
                                 ;     293 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",293
0000056F A809                    		MOV.L 04H[R0], R1
00000571 3C1B02                  		MOV.B #02H, 0BH[R1]
00000574                         L154:	; entry.split1
                                 ;     294 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",294
00000574 3C0300                  		MOV.B #00H, 03H[R0]
00000577 B089                    		MOVU.B 03H[R0], R1
00000579                         L155:	; entry.split2
                                 ;     295 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",295
00000579 5B11                    		MOVU.B R1, R1
0000057B 6702                    		RTSD #08H
0000057D                         _get_int:
                                 		.STACK	_get_int=12
                                 ;     296 
                                 ;     297 stat_t get_int(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",297
0000057D 6080                    		SUB #08H, R0
0000057F A009                    		MOV.L R1, 04H[R0]
                                 ;     298 {
                                 ;     299 //	nv->value = (float)*((uint32_t *)GET_TABLE_WORD(target));
                                 ;     300 	nv->value = *((uint32_t *)GET_TABLE_WORD(target));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",300
00000581 B912                    		MOVU.W 08H[R1], R2
00000583 6C52                    		SHLL #05H, R2
00000585 FB32rrrrrrrr            		MOV.L #_cfgArray, R3
0000058B 4B23                    		ADD R2, R3
0000058D A9B2                    		MOV.L 18H[R3], R2
0000058F EC2E                    		MOV.L [R2], R14
00000591 7DFE                    		BTST #1FH, R14
00000593 20rr                    		BEQ L158
00000595                         L157:	; entry
00000595 FD81EF                  		SHLR #01H, R14, R15
00000598 641E                    		AND #01H, R14
0000059A 57FE                    		OR R15, R14
0000059C FC47EE                  		ITOF R14, R14
0000059F FC8BEE                  		FADD R14, R14
000005A2 08                   S  		BRA L159
000005A3                         L158:	; entry
000005A3 FC47EE                  		ITOF R14, R14
000005A6                         L159:	; entry
000005A6 E71E04                  		MOV.L R14, 10H[R1]
000005A9                         L160:	; entry.split
                                 ;     301 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",301
000005A9 A809                    		MOV.L 04H[R0], R1
000005AB 3C1B02                  		MOV.B #02H, 0BH[R1]
000005AE                         L161:	; entry.split1
                                 ;     302 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",302
000005AE 3C0300                  		MOV.B #00H, 03H[R0]
000005B1 B089                    		MOVU.B 03H[R0], R1
000005B3                         L162:	; entry.split2
                                 ;     303 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",303
000005B3 5B11                    		MOVU.B R1, R1
000005B5 6702                    		RTSD #08H
000005B7                         _get_data:
                                 		.STACK	_get_data=16
                                 ;     304 
                                 ;     305 stat_t get_data(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",305
000005B7 60C0                    		SUB #0CH, R0
000005B9 A081                    		MOV.L R1, 08H[R0]
                                 ;     306 {
                                 ;     307 	uint32_t *v = (uint32_t*)&nv->value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",307
000005BB 711110                  		ADD #10H, R1
000005BE E301                    		MOV.L R1, [R0]
000005C0                         L164:	; entry.split
                                 ;     308 	*v = *((uint32_t *)GET_TABLE_WORD(target));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",308
000005C0 A881                    		MOV.L 08H[R0], R1
000005C2 B911                    		MOVU.W 08H[R1], R1
000005C4 6C51                    		SHLL #05H, R1
000005C6 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000005CC 4B12                    		ADD R1, R2
000005CE A9A1                    		MOV.L 18H[R2], R1
000005D0 EC02                    		MOV.L [R0], R2
000005D2 E012                    		MOV.L [R1], [R2]
000005D4                         L165:	; entry.split1
                                 ;     309 	nv->valuetype = TYPE_DATA;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",309
000005D4 A881                    		MOV.L 08H[R0], R1
000005D6 3C1B03                  		MOV.B #03H, 0BH[R1]
000005D9                         L166:	; entry.split2
                                 ;     310 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",310
000005D9 3C0700                  		MOV.B #00H, 07H[R0]
000005DC B189                    		MOVU.B 07H[R0], R1
000005DE                         L167:	; entry.split3
                                 ;     311 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",311
000005DE 5B11                    		MOVU.B R1, R1
000005E0 6703                    		RTSD #0CH
000005E2                         _get_flt:
                                 		.STACK	_get_flt=12
                                 ;     312 
                                 ;     313 stat_t get_flt(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",313
000005E2 6080                    		SUB #08H, R0
000005E4 A009                    		MOV.L R1, 04H[R0]
                                 ;     314 {
                                 ;     315 	nv->value = *((float *)GET_TABLE_WORD(target));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",315
000005E6 B912                    		MOVU.W 08H[R1], R2
000005E8 6C52                    		SHLL #05H, R2
000005EA FB32rrrrrrrr            		MOV.L #_cfgArray, R3
000005F0 4B23                    		ADD R2, R3
000005F2 A9B2                    		MOV.L 18H[R3], R2
000005F4 E42104                  		MOV.L [R2], 10H[R1]
000005F7                         L169:	; entry.split
                                 ;     316 	nv->precision = (int8_t)GET_TABLE_WORD(precision);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",316
000005F7 A809                    		MOV.L 04H[R0], R1
000005F9 B912                    		MOVU.W 08H[R1], R2
000005FB 6C52                    		SHLL #05H, R2
000005FD FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00000603 4B2E                    		ADD R2, R14
00000605 C5E10B0C                		MOV.B 0BH[R14], 0CH[R1]
00000609                         L170:	; entry.split1
                                 ;     317 	nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",317
00000609 A809                    		MOV.L 04H[R0], R1
0000060B 3C1B04                  		MOV.B #04H, 0BH[R1]
0000060E                         L171:	; entry.split2
                                 ;     318 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",318
0000060E 3C0300                  		MOV.B #00H, 03H[R0]
00000611 B089                    		MOVU.B 03H[R0], R1
00000613                         L172:	; entry.split3
                                 ;     319 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",319
00000613 5B11                    		MOVU.B R1, R1
00000615 6702                    		RTSD #08H
00000617                         _set_nul:
                                 		.STACK	_set_nul=12
                                 ;     320 
                                 ;     321 /* Generic sets()
                                 ;     322  *	set_nul()  - set nothing (returns STAT_PARAMETER_IS_READ_ONLY)
                                 ;     323  *	set_ui8()  - set value as 8 bit uint8_t value
                                 ;     324  *	set_01()   - set a 0 or 1 uint8_t value with validation
                                 ;     325  *	set_012()  - set a 0, 1 or 2 uint8_t value with validation
                                 ;     326  *	set_0123() - set a 0, 1, 2 or 3 uint8_t value with validation
                                 ;     327  *	set_int()  - set value as 32 bit integer
                                 ;     328  *	set_data() - set value as 32 bit integer blind cast
                                 ;     329  *	set_flt()  - set value as float
                                 ;     330  */
                                 ;     331 stat_t set_nul(nvObj_t *nv) { return (STAT_PARAMETER_IS_READ_ONLY); }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",331
00000617 6080                    		SUB #08H, R0
00000619 A009                    		MOV.L R1, 04H[R0]
0000061B 3C0368                  		MOV.B #68H, 03H[R0]
0000061E B089                    		MOVU.B 03H[R0], R1
00000620 6702                    		RTSD #08H
00000622                         _set_ui8:
                                 		.STACK	_set_ui8=12
                                 ;     332 
                                 ;     333 stat_t set_ui8(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",333
00000622 6080                    		SUB #08H, R0
00000624 A009                    		MOV.L R1, 04H[R0]
                                 ;     334 {
                                 ;     335 	*((uint8_t *)GET_TABLE_WORD(target)) = nv->value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",335
00000626 B912                    		MOVU.W 08H[R1], R2
00000628 6C52                    		SHLL #05H, R2
0000062A FB32rrrrrrrr            		MOV.L #_cfgArray, R3
00000630 4B23                    		ADD R2, R3
00000632 A9B2                    		MOV.L 18H[R3], R2
00000634 A911                    		MOV.L 10H[R1], R1
00000636 FD72110000004F          		FCMP #4F000000H, R1
0000063D 29rr                    		BLT L176
0000063F                         L175:	; entry
0000063F FD7221000080CF          		FADD #0CF800000H, R1
00000646                         L176:	; entry
00000646 FC971E                  		FTOI R1, R14
00000649 C32E                    		MOV.B R14, [R2]
0000064B                         L177:	; entry.split
                                 ;     336 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",336
0000064B A809                    		MOV.L 04H[R0], R1
0000064D 3C1B02                  		MOV.B #02H, 0BH[R1]
00000650                         L178:	; entry.split1
                                 ;     337 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",337
00000650 3C0300                  		MOV.B #00H, 03H[R0]
00000653 B089                    		MOVU.B 03H[R0], R1
00000655                         L179:	; entry.split2
                                 ;     338 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",338
00000655 5B11                    		MOVU.B R1, R1
00000657 6702                    		RTSD #08H
00000659                         _set_01:
                                 		.STACK	_set_01=12
                                 ;     339 
                                 ;     340 stat_t set_01(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",340
00000659 6080                    		SUB #08H, R0
0000065B A009                    		MOV.L R1, 04H[R0]
                                 ;     341 {
                                 ;     342 	if ((uint8_t)nv->value > 1)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",342
0000065D A911                    		MOV.L 10H[R1], R1
0000065F FD72110000004F          		FCMP #4F000000H, R1
00000666 29rr                    		BLT L182
00000668                         L181:	; entry
00000668 FD7221000080CF          		FADD #0CF800000H, R1
0000066F                         L182:	; entry
0000066F FC971E                  		FTOI R1, R14
00000672 5BEE                    		MOVU.B R14, R14
00000674 612E                    		CMP #02H, R14
00000676 29rr                    		BLT L184
00000678                         L183:	; bb2
                                 ;     343         return (STAT_INPUT_VALUE_RANGE_ERROR);	// if
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",343
00000678 3C026E                  		MOV.B #6EH, 02H[R0]
0000067B 08                   S  		BRA L185
0000067C                         L184:	; bb11
                                 ;     344 	return (set_ui8(nv));						// else
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",344
0000067C A809                    		MOV.L 04H[R0], R1
0000067E 39rrrr               W  		BSR _set_ui8
00000681 8081                    		MOV.B R1, 02H[R0]
00000683                         L185:	; bb15
00000683 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     345 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",345
00000687 B089                    		MOVU.B 03H[R0], R1
00000689 6702                    		RTSD #08H
0000068B                         _set_012:
                                 		.STACK	_set_012=12
                                 ;     346 
                                 ;     347 stat_t set_012(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",347
0000068B 6080                    		SUB #08H, R0
0000068D A009                    		MOV.L R1, 04H[R0]
                                 ;     348 {
                                 ;     349 	if ((uint8_t)nv->value > 2)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",349
0000068F A911                    		MOV.L 10H[R1], R1
00000691 FD72110000004F          		FCMP #4F000000H, R1
00000698 29rr                    		BLT L188
0000069A                         L187:	; entry
0000069A FD7221000080CF          		FADD #0CF800000H, R1
000006A1                         L188:	; entry
000006A1 FC971E                  		FTOI R1, R14
000006A4 5BEE                    		MOVU.B R14, R14
000006A6 613E                    		CMP #03H, R14
000006A8 29rr                    		BLT L190
000006AA                         L189:	; bb2
                                 ;     350         return (STAT_INPUT_VALUE_RANGE_ERROR);	// if
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",350
000006AA 3C026E                  		MOV.B #6EH, 02H[R0]
000006AD 08                   S  		BRA L191
000006AE                         L190:	; bb11
                                 ;     351 	return (set_ui8(nv));						// else
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",351
000006AE A809                    		MOV.L 04H[R0], R1
000006B0 39rrrr               W  		BSR _set_ui8
000006B3 8081                    		MOV.B R1, 02H[R0]
000006B5                         L191:	; bb15
000006B5 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     352 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",352
000006B9 B089                    		MOVU.B 03H[R0], R1
000006BB 6702                    		RTSD #08H
000006BD                         _set_0123:
                                 		.STACK	_set_0123=12
                                 ;     353 
                                 ;     354 stat_t set_0123(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",354
000006BD 6080                    		SUB #08H, R0
000006BF A009                    		MOV.L R1, 04H[R0]
                                 ;     355 {
                                 ;     356 	if ((uint8_t)nv->value > 3)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",356
000006C1 A911                    		MOV.L 10H[R1], R1
000006C3 FD72110000004F          		FCMP #4F000000H, R1
000006CA 29rr                    		BLT L194
000006CC                         L193:	; entry
000006CC FD7221000080CF          		FADD #0CF800000H, R1
000006D3                         L194:	; entry
000006D3 FC971E                  		FTOI R1, R14
000006D6 5BEE                    		MOVU.B R14, R14
000006D8 614E                    		CMP #04H, R14
000006DA 29rr                    		BLT L196
000006DC                         L195:	; bb2
                                 ;     357         return (STAT_INPUT_VALUE_RANGE_ERROR);	// if
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",357
000006DC 3C026E                  		MOV.B #6EH, 02H[R0]
000006DF 08                   S  		BRA L197
000006E0                         L196:	; bb11
                                 ;     358 	return (set_ui8(nv));						// else
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",358
000006E0 A809                    		MOV.L 04H[R0], R1
000006E2 39rrrr               W  		BSR _set_ui8
000006E5 8081                    		MOV.B R1, 02H[R0]
000006E7                         L197:	; bb15
000006E7 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     359 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",359
000006EB B089                    		MOVU.B 03H[R0], R1
000006ED 6702                    		RTSD #08H
000006EF                         _set_int:
                                 		.STACK	_set_int=12
                                 ;     360 
                                 ;     361 stat_t set_int(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",361
000006EF 6080                    		SUB #08H, R0
000006F1 A009                    		MOV.L R1, 04H[R0]
                                 ;     362 {
                                 ;     363 	*((uint32_t *)GET_TABLE_WORD(target)) = (uint32_t)nv->value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",363
000006F3 B912                    		MOVU.W 08H[R1], R2
000006F5 6C52                    		SHLL #05H, R2
000006F7 FB32rrrrrrrr            		MOV.L #_cfgArray, R3
000006FD 4B23                    		ADD R2, R3
000006FF A9B2                    		MOV.L 18H[R3], R2
00000701 A911                    		MOV.L 10H[R1], R1
00000703 FD72110000004F          		FCMP #4F000000H, R1
0000070A 29rr                    		BLT L200
0000070C                         L199:	; entry
0000070C FD7221000080CF          		FADD #0CF800000H, R1
00000713                         L200:	; entry
00000713 FC971E                  		FTOI R1, R14
00000716 E32E                    		MOV.L R14, [R2]
00000718                         L201:	; entry.split
                                 ;     364 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",364
00000718 A809                    		MOV.L 04H[R0], R1
0000071A 3C1B02                  		MOV.B #02H, 0BH[R1]
0000071D                         L202:	; entry.split1
                                 ;     365 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",365
0000071D 3C0300                  		MOV.B #00H, 03H[R0]
00000720 B089                    		MOVU.B 03H[R0], R1
00000722                         L203:	; entry.split2
                                 ;     366 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",366
00000722 5B11                    		MOVU.B R1, R1
00000724 6702                    		RTSD #08H
00000726                         _set_data:
                                 		.STACK	_set_data=16
                                 ;     367 
                                 ;     368 stat_t set_data(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",368
00000726 60C0                    		SUB #0CH, R0
00000728 A081                    		MOV.L R1, 08H[R0]
                                 ;     369 {
                                 ;     370 	uint32_t *v = (uint32_t*)&nv->value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",370
0000072A 711110                  		ADD #10H, R1
0000072D E301                    		MOV.L R1, [R0]
0000072F                         L205:	; entry.split
                                 ;     371 	*((uint32_t *)GET_TABLE_WORD(target)) = *v;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",371
0000072F A881                    		MOV.L 08H[R0], R1
00000731 B911                    		MOVU.W 08H[R1], R1
00000733 6C51                    		SHLL #05H, R1
00000735 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
0000073B 4B12                    		ADD R1, R2
0000073D A9A1                    		MOV.L 18H[R2], R1
0000073F EC02                    		MOV.L [R0], R2
00000741 E021                    		MOV.L [R2], [R1]
00000743                         L206:	; entry.split1
                                 ;     372 	nv->valuetype = TYPE_DATA;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",372
00000743 A881                    		MOV.L 08H[R0], R1
00000745 3C1B03                  		MOV.B #03H, 0BH[R1]
00000748                         L207:	; entry.split2
                                 ;     373 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",373
00000748 3C0700                  		MOV.B #00H, 07H[R0]
0000074B B189                    		MOVU.B 07H[R0], R1
0000074D                         L208:	; entry.split3
                                 ;     374 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",374
0000074D 5B11                    		MOVU.B R1, R1
0000074F 6703                    		RTSD #0CH
00000751                         _set_flt:
                                 		.STACK	_set_flt=12
                                 ;     375 
                                 ;     376 stat_t set_flt(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",376
00000751 6080                    		SUB #08H, R0
00000753 A009                    		MOV.L R1, 04H[R0]
                                 ;     377 {
                                 ;     378 	*((float *)GET_TABLE_WORD(target)) = nv->value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",378
00000755 B912                    		MOVU.W 08H[R1], R2
00000757 6C52                    		SHLL #05H, R2
00000759 FB32rrrrrrrr            		MOV.L #_cfgArray, R3
0000075F 4B23                    		ADD R2, R3
00000761 A9B2                    		MOV.L 18H[R3], R2
00000763 E11204                  		MOV.L 10H[R1], [R2]
00000766                         L210:	; entry.split
                                 ;     379 	nv->precision = GET_TABLE_WORD(precision);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",379
00000766 A809                    		MOV.L 04H[R0], R1
00000768 B912                    		MOVU.W 08H[R1], R2
0000076A 6C52                    		SHLL #05H, R2
0000076C FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00000772 4B2E                    		ADD R2, R14
00000774 C5E10B0C                		MOV.B 0BH[R14], 0CH[R1]
00000778                         L211:	; entry.split1
                                 ;     380 	nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",380
00000778 A809                    		MOV.L 04H[R0], R1
0000077A 3C1B04                  		MOV.B #04H, 0BH[R1]
0000077D                         L212:	; entry.split2
                                 ;     381 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",381
0000077D 3C0300                  		MOV.B #00H, 03H[R0]
00000780 B089                    		MOVU.B 03H[R0], R1
00000782                         L213:	; entry.split3
                                 ;     382 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",382
00000782 5B11                    		MOVU.B R1, R1
00000784 6702                    		RTSD #08H
00000786                         _get_grp:
                                 		.STACK	_get_grp=20
                                 ;     383 
                                 ;     384 /************************************************************************************
                                 ;     385  * Group operations
                                 ;     386  *
                                 ;     387  *	Group operations work on parent/child groups where the parent is one of:
                                 ;     388  *	  axis group 			x,y,z,a,b,c
                                 ;     389  *	  motor group			1,2,3,4
                                 ;     390  *	  PWM group				p1
                                 ;     391  *	  coordinate group		g54,g55,g56,g57,g58,g59,g92
                                 ;     392  *	  system group			"sys" - a collection of otherwise unrelated variables
                                 ;     393  *
                                 ;     394  *	Text mode can only GET groups. For example:
                                 ;     395  *	  $x					get all members of an axis group
                                 ;     396  *	  $1					get all members of a motor group
                                 ;     397  *	  $<grp>				get any named group from the above lists
                                 ;     398  *
                                 ;     399  *	In JSON groups are carried as parent / child objects & can get and set elements:
                                 ;     400  *	  {"x":""}						get all X axis parameters
                                 ;     401  *	  {"x":{"vm":""}}				get X axis velocity max
                                 ;     402  *	  {"x":{"vm":1000}}				set X axis velocity max
                                 ;     403  *	  {"x":{"vm":"","fr":""}}		get X axis velocity max and feed rate
                                 ;     404  *	  {"x":{"vm":1000,"fr";900}}	set X axis velocity max and feed rate
                                 ;     405  *	  {"x":{"am":1,"fr":800,....}}	set multiple or all X axis parameters
                                 ;     406  */
                                 ;     407 
                                 ;     408 /*
                                 ;     409  * get_grp() - read data from axis, motor, system or other group
                                 ;     410  *
                                 ;     411  *	get_grp() is a group expansion function that expands the parent group and returns
                                 ;     412  *	the values of all the children in that group. It expects the first nvObj in the
                                 ;     413  *	nvBody to have a valid group name in the token field. This first object will be set
                                 ;     414  *	to a TYPE_PARENT. The group field is left nul - as the group field refers to a parent
                                 ;     415  *	group, which this group has none.
                                 ;     416  *
                                 ;     417  *	All subsequent nvObjs in the body will be populated with their values.
                                 ;     418  *	The token field will be populated as will the parent name in the group field.
                                 ;     419  *
                                 ;     420  *	The sys group is an exception where the children carry a blank group field, even though
                                 ;     421  *	the sys parent is labeled as a TYPE_PARENT.
                                 ;     422  */
                                 ;     423 
                                 ;     424 stat_t get_grp(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",424
00000786 7100F0                  		ADD #0FFFFFFF0H, R0
00000789 A089                    		MOV.L R1, 0CH[R0]
                                 ;     425 {
                                 ;     426 	char_t *parent_group = nv->token;				// token in the parent nv object is the group
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",426
0000078B 711118                  		ADD #18H, R1
0000078E E301                    		MOV.L R1, [R0]
00000790                         L215:	; entry.split
                                 ;     427 	char_t group[GROUP_LEN+1];						// group string retrieved from cfgArray child
                                 ;     428 	nv->valuetype = TYPE_PARENT;					// make first object the parent
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",428
00000790 A889                    		MOV.L 0CH[R0], R1
00000792 3C1B07                  		MOV.B #07H, 0BH[R1]
00000795                         L216:	; entry.split1
                                 ;     429 	for (index_t i=0; nv_index_is_single(i); i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",429
00000795 3D0400                  		MOV.W #0000H, 08H[R0]
00000798 2Err                 B  		BRA L222
0000079A                         L217:	; bb
                                 ;     430 		strcpy_P(group, cfgArray[i].group);			// don't need strncpy as it's always terminated
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",430
0000079A B901                    		MOVU.W 08H[R0], R1
0000079C 6C51                    		SHLL #05H, R1
0000079E FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000007A4 4B12                    		ADD R1, R2
000007A6 FB36FF                  		MOV.L #0FFFFFFFFH, R3
000007A9 710104                  		ADD #04H, R0, R1
000007AC 7F87                    		SMOVU
000007AE                         L218:	; bb.split
000007AE FB36FF                  		MOV.L #0FFFFFFFFH, R3
000007B1 710204                  		ADD #04H, R0, R2
                                 ;     431 		if (strcmp(parent_group, group) != 0) continue;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",431
000007B4 EC01                    		MOV.L [R0], R1
000007B6 7F83                    		SCMPU
000007B8 FCDBE2                  		SCGEU.L R14
000007BB FCDBF5                  		SCLEU.L R15
000007BE 43FE                    		SUB R15, R14
000007C0 610E                    		CMP #00H, R14
000007C2 21rr                    		BNE L221
000007C4                         L219:	; bb24
                                 ;     432 		(++nv)->index = i;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",432
000007C4 A889                    		MOV.L 0CH[R0], R1
000007C6 711224                  		ADD #24H, R1, R2
000007C9 A08A                    		MOV.L R2, 0CH[R0]
000007CB D5010416                		MOV.W 08H[R0], 2CH[R1]
000007CF                         L220:	; bb24.split
                                 ;     433 		nv_get_nvObj(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",433
000007CF A889                    		MOV.L 0CH[R0], R1
000007D1 39rrrr               W  		BSR _nv_get_nvObj
000007D4                         L221:	; bb31
000007D4 9901                    		MOV.W 08H[R0], R1
000007D6 6211                    		ADD #01H, R1
000007D8 9101                    		MOV.W R1, 08H[R0]
000007DA                         L222:	; bb34
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",429
000007DA B901                    		MOVU.W 08H[R0], R1
000007DC 05rrrrrr             A  		BSR _nv_index_is_single
000007E0 6101                    		CMP #00H, R1
000007E2 21rr                    		BNE L217
000007E4                         L223:	; bb41
                                 ;     434 	}
                                 ;     435 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",435
000007E4 3C0B00                  		MOV.B #00H, 0BH[R0]
000007E7 B289                    		MOVU.B 0BH[R0], R1
000007E9                         L224:	; bb41.split
                                 ;     436 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",436
000007E9 5B11                    		MOVU.B R1, R1
000007EB 6704                    		RTSD #10H
000007ED                         _set_grp:
                                 		.STACK	_set_grp=12
                                 ;     437 
                                 ;     438 /*
                                 ;     439  * set_grp() - get or set one or more values in a group
                                 ;     440  *
                                 ;     441  *	This functions is called "_set_group()" but technically it's a getter and
                                 ;     442  *	a setter. It iterates the group children and either gets the value or sets
                                 ;     443  *	the value for each depending on the nv->valuetype.
                                 ;     444  *
                                 ;     445  *	This function serves JSON mode only as text mode shouldn't call it.
                                 ;     446  */
                                 ;     447 
                                 ;     448 stat_t set_grp(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",448
000007ED 6080                    		SUB #08H, R0
000007EF A009                    		MOV.L R1, 04H[R0]
                                 ;     449 {
                                 ;     450 	if (cfg.comm_mode == TEXT_MODE)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",450
000007F1 FB12rrrrrrrr            		MOV.L #_cfg, R1
000007F7 B091                    		MOVU.B 02H[R1], R1
000007F9 6101                    		CMP #00H, R1
000007FB 18                   S  		BNE L227
000007FC                         L226:	; bb3
                                 ;     451         return (STAT_INVALID_OR_MALFORMED_COMMAND);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",451
000007FC 3C0165                  		MOV.B #65H, 01H[R0]
000007FF 2Err                 B  		BRA L237
00000801                         L227:	; bb9
                                 ;     452 
                                 ;     453 	for (uint8_t i=0; i<NV_MAX_OBJECTS; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",453
00000801 3C0200                  		MOV.B #00H, 02H[R0]
00000804 2Err                 B  		BRA L235
00000806                         L228:	; bb11
                                 ;     454 		if ((nv = nv->nx) == NULL) break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",454
00000806 A809                    		MOV.L 04H[R0], R1
00000808 A819                    		MOV.L 04H[R1], R1
0000080A A009                    		MOV.L R1, 04H[R0]
0000080C 6101                    		CMP #00H, R1
0000080E 20rr                    		BEQ L236
00000810                         L229:	; bb22
                                 ;     455 		if (nv->valuetype == TYPE_EMPTY) break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",455
00000810 A809                    		MOV.L 04H[R0], R1
00000812 8A99                    		MOV.B 0BH[R1], R1
00000814 7501FF                  		CMP #0FFFFFFFFH, R1
00000817 20rr                    		BEQ L236
00000819                         L230:	; bb26
                                 ;     456 		else if (nv->valuetype == TYPE_NULL)		// NULL means GET the value
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",456
00000819 A809                    		MOV.L 04H[R0], R1
0000081B 8A9A                    		MOV.B 0BH[R1], R2
0000081D 6102                    		CMP #00H, R2
0000081F 18                   S  		BNE L232
00000820                         L231:	; bb27
                                 ;     457 			nv_get(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",457
00000820 39rrrr               W  		BSR _nv_get
00000823 08                   S  		BRA L234
00000824                         L232:	; bb30
                                 ;     458 		else {
                                 ;     459 			nv_set(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",459
00000824 39rrrr               W  		BSR _nv_set
00000827                         L233:	; bb30.split
                                 ;     460 			nv_persist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",460
00000827 A809                    		MOV.L 04H[R0], R1
00000829 39rrrr               W  		BSR _nv_persist
0000082C                         L234:	; bb50
0000082C B081                    		MOVU.B 02H[R0], R1
0000082E 6211                    		ADD #01H, R1
00000830 8081                    		MOV.B R1, 02H[R0]
00000832                         L235:	; bb53
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",453
00000832 B081                    		MOVU.B 02H[R0], R1
00000834 75511D                  		CMP #1DH, R1
00000837 29rr                    		BLT L228
00000839                         L236:	; bb61
                                 ;     461 		}
                                 ;     462 	}
                                 ;     463 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",463
00000839 3C0100                  		MOV.B #00H, 01H[R0]
0000083C                         L237:	; bb63
0000083C C5000103                		MOV.B 01H[R0], 03H[R0]
                                 ;     464 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",464
00000840 B089                    		MOVU.B 03H[R0], R1
00000842 6702                    		RTSD #08H
00000844                         _nv_group_is_prefixed:
                                 		.STACK	_nv_group_is_prefixed=12
                                 ;     465 
                                 ;     466 /*
                                 ;     467  * nv_group_is_prefixed() - hack
                                 ;     468  *
                                 ;     469  *	This little function deals with the exception cases that some groups don't use
                                 ;     470  *	the parent token as a prefix to the child elements; SR being a good example.
                                 ;     471  */
                                 ;     472 uint8_t nv_group_is_prefixed(char_t *group)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",472
00000844 6080                    		SUB #08H, R0
00000846 EF12                    		MOV.L R1, R2
00000848 A00A                    		MOV.L R2, 04H[R0]
0000084A FB36FF                  		MOV.L #0FFFFFFFFH, R3
                                 ;     473 {
                                 ;     474 	if (strcmp("sr",group) == 0) return (false);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",474
0000084D FB12rrrrrrrr            		MOV.L #_L24, R1
00000853 7F83                    		SCMPU
00000855 FCDBE2                  		SCGEU.L R14
00000858 FCDBF5                  		SCLEU.L R15
0000085B 43FE                    		SUB R15, R14
0000085D 610E                    		CMP #00H, R14
0000085F 18                   S  		BNE L240
00000860                         L239:	; bb2
00000860 3C0200                  		MOV.B #00H, 02H[R0]
00000863 2Err                 B  		BRA L243
00000865                         L240:	; bb9
00000865 FB36FF                  		MOV.L #0FFFFFFFFH, R3
                                 ;     475 	if (strcmp("sys",group) == 0) return (false);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",475
00000868 A80A                    		MOV.L 04H[R0], R2
0000086A FB12rrrrrrrr            		MOV.L #_L25, R1
00000870 7F83                    		SCMPU
00000872 FCDBE2                  		SCGEU.L R14
00000875 FCDBF5                  		SCLEU.L R15
00000878 43FE                    		SUB R15, R14
0000087A 610E                    		CMP #00H, R14
0000087C 18                   S  		BNE L242
0000087D                         L241:	; bb10
0000087D 3C0200                  		MOV.B #00H, 02H[R0]
00000880 08                   S  		BRA L243
00000881                         L242:	; bb17
                                 ;     476 	return (true);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",476
00000881 3C0201                  		MOV.B #01H, 02H[R0]
00000884                         L243:	; bb19
00000884 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     477 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",477
00000888 B089                    		MOVU.B 03H[R0], R1
0000088A 6702                    		RTSD #08H
0000088C                         _nv_get_index:
                                 		.STACK	_nv_get_index=32
                                 ;     478 
                                 ;     479 /***********************************************************************************
                                 ;     480  ***** nvObj functions ************************************************************
                                 ;     481  ***********************************************************************************/
                                 ;     482 
                                 ;     483 /***********************************************************************************
                                 ;     484  * nvObj helper functions and other low-level nv helpers
                                 ;     485  */
                                 ;     486 
                                 ;     487 /* nv_get_index() - get index from mnenonic token + group
                                 ;     488  *
                                 ;     489  * nv_get_index() is the most expensive routine in the whole config. It does a
                                 ;     490  * linear table scan of the PROGMEM strings, which of course could be further
                                 ;     491  * optimized with indexes or hashing.
                                 ;     492  */
                                 ;     493 index_t nv_get_index(const char_t *group, const char_t *token)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",493
0000088C 7100E4                  		ADD #0FFFFFFE4H, R0
0000088F A181                    		MOV.L R1, 18H[R0]
00000891 A10A                    		MOV.L R2, 14H[R0]
00000893 6643                    		MOV.L #00000004H, R3
00000895 710105                  		ADD #05H, R0, R1
                                 ;     494 {
                                 ;     495 	char_t c;
                                 ;     496 	char_t str[TOKEN_LEN + GROUP_LEN+1];	// should actually never be more than TOKEN_LEN+1
                                 ;     497 	strncpy(str, group, GROUP_LEN+1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",497
00000898 A982                    		MOV.L 18H[R0], R2
0000089A 7F87                    		SMOVU
0000089C 710109                  		ADD #09H, R0, R1
0000089F 4331                    		SUB R3, R1
000008A1 6602                    		MOV.L #00000000H, R2
000008A3 7F88                    		SSTR.B
000008A5                         L245:	; entry.split
000008A5 FB36FF                  		MOV.L #0FFFFFFFFH, R3
000008A8 6602                    		MOV.L #00000000H, R2
000008AA 710105                  		ADD #05H, R0, R1
                                 ;     498 	strncat(str, token, TOKEN_LEN+1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",498
000008AD A90C                    		MOV.L 14H[R0], R4
000008AF 7F80                    		SUNTIL.B
000008B1 711E05                  		ADD #05H, R1, R14
000008B4 6011                    		SUB #01H, R1
000008B6 6673                    		MOV.L #00000007H, R3
000008B8 EF42                    		MOV.L R4, R2
000008BA 7F87                    		SMOVU
000008BC 6103                    		CMP #00H, R3
000008BE 18                   S  		BNE L247
000008BF                         L246:	; entry.split
000008BF C3E3                    		MOV.B R3, [R14]
000008C1                         L247:	; entry.split
000008C1                         L248:	; entry.split1
                                 ;     499 
                                 ;     500 	index_t i;
                                 ;     501 	index_t index_max = nv_index_max();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",501
000008C1 05rrrrrr             A  		BSR _nv_index_max
000008C5 9201                    		MOV.W R1, 10H[R0]
000008C7                         L249:	; entry.split2
                                 ;     502 
                                 ;     503 	for (i=0; i < index_max; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",503
000008C7 3D0700                  		MOV.W #0000H, 0EH[R0]
000008CA 38rrrr               W  		BRA L269
000008CD                         L250:	; bb12
                                 ;     504 		if ((c = GET_TOKEN_BYTE(token[0])) != str[0]) {	continue; }					// 1st character mismatch
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",504
000008CD B989                    		MOVU.W 0EH[R0], R1
000008CF 6C51                    		SHLL #05H, R1
000008D1 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000008D7 4B12                    		ADD R1, R2
000008D9 C5200404                		MOV.B 04H[R2], 04H[R0]
000008DD B101                    		MOVU.B 04H[R0], R1
000008DF 450105                  		CMP 05H[R0].UB, R1
000008E2 3Brrrr               W  		BNE L268
000008E5                         L251:	; bb31
                                 ;     505 		if ((c = GET_TOKEN_BYTE(token[1])) == NUL) { if (str[1] == NUL) return(i);}	// one character match
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",505
000008E5 B989                    		MOVU.W 0EH[R0], R1
000008E7 6C51                    		SHLL #05H, R1
000008E9 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000008EF 4B12                    		ADD R1, R2
000008F1 B129                    		MOVU.B 05H[R2], R1
000008F3 8101                    		MOV.B R1, 04H[R0]
000008F5 6101                    		CMP #00H, R1
000008F7 21rr                    		BNE L254
000008F9                         L252:	; bb33
000008F9 B181                    		MOVU.B 06H[R0], R1
000008FB 6101                    		CMP #00H, R1
000008FD 18                   S  		BNE L254
000008FE                         L253:	; bb34
000008FE D5000701                		MOV.W 0EH[R0], 02H[R0]
00000902 38rrrr               W  		BRA L271
00000905                         L254:	; bb58
                                 ;     506 		if (c != str[1]) continue;													// 2nd character
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",506
00000905 B101                    		MOVU.B 04H[R0], R1
00000907 450106                  		CMP 06H[R0].UB, R1
0000090A 21rr                    		BNE L268
0000090C                         L255:	; bb71
                                 ;     507 		if ((c = GET_TOKEN_BYTE(token[2])) == NUL) { if (str[2] == NUL) return(i);}	// two character match
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",507
0000090C B989                    		MOVU.W 0EH[R0], R1
0000090E 6C51                    		SHLL #05H, R1
00000910 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
00000916 4B12                    		ADD R1, R2
00000918 B1A1                    		MOVU.B 06H[R2], R1
0000091A 8101                    		MOV.B R1, 04H[R0]
0000091C 6101                    		CMP #00H, R1
0000091E 21rr                    		BNE L258
00000920                         L256:	; bb73
00000920 B189                    		MOVU.B 07H[R0], R1
00000922 6101                    		CMP #00H, R1
00000924 18                   S  		BNE L258
00000925                         L257:	; bb74
00000925 D5000701                		MOV.W 0EH[R0], 02H[R0]
00000929 2Err                 B  		BRA L271
0000092B                         L258:	; bb98
                                 ;     508 		if (c != str[2]) continue;													// 3rd character
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",508
0000092B B101                    		MOVU.B 04H[R0], R1
0000092D 450107                  		CMP 07H[R0].UB, R1
00000930 21rr                    		BNE L268
00000932                         L259:	; bb111
                                 ;     509 		if ((c = GET_TOKEN_BYTE(token[3])) == NUL) { if (str[3] == NUL) return(i);}	// three character match
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",509
00000932 B989                    		MOVU.W 0EH[R0], R1
00000934 6C51                    		SHLL #05H, R1
00000936 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
0000093C 4B12                    		ADD R1, R2
0000093E B1A9                    		MOVU.B 07H[R2], R1
00000940 8101                    		MOV.B R1, 04H[R0]
00000942 6101                    		CMP #00H, R1
00000944 21rr                    		BNE L262
00000946                         L260:	; bb113
00000946 B201                    		MOVU.B 08H[R0], R1
00000948 6101                    		CMP #00H, R1
0000094A 18                   S  		BNE L262
0000094B                         L261:	; bb114
0000094B D5000701                		MOV.W 0EH[R0], 02H[R0]
0000094F 2Err                 B  		BRA L271
00000951                         L262:	; bb138
                                 ;     510 		if (c != str[3]) continue;													// 4th character
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",510
00000951 B101                    		MOVU.B 04H[R0], R1
00000953 450108                  		CMP 08H[R0].UB, R1
00000956 21rr                    		BNE L268
00000958                         L263:	; bb151
                                 ;     511 		if ((c = GET_TOKEN_BYTE(token[4])) == NUL) { if (str[4] == NUL) return(i);}	// four character match
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",511
00000958 B989                    		MOVU.W 0EH[R0], R1
0000095A 6C51                    		SHLL #05H, R1
0000095C FB22rrrrrrrr            		MOV.L #_cfgArray, R2
00000962 4B12                    		ADD R1, R2
00000964 B221                    		MOVU.B 08H[R2], R1
00000966 8101                    		MOV.B R1, 04H[R0]
00000968 6101                    		CMP #00H, R1
0000096A 21rr                    		BNE L266
0000096C                         L264:	; bb153
0000096C B209                    		MOVU.B 09H[R0], R1
0000096E 6101                    		CMP #00H, R1
00000970 18                   S  		BNE L266
00000971                         L265:	; bb154
00000971 D5000701                		MOV.W 0EH[R0], 02H[R0]
00000975 2Err                 B  		BRA L271
00000977                         L266:	; bb178
                                 ;     512 		if (c != str[4]) continue;													// 5th character
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",512
00000977 B101                    		MOVU.B 04H[R0], R1
00000979 450109                  		CMP 09H[R0].UB, R1
0000097C 18                   S  		BNE L268
0000097D                         L267:	; bb190
                                 ;     513 		return (i);																	
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",513
0000097D D5000701                		MOV.W 0EH[R0], 02H[R0]
00000981 2Err                 B  		BRA L271
00000983                         L268:	; bb193
00000983 9989                    		MOV.W 0EH[R0], R1
00000985 6211                    		ADD #01H, R1
00000987 9189                    		MOV.W R1, 0EH[R0]
00000989                         L269:	; bb196
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",503
00000989 B989                    		MOVU.W 0EH[R0], R1
0000098B 06C50108                		CMP 10H[R0].UW, R1
0000098F 28rr                  * 		BLT L250
         38rrrr                  
00000994                         L270:	; bb204
                                 ;     514 	}
                                 ;     515 	return (NO_MATCH);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",515
00000994 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
00000999                         L271:	; bb206
00000999 D5000109                		MOV.W 02H[R0], 12H[R0]
                                 ;     516 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",516
0000099D BA09                    		MOVU.W 12H[R0], R1
0000099F 6707                    		RTSD #1CH
000009A1                         _nv_get_type:
                                 		.STACK	_nv_get_type=12
                                 ;     517 
                                 ;     518 /*
                                 ;     519  * nv_get_type() - returns command type as a NV_TYPE enum
                                 ;     520  */
                                 ;     521 
                                 ;     522 uint8_t nv_get_type(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",522
000009A1 6080                    		SUB #08H, R0
000009A3 A009                    		MOV.L R1, 04H[R0]
                                 ;     523 {
                                 ;     524 	if (nv->token[0] == NUL) return (NV_TYPE_NULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",524
000009A5 B611                    		MOVU.B 18H[R1], R1
000009A7 6101                    		CMP #00H, R1
000009A9 18                   S  		BNE L274
000009AA                         L273:	; bb2
000009AA 3C0200                  		MOV.B #00H, 02H[R0]
000009AD 38rrrr               W  		BRA L287
000009B0                         L274:	; bb13
                                 ;     525 	if (strcmp("gc", nv->token) == 0) return (NV_TYPE_GCODE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",525
000009B0 A80A                    		MOV.L 04H[R0], R2
000009B2 712218                  		ADD #18H, R2
000009B5 FB36FF                  		MOV.L #0FFFFFFFFH, R3
000009B8 FB12rrrrrrrr            		MOV.L #_L26, R1
000009BE 7F83                    		SCMPU
000009C0 FCDBE2                  		SCGEU.L R14
000009C3 FCDBF5                  		SCLEU.L R15
000009C6 43FE                    		SUB R15, R14
000009C8 610E                    		CMP #00H, R14
000009CA 18                   S  		BNE L276
000009CB                         L275:	; bb14
000009CB 3C0202                  		MOV.B #02H, 02H[R0]
000009CE 38rrrr               W  		BRA L287
000009D1                         L276:	; bb24
                                 ;     526 	if (strcmp("sr", nv->token) == 0) return (NV_TYPE_REPORT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",526
000009D1 A80A                    		MOV.L 04H[R0], R2
000009D3 712218                  		ADD #18H, R2
000009D6 FB36FF                  		MOV.L #0FFFFFFFFH, R3
000009D9 FB12rrrrrrrr            		MOV.L #_L24, R1
000009DF 7F83                    		SCMPU
000009E1 FCDBE2                  		SCGEU.L R14
000009E4 FCDBF5                  		SCLEU.L R15
000009E7 43FE                    		SUB R15, R14
000009E9 610E                    		CMP #00H, R14
000009EB 18                   S  		BNE L278
000009EC                         L277:	; bb25
000009EC 3C0203                  		MOV.B #03H, 02H[R0]
000009EF 38rrrr               W  		BRA L287
000009F2                         L278:	; bb35
                                 ;     527 	if (strcmp("qr", nv->token) == 0) return (NV_TYPE_REPORT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",527
000009F2 A80A                    		MOV.L 04H[R0], R2
000009F4 712218                  		ADD #18H, R2
000009F7 FB36FF                  		MOV.L #0FFFFFFFFH, R3
000009FA FB12rrrrrrrr            		MOV.L #_L27, R1
00000A00 7F83                    		SCMPU
00000A02 FCDBE2                  		SCGEU.L R14
00000A05 FCDBF5                  		SCLEU.L R15
00000A08 43FE                    		SUB R15, R14
00000A0A 610E                    		CMP #00H, R14
00000A0C 18                   S  		BNE L280
00000A0D                         L279:	; bb36
00000A0D 3C0203                  		MOV.B #03H, 02H[R0]
00000A10 2Err                 B  		BRA L287
00000A12                         L280:	; bb46
                                 ;     528 	if (strcmp("msg",nv->token) == 0) return (NV_TYPE_MESSAGE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",528
00000A12 A80A                    		MOV.L 04H[R0], R2
00000A14 712218                  		ADD #18H, R2
00000A17 FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000A1A FB12rrrrrrrr            		MOV.L #_L28, R1
00000A20 7F83                    		SCMPU
00000A22 FCDBE2                  		SCGEU.L R14
00000A25 FCDBF5                  		SCLEU.L R15
00000A28 43FE                    		SUB R15, R14
00000A2A 610E                    		CMP #00H, R14
00000A2C 18                   S  		BNE L282
00000A2D                         L281:	; bb47
00000A2D 3C0204                  		MOV.B #04H, 02H[R0]
00000A30 2Err                 B  		BRA L287
00000A32                         L282:	; bb57
                                 ;     529 	if (strcmp("err",nv->token) == 0) return (NV_TYPE_MESSAGE); 	// errors are reported as messages
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",529
00000A32 A80A                    		MOV.L 04H[R0], R2
00000A34 712218                  		ADD #18H, R2
00000A37 FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000A3A FB12rrrrrrrr            		MOV.L #_L29, R1
00000A40 7F83                    		SCMPU
00000A42 FCDBE2                  		SCGEU.L R14
00000A45 FCDBF5                  		SCLEU.L R15
00000A48 43FE                    		SUB R15, R14
00000A4A 610E                    		CMP #00H, R14
00000A4C 18                   S  		BNE L284
00000A4D                         L283:	; bb58
00000A4D 3C0204                  		MOV.B #04H, 02H[R0]
00000A50 2Err                 B  		BRA L287
00000A52                         L284:	; bb68
                                 ;     530 	if (strcmp("n",  nv->token) == 0) return (NV_TYPE_LINENUM);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",530
00000A52 A80A                    		MOV.L 04H[R0], R2
00000A54 712218                  		ADD #18H, R2
00000A57 FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000A5A FB12rrrrrrrr            		MOV.L #_L30, R1
00000A60 7F83                    		SCMPU
00000A62 FCDBE2                  		SCGEU.L R14
00000A65 FCDBF5                  		SCLEU.L R15
00000A68 43FE                    		SUB R15, R14
00000A6A 610E                    		CMP #00H, R14
00000A6C 18                   S  		BNE L286
00000A6D                         L285:	; bb69
00000A6D 3C0205                  		MOV.B #05H, 02H[R0]
00000A70 08                   S  		BRA L287
00000A71                         L286:	; bb78
                                 ;     531 	return (NV_TYPE_CONFIG);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",531
00000A71 3C0201                  		MOV.B #01H, 02H[R0]
00000A74                         L287:	; bb80
00000A74 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     532 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",532
00000A78 B089                    		MOVU.B 03H[R0], R1
00000A7A 6702                    		RTSD #08H
00000A7C                         _nv_get_nvObj:
                                 		.STACK	_nv_get_nvObj=16
                                 ;     533 
                                 ;     534 /******************************************************************************
                                 ;     535  * nvObj low-level object and list operations
                                 ;     536  * nv_get_nvObj()		- setup a nv object by providing the index
                                 ;     537  * nv_reset_nv()		- quick clear for a new nv object
                                 ;     538  * nv_reset_nv_list()	- clear entire header, body and footer for a new use
                                 ;     539  * nv_copy_string()		- used to write a string to shared string storage and link it
                                 ;     540  * nv_add_object()		- write contents of parameter to  first free object in the body
                                 ;     541  * nv_add_integer()		- add an integer value to end of nv body (Note 1)
                                 ;     542  * nv_add_float()		- add a floating point value to end of nv body
                                 ;     543  * nv_add_string()		- add a string object to end of nv body
                                 ;     544  * nv_add_conditional_message() - add a message to nv body if messages are enabled
                                 ;     545  *
                                 ;     546  *	Note: Functions that return a nv pointer point to the object that was modified or
                                 ;     547  *	a NULL pointer if there was an error.
                                 ;     548  *
                                 ;     549  *	Note: Adding a really large integer (like a checksum value) may lose precision due
                                 ;     550  *	to the cast to a float. Sometimes it's better to load an integer as a string if
                                 ;     551  *	all you want to do is display it.
                                 ;     552  *
                                 ;     553  *	Note: A trick is to cast all string constants for nv_copy_string(), nv_add_object(),
                                 ;     554  *	nv_add_string() and nv_add_conditional_message() to (const char_t *). Examples:
                                 ;     555  *
                                 ;     556  *		nv_add_string((const char_t *)"msg", string);
                                 ;     557  *
                                 ;     558  *	On the AVR this will save a little static RAM. The "msg" string will occupy flash
                                 ;     559  *	as an initializer and be instantiated in stack RAM when the function executes.
                                 ;     560  *	On the ARM (however) this will put the string into flash and skip RAM allocation.
                                 ;     561  */
                                 ;     562 
                                 ;     563 void nv_get_nvObj(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",563
00000A7C 7EA6                    		PUSH.L R6
00000A7E 6080                    		SUB #08H, R0
00000A80 A009                    		MOV.L R1, 04H[R0]
                                 ;     564 {
                                 ;     565 	if (nv->index >= nv_index_max()) { return; }	// sanity
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",565
00000A82 B916                    		MOVU.W 08H[R1], R6
00000A84 05rrrrrr             A  		BSR _nv_index_max
00000A88 4761                    		CMP R6, R1
00000A8A 2Arr                  * 		BLE L299
         38rrrr                  
00000A8F                         L289:	; bb13
                                 ;     566 
                                 ;     567 	index_t tmp = nv->index;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",567
00000A8F A809                    		MOV.L 04H[R0], R1
00000A91 D5100401                		MOV.W 08H[R1], 02H[R0]
00000A95                         L290:	; bb13.split
                                 ;     568 	nv_reset_nv(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",568
00000A95 A809                    		MOV.L 04H[R0], R1
00000A97 39rrrr               W  		BSR _nv_reset_nv
00000A9A                         L291:	; bb13.split1
                                 ;     569 	nv->index = tmp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",569
00000A9A 9809                    		MOV.W 02H[R0], R1
00000A9C A80A                    		MOV.L 04H[R0], R2
00000A9E 9121                    		MOV.W R1, 08H[R2]
00000AA0                         L292:	; bb13.split2
                                 ;     570 
                                 ;     571 	strcpy_P(nv->token, cfgArray[nv->index].token); // token field is always terminated
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",571
00000AA0 A809                    		MOV.L 04H[R0], R1
00000AA2 B913                    		MOVU.W 08H[R1], R3
00000AA4 6C53                    		SHLL #05H, R3
00000AA6 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
00000AAC 4B32                    		ADD R3, R2
00000AAE 6242                    		ADD #04H, R2
00000AB0 711118                  		ADD #18H, R1
00000AB3 FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000AB6 7F87                    		SMOVU
00000AB8                         L293:	; bb13.split3
                                 ;     572 	strcpy_P(nv->group, cfgArray[nv->index].group); // group field is always terminated
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",572
00000AB8 A809                    		MOV.L 04H[R0], R1
00000ABA B913                    		MOVU.W 08H[R1], R3
00000ABC 6C53                    		SHLL #05H, R3
00000ABE FB22rrrrrrrr            		MOV.L #_cfgArray, R2
00000AC4 4B32                    		ADD R3, R2
00000AC6 711114                  		ADD #14H, R1
00000AC9 FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000ACC 7F87                    		SMOVU
00000ACE                         L294:	; bb13.split4
                                 ;     573 
                                 ;     574 	// special processing for system groups and stripping tokens for groups
                                 ;     575 	if (nv->group[0] != NUL) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",575
00000ACE A809                    		MOV.L 04H[R0], R1
00000AD0 B511                    		MOVU.B 14H[R1], R1
00000AD2 6101                    		CMP #00H, R1
00000AD4 20rr                    		BEQ L298
00000AD6                         L295:	; bb44
                                 ;     576 		if (GET_TABLE_BYTE(flags) & F_NOSTRIP) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",576
00000AD6 A80C                    		MOV.L 04H[R0], R4
00000AD8 B941                    		MOVU.W 08H[R4], R1
00000ADA 6C51                    		SHLL #05H, R1
00000ADC FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00000AE2 4B1E                    		ADD R1, R14
00000AE4 F5E20A                  		BTST #02H, 0AH[R14].B
00000AE7 10                   S  		BEQ L297
00000AE8                         L296:	; bb45
                                 ;     577 			nv->group[0] = NUL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",577
00000AE8 3CC400                  		MOV.B #00H, 14H[R4]
00000AEB 2Err                 B  		BRA L298
00000AED                         L297:	; bb50
                                 ;     578 		} else {
                                 ;     579 			strcpy(nv->token, &nv->token[strlen(nv->group)]); // strip group from the token
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",579
00000AED A80D                    		MOV.L 04H[R0], R5
00000AEF 715114                  		ADD #14H, R5, R1
00000AF2 FBE6FF                  		MOV.L #0FFFFFFFFH, R14
00000AF5 6602                    		MOV.L #00000000H, R2
00000AF7 EFE3                    		MOV.L R14, R3
00000AF9 7F80                    		SUNTIL.B
00000AFB FBF6FE                  		MOV.L #0FFFFFFFEH, R15
00000AFE 433F                    		SUB R3, R15
00000B00 4BF5                    		ADD R15, R5
00000B02 EF52                    		MOV.L R5, R2
00000B04 712218                  		ADD #18H, R2
00000B07 EF41                    		MOV.L R4, R1
00000B09 711118                  		ADD #18H, R1
00000B0C EFE3                    		MOV.L R14, R3
00000B0E 7F87                    		SMOVU
00000B10                         L298:	; bb85
                                 ;     580 		}
                                 ;     581 	}
                                 ;     582 	((fptrCmd)GET_TABLE_WORD(get))(nv);		// populate the value
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",582
00000B10 A809                    		MOV.L 04H[R0], R1
00000B12 B912                    		MOVU.W 08H[R1], R2
00000B14 6C52                    		SHLL #05H, R2
00000B16 FB32rrrrrrrr            		MOV.L #_cfgArray, R3
00000B1C 4B23                    		ADD R2, R3
00000B1E A932                    		MOV.L 10H[R3], R2
00000B20 7F12                    		JSR R2
00000B22 3F6603                  		RTSD #0CH, R6-R6
00000B25                         L299:	; return
                                 ;     583 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",583
00000B25 3F6603                  		RTSD #0CH, R6-R6
00000B28                         _nv_reset_nv:
                                 		.STACK	_nv_reset_nv=12
                                 ;     584 
                                 ;     585 nvObj_t *nv_reset_nv(nvObj_t *nv)			// clear a single nvObj structure
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",585
00000B28 6080                    		SUB #08H, R0
00000B2A A009                    		MOV.L R1, 04H[R0]
                                 ;     586 {
                                 ;     587 	nv->valuetype = TYPE_EMPTY;				// selective clear is much faster than calling memset
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",587
00000B2C 3C1BFF                  		MOV.B #0FFH, 0BH[R1]
00000B2F                         L301:	; entry.split
                                 ;     588 	nv->index = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",588
00000B2F A809                    		MOV.L 04H[R0], R1
00000B31 3D1400                  		MOV.W #0000H, 08H[R1]
00000B34                         L302:	; entry.split1
                                 ;     589 	nv->value = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",589
00000B34 A809                    		MOV.L 04H[R0], R1
00000B36 3E1400                  		MOV.L #00000000H, 10H[R1]
00000B39                         L303:	; entry.split2
                                 ;     590 	nv->precision = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",590
00000B39 A809                    		MOV.L 04H[R0], R1
00000B3B 3C1C00                  		MOV.B #00H, 0CH[R1]
00000B3E                         L304:	; entry.split3
                                 ;     591 	nv->token[0] = NUL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",591
00000B3E A809                    		MOV.L 04H[R0], R1
00000B40 3C9800                  		MOV.B #00H, 18H[R1]
00000B43                         L305:	; entry.split4
                                 ;     592 	nv->group[0] = NUL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",592
00000B43 A809                    		MOV.L 04H[R0], R1
00000B45 3C9400                  		MOV.B #00H, 14H[R1]
00000B48                         L306:	; entry.split5
                                 ;     593 	nv->stringp = NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",593
00000B48 A809                    		MOV.L 04H[R0], R1
00000B4A 3E1800                  		MOV.L #00000000H, 20H[R1]
00000B4D                         L307:	; entry.split6
                                 ;     594 
                                 ;     595 	if (nv->pv == NULL) { 					// set depth correctly
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",595
00000B4D A809                    		MOV.L 04H[R0], R1
00000B4F EC1E                    		MOV.L [R1], R14
00000B51 610E                    		CMP #00H, R14
00000B53 18                   S  		BNE L309
00000B54                         L308:	; bb20
                                 ;     596 		nv->depth = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",596
00000B54 3C1A00                  		MOV.B #00H, 0AH[R1]
00000B57 2Err                 B  		BRA L312
00000B59                         L309:	; bb24
                                 ;     597 	} else {
                                 ;     598 		if (nv->pv->valuetype == TYPE_PARENT) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",598
00000B59 EC11                    		MOV.L [R1], R1
00000B5B 8A99                    		MOV.B 0BH[R1], R1
00000B5D 6171                    		CMP #07H, R1
00000B5F A809                    		MOV.L 04H[R0], R1
00000B61 EC12                    		MOV.L [R1], R2
00000B63 B2A2                    		MOVU.B 0AH[R2], R2
00000B65 18                   S  		BNE L311
00000B66                         L310:	; bb25
                                 ;     599 			nv->depth = nv->pv->depth + 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",599
00000B66 CF22                    		MOV.B R2, R2
00000B68 6212                    		ADD #01H, R2
00000B6A 8292                    		MOV.B R2, 0AH[R1]
00000B6C 08                   S  		BRA L312
00000B6D                         L311:	; bb36
                                 ;     600 		} else {
                                 ;     601 			nv->depth = nv->pv->depth;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",601
00000B6D 8292                    		MOV.B R2, 0AH[R1]
00000B6F                         L312:	; bb59
                                 ;     602 		}
                                 ;     603 	}
                                 ;     604 	return (nv);							// return pointer to nv as a convenience to callers
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",604
00000B6F A809                    		MOV.L 04H[R0], R1
00000B71 E301                    		MOV.L R1, [R0]
00000B73                         L313:	; bb59.split
                                 ;     605 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",605
00000B73 6702                    		RTSD #08H
00000B75                         _nv_reset_nv_list:
                                 		.STACK	_nv_reset_nv_list=16
                                 ;     606 
                                 ;     607 nvObj_t *nv_reset_nv_list()					// clear the header and response body
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",607
00000B75 60C0                    		SUB #0CH, R0
                                 ;     608 {
                                 ;     609 	nvStr.wp = 0;							// reset the shared string
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",609
00000B77 FB12rrrrrrrr            		MOV.L #_nvStr, R1
00000B7D 3D1100                  		MOV.W #0000H, 02H[R1]
00000B80                         L315:	; entry.split
                                 ;     610 	nvObj_t *nv = nvl.list;					// set up linked list and initialize elements
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",610
00000B80 FB12rrrrrrrr            		MOV.L #_nvl, R1
00000B86 6241                    		ADD #04H, R1
00000B88 E301                    		MOV.L R1, [R0]
00000B8A                         L316:	; entry.split1
                                 ;     611 	for (uint8_t i=0; i<NV_LIST_LEN; i++, nv++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",611
00000B8A 3C0700                  		MOV.B #00H, 07H[R0]
00000B8D 2Err                 B  		BRA L324
00000B8F                         L317:	; bb
                                 ;     612 		nv->pv = (nv-1);					// the ends are bogus & corrected later
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",612
00000B8F EC02                    		MOV.L [R0], R2
00000B91 7122DC                  		ADD #0FFFFFFDCH, R2
00000B94 E312                    		MOV.L R2, [R1]
00000B96                         L318:	; bb.split
                                 ;     613 		nv->nx = (nv+1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",613
00000B96 EC01                    		MOV.L [R0], R1
00000B98 711224                  		ADD #24H, R1, R2
00000B9B A01A                    		MOV.L R2, 04H[R1]
00000B9D                         L319:	; bb.split2
                                 ;     614 		nv->index = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",614
00000B9D EC01                    		MOV.L [R0], R1
00000B9F 3D1400                  		MOV.W #0000H, 08H[R1]
00000BA2                         L320:	; bb.split3
                                 ;     615 		nv->depth = 1;						// header and footer are corrected later
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",615
00000BA2 EC01                    		MOV.L [R0], R1
00000BA4 3C1A01                  		MOV.B #01H, 0AH[R1]
00000BA7                         L321:	; bb.split4
                                 ;     616 		nv->precision = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",616
00000BA7 EC01                    		MOV.L [R0], R1
00000BA9 3C1C00                  		MOV.B #00H, 0CH[R1]
00000BAC                         L322:	; bb.split5
                                 ;     617 		nv->valuetype = TYPE_EMPTY;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",617
00000BAC EC01                    		MOV.L [R0], R1
00000BAE 3C1BFF                  		MOV.B #0FFH, 0BH[R1]
00000BB1                         L323:	; bb.split6
                                 ;     618 		nv->token[0] = NUL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",618
00000BB1 EC01                    		MOV.L [R0], R1
00000BB3 3C9800                  		MOV.B #00H, 18H[R1]
00000BB6 B189                    		MOVU.B 07H[R0], R1
00000BB8 6211                    		ADD #01H, R1
00000BBA 8189                    		MOV.B R1, 07H[R0]
00000BBC EC01                    		MOV.L [R0], R1
00000BBE 711124                  		ADD #24H, R1
00000BC1 E301                    		MOV.L R1, [R0]
00000BC3                         L324:	; bb29
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",611
00000BC3 B189                    		MOVU.B 07H[R0], R1
00000BC5 755120                  		CMP #20H, R1
00000BC8 EC01                    		MOV.L [R0], R1
00000BCA 29rr                    		BLT L317
00000BCC                         L325:	; bb34
                                 ;     619 	}
                                 ;     620 	(--nv)->nx = NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",620
00000BCC 7112DC                  		ADD #0FFFFFFDCH, R1, R2
00000BCF E302                    		MOV.L R2, [R0]
00000BD1 7111E0                  		ADD #0FFFFFFE0H, R1
00000BD4 F81600                  		MOV.L #00000000H, [R1]
00000BD7                         L326:	; bb34.split
                                 ;     621 	nv = nvl.list;							// setup response header element ('r')
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",621
00000BD7 FB12rrrrrrrr            		MOV.L #_nvl, R1
00000BDD 6241                    		ADD #04H, R1
00000BDF E301                    		MOV.L R1, [R0]
00000BE1                         L327:	; bb34.split7
                                 ;     622 	nv->pv = NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",622
00000BE1 EC01                    		MOV.L [R0], R1
00000BE3 F81600                  		MOV.L #00000000H, [R1]
00000BE6                         L328:	; bb34.split8
                                 ;     623 	nv->depth = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",623
00000BE6 EC01                    		MOV.L [R0], R1
00000BE8 3C1A00                  		MOV.B #00H, 0AH[R1]
00000BEB                         L329:	; bb34.split9
                                 ;     624 	nv->valuetype = TYPE_PARENT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",624
00000BEB EC01                    		MOV.L [R0], R1
00000BED 3C1B07                  		MOV.B #07H, 0BH[R1]
00000BF0                         L330:	; bb34.split10
                                 ;     625 	strcpy(nv->token, "r");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",625
00000BF0 EC01                    		MOV.L [R0], R1
00000BF2 FBE2rrrrrrrr            		MOV.L #_L31, R14
00000BF8 D4E10C                  		MOV.W [R14], 18H[R1]
00000BFB                         L331:	; bb34.split11
                                 ;     626 	return (nv_body);						// this is a convenience for calling routines
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",626
00000BFB FB12rrrrrrrr            		MOV.L #_nvl, R1
00000C01 711128                  		ADD #28H, R1
00000C04 A081                    		MOV.L R1, 08H[R0]
00000C06                         L332:	; bb34.split12
                                 ;     627 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",627
00000C06 6703                    		RTSD #0CH
00000C08                         _nv_copy_string:
                                 		.STACK	_nv_copy_string=24
                                 ;     628 
                                 ;     629 stat_t nv_copy_string(nvObj_t *nv, const char_t *src)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",629
00000C08 7100EC                  		ADD #0FFFFFFECH, R0
00000C0B A101                    		MOV.L R1, 10H[R0]
00000C0D A08A                    		MOV.L R2, 0CH[R0]
00000C0F FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000C12 660E                    		MOV.L #00000000H, R14
                                 ;     630 {
                                 ;     631 	if ((nvStr.wp + strlen(src)) > NV_SHARED_STRING_LEN)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",631
00000C14 EF21                    		MOV.L R2, R1
00000C16 EFE2                    		MOV.L R14, R2
00000C18 7F80                    		SUNTIL.B
00000C1A FBE6FE                  		MOV.L #0FFFFFFFEH, R14
00000C1D 433E                    		SUB R3, R14
00000C1F FBF2rrrrrrrr            		MOV.L #_nvStr, R15
00000C25 06C9FE01                		ADD 02H[R15].UW, R14
00000C29 760E0102                		CMP #0201H, R14
00000C2D 23rr                    		BLTU L335
00000C2F                         L334:	; bb4
                                 ;     632         return (STAT_BUFFER_FULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",632
00000C2F 3C030D                  		MOV.B #0DH, 03H[R0]
00000C32 2Err                 B  		BRA L340
00000C34                         L335:	; bb13
                                 ;     633 
                                 ;     634 	char_t *dst = &nvStr.string[nvStr.wp];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",634
00000C34 FB12rrrrrrrr            		MOV.L #_nvStr, R1
00000C3A 06C91101                		ADD 02H[R1].UW, R1
00000C3E 6241                    		ADD #04H, R1
00000C40 A009                    		MOV.L R1, 04H[R0]
00000C42                         L336:	; bb13.split
00000C42 FB36FF                  		MOV.L #0FFFFFFFFH, R3
                                 ;     635 	strcpy(dst, src);						// copy string to current head position
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",635
00000C45 A88A                    		MOV.L 0CH[R0], R2
00000C47 A809                    		MOV.L 04H[R0], R1
00000C49 7F87                    		SMOVU
00000C4B                         L337:	; bb13.split1
00000C4B FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000C4E 6602                    		MOV.L #00000000H, R2
                                 ;     636 											// string has already been tested for overflow, above
                                 ;     637 	nvStr.wp += strlen(src)+1;				// advance head for next string
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",637
00000C50 A889                    		MOV.L 0CH[R0], R1
00000C52 7F80                    		SUNTIL.B
00000C54 FB16FE                  		MOV.L #0FFFFFFFEH, R1
00000C57 4331                    		SUB R3, R1
00000C59 FB22rrrrrrrr            		MOV.L #_nvStr, R2
00000C5F 06C92101                		ADD 02H[R2].UW, R1
00000C63 6211                    		ADD #01H, R1
00000C65 9029                    		MOV.W R1, 02H[R2]
00000C67                         L338:	; bb13.split2
                                 ;     638 	nv->stringp = (char_t (*)[])dst;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",638
00000C67 A809                    		MOV.L 04H[R0], R1
00000C69 A902                    		MOV.L 10H[R0], R2
00000C6B A221                    		MOV.L R1, 20H[R2]
00000C6D                         L339:	; bb13.split3
                                 ;     639 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",639
00000C6D 3C0300                  		MOV.B #00H, 03H[R0]
00000C70                         L340:	; bb31
00000C70 C500030B                		MOV.B 03H[R0], 0BH[R0]
                                 ;     640 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",640
00000C74 B289                    		MOVU.B 0BH[R0], R1
00000C76 6705                    		RTSD #14H
00000C78                         _nv_add_object:
                                 		.STACK	_nv_add_object=28
                                 ;     641 
                                 ;     642 /* UNUSED
                                 ;     643 stat_t nv_copy_string_P(nvObj_t *nv, const char_t *src_P)
                                 ;     644 {
                                 ;     645 	char_t buf[NV_SHARED_STRING_LEN];
                                 ;     646 	strncpy_P(buf, src_P, NV_SHARED_STRING_LEN);
                                 ;     647 	return (nv_copy_string(nv, buf));
                                 ;     648 }
                                 ;     649 */
                                 ;     650 
                                 ;     651 nvObj_t *nv_add_object(const char_t *token)  // add an object to the body using a token
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",651
00000C78 7EA6                    		PUSH.L R6
00000C7A 7100EC                  		ADD #0FFFFFFECH, R0
00000C7D A101                    		MOV.L R1, 10H[R0]
                                 ;     652 {
                                 ;     653 	nvObj_t *nv = nv_body;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",653
00000C7F FB12rrrrrrrr            		MOV.L #_nvl, R1
00000C85 711128                  		ADD #28H, R1
00000C88 A009                    		MOV.L R1, 04H[R0]
00000C8A                         L342:	; entry.split
                                 ;     654 	for (uint8_t i=0; i<NV_BODY_LEN; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",654
00000C8A 3C0B00                  		MOV.B #00H, 0BH[R0]
00000C8D 2Err                 B  		BRA L351
00000C8F                         L343:	; bb4
                                 ;     655 		if (nv->valuetype != TYPE_EMPTY) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",655
00000C8F A80E                    		MOV.L 04H[R0], R6
00000C91 8AE9                    		MOV.B 0BH[R6], R1
00000C93 7501FF                  		CMP #0FFFFFFFFH, R1
00000C96 20rr                    		BEQ L346
00000C98                         L344:	; bb6
                                 ;     656 			if ((nv = nv->nx) == NULL) return(NULL); // not supposed to find a NULL; here for safety
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",656
00000C98 A86E                    		MOV.L 04H[R6], R6
00000C9A A00E                    		MOV.L R6, 04H[R0]
00000C9C 6106                    		CMP #00H, R6
00000C9E 21rr                    		BNE L350
00000CA0                         L345:	; bb7
00000CA0 F80600                  		MOV.L #00000000H, [R0]
00000CA3 2Err                 B  		BRA L353
00000CA5                         L346:	; bb25
                                 ;     657 			continue;
                                 ;     658 		}
                                 ;     659 		// load the index from the token or die trying
                                 ;     660 		if ((nv->index = nv_get_index((const char_t *)"",token)) == NO_MATCH) { return (NULL);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",660
00000CA5 A902                    		MOV.L 10H[R0], R2
00000CA7 FB12rrrrrrrr            		MOV.L #_L18, R1
00000CAD 39rrrr               W  		BSR _nv_get_index
00000CB0 9161                    		MOV.W R1, 08H[R6]
00000CB2 7701FFFF00              		CMP #0FFFFH, R1
00000CB7 18                   S  		BNE L348
00000CB8                         L347:	; bb26
00000CB8 F80600                  		MOV.L #00000000H, [R0]
00000CBB 2Err                 B  		BRA L353
00000CBD                         L348:	; bb37
                                 ;     661 		nv_get_nvObj(nv);				// populate the object from the index
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",661
00000CBD A809                    		MOV.L 04H[R0], R1
00000CBF 39rrrr               W  		BSR _nv_get_nvObj
00000CC2                         L349:	; bb37.split
                                 ;     662 		return (nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",662
00000CC2 E10001                  		MOV.L 04H[R0], [R0]
00000CC5 2Err                 B  		BRA L353
00000CC7                         L350:	; bb41
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",657
00000CC7 B289                    		MOVU.B 0BH[R0], R1
00000CC9 6211                    		ADD #01H, R1
00000CCB 8289                    		MOV.B R1, 0BH[R0]
00000CCD                         L351:	; bb44
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",654
00000CCD B289                    		MOVU.B 0BH[R0], R1
00000CCF 75511E                  		CMP #1EH, R1
00000CD2 29rr                    		BLT L343
00000CD4                         L352:	; bb50
                                 ;     663 	}
                                 ;     664 	return (NULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",664
00000CD4 F80600                  		MOV.L #00000000H, [R0]
00000CD7                         L353:	; bb52
00000CD7 EC01                    		MOV.L [R0], R1
00000CD9 A089                    		MOV.L R1, 0CH[R0]
                                 ;     665 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",665
00000CDB 3F6606                  		RTSD #18H, R6-R6
00000CDE                         _nv_add_integer:
                                 		.STACK	_nv_add_integer=28
                                 ;     666 
                                 ;     667 nvObj_t *nv_add_integer(const char_t *token, const uint32_t value)// add an integer object to the body
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",667
00000CDE 7100E8                  		ADD #0FFFFFFE8H, R0
00000CE1 A109                    		MOV.L R1, 14H[R0]
00000CE3 A102                    		MOV.L R2, 10H[R0]
                                 ;     668 {
                                 ;     669 	nvObj_t *nv = nv_body;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",669
00000CE5 FB12rrrrrrrr            		MOV.L #_nvl, R1
00000CEB 711128                  		ADD #28H, R1
00000CEE A009                    		MOV.L R1, 04H[R0]
00000CF0                         L355:	; entry.split
                                 ;     670 	for (uint8_t i=0; i<NV_BODY_LEN; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",670
00000CF0 3C0B00                  		MOV.B #00H, 0BH[R0]
00000CF3 2Err                 B  		BRA L367
00000CF5                         L356:	; bb5
                                 ;     671 		if (nv->valuetype != TYPE_EMPTY) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",671
00000CF5 A80C                    		MOV.L 04H[R0], R4
00000CF7 8AC9                    		MOV.B 0BH[R4], R1
00000CF9 7501FF                  		CMP #0FFFFFFFFH, R1
00000CFC 20rr                    		BEQ L359
00000CFE                         L357:	; bb7
                                 ;     672 			if ((nv = nv->nx) == NULL) return(NULL); // not supposed to find a NULL; here for safety
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",672
00000CFE A84C                    		MOV.L 04H[R4], R4
00000D00 A00C                    		MOV.L R4, 04H[R0]
00000D02 6104                    		CMP #00H, R4
00000D04 21rr                    		BNE L366
00000D06                         L358:	; bb8
00000D06 F80600                  		MOV.L #00000000H, [R0]
00000D09 2Err                 B  		BRA L369
00000D0B                         L359:	; bb25
                                 ;     673 			continue;
                                 ;     674 		}
                                 ;     675 		strncpy(nv->token, token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",675
00000D0B 714118                  		ADD #18H, R4, R1
00000D0E 6653                    		MOV.L #00000005H, R3
00000D10 A90A                    		MOV.L 14H[R0], R2
00000D12 7F87                    		SMOVU
00000D14 71441D                  		ADD #1DH, R4
00000D17 EF41                    		MOV.L R4, R1
00000D19 4331                    		SUB R3, R1
00000D1B 6602                    		MOV.L #00000000H, R2
00000D1D 7F88                    		SSTR.B
00000D1F                         L360:	; bb25.split
                                 ;     676 		nv->value = (float) value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",676
00000D1F A901                    		MOV.L 10H[R0], R1
00000D21 7DF1                    		BTST #1FH, R1
00000D23 20rr                    		BEQ L362
00000D25                         L361:	; bb25.split
00000D25 FD811E                  		SHLR #01H, R1, R14
00000D28 6411                    		AND #01H, R1
00000D2A 57E1                    		OR R14, R1
00000D2C FC4711                  		ITOF R1, R1
00000D2F FC8B11                  		FADD R1, R1
00000D32 08                   S  		BRA L363
00000D33                         L362:	; bb25.split
00000D33 FC4711                  		ITOF R1, R1
00000D36                         L363:	; bb25.split
00000D36 A80A                    		MOV.L 04H[R0], R2
00000D38 A121                    		MOV.L R1, 10H[R2]
00000D3A                         L364:	; bb25.split1
                                 ;     677 		nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",677
00000D3A A809                    		MOV.L 04H[R0], R1
00000D3C 3C1B02                  		MOV.B #02H, 0BH[R1]
00000D3F                         L365:	; bb25.split2
                                 ;     678 		return (nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",678
00000D3F E10001                  		MOV.L 04H[R0], [R0]
00000D42 2Err                 B  		BRA L369
00000D44                         L366:	; bb38
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",673
00000D44 B289                    		MOVU.B 0BH[R0], R1
00000D46 6211                    		ADD #01H, R1
00000D48 8289                    		MOV.B R1, 0BH[R0]
00000D4A                         L367:	; bb41
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",670
00000D4A B289                    		MOVU.B 0BH[R0], R1
00000D4C 75511E                  		CMP #1EH, R1
00000D4F 29rr                    		BLT L356
00000D51                         L368:	; bb47
                                 ;     679 	}
                                 ;     680 	return (NULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",680
00000D51 F80600                  		MOV.L #00000000H, [R0]
00000D54                         L369:	; bb49
00000D54 EC01                    		MOV.L [R0], R1
00000D56 A089                    		MOV.L R1, 0CH[R0]
                                 ;     681 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",681
00000D58 6706                    		RTSD #18H
00000D5A                         _nv_add_data:
                                 		.STACK	_nv_add_data=32
                                 ;     682 
                                 ;     683 nvObj_t *nv_add_data(const char_t *token, const uint32_t value)// add an integer object to the body
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",683
00000D5A 7100E4                  		ADD #0FFFFFFE4H, R0
00000D5D A181                    		MOV.L R1, 18H[R0]
00000D5F A10A                    		MOV.L R2, 14H[R0]
                                 ;     684 {
                                 ;     685 	nvObj_t *nv = nv_body;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",685
00000D61 FB12rrrrrrrr            		MOV.L #_nvl, R1
00000D67 711128                  		ADD #28H, R1
00000D6A A009                    		MOV.L R1, 04H[R0]
00000D6C                         L371:	; entry.split
                                 ;     686 	for (uint8_t i=0; i<NV_BODY_LEN; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",686
00000D6C 3C0B00                  		MOV.B #00H, 0BH[R0]
00000D6F 2Err                 B  		BRA L381
00000D71                         L372:	; bb6
                                 ;     687 		if (nv->valuetype != TYPE_EMPTY) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",687
00000D71 A809                    		MOV.L 04H[R0], R1
00000D73 8A9A                    		MOV.B 0BH[R1], R2
00000D75 7502FF                  		CMP #0FFFFFFFFH, R2
00000D78 20rr                    		BEQ L375
00000D7A                         L373:	; bb8
                                 ;     688 			if ((nv = nv->nx) == NULL) return(NULL); // not supposed to find a NULL; here for safety
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",688
00000D7A A819                    		MOV.L 04H[R1], R1
00000D7C A009                    		MOV.L R1, 04H[R0]
00000D7E 6101                    		CMP #00H, R1
00000D80 21rr                    		BNE L380
00000D82                         L374:	; bb9
00000D82 F80600                  		MOV.L #00000000H, [R0]
00000D85 2Err                 B  		BRA L383
00000D87                         L375:	; bb26
                                 ;     689 			continue;
                                 ;     690 		}
                                 ;     691 		strcpy(nv->token, token);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",691
00000D87 711118                  		ADD #18H, R1
00000D8A FB36FF                  		MOV.L #0FFFFFFFFH, R3
00000D8D A982                    		MOV.L 18H[R0], R2
00000D8F 7F87                    		SMOVU
00000D91                         L376:	; bb26.split
00000D91 710114                  		ADD #14H, R0, R1
                                 ;     692 		float *v = (float*)&value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",692
00000D94 A089                    		MOV.L R1, 0CH[R0]
00000D96                         L377:	; bb26.split1
                                 ;     693 		nv->value = *v;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",693
00000D96 A889                    		MOV.L 0CH[R0], R1
00000D98 A80A                    		MOV.L 04H[R0], R2
00000D9A E41204                  		MOV.L [R1], 10H[R2]
00000D9D                         L378:	; bb26.split2
                                 ;     694 		nv->valuetype = TYPE_DATA;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",694
00000D9D A809                    		MOV.L 04H[R0], R1
00000D9F 3C1B03                  		MOV.B #03H, 0BH[R1]
00000DA2                         L379:	; bb26.split3
                                 ;     695 		return (nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",695
00000DA2 E10001                  		MOV.L 04H[R0], [R0]
00000DA5 2Err                 B  		BRA L383
00000DA7                         L380:	; bb40
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",689
00000DA7 B289                    		MOVU.B 0BH[R0], R1
00000DA9 6211                    		ADD #01H, R1
00000DAB 8289                    		MOV.B R1, 0BH[R0]
00000DAD                         L381:	; bb43
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",686
00000DAD B289                    		MOVU.B 0BH[R0], R1
00000DAF 75511E                  		CMP #1EH, R1
00000DB2 29rr                    		BLT L372
00000DB4                         L382:	; bb49
                                 ;     696 	}
                                 ;     697 	return (NULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",697
00000DB4 F80600                  		MOV.L #00000000H, [R0]
00000DB7                         L383:	; bb51
00000DB7 EC01                    		MOV.L [R0], R1
00000DB9 A101                    		MOV.L R1, 10H[R0]
                                 ;     698 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",698
00000DBB 6707                    		RTSD #1CH
00000DBD                         _nv_add_float:
                                 		.STACK	_nv_add_float=28
                                 ;     699 
                                 ;     700 nvObj_t *nv_add_float(const char_t *token, const float value)	// add a float object to the body
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",700
00000DBD 7100E8                  		ADD #0FFFFFFE8H, R0
00000DC0 A109                    		MOV.L R1, 14H[R0]
00000DC2 A102                    		MOV.L R2, 10H[R0]
                                 ;     701 {
                                 ;     702 	nvObj_t *nv = nv_body;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",702
00000DC4 FB12rrrrrrrr            		MOV.L #_nvl, R1
00000DCA 711128                  		ADD #28H, R1
00000DCD A009                    		MOV.L R1, 04H[R0]
00000DCF                         L385:	; entry.split
                                 ;     703 	for (uint8_t i=0; i<NV_BODY_LEN; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",703
00000DCF 3C0B00                  		MOV.B #00H, 0BH[R0]
00000DD2 2Err                 B  		BRA L394
00000DD4                         L386:	; bb5
                                 ;     704 		if (nv->valuetype != TYPE_EMPTY) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",704
00000DD4 A80C                    		MOV.L 04H[R0], R4
00000DD6 8AC9                    		MOV.B 0BH[R4], R1
00000DD8 7501FF                  		CMP #0FFFFFFFFH, R1
00000DDB 20rr                    		BEQ L389
00000DDD                         L387:	; bb7
                                 ;     705 			if ((nv = nv->nx) == NULL) return(NULL);		// not supposed to find a NULL; here for safety
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",705
00000DDD A84C                    		MOV.L 04H[R4], R4
00000DDF A00C                    		MOV.L R4, 04H[R0]
00000DE1 6104                    		CMP #00H, R4
00000DE3 21rr                    		BNE L393
00000DE5                         L388:	; bb8
00000DE5 F80600                  		MOV.L #00000000H, [R0]
00000DE8 2Err                 B  		BRA L396
00000DEA                         L389:	; bb25
                                 ;     706 			continue;
                                 ;     707 		}
                                 ;     708 		strncpy(nv->token, token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",708
00000DEA 714118                  		ADD #18H, R4, R1
00000DED 6653                    		MOV.L #00000005H, R3
00000DEF A90A                    		MOV.L 14H[R0], R2
00000DF1 7F87                    		SMOVU
00000DF3 71441D                  		ADD #1DH, R4
00000DF6 EF41                    		MOV.L R4, R1
00000DF8 4331                    		SUB R3, R1
00000DFA 6602                    		MOV.L #00000000H, R2
00000DFC 7F88                    		SSTR.B
00000DFE                         L390:	; bb25.split
                                 ;     709 		nv->value = value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",709
00000DFE A901                    		MOV.L 10H[R0], R1
00000E00 A80A                    		MOV.L 04H[R0], R2
00000E02 A121                    		MOV.L R1, 10H[R2]
00000E04                         L391:	; bb25.split1
                                 ;     710 		nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",710
00000E04 A809                    		MOV.L 04H[R0], R1
00000E06 3C1B04                  		MOV.B #04H, 0BH[R1]
00000E09                         L392:	; bb25.split2
                                 ;     711 		return (nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",711
00000E09 E10001                  		MOV.L 04H[R0], [R0]
00000E0C 2Err                 B  		BRA L396
00000E0E                         L393:	; bb37
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",706
00000E0E B289                    		MOVU.B 0BH[R0], R1
00000E10 6211                    		ADD #01H, R1
00000E12 8289                    		MOV.B R1, 0BH[R0]
00000E14                         L394:	; bb40
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",703
00000E14 B289                    		MOVU.B 0BH[R0], R1
00000E16 75511E                  		CMP #1EH, R1
00000E19 29rr                    		BLT L386
00000E1B                         L395:	; bb46
                                 ;     712 	}
                                 ;     713 	return (NULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",713
00000E1B F80600                  		MOV.L #00000000H, [R0]
00000E1E                         L396:	; bb48
00000E1E EC01                    		MOV.L [R0], R1
00000E20 A089                    		MOV.L R1, 0CH[R0]
                                 ;     714 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",714
00000E22 6706                    		RTSD #18H
00000E24                         _nv_add_string:
                                 		.STACK	_nv_add_string=32
                                 ;     715 
                                 ;     716 // ASSUMES A RAM STRING. If you need to post a FLASH string use pstr2str to convert it to a RAM string
                                 ;     717 nvObj_t *nv_add_string(const char_t *token, const char_t *string) // add a string object to the body
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",717
00000E24 7EA6                    		PUSH.L R6
00000E26 7100E8                  		ADD #0FFFFFFE8H, R0
00000E29 A109                    		MOV.L R1, 14H[R0]
00000E2B A102                    		MOV.L R2, 10H[R0]
                                 ;     718 {
                                 ;     719 	nvObj_t *nv = nv_body;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",719
00000E2D FB12rrrrrrrr            		MOV.L #_nvl, R1
00000E33 711128                  		ADD #28H, R1
00000E36 A009                    		MOV.L R1, 04H[R0]
00000E38                         L398:	; entry.split
                                 ;     720 	for (uint8_t i=0; i<NV_BODY_LEN; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",720
00000E38 3C0B00                  		MOV.B #00H, 0BH[R0]
00000E3B 2Err                 B  		BRA L409
00000E3D                         L399:	; bb5
                                 ;     721 		if (nv->valuetype != TYPE_EMPTY) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",721
00000E3D A80C                    		MOV.L 04H[R0], R4
00000E3F 8AC9                    		MOV.B 0BH[R4], R1
00000E41 7501FF                  		CMP #0FFFFFFFFH, R1
00000E44 20rr                    		BEQ L402
00000E46                         L400:	; bb7
                                 ;     722 			if ((nv = nv->nx) == NULL) return(NULL);		// not supposed to find a NULL; here for safety
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",722
00000E46 A84C                    		MOV.L 04H[R4], R4
00000E48 A00C                    		MOV.L R4, 04H[R0]
00000E4A 6104                    		CMP #00H, R4
00000E4C 21rr                    		BNE L408
00000E4E                         L401:	; bb8
00000E4E F80600                  		MOV.L #00000000H, [R0]
00000E51 2Err                 B  		BRA L411
00000E53                         L402:	; bb25
                                 ;     723 			continue;
                                 ;     724 		}
                                 ;     725 		strncpy(nv->token, token, TOKEN_LEN);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",725
00000E53 714118                  		ADD #18H, R4, R1
00000E56 6653                    		MOV.L #00000005H, R3
00000E58 A90A                    		MOV.L 14H[R0], R2
00000E5A 7F87                    		SMOVU
00000E5C 71441D                  		ADD #1DH, R4
00000E5F EF41                    		MOV.L R4, R1
00000E61 4331                    		SUB R3, R1
00000E63 6602                    		MOV.L #00000000H, R2
00000E65 7F88                    		SSTR.B
00000E67                         L403:	; bb25.split
                                 ;     726 		if (nv_copy_string(nv, string) != STAT_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",726
00000E67 A902                    		MOV.L 10H[R0], R2
00000E69 A809                    		MOV.L 04H[R0], R1
00000E6B 39rrrr               W  		BSR _nv_copy_string
00000E6E 6101                    		CMP #00H, R1
00000E70 10                   S  		BEQ L405
00000E71                         L404:	; bb31
                                 ;     727             return (NULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",727
00000E71 F80600                  		MOV.L #00000000H, [R0]
00000E74 2Err                 B  		BRA L411
00000E76                         L405:	; bb40
                                 ;     728 
                                 ;     729 		nv->index = nv_get_index((const char_t *)"", nv->token);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",729
00000E76 A80E                    		MOV.L 04H[R0], R6
00000E78 716218                  		ADD #18H, R6, R2
00000E7B FB12rrrrrrrr            		MOV.L #_L18, R1
00000E81 39rrrr               W  		BSR _nv_get_index
00000E84 9161                    		MOV.W R1, 08H[R6]
00000E86                         L406:	; bb40.split
                                 ;     730 		nv->valuetype = TYPE_STRING;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",730
00000E86 A809                    		MOV.L 04H[R0], R1
00000E88 3C1B05                  		MOV.B #05H, 0BH[R1]
00000E8B                         L407:	; bb40.split1
                                 ;     731 		return (nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",731
00000E8B E10001                  		MOV.L 04H[R0], [R0]
00000E8E 2Err                 B  		BRA L411
00000E90                         L408:	; bb51
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",723
00000E90 B289                    		MOVU.B 0BH[R0], R1
00000E92 6211                    		ADD #01H, R1
00000E94 8289                    		MOV.B R1, 0BH[R0]
00000E96                         L409:	; bb54
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",720
00000E96 B289                    		MOVU.B 0BH[R0], R1
00000E98 75511E                  		CMP #1EH, R1
00000E9B 29rr                    		BLT L399
00000E9D                         L410:	; bb60
                                 ;     732 	}
                                 ;     733 	return (NULL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",733
00000E9D F80600                  		MOV.L #00000000H, [R0]
00000EA0                         L411:	; bb62
00000EA0 EC01                    		MOV.L [R0], R1
00000EA2 A089                    		MOV.L R1, 0CH[R0]
                                 ;     734 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",734
00000EA4 3F6607                  		RTSD #1CH, R6-R6
00000EA7                         _nv_add_conditional_message:
                                 		.STACK	_nv_add_conditional_message=20
                                 ;     735 
                                 ;     736 /*
                                 ;     737  * cm_conditional_message() - queue a RAM string as a message in the response (conditionally)
                                 ;     738  *
                                 ;     739  *	Note: If you need to post a FLASH string use pstr2str to convert it to a RAM string
                                 ;     740  */
                                 ;     741 
                                 ;     742 nvObj_t *nv_add_conditional_message(const char_t *string)	// conditionally add a message object to the body
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",742
00000EA7 7100F0                  		ADD #0FFFFFFF0H, R0
00000EAA A089                    		MOV.L R1, 0CH[R0]
                                 ;     743 {
                                 ;     744 	if ((cfg.comm_mode == JSON_MODE) && (js.echo_json_messages != true)) { return (NULL);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",744
00000EAC FB12rrrrrrrr            		MOV.L #_cfg, R1
00000EB2 B091                    		MOVU.B 02H[R1], R1
00000EB4 6111                    		CMP #01H, R1
00000EB6 10                   S  		BEQ L414
00000EB7 2Err                 B  		BRA L416
00000EB9                         L413:	; bb2
00000EB9 3E0100                  		MOV.L #00000000H, 04H[R0]
00000EBC 2Err                 B  		BRA L419
00000EBE                         L414:	; bb8
00000EBE FB12rrrrrrrr            		MOV.L #_js, R1
00000EC4 B111                    		MOVU.B 04H[R1], R1
00000EC6 6111                    		CMP #01H, R1
00000EC8 10                   S  		BEQ L416
00000EC9                         L415:	; bb13
00000EC9 F80601                  		MOV.L #00000001H, [R0]
00000ECC 08                   S  		BRA L417
00000ECD                         L416:	; bb14
00000ECD F80600                  		MOV.L #00000000H, [R0]
00000ED0                         L417:	; bb15
00000ED0 EC01                    		MOV.L [R0], R1
00000ED2 6101                    		CMP #00H, R1
00000ED4 21rr                    		BNE L413
00000ED6                         L418:	; bb19
                                 ;     745 	return(nv_add_string((const char_t *)"msg", string));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",745
00000ED6 A88A                    		MOV.L 0CH[R0], R2
00000ED8 FB12rrrrrrrr            		MOV.L #_L28, R1
00000EDE 39rrrr               W  		BSR _nv_add_string
00000EE1 A009                    		MOV.L R1, 04H[R0]
00000EE3                         L419:	; bb23
00000EE3 A809                    		MOV.L 04H[R0], R1
00000EE5 A081                    		MOV.L R1, 08H[R0]
                                 ;     746 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",746
00000EE7 6704                    		RTSD #10H
00000EE9                         _nv_print_list:
                                 		.STACK	_nv_print_list=8
                                 ;     747 
                                 ;     748 /**** nv_print_list() - print nv_array as JSON or text **********************
                                 ;     749  *
                                 ;     750  * 	Generate and print the JSON and text mode output strings. Use this function
                                 ;     751  *	for all text and JSON output that wants to be in a response header.
                                 ;     752  *	Don't just printf stuff.
                                 ;     753  *
                                 ;     754  *	Inputs:
                                 ;     755  *	  json_flags = JSON_OBJECT_FORMAT - print just the body w/o header or footer
                                 ;     756  *	  json_flags = JSON_RESPONSE_FORMAT - print a full "r" object with footer
                                 ;     757  *
                                 ;     758  *	  text_flags = TEXT_INLINE_PAIRS - print text as name/value pairs on a single line
                                 ;     759  *	  text_flags = TEXT_INLINE_VALUES - print text as comma separated values on a single line
                                 ;     760  *	  text_flags = TEXT_MULTILINE_FORMATTED - print text one value per line with formatting string
                                 ;     761  */
                                 ;     762 
                                 ;     763 void nv_print_list(stat_t status, uint8_t text_flags, uint8_t json_flags)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",763
00000EE9 6040                    		SUB #04H, R0
00000EEB 8089                    		MOV.B R1, 03H[R0]
00000EED 8082                    		MOV.B R2, 02H[R0]
00000EEF 800B                    		MOV.B R3, 01H[R0]
                                 ;     764 {
                                 ;     765 	if (cfg.comm_mode == JSON_MODE) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",765
00000EF1 FB12rrrrrrrr            		MOV.L #_cfg, R1
00000EF7 B091                    		MOVU.B 02H[R1], R1
00000EF9 6111                    		CMP #01H, R1
00000EFB B089                    		MOVU.B 03H[R0], R1
00000EFD 21rr                    		BNE L422
00000EFF                         L421:	; bb4
                                 ;     766 		json_print_list(status, json_flags);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",766
00000EFF B00A                    		MOVU.B 01H[R0], R2
00000F01 5B11                    		MOVU.B R1, R1
00000F03 05rrrrrr             A  		BSR _json_print_list
00000F07 6701                    		RTSD #04H
00000F09                         L422:	; bb6
                                 ;     767 	} else {
                                 ;     768 		text_print_list(status, text_flags);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",768
00000F09 B082                    		MOVU.B 02H[R0], R2
00000F0B 5B11                    		MOVU.B R1, R1
00000F0D 05rrrrrr             A  		BSR _text_print_list
00000F11 6701                    		RTSD #04H
00000F13                         _nv_dump_nv:
                                 		.STACK	_nv_dump_nv=44
                                 ;     769 	}
                                 ;     770 }
                                 ;     771 
                                 ;     772 /****************************************************************************
                                 ;     773  ***** Diagnostics **********************************************************
                                 ;     774  ****************************************************************************/
                                 ;     775 
                                 ;     776 void nv_dump_nv(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",776
00000F13 6040                    		SUB #04H, R0
00000F15 E301                    		MOV.L R1, [R0]
                                 ;     777 {
                                 ;     778 	printf ("i:%d, d:%d, t:%d, p:%d, v:%f, g:%s, t:%s, s:%s\n",
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\src\cnc\config.c",778
00000F17 A912                    		MOV.L 10H[R1], R2
00000F19 8B13                    		MOV.B 0CH[R1], R3
00000F1B 8A9C                    		MOV.B 0BH[R1], R4
00000F1D 8A95                    		MOV.B 0AH[R1], R5
00000F1F 5D1F04                  		MOVU.W 08H[R1], R15
00000F22 7100DC                  		ADD #0FFFFFFDCH, R0
00000F25 E5100808                		MOV.L 20H[R1], 20H[R0]
00000F29 711E18                  		ADD #18H, R1, R14
00000F2C E70E07                  		MOV.L R14, 1CH[R0]
00000F2F 711114                  		ADD #14H, R1
00000F32 A181                    		MOV.L R1, 18H[R0]
00000F34 A10A                    		MOV.L R2, 14H[R0]
00000F36 A103                    		MOV.L R3, 10H[R0]
00000F38 A08C                    		MOV.L R4, 0CH[R0]
00000F3A A085                    		MOV.L R5, 08H[R0]
00000F3C E70F01                  		MOV.L R15, 04H[R0]
00000F3F FBE2rrrrrrrr            		MOV.L #_L32, R14
00000F45 E30E                    		MOV.L R14, [R0]
00000F47 05rrrrrr             A  		BSR _printf
00000F4B 710024                  		ADD #24H, R0
00000F4E 6701                    		RTSD #04H
                                 ;     779 			 nv->index,
                                 ;     780 			 nv->depth,
                                 ;     781 			 nv->valuetype,
                                 ;     782 			 nv->precision,
                                 ;     783 			 (double)nv->value,
                                 ;     784 			 nv->group,
                                 ;     785 			 nv->token,
                                 ;     786 			 (char *)nv->stringp);
                                 ;     787 }
                                 ;     788 
                                 ;     789 #ifdef __cplusplus
                                 ;     790 }
                                 ;     791 #endif // __cplusplus
                                 		.SECTION	L,ROMDATA,ALIGN=4
00000000                         _L10:
00000000 78                      		.byte	"x"
00000001 00                      		.byte	00H
00000002                         _L11:
00000002 79                      		.byte	"y"
00000003 00                      		.byte	00H
00000004                         _L12:
00000004 7A                      		.byte	"z"
00000005 00                      		.byte	00H
00000006 0000                    		.word	0000H
00000008                         _L13:
00000008 rrrrrrrr                		.lword	_L10
0000000C rrrrrrrr                		.lword	_L11
00000010 rrrrrrrr                		.lword	_L12
00000014                         _L14:
00000014 766D                    		.byte	"vm"
00000016 00                      		.byte	00H
00000017                         _L15:
00000017 6672                    		.byte	"fr"
00000019 00                      		.byte	00H
0000001A                         _L16:
0000001A 6A6D                    		.byte	"jm"
0000001C 00                      		.byte	00H
0000001D                         _L17:
0000001D 6A64                    		.byte	"jd"
0000001F 00                      		.byte	00H
00000020                         _L18:
00000020 00                      		.byte	0
00000021                         _L19:
00000021 6A61                    		.byte	"ja"
00000023 00                      		.byte	00H
00000024                         _L20:
00000024 32                      		.byte	"2"
00000025 00                      		.byte	00H
00000026                         _L21:
00000026 7472                    		.byte	"tr"
00000028 00                      		.byte	00H
00000029                         _L22:
00000029 33                      		.byte	"3"
0000002A 00                      		.byte	00H
0000002B                         _L23:
0000002B 34                      		.byte	"4"
0000002C 00                      		.byte	00H
0000002D                         _L24:
0000002D 7372                    		.byte	"sr"
0000002F 00                      		.byte	00H
00000030                         _L25:
00000030 737973                  		.byte	"sys"
00000033 00                      		.byte	00H
00000034                         _L26:
00000034 6763                    		.byte	"gc"
00000036 00                      		.byte	00H
00000037                         _L27:
00000037 7172                    		.byte	"qr"
00000039 00                      		.byte	00H
0000003A                         _L28:
0000003A 6D7367                  		.byte	"msg"
0000003D 00                      		.byte	00H
0000003E                         _L29:
0000003E 657272                  		.byte	"err"
00000041 00                      		.byte	00H
00000042                         _L30:
00000042 6E                      		.byte	"n"
00000043 00                      		.byte	00H
00000044                         _L31:
00000044 72                      		.byte	"r"
00000045 00                      		.byte	00H
00000046                         _L32:
00000046 693A2564                		.byte	"i:%d, d:%d, t:%d, p:%d, v:%f, g:%s, t:%s, s:%s"
         2C20643A                
         25642C20                
         743A2564                
         2C20703A                
         25642C20                
         763A2566                
         2C20673A                
         25732C20                
         743A2573                
         2C20733A                
         2573                    
00000074 0A00                    		.byte	0AH,00H
                                 		.SECTION	B,DATA,ALIGN=4
00000000                         _nvl:
00000000(00000488H)              		.blkl	290
                                 		.SECTION	B_2,DATA,ALIGN=2
00000000                         _nvStr:
00000000(00000206H)              		.blkw	259
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     03251   LINES

Section List

Attr         Size               Name
CODE     0000003920(00000F50H)  P
ROMDATA  0000000118(00000076H)  L
DATA     0000001160(00000488H)  B
DATA     0000000518(00000206H)  B_2

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx7E87\$ccrx\config.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01\CompactaXP_build\config.lst
-output=C:\Workspace\e2studio\git\MT01\CompactaXP_build\src\cnc\config.obj
