* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Thu Mar 09 14:19:02 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  09-Mar-2017 14:19:02
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_hlibusbip.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx\src,C:/Workspace/e2studio/
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_hlibusbip.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=1,EASYMAK=0,MOBILE=0,FREE_RTOS_PP
                                 ;r_usb_hlibusbip.c
                                 
                                 		.glb	_usb_hstd_SetDevAddr
                                 		.glb	_usb_creg_write_dcpmxps
                                 		.glb	_usb_hreg_set_usbspd
                                 		.glb	_usb_hstd_BchgEnable
                                 		.glb	_usb_hreg_clr_sts_bchg
                                 		.glb	_usb_hreg_set_enb_bchge
                                 		.glb	_usb_hstd_BchgDisable
                                 		.glb	_usb_hreg_clr_enb_bchge
                                 		.glb	_usb_hstd_SetUact
                                 		.glb	_usb_creg_rmw_dvstctr
                                 		.glb	_usb_hstd_OvrcrEnable
                                 		.glb	_usb_hreg_clr_sts_ovrcr
                                 		.glb	_usb_hreg_set_enb_ovrcre
                                 		.glb	_usb_hstd_OvrcrDisable
                                 		.glb	_usb_hreg_clr_enb_ovrcre
                                 		.glb	_usb_hstd_AttchEnable
                                 		.glb	_usb_hreg_clr_sts_attch
                                 		.glb	_usb_hreg_set_enb_attche
                                 		.glb	_usb_hstd_AttchDisable
                                 		.glb	_usb_hreg_clr_enb_attche
                                 		.glb	_usb_hstd_DtchEnable
                                 		.glb	_usb_hreg_clr_sts_dtch
                                 		.glb	_usb_hreg_set_enb_dtche
                                 		.glb	_usb_hstd_DtchDisable
                                 		.glb	_usb_hreg_clr_enb_dtche
                                 		.glb	_usb_hstd_SetPipeRegister
                                 		.glb	_usb_cstd_chg_curpipe
                                 		.glb	_usb_cstd_pipe_init
                                 		.glb	_usb_creg_read_fifosel
                                 		.glb	_usb_hstd_GetRootport
                                 		.glb	_usb_hreg_read_devadd
                                 		.glb	_usb_hstd_ChkDevAddr
                                 		.glb	_usb_hstd_GetDevSpeed
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _usb_hstd_SetDevAddr:
                                 		.STACK	_usb_hstd_SetDevAddr=16
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_hlibusbip.c
                                 ;      21 * Description  : USB IP Host library.
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Support Multi device.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 /******************************************************************************
                                 ;      30 Includes   <System Includes> , "Project Includes"
                                 ;      31 ******************************************************************************/
                                 ;      32 #include "r_usb_basic_if.h"
                                 ;      33 #include "r_usb_reg_access.h"
                                 ;      34 
                                 ;      35 
                                 ;      36 #if (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP)
                                 ;      37 
                                 ;      38 /******************************************************************************
                                 ;      39 Constant macro definitions
                                 ;      40 ******************************************************************************/
                                 ;      41 
                                 ;      42 
                                 ;      43 /******************************************************************************
                                 ;      44 External variables and functions
                                 ;      45 ******************************************************************************/
                                 ;      46 
                                 ;      47 
                                 ;      48 /******************************************************************************
                                 ;      49 Private global variables and functions
                                 ;      50 ******************************************************************************/
                                 ;      51 
                                 ;      52 
                                 ;      53 /******************************************************************************
                                 ;      54 Renesas Abstracted Host Lib IP functions
                                 ;      55 ******************************************************************************/
                                 ;      56 
                                 ;      57 
                                 ;      58 /******************************************************************************
                                 ;      59 Function Name   : usb_hstd_SetDevAddr
                                 ;      60 Description     : Set USB speed (Full/Hi) of the connected USB Device.
                                 ;      61 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;      62                 : uint16_t addr             : device address
                                 ;      63                 : uint16_t speed            : device speed
                                 ;      64                 : uint16_t port             : root port
                                 ;      65 Return value    : none
                                 ;      66 ******************************************************************************/
                                 ;      67 void usb_hstd_SetDevAddr(USB_UTR_t *ptr, uint16_t addr, uint16_t speed, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",67
00000000 60C0                    		SUB #0CH, R0
00000002 A081                    		MOV.L R1, 08H[R0]
00000004 908A                    		MOV.W R2, 06H[R0]
00000006 9083                    		MOV.W R3, 04H[R0]
00000008 900C                    		MOV.W R4, 02H[R0]
                                 ;      68 {
                                 ;      69     if( addr == USB_DEVICE_0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",69
0000000A B889                    		MOVU.W 06H[R0], R1
0000000C 6101                    		CMP #00H, R1
0000000E 18                   S  		BNE L12
0000000F                         L11:	; bb5
                                 ;      70     {
                                 ;      71         usb_creg_write_dcpmxps( ptr, (uint16_t)(USB_DEFPACKET + USB_DEVICE_0));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",71
0000000F A881                    		MOV.L 08H[R0], R1
00000011 754240                  		MOV.L #00000040H, R2
00000014 05rrrrrr             A  		BSR _usb_creg_write_dcpmxps
00000018                         L12:	; bb10
                                 ;      72     }
                                 ;      73     usb_hreg_set_usbspd( ptr, addr, (speed | port) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",73
00000018 9883                    		MOV.W 04H[R0], R3
0000001A 06550301                		OR 02H[R0].W, R3
0000001E B88A                    		MOVU.W 06H[R0], R2
00000020 A881                    		MOV.L 08H[R0], R1
00000022 5F33                    		MOVU.W R3, R3
00000024 05rrrrrr             A  		BSR _usb_hreg_set_usbspd
00000028 6703                    		RTSD #0CH
0000002A                         _usb_hstd_BchgEnable:
                                 		.STACK	_usb_hstd_BchgEnable=12
                                 ;      74 }
                                 ;      75 /******************************************************************************
                                 ;      76 End of function usb_hstd_SetDevAddr
                                 ;      77 ******************************************************************************/
                                 ;      78 
                                 ;      79 /******************************************************************************
                                 ;      80 Function Name   : usb_hstd_BchgEnable
                                 ;      81 Description     : Enable BCHG interrupt for the specified USB port.
                                 ;      82 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;      83                 : uint16_t port             : root port
                                 ;      84 Return value    : none
                                 ;      85 ******************************************************************************/
                                 ;      86 void usb_hstd_BchgEnable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",86
0000002A 6080                    		SUB #08H, R0
0000002C A009                    		MOV.L R1, 04H[R0]
0000002E 900A                    		MOV.W R2, 02H[R0]
                                 ;      87 {
                                 ;      88 
                                 ;      89     usb_hreg_clr_sts_bchg( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",89
00000030 B80A                    		MOVU.W 02H[R0], R2
00000032 A809                    		MOV.L 04H[R0], R1
00000034 05rrrrrr             A  		BSR _usb_hreg_clr_sts_bchg
00000038                         L14:	; entry.split
                                 ;      90     usb_hreg_set_enb_bchge( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",90
00000038 B80A                    		MOVU.W 02H[R0], R2
0000003A A809                    		MOV.L 04H[R0], R1
0000003C 05rrrrrr             A  		BSR _usb_hreg_set_enb_bchge
00000040 6702                    		RTSD #08H
00000042                         _usb_hstd_BchgDisable:
                                 		.STACK	_usb_hstd_BchgDisable=12
                                 ;      91 
                                 ;      92 }
                                 ;      93 /******************************************************************************
                                 ;      94 End of function usb_hstd_BchgEnable
                                 ;      95 ******************************************************************************/
                                 ;      96 
                                 ;      97 /******************************************************************************
                                 ;      98 Function Name   : usb_hstd_BchgDisable
                                 ;      99 Description     : Disable BCHG interrupt for specified USB port.
                                 ;     100 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     101                 : uint16_t port             : root port
                                 ;     102 Return value    : none
                                 ;     103 ******************************************************************************/
                                 ;     104 void usb_hstd_BchgDisable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",104
00000042 6080                    		SUB #08H, R0
00000044 A009                    		MOV.L R1, 04H[R0]
00000046 900A                    		MOV.W R2, 02H[R0]
                                 ;     105 {
                                 ;     106 
                                 ;     107     usb_hreg_clr_sts_bchg( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",107
00000048 B80A                    		MOVU.W 02H[R0], R2
0000004A A809                    		MOV.L 04H[R0], R1
0000004C 05rrrrrr             A  		BSR _usb_hreg_clr_sts_bchg
00000050                         L16:	; entry.split
                                 ;     108     usb_hreg_clr_enb_bchge( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",108
00000050 B80A                    		MOVU.W 02H[R0], R2
00000052 A809                    		MOV.L 04H[R0], R1
00000054 05rrrrrr             A  		BSR _usb_hreg_clr_enb_bchge
00000058 6702                    		RTSD #08H
0000005A                         _usb_hstd_SetUact:
                                 		.STACK	_usb_hstd_SetUact=12
                                 ;     109 
                                 ;     110 }
                                 ;     111 /******************************************************************************
                                 ;     112 End of function usb_hstd_BchgDisable
                                 ;     113 ******************************************************************************/
                                 ;     114 
                                 ;     115 /******************************************************************************
                                 ;     116 Function Name   : usb_hstd_SetUact
                                 ;     117 Description     : Start sending SOF to the connected USB device.
                                 ;     118 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     119                 : uint16_t port             : root port
                                 ;     120 Return value    : none
                                 ;     121 ******************************************************************************/
                                 ;     122 void usb_hstd_SetUact(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",122
0000005A 6080                    		SUB #08H, R0
0000005C A009                    		MOV.L R1, 04H[R0]
0000005E 900A                    		MOV.W R2, 02H[R0]
                                 ;     123 {
                                 ;     124     usb_creg_rmw_dvstctr( ptr, port, USB_UACT, (USB_USBRST | USB_RESUME | USB_UACT) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",124
00000060 B80A                    		MOVU.W 02H[R0], R2
00000062 A809                    		MOV.L 04H[R0], R1
00000064 754470                  		MOV.L #00000070H, R4
00000067 754310                  		MOV.L #00000010H, R3
0000006A 05rrrrrr             A  		BSR _usb_creg_rmw_dvstctr
0000006E 6702                    		RTSD #08H
00000070                         _usb_hstd_OvrcrEnable:
                                 		.STACK	_usb_hstd_OvrcrEnable=12
                                 ;     125 }
                                 ;     126 /******************************************************************************
                                 ;     127 End of function usb_hstd_SetUact
                                 ;     128 ******************************************************************************/
                                 ;     129 
                                 ;     130 /******************************************************************************
                                 ;     131 Function Name   : usb_hstd_OvrcrEnable
                                 ;     132 Description     : Enable OVRCR interrupt of the specified USB port.
                                 ;     133 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     134                 : uint16_t port             : root port
                                 ;     135 Return value    : none
                                 ;     136 ******************************************************************************/
                                 ;     137 void usb_hstd_OvrcrEnable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",137
00000070 6080                    		SUB #08H, R0
00000072 A009                    		MOV.L R1, 04H[R0]
00000074 900A                    		MOV.W R2, 02H[R0]
                                 ;     138 {
                                 ;     139 
                                 ;     140     usb_hreg_clr_sts_ovrcr( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",140
00000076 B80A                    		MOVU.W 02H[R0], R2
00000078 A809                    		MOV.L 04H[R0], R1
0000007A 05rrrrrr             A  		BSR _usb_hreg_clr_sts_ovrcr
0000007E                         L19:	; entry.split
                                 ;     141     usb_hreg_set_enb_ovrcre( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",141
0000007E B80A                    		MOVU.W 02H[R0], R2
00000080 A809                    		MOV.L 04H[R0], R1
00000082 05rrrrrr             A  		BSR _usb_hreg_set_enb_ovrcre
00000086 6702                    		RTSD #08H
00000088                         _usb_hstd_OvrcrDisable:
                                 		.STACK	_usb_hstd_OvrcrDisable=12
                                 ;     142 
                                 ;     143 }
                                 ;     144 /******************************************************************************
                                 ;     145 End of function usb_hstd_OvrcrEnable
                                 ;     146 ******************************************************************************/
                                 ;     147 
                                 ;     148 /******************************************************************************
                                 ;     149 Function Name   : usb_hstd_OvrcrDisable
                                 ;     150 Description     : Disable OVRCR interrupt of the specified USB port.
                                 ;     151 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     152                 : uint16_t port             : root port
                                 ;     153 Return value    : none
                                 ;     154 ******************************************************************************/
                                 ;     155 void usb_hstd_OvrcrDisable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",155
00000088 6080                    		SUB #08H, R0
0000008A A009                    		MOV.L R1, 04H[R0]
0000008C 900A                    		MOV.W R2, 02H[R0]
                                 ;     156 {
                                 ;     157     /* OVRCR Clear(INT_N edge sense) */
                                 ;     158     usb_hreg_clr_sts_ovrcr( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",158
0000008E B80A                    		MOVU.W 02H[R0], R2
00000090 A809                    		MOV.L 04H[R0], R1
00000092 05rrrrrr             A  		BSR _usb_hreg_clr_sts_ovrcr
00000096                         L21:	; entry.split
                                 ;     159     /* Over-current disable */
                                 ;     160     usb_hreg_clr_enb_ovrcre( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",160
00000096 B80A                    		MOVU.W 02H[R0], R2
00000098 A809                    		MOV.L 04H[R0], R1
0000009A 05rrrrrr             A  		BSR _usb_hreg_clr_enb_ovrcre
0000009E 6702                    		RTSD #08H
000000A0                         _usb_hstd_AttchEnable:
                                 		.STACK	_usb_hstd_AttchEnable=12
                                 ;     161 }
                                 ;     162 /******************************************************************************
                                 ;     163 End of function usb_hstd_OvrcrDisable
                                 ;     164 ******************************************************************************/
                                 ;     165 
                                 ;     166 /******************************************************************************
                                 ;     167 Function Name   : usb_hstd_AttchEnable
                                 ;     168 Description     : Enable ATTCH (attach) interrupt of the specified USB port.
                                 ;     169 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     170                 : uint16_t port             : root port
                                 ;     171 Return value    : none
                                 ;     172 ******************************************************************************/
                                 ;     173 void usb_hstd_AttchEnable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",173
000000A0 6080                    		SUB #08H, R0
000000A2 A009                    		MOV.L R1, 04H[R0]
000000A4 900A                    		MOV.W R2, 02H[R0]
                                 ;     174 {
                                 ;     175 
                                 ;     176     /* ATTCH status Clear */
                                 ;     177     usb_hreg_clr_sts_attch( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",177
000000A6 B80A                    		MOVU.W 02H[R0], R2
000000A8 A809                    		MOV.L 04H[R0], R1
000000AA 05rrrrrr             A  		BSR _usb_hreg_clr_sts_attch
000000AE                         L23:	; entry.split
                                 ;     178     /* Attach enable */
                                 ;     179     usb_hreg_set_enb_attche( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",179
000000AE B80A                    		MOVU.W 02H[R0], R2
000000B0 A809                    		MOV.L 04H[R0], R1
000000B2 05rrrrrr             A  		BSR _usb_hreg_set_enb_attche
000000B6 6702                    		RTSD #08H
000000B8                         _usb_hstd_AttchDisable:
                                 		.STACK	_usb_hstd_AttchDisable=12
                                 ;     180 
                                 ;     181 }
                                 ;     182 /******************************************************************************
                                 ;     183 End of function usb_hstd_AttchEnable
                                 ;     184 ******************************************************************************/
                                 ;     185 
                                 ;     186 /******************************************************************************
                                 ;     187 Function Name   : usb_hstd_AttchDisable
                                 ;     188 Description     : Disable ATTCH (attach) interrupt of the specified USB port.
                                 ;     189 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     190                 : uint16_t port             : root port
                                 ;     191 Return value    : none
                                 ;     192 ******************************************************************************/
                                 ;     193 void usb_hstd_AttchDisable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",193
000000B8 6080                    		SUB #08H, R0
000000BA A009                    		MOV.L R1, 04H[R0]
000000BC 900A                    		MOV.W R2, 02H[R0]
                                 ;     194 {
                                 ;     195 
                                 ;     196     /* ATTCH Clear(INT_N edge sense) */
                                 ;     197     usb_hreg_clr_sts_attch( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",197
000000BE B80A                    		MOVU.W 02H[R0], R2
000000C0 A809                    		MOV.L 04H[R0], R1
000000C2 05rrrrrr             A  		BSR _usb_hreg_clr_sts_attch
000000C6                         L25:	; entry.split
                                 ;     198     /* Attach disable */
                                 ;     199     usb_hreg_clr_enb_attche( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",199
000000C6 B80A                    		MOVU.W 02H[R0], R2
000000C8 A809                    		MOV.L 04H[R0], R1
000000CA 05rrrrrr             A  		BSR _usb_hreg_clr_enb_attche
000000CE 6702                    		RTSD #08H
000000D0                         _usb_hstd_DtchEnable:
                                 		.STACK	_usb_hstd_DtchEnable=12
                                 ;     200 
                                 ;     201 }
                                 ;     202 /******************************************************************************
                                 ;     203 End of function usb_hstd_AttchDisable
                                 ;     204 ******************************************************************************/
                                 ;     205 
                                 ;     206 /******************************************************************************
                                 ;     207 Function Name   : usb_hstd_DtchEnable
                                 ;     208 Description     : Enable DTCH (detach) interrupt of the specified USB port. 
                                 ;     209 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     210                 : uint16_t port             : root port
                                 ;     211 Return value    : none
                                 ;     212 ******************************************************************************/
                                 ;     213 void usb_hstd_DtchEnable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",213
000000D0 6080                    		SUB #08H, R0
000000D2 A009                    		MOV.L R1, 04H[R0]
000000D4 900A                    		MOV.W R2, 02H[R0]
                                 ;     214 {
                                 ;     215 
                                 ;     216     /* DTCH Clear */
                                 ;     217     usb_hreg_clr_sts_dtch( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",217
000000D6 B80A                    		MOVU.W 02H[R0], R2
000000D8 A809                    		MOV.L 04H[R0], R1
000000DA 05rrrrrr             A  		BSR _usb_hreg_clr_sts_dtch
000000DE                         L27:	; entry.split
                                 ;     218     /* Detach enable */
                                 ;     219     usb_hreg_set_enb_dtche( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",219
000000DE B80A                    		MOVU.W 02H[R0], R2
000000E0 A809                    		MOV.L 04H[R0], R1
000000E2 05rrrrrr             A  		BSR _usb_hreg_set_enb_dtche
000000E6 6702                    		RTSD #08H
000000E8                         _usb_hstd_DtchDisable:
                                 		.STACK	_usb_hstd_DtchDisable=12
                                 ;     220 
                                 ;     221 }
                                 ;     222 /******************************************************************************
                                 ;     223 End of function usb_hstd_DtchEnable
                                 ;     224 ******************************************************************************/
                                 ;     225 
                                 ;     226 /******************************************************************************
                                 ;     227 Function Name   : usb_hstd_DtchDisable
                                 ;     228 Description     : Disable DTCH (detach) interrupt of the specified USB port.  
                                 ;     229 Arguments       : USB_UTR_t *ptr : USB system internal structure. Selects channel.
                                 ;     230                 : uint16_t port             : root port
                                 ;     231 Return value    : none
                                 ;     232 ******************************************************************************/
                                 ;     233 void usb_hstd_DtchDisable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",233
000000E8 6080                    		SUB #08H, R0
000000EA A009                    		MOV.L R1, 04H[R0]
000000EC 900A                    		MOV.W R2, 02H[R0]
                                 ;     234 {
                                 ;     235 
                                 ;     236     /* DTCH Clear(INT_N edge sense) */
                                 ;     237     usb_hreg_clr_sts_dtch( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",237
000000EE B80A                    		MOVU.W 02H[R0], R2
000000F0 A809                    		MOV.L 04H[R0], R1
000000F2 05rrrrrr             A  		BSR _usb_hreg_clr_sts_dtch
000000F6                         L29:	; entry.split
                                 ;     238     /* Detach disable */
                                 ;     239     usb_hreg_clr_enb_dtche( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",239
000000F6 B80A                    		MOVU.W 02H[R0], R2
000000F8 A809                    		MOV.L 04H[R0], R1
000000FA 05rrrrrr             A  		BSR _usb_hreg_clr_enb_dtche
000000FE 6702                    		RTSD #08H
00000100                         _usb_hstd_SetPipeRegister:
                                 		.STACK	_usb_hstd_SetPipeRegister=24
                                 ;     240 
                                 ;     241 }
                                 ;     242 /******************************************************************************
                                 ;     243 End of function usb_hstd_DtchDisable
                                 ;     244 ******************************************************************************/
                                 ;     245 
                                 ;     246 /******************************************************************************
                                 ;     247 Function Name   : usb_hstd_SetPipeRegister
                                 ;     248 Description     : Set up USB registers to use specified pipe (given in infor-
                                 ;     249                 : mation table).
                                 ;     250 Arguments       : USB_UTR_t *ptr : USB system internal structure. Selects channel.
                                 ;     251                 : uint16_t pipe_no          : pipe number
                                 ;     252                 : uint16_t *tbl     : pipe information table 
                                 ;     253 Return value    : none
                                 ;     254 ******************************************************************************/
                                 ;     255 void usb_hstd_SetPipeRegister(USB_UTR_t *ptr, uint16_t pipe_no, uint16_t *tbl)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",255
00000100 7100EC                  		ADD #0FFFFFFECH, R0
00000103 A101                    		MOV.L R1, 10H[R0]
00000105 918A                    		MOV.W R2, 0EH[R0]
00000107 A083                    		MOV.L R3, 08H[R0]
                                 ;     256 {
                                 ;     257     uint16_t        i, pipe, buf;
                                 ;     258 
                                 ;     259     /* PIPE USE check */
                                 ;     260     if( pipe_no == USB_USEPIPE )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",260
00000109 B989                    		MOVU.W 0EH[R0], R1
0000010B 7551FE                  		CMP #0FEH, R1
0000010E A901                    		MOV.L 10H[R0], R1
00000110 21rr                    		BNE L38
00000112                         L31:	; bb7
00000112 6602                    		MOV.L #00000000H, R2
                                 ;     261     {
                                 ;     262         /* Current FIFO port Clear */
                                 ;     263         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_CUSE,  USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",263
00000114 EF23                    		MOV.L R2, R3
00000116 EF24                    		MOV.L R2, R4
00000118 05rrrrrr             A  		BSR _usb_cstd_chg_curpipe
0000011C                         L32:	; bb7.split
                                 ;     264         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D0USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",264
0000011C A901                    		MOV.L 10H[R0], R1
0000011E 6613                    		MOV.L #00000001H, R3
00000120 6602                    		MOV.L #00000000H, R2
00000122 EF24                    		MOV.L R2, R4
00000124 05rrrrrr             A  		BSR _usb_cstd_chg_curpipe
00000128                         L33:	; bb7.split1
                                 ;     265         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D1USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",265
00000128 A901                    		MOV.L 10H[R0], R1
0000012A 6633                    		MOV.L #00000003H, R3
0000012C 6602                    		MOV.L #00000000H, R2
0000012E EF24                    		MOV.L R2, R4
00000130 05rrrrrr             A  		BSR _usb_cstd_chg_curpipe
00000134                         L34:	; bb7.split2
                                 ;     266         /* EP Table loop */
                                 ;     267         for( i = 0; tbl[i] != USB_PDTBLEND; i += USB_EPL )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",267
00000134 3D0100                  		MOV.W #0000H, 02H[R0]
00000137 2Err                 B  		BRA L37
00000139                         L35:	; bb10
                                 ;     268         {
                                 ;     269             /* PipeNo Number */
                                 ;     270             pipe = (uint16_t)(tbl[i + 0] & USB_CURPIPE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",270
00000139 A881                    		MOV.L 08H[R0], R1
0000013B B80A                    		MOVU.W 02H[R0], R2
0000013D FED211                  		MOVU.W [R2,R1], R1
00000140 64F1                    		AND #0FH, R1
00000142 9081                    		MOV.W R1, 04H[R0]
00000144                         L36:	; bb10.split
                                 ;     271             /* PIPE Setting */
                                 ;     272             usb_cstd_pipe_init(ptr, pipe, tbl, i);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",272
00000144 B80C                    		MOVU.W 02H[R0], R4
00000146 A883                    		MOV.L 08H[R0], R3
00000148 B882                    		MOVU.W 04H[R0], R2
0000014A A901                    		MOV.L 10H[R0], R1
0000014C 05rrrrrr             A  		BSR _usb_cstd_pipe_init
00000150 B809                    		MOVU.W 02H[R0], R1
00000152 6261                    		ADD #06H, R1
00000154 9009                    		MOV.W R1, 02H[R0]
00000156                         L37:	; bb28
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",267
00000156 A881                    		MOV.L 08H[R0], R1
00000158 B80A                    		MOVU.W 02H[R0], R2
0000015A FED21E                  		MOVU.W [R2,R1], R14
0000015D 770EFFFF00              		CMP #0FFFFH, R14
00000162 21rr                    		BNE L35
00000164 38rrrr               W  		BRA L51
00000167                         L38:	; bb38
00000167 6602                    		MOV.L #00000000H, R2
                                 ;     273         }
                                 ;     274     }
                                 ;     275     else
                                 ;     276     {
                                 ;     277         /* Current FIFO port Clear */
                                 ;     278         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_CUSE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",278
00000169 EF23                    		MOV.L R2, R3
0000016B EF24                    		MOV.L R2, R4
0000016D 05rrrrrr             A  		BSR _usb_cstd_chg_curpipe
00000171                         L39:	; bb38.split
                                 ;     279         buf = usb_creg_read_fifosel( ptr, USB_D0USE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",279
00000171 A901                    		MOV.L 10H[R0], R1
00000173 6612                    		MOV.L #00000001H, R2
00000175 05rrrrrr             A  		BSR _usb_creg_read_fifosel
00000179 9089                    		MOV.W R1, 06H[R0]
0000017B                         L40:	; bb38.split3
                                 ;     280         if( (buf & USB_CURPIPE) == pipe_no )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",280
0000017B B889                    		MOVU.W 06H[R0], R1
0000017D 64F1                    		AND #0FH, R1
0000017F 06C50107                		CMP 0EH[R0].UW, R1
00000183 21rr                    		BNE L42
00000185                         L41:	; bb43
                                 ;     281         {
                                 ;     282             usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D0USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",282
00000185 A901                    		MOV.L 10H[R0], R1
00000187 6613                    		MOV.L #00000001H, R3
00000189 6602                    		MOV.L #00000000H, R2
0000018B EF24                    		MOV.L R2, R4
0000018D 05rrrrrr             A  		BSR _usb_cstd_chg_curpipe
00000191                         L42:	; bb53
                                 ;     283         }
                                 ;     284         buf = usb_creg_read_fifosel( ptr, USB_D1USE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",284
00000191 A901                    		MOV.L 10H[R0], R1
00000193 6632                    		MOV.L #00000003H, R2
00000195 05rrrrrr             A  		BSR _usb_creg_read_fifosel
00000199 9089                    		MOV.W R1, 06H[R0]
0000019B                         L43:	; bb53.split
                                 ;     285         if( (buf & USB_CURPIPE) == pipe_no )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",285
0000019B B889                    		MOVU.W 06H[R0], R1
0000019D 64F1                    		AND #0FH, R1
0000019F 06C50107                		CMP 0EH[R0].UW, R1
000001A3 21rr                    		BNE L45
000001A5                         L44:	; bb57
                                 ;     286         {
                                 ;     287             usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D1USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",287
000001A5 A901                    		MOV.L 10H[R0], R1
000001A7 6633                    		MOV.L #00000003H, R3
000001A9 6602                    		MOV.L #00000000H, R2
000001AB EF24                    		MOV.L R2, R4
000001AD 05rrrrrr             A  		BSR _usb_cstd_chg_curpipe
000001B1                         L45:	; bb67
                                 ;     288         }
                                 ;     289         /* EP Table loop */
                                 ;     290         for( i = 0; tbl[i] != USB_PDTBLEND; i += USB_EPL )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",290
000001B1 3D0100                  		MOV.W #0000H, 02H[R0]
000001B4 2Err                 B  		BRA L50
000001B6                         L46:	; bb68
                                 ;     291         {
                                 ;     292             /* PipeNo Number */
                                 ;     293             pipe = (uint16_t)(tbl[i + 0] & USB_CURPIPE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",293
000001B6 A881                    		MOV.L 08H[R0], R1
000001B8 B80A                    		MOVU.W 02H[R0], R2
000001BA FED211                  		MOVU.W [R2,R1], R1
000001BD 64F1                    		AND #0FH, R1
000001BF 9081                    		MOV.W R1, 04H[R0]
000001C1                         L47:	; bb68.split
                                 ;     294             if( pipe == pipe_no )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",294
000001C1 B881                    		MOVU.W 04H[R0], R1
000001C3 06C50107                		CMP 0EH[R0].UW, R1
000001C7 21rr                    		BNE L49
000001C9                         L48:	; bb79
                                 ;     295             {
                                 ;     296                 /* PIPE Setting */
                                 ;     297                 usb_cstd_pipe_init(ptr, pipe, tbl, i);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",297
000001C9 B80C                    		MOVU.W 02H[R0], R4
000001CB A883                    		MOV.L 08H[R0], R3
000001CD B882                    		MOVU.W 04H[R0], R2
000001CF A901                    		MOV.L 10H[R0], R1
000001D1 05rrrrrr             A  		BSR _usb_cstd_pipe_init
000001D5                         L49:	; bb91
000001D5 B809                    		MOVU.W 02H[R0], R1
000001D7 6261                    		ADD #06H, R1
000001D9 9009                    		MOV.W R1, 02H[R0]
000001DB                         L50:	; bb96
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",290
000001DB A881                    		MOV.L 08H[R0], R1
000001DD B80A                    		MOVU.W 02H[R0], R2
000001DF FED21E                  		MOVU.W [R2,R1], R14
000001E2 770EFFFF00              		CMP #0FFFFH, R14
000001E7 21rr                    		BNE L46
000001E9                         L51:	; return
                                 ;     298             }
                                 ;     299         }
                                 ;     300     }
                                 ;     301 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",301
000001E9 6705                    		RTSD #14H
000001EB                         _usb_hstd_GetRootport:
                                 		.STACK	_usb_hstd_GetRootport=16
                                 ;     302 /******************************************************************************
                                 ;     303 End of function usb_hstd_SetPipeRegister
                                 ;     304 ******************************************************************************/
                                 ;     305 
                                 ;     306 /******************************************************************************
                                 ;     307 Function Name   : usb_hstd_GetRootport
                                 ;     308 Description     : Get USB port no. set in the USB register based on the speci-
                                 ;     309                 : fied USB Device address.
                                 ;     310 Arguments       : USB_UTR_t *ptr : USB system internal structure. Selects channel.
                                 ;     311                 : uint16_t addr             : device address
                                 ;     312 Return value    : uint16_t                  : root port number
                                 ;     313 ******************************************************************************/
                                 ;     314 uint16_t usb_hstd_GetRootport(USB_UTR_t *ptr, uint16_t addr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",314
000001EB 60C0                    		SUB #0CH, R0
000001ED A081                    		MOV.L R1, 08H[R0]
000001EF 908A                    		MOV.W R2, 06H[R0]
                                 ;     315 {
                                 ;     316     uint16_t    buffer;
                                 ;     317 
                                 ;     318     /* Get device address configuration register from device address */
                                 ;     319     buffer = usb_hreg_read_devadd( ptr, addr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",319
000001F1 B88A                    		MOVU.W 06H[R0], R2
000001F3 A881                    		MOV.L 08H[R0], R1
000001F5 05rrrrrr             A  		BSR _usb_hreg_read_devadd
000001F9 9009                    		MOV.W R1, 02H[R0]
000001FB                         L53:	; entry.split
                                 ;     320     if( buffer != USB_ERROR )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",320
000001FB B809                    		MOVU.W 02H[R0], R1
000001FD 7701FFFF00              		CMP #0FFFFH, R1
00000202 10                   S  		BEQ L55
00000203                         L54:	; bb7
                                 ;     321     {
                                 ;     322         /* Return root port number */
                                 ;     323         return (uint16_t)(buffer & USB_RTPORT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",323
00000203 B809                    		MOVU.W 02H[R0], R1
00000205 6411                    		AND #01H, R1
00000207 D301                    		MOV.W R1, [R0]
00000209 08                   S  		BRA L56
0000020A                         L55:	; bb17
                                 ;     324     }
                                 ;     325     return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",325
0000020A F809FFFF                		MOV.W #0FFFFH, [R0]
0000020E                         L56:	; bb19
0000020E D40002                  		MOV.W [R0], 04H[R0]
                                 ;     326 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",326
00000211 B881                    		MOVU.W 04H[R0], R1
00000213 6703                    		RTSD #0CH
00000215                         _usb_hstd_ChkDevAddr:
                                 		.STACK	_usb_hstd_ChkDevAddr=20
                                 ;     327 /******************************************************************************
                                 ;     328 End of function usb_hstd_GetRootport
                                 ;     329 ******************************************************************************/
                                 ;     330 
                                 ;     331 
                                 ;     332 /******************************************************************************
                                 ;     333 Function Name   : usb_hstd_ChkDevAddr
                                 ;     334 Description     : Get USB speed set in USB register based on the specified USB 
                                 ;     335                 : Device address and USB port no.
                                 ;     336 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     337                 : uint16_t addr             : device address
                                 ;     338                 : uint16_t rootport         : root port
                                 ;     339 Return value    : uint16_t                  : USB speed etc
                                 ;     340 ******************************************************************************/
                                 ;     341 uint16_t usb_hstd_ChkDevAddr(USB_UTR_t *ptr, uint16_t addr, uint16_t rootport)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",341
00000215 7100F0                  		ADD #0FFFFFFF0H, R0
00000218 A089                    		MOV.L R1, 0CH[R0]
0000021A 910A                    		MOV.W R2, 0AH[R0]
0000021C 9103                    		MOV.W R3, 08H[R0]
                                 ;     342 {
                                 ;     343     uint16_t    buffer;
                                 ;     344 
                                 ;     345     /* Get device address configuration register from device address */
                                 ;     346     buffer = usb_hreg_read_devadd( ptr, addr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",346
0000021E B90A                    		MOVU.W 0AH[R0], R2
00000220 A889                    		MOV.L 0CH[R0], R1
00000222 05rrrrrr             A  		BSR _usb_hreg_read_devadd
00000226 9081                    		MOV.W R1, 04H[R0]
00000228                         L58:	; entry.split
                                 ;     347     if( buffer != USB_ERROR )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",347
00000228 B881                    		MOVU.W 04H[R0], R1
0000022A 7701FFFF00              		CMP #0FFFFH, R1
0000022F 20rr                    		BEQ L61
00000231                         L59:	; bb9
                                 ;     348     {
                                 ;     349         if( (uint16_t)(buffer & USB_RTPORT) == rootport )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",349
00000231 B881                    		MOVU.W 04H[R0], R1
00000233 6411                    		AND #01H, R1
00000235 06C50104                		CMP 08H[R0].UW, R1
00000239 18                   S  		BNE L61
0000023A                         L60:	; bb10
                                 ;     350         {
                                 ;     351             /* Return Address check result */
                                 ;     352             return (uint16_t)(buffer & USB_USBSPD);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",352
0000023A B881                    		MOVU.W 04H[R0], R1
0000023C 7621C000                		AND #0C0H, R1
00000240 9009                    		MOV.W R1, 02H[R0]
00000242 08                   S  		BRA L62
00000243                         L61:	; bb31
                                 ;     353         }
                                 ;     354     }
                                 ;     355     return USB_NOCONNECT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",355
00000243 3D0100                  		MOV.W #0000H, 02H[R0]
00000246                         L62:	; bb33
00000246 D5000103                		MOV.W 02H[R0], 06H[R0]
                                 ;     356 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",356
0000024A B889                    		MOVU.W 06H[R0], R1
0000024C 6704                    		RTSD #10H
0000024E                         _usb_hstd_GetDevSpeed:
                                 		.STACK	_usb_hstd_GetDevSpeed=16
                                 ;     357 /******************************************************************************
                                 ;     358 End of function usb_hstd_ChkDevAddr
                                 ;     359 ******************************************************************************/
                                 ;     360 
                                 ;     361 /******************************************************************************
                                 ;     362 Function Name   : usb_hstd_GetDevSpeed
                                 ;     363 Description     : Get USB speed set in USB register based on the specified USB 
                                 ;     364                 : Device address.
                                 ;     365 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     366                 : uint16_t addr             : device address
                                 ;     367 Return value    : uint16_t                  : device speed
                                 ;     368 Note            : Use also to a connection check is possible
                                 ;     369 ******************************************************************************/
                                 ;     370 uint16_t usb_hstd_GetDevSpeed(USB_UTR_t *ptr, uint16_t addr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",370
0000024E 60C0                    		SUB #0CH, R0
00000250 A081                    		MOV.L R1, 08H[R0]
00000252 908A                    		MOV.W R2, 06H[R0]
                                 ;     371 {
                                 ;     372     uint16_t    buffer;
                                 ;     373 
                                 ;     374     /* Get device address configuration register from device address */
                                 ;     375     buffer = usb_hreg_read_devadd( ptr, addr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",375
00000254 B88A                    		MOVU.W 06H[R0], R2
00000256 A881                    		MOV.L 08H[R0], R1
00000258 05rrrrrr             A  		BSR _usb_hreg_read_devadd
0000025C 9009                    		MOV.W R1, 02H[R0]
0000025E                         L64:	; entry.split
                                 ;     376     if( buffer != USB_ERROR )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",376
0000025E B809                    		MOVU.W 02H[R0], R1
00000260 7701FFFF00              		CMP #0FFFFH, R1
00000265 10                   S  		BEQ L66
00000266                         L65:	; bb7
                                 ;     377     {
                                 ;     378         /* Return device speed */
                                 ;     379         return (uint16_t)(buffer & USB_USBSPD);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",379
00000266 B809                    		MOVU.W 02H[R0], R1
00000268 7621C000                		AND #0C0H, R1
0000026C D301                    		MOV.W R1, [R0]
0000026E 08                   S  		BRA L67
0000026F                         L66:	; bb17
                                 ;     380     }
                                 ;     381     return USB_NOCONNECT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",381
0000026F F80500                  		MOV.W #0000H, [R0]
00000272                         L67:	; bb19
00000272 D40002                  		MOV.W [R0], 04H[R0]
                                 ;     382 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\host\r_usb_hlibusbip.c",382
00000275 B881                    		MOVU.W 04H[R0], R1
00000277 6703                    		RTSD #0CH
                                 ;     383 /******************************************************************************
                                 ;     384 End of function usb_hstd_GetDevSpeed
                                 ;     385 ******************************************************************************/
                                 ;     386 
                                 ;     387 #endif  /* (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP) */
                                 ;     388 
                                 ;     389 /******************************************************************************
                                 ;     390 End  Of File
                                 ;     391 ******************************************************************************/
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00857   LINES

Section List

Attr         Size               Name
CODE     0000000633(00000279H)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx305E\$ccrx\r_usb_hlibusbip.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01_master\CompactaXP_build\r_usb_hlibusbip.lst
-output=C:\Workspace\e2studio\git\MT01_master\CompactaXP_build\r_usb_basic\src\driver\host\r_usb_hlibusbip.obj
