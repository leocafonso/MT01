* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Tue Feb 28 14:07:28 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  28-Feb-2017 14:07:28
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_hdriver.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01\r_lvd_rx,C:\Workspace\e2studio\git\MT01\r_lvd_rx\src,C:/Workspace/e2studio/git/MT01/r_tfa
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_hdriver.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=1,EASYMAK=0,MOBILE=0,FREE_RTOS_PP
                                 ;r_usb_hdriver.c
                                 
                                 		.glb	_usb_gcstd_Pipe
                                 		.glb	_usb_ghstd_DeviceDescriptor
                                 		.glb	_usb_ghstd_ConfigurationDescriptor
                                 		.glb	_usb_ghstd_DeviceDrv
                                 		.glb	_usb_ghstd_DeviceInfo
                                 		.glb	_usb_ghstd_RemortPort
                                 		.glb	_usb_ghstd_Ctsq
                                 		.glb	_usb_ghstd_MgrMode
                                 		.glb	_usb_ghstd_DcpRegister
                                 		.glb	_usb_ghstd_DeviceAddr
                                 		.glb	_usb_ghstd_DeviceSpeed
                                 		.glb	_usb_ghstd_DeviceNum
                                 		.glb	_usb_ghstd_IgnoreCnt
                                 		.glb	_usb_hstd_get_device_state
                                 		.glb	_usb_hstd_DevDescriptor
                                 		.glb	_usb_hstd_ConDescriptor
                                 		.glb	_usb_hstd_HsFsResult
                                 		.glb	_usb_hstd_ChangeDeviceState
                                 		.glb	_usb_hstd_TransferStart
                                 		.glb	_usb_cstd_GetPipeType
                                 		.glb	_usb_cstd_GetDevsel
                                 		.glb	_usb_hstd_GetDevSpeed
                                 		.glb	_usb_cstd_SndMsg
                                 		.glb	_usb_hstd_DeviceUsbReset
                                 		.glb	_usb_hstd_DeviceResume
                                 		.glb	_usb_hstd_HcdSndMbx
                                 		.glb	_usb_hstd_MgrSndMbx
                                 		.glb	_usb_cstd_PgetBlk
                                 		.glb	_usb_cstd_RelBlk
                                 		.glb	_usb_hstd_HcdRelMpl
                                 		.glb	_usb_hstd_Suspend
                                 		.glb	_usb_hstd_SuspendProcess
                                 		.glb	_usb_hstd_ChkClk
                                 		.glb	_usb_cpu_DelayXms
                                 		.glb	_usb_hstd_StatusResult
                                 		.glb	_usb_cstd_ForcedTermination
                                 		.glb	_usb_hstd_ControlEnd
                                 		.glb	_usb_hstd_SetupStart
                                 		.glb	_usb_hstd_ControlReadStart
                                 		.glb	_usb_hstd_ControlWriteStart
                                 		.glb	_usb_cstd_ReceiveStart
                                 		.glb	_usb_cstd_SendStart
                                 		.glb	_usb_cstd_GetPipeDir
                                 		.glb	_usb_hstd_BusIntDisable
                                 		.glb	_usb_hstd_AttchDisable
                                 		.glb	_usb_hstd_DtchDisable
                                 		.glb	_usb_hstd_BchgDisable
                                 		.glb	_usb_hstd_Interrupt
                                 		.glb	_usb_hstd_BrdyPipe
                                 		.glb	_usb_hstd_BempPipe
                                 		.glb	_usb_hstd_NrdyPipe
                                 		.glb	_usb_hstd_StatusStart
                                 		.glb	_usb_hreg_clr_sts_sign
                                 		.glb	_usb_hreg_clr_sts_sack
                                 		.glb	_usb_hreg_set_enb_signe
                                 		.glb	_usb_hreg_set_enb_sacke
                                 		.glb	_usb_hreg_set_sureq
                                 		.glb	_usb_hstd_Ovrcr0Function
                                 		.glb	_usb_hstd_AttachProcess
                                 		.glb	_usb_hstd_Bchg0Function
                                 		.glb	_usb_hstd_DetachProcess
                                 		.glb	_usb_creg_clr_enb_vbse
                                 		.glb	_usb_creg_clr_enb_sofe
                                 		.glb	_usb_hstd_ClearFeature
                                 		.glb	_usb_hstd_ClearStall
                                 		.glb	_usb_cstd_Pipe2Epadr
                                 		.glb	_usb_cstd_GetDeviceAddress
                                 		.glb	_usb_hstd_HcdTask
                                 		.glb	_usb_cstd_RecMsg
                                 		.glb	_usb_cstd_is_host_mode
                                 		.glb	_usb_cstd_InterruptClock
                                 		.glb	_usb_hstd_InterruptHandler
                                 		.glb	_usb_cstd_SelfClock
                                 		.glb	_usb_cstd_PortSpeed
                                 		.glb	_usb_creg_clr_dvstctr
                                 		.glb	_usb_hstd_BusReset
                                 		.glb	_usb_hstd_ResumeProcess
                                 		.glb	_usb_hstd_OvrcrEnable
                                 		.glb	_usb_hstd_VbusControl
                                 		.glb	_usb_hstd_OvrcrDisable
                                 		.glb	_usb_cstd_ClrStall
                                 		.glb	_usb_cstd_DoSqtgl
                                 		.glb	_usb_cstd_WaiMsg
                                 		.glb	_usb_creg_set_sqclr
                                 		.glb	_usb_creg_set_sqset
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _usb_hstd_get_device_state:
                                 		.STACK	_usb_hstd_get_device_state=20
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_hdriver.c
                                 ;      21 * Description  : USB Host Control Driver
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Support Multi device.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 
                                 ;      30 /******************************************************************************
                                 ;      31 Includes   <System Includes> , "Project Includes"
                                 ;      32 ******************************************************************************/
                                 ;      33 #include "r_usb_basic_if.h"
                                 ;      34 #include "r_usb_reg_access.h"
                                 ;      35 
                                 ;      36 
                                 ;      37 #if (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP)
                                 ;      38 
                                 ;      39 /******************************************************************************
                                 ;      40 Private global variables and functions
                                 ;      41 ******************************************************************************/
                                 ;      42 /* Device driver (registration) */
                                 ;      43 USB_HCDREG_t    usb_ghstd_DeviceDrv[USB_NUM_USBIP][USB_MAXDEVADDR + 1u];
                                 ;      44 /* Root port, status, config num, interface class, speed, */
                                 ;      45 uint16_t        usb_ghstd_DeviceInfo[USB_NUM_USBIP][USB_MAXDEVADDR + 1u][8u];
                                 ;      46 uint16_t        usb_ghstd_RemortPort[2u];
                                 ;      47 /* Control transfer stage management */
                                 ;      48 uint16_t        usb_ghstd_Ctsq[USB_NUM_USBIP];
                                 ;      49 /* Manager mode */
                                 ;      50 uint16_t        usb_ghstd_MgrMode[USB_NUM_USBIP][2u];
                                 ;      51 /* DEVSEL & DCPMAXP (Multiple device) */
                                 ;      52 uint16_t        usb_ghstd_DcpRegister[USB_NUM_USBIP][USB_MAXDEVADDR + 1u];
                                 ;      53 /* Device address */
                                 ;      54 uint16_t        usb_ghstd_DeviceAddr[USB_NUM_USBIP];
                                 ;      55 /* Reset handshake result */
                                 ;      56 uint16_t        usb_ghstd_DeviceSpeed[USB_NUM_USBIP];
                                 ;      57 /* Device driver number */
                                 ;      58 uint16_t        usb_ghstd_DeviceNum[USB_NUM_USBIP];
                                 ;      59 /* Ignore count */
                                 ;      60 uint16_t        usb_ghstd_IgnoreCnt[USB_NUM_USBIP][USB_MAX_PIPE_NO + 1u];
                                 ;      61 
                                 ;      62 /******************************************************************************
                                 ;      63 Static variables and functions
                                 ;      64 ******************************************************************************/
                                 ;      65 static    USB_HCDINFO_t    *usb_shstd_HcdMsg;
                                 ;      66 static uint16_t         usb_shstd_ClearStallPipe;
                                 ;      67 static uint16_t         usb_shstd_ClearStallRequest[5];
                                 ;      68 static uint8_t          usb_shstd_ClearStallData[10];
                                 ;      69 static USB_UTR_t        usb_shstd_ClearStallControl;
                                 ;      70 static USB_CB_t    usb_shstd_ClearStallCall;
                                 ;      71 
                                 ;      72 static USB_ER_t usb_hstd_SetSubmitutr(USB_UTR_t *ptr);
                                 ;      73 static void usb_hstd_SetReTransfer(USB_UTR_t *ptr, uint16_t pipe);
                                 ;      74 static void usb_hstd_ClearStallResult(USB_UTR_t *ptr, uint16_t data1, uint16_t data2 );
                                 ;      75 
                                 ;      76 
                                 ;      77 /******************************************************************************
                                 ;      78 External variables and functions
                                 ;      79 ******************************************************************************/
                                 ;      80 uint16_t        usb_hstd_CmdSubmit( USB_UTR_t *, USB_CB_t );
                                 ;      81 
                                 ;      82 
                                 ;      83 #ifdef USB_HOST_COMPLIANCE_MODE
                                 ;      84 extern uint16_t    usb_ghstd_responce_counter;
                                 ;      85 #endif /* USB_HOST_COMPLIANCE_MODE */
                                 ;      86 
                                 ;      87 /******************************************************************************
                                 ;      88 Renesas USB Host Driver functions
                                 ;      89 ******************************************************************************/
                                 ;      90 
                                 ;      91 /******************************************************************************
                                 ;      92 Function Name   : usb_hstd_get_device_state
                                 ;      93 Description     : Get USB device status from the specifed device address.
                                 ;      94 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;      95                 : uint16_t devaddr          : Device Address.
                                 ;      96 Return          : uint16_t                  : Device State.
                                 ;      97 ******************************************************************************/
                                 ;      98 uint16_t usb_hstd_get_device_state(USB_UTR_t *ptr, uint16_t devaddr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",98
00000000 7100F0                  		ADD #0FFFFFFF0H, R0
00000003 A089                    		MOV.L R1, 0CH[R0]
00000005 910A                    		MOV.W R2, 0AH[R0]
                                 ;      99 {
                                 ;     100     uint16_t        md;
                                 ;     101     USB_HCDREG_t    *driver;
                                 ;     102 
                                 ;     103     for (md = 0; md < usb_ghstd_DeviceNum[ptr->ip]; md++)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",103
00000007 3D0100                  		MOV.W #0000H, 02H[R0]
0000000A 2Err                 B  		BRA L15
0000000C                         L11:	; bb
                                 ;     104     {
                                 ;     105         driver = &usb_ghstd_DeviceDrv[ptr->ip][md];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",105
0000000C A889                    		MOV.L 0CH[R0], R1
0000000E B991                    		MOVU.W 0CH[R1], R1
00000010 7611B801                		MUL #01B8H, R1
00000014 FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
0000001A 4B12                    		ADD R1, R2
0000001C B809                    		MOVU.W 02H[R0], R1
0000001E 751128                  		MUL #28H, R1
00000021 4B12                    		ADD R1, R2
00000023 A00A                    		MOV.L R2, 04H[R0]
00000025                         L12:	; bb.split
                                 ;     106         if (driver->devaddr == devaddr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",106
00000025 A809                    		MOV.L 04H[R0], R1
00000027 B819                    		MOVU.W 02H[R1], R1
00000029 06C50105                		CMP 0AH[R0].UW, R1
0000002D 18                   S  		BNE L14
0000002E                         L13:	; bb15
                                 ;     107         {
                                 ;     108             return driver->devstate;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",108
0000002E A809                    		MOV.L 04H[R0], R1
00000030 D11002                  		MOV.W 04H[R1], [R0]
00000033 2Err                 B  		BRA L17
00000035                         L14:	; bb28
00000035 9809                    		MOV.W 02H[R0], R1
00000037 6211                    		ADD #01H, R1
00000039 9009                    		MOV.W R1, 02H[R0]
0000003B                         L15:	; bb31
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",103
0000003B A889                    		MOV.L 0CH[R0], R1
0000003D B991                    		MOVU.W 0CH[R1], R1
0000003F FBE2rrrrrrrr            		MOV.L #_usb_ghstd_DeviceNum, R14
00000045 FED1EE                  		MOVU.W [R1,R14], R14
00000048 B809                    		MOVU.W 02H[R0], R1
0000004A 47E1                    		CMP R14, R1
0000004C 29rr                    		BLT L11
0000004E                         L16:	; bb44
                                 ;     109         }
                                 ;     110     }
                                 ;     111     return USB_DETACHED;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",111
0000004E F8050A                  		MOV.W #000AH, [R0]
00000051                         L17:	; bb46
00000051 D40004                  		MOV.W [R0], 08H[R0]
                                 ;     112 }/* eof usb_hstd_get_device_state() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",112
00000054 B901                    		MOVU.W 08H[R0], R1
00000056 6704                    		RTSD #10H
00000058                         _usb_hstd_DevDescriptor:
                                 		.STACK	_usb_hstd_DevDescriptor=12
                                 ;     113 
                                 ;     114 /******************************************************************************
                                 ;     115 Function Name   : usb_hstd_DevDescriptor
                                 ;     116 Description     : Returns buffer header pointer to fetch device descriptor.
                                 ;     117 Argument        : none
                                 ;     118 Return          : uint8_t *                 : Device Descriptor Pointer
                                 ;     119 ******************************************************************************/
                                 ;     120 uint8_t *usb_hstd_DevDescriptor(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",120
00000058 6080                    		SUB #08H, R0
0000005A A009                    		MOV.L R1, 04H[R0]
                                 ;     121 {
                                 ;     122     return (uint8_t *)&usb_ghstd_DeviceDescriptor[ptr->ip];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",122
0000005C B992                    		MOVU.W 0CH[R1], R2
0000005E 751214                  		MUL #14H, R2
00000061 FB12rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDescriptor, R1
00000067 4B21                    		ADD R2, R1
00000069 E301                    		MOV.L R1, [R0]
0000006B                         L19:	; entry.split
                                 ;     123 }/* eof usb_hstd_DevDescriptor() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",123
0000006B 6702                    		RTSD #08H
0000006D                         _usb_hstd_ConDescriptor:
                                 		.STACK	_usb_hstd_ConDescriptor=12
                                 ;     124 
                                 ;     125 /******************************************************************************
                                 ;     126 Function Name   : usb_hstd_ConDescriptor
                                 ;     127 Description     : Returns buffer header pointer that includes the configuration 
                                 ;     128                 : descriptor.
                                 ;     129 Argument        : none
                                 ;     130 Return          : uint8_t *                 : Configuration Descriptor Pointer
                                 ;     131 ******************************************************************************/
                                 ;     132 uint8_t *usb_hstd_ConDescriptor(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",132
0000006D 6080                    		SUB #08H, R0
0000006F A009                    		MOV.L R1, 04H[R0]
                                 ;     133 {
                                 ;     134     return (uint8_t *)&usb_ghstd_ConfigurationDescriptor[ptr->ip];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",134
00000071 B992                    		MOVU.W 0CH[R1], R2
00000073 6C82                    		SHLL #08H, R2
00000075 FB12rrrrrrrr            		MOV.L #_usb_ghstd_ConfigurationDescriptor, R1
0000007B 4B21                    		ADD R2, R1
0000007D E301                    		MOV.L R1, [R0]
0000007F                         L21:	; entry.split
                                 ;     135 }/* eof usb_hstd_ConDescriptor() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",135
0000007F 6702                    		RTSD #08H
00000081                         _usb_hstd_HsFsResult:
                                 		.STACK	_usb_hstd_HsFsResult=12
                                 ;     136 
                                 ;     137 /******************************************************************************
                                 ;     138 Function Name   : usb_hstd_HsFsResult
                                 ;     139 Description     : Return the connected USB device Speed.
                                 ;     140 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     141 Return          : uint16_t       : Device Speed.
                                 ;     142 ******************************************************************************/
                                 ;     143 uint16_t usb_hstd_HsFsResult(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",143
00000081 6080                    		SUB #08H, R0
00000083 A009                    		MOV.L R1, 04H[R0]
                                 ;     144 {
                                 ;     145     return usb_ghstd_DeviceSpeed[ptr->ip];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",145
00000085 B991                    		MOVU.W 0CH[R1], R1
00000087 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_DeviceSpeed, R14
0000008D FE51E1                  		MOV.W [R1,R14], R1
00000090 9009                    		MOV.W R1, 02H[R0]
00000092 9809                    		MOV.W 02H[R0], R1
00000094                         L23:	; entry.split
                                 ;     146 }/* eof usb_hstd_HsFsResult() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",146
00000094 5F11                    		MOVU.W R1, R1
00000096 6702                    		RTSD #08H
00000098                         _usb_hstd_ChangeDeviceState:
                                 		.STACK	_usb_hstd_ChangeDeviceState=28
                                 ;     147 
                                 ;     148 /******************************************************************************
                                 ;     149 Function Name   : usb_hstd_ChangeDeviceState
                                 ;     150 Description     : Request to change status of the connected USB device.
                                 ;     151 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     152                 : USB_CB_t complete : callback function.
                                 ;     153                 : uint16_t msginfo  : Request type.
                                 ;     154                 : uint16_t member   : Rootport/pipe number.
                                 ;     155 Return          : USB_ER_t          : USB_E_OK etc.
                                 ;     156 ******************************************************************************/
                                 ;     157 USB_ER_t usb_hstd_ChangeDeviceState(USB_UTR_t *ptr, USB_CB_t complete, uint16_t msginfo, uint16_t member)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",157
00000098 7100EC                  		ADD #0FFFFFFECH, R0
0000009B A101                    		MOV.L R1, 10H[R0]
0000009D A08A                    		MOV.L R2, 0CH[R0]
0000009F 910B                    		MOV.W R3, 0AH[R0]
000000A1 9104                    		MOV.W R4, 08H[R0]
                                 ;     158 {
                                 ;     159     USB_ER_t    err;
                                 ;     160 
                                 ;     161     err = usb_hstd_HcdSndMbx(ptr, msginfo, member, (uint16_t*)0, complete);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",161
000000A3 A88C                    		MOV.L 0CH[R0], R4
000000A5 B903                    		MOVU.W 08H[R0], R3
000000A7 B90A                    		MOVU.W 0AH[R0], R2
000000A9 A901                    		MOV.L 10H[R0], R1
000000AB 6040                    		SUB #04H, R0
000000AD E304                    		MOV.L R4, [R0]
000000AF 6604                    		MOV.L #00000000H, R4
000000B1 39rrrr               W  		BSR _usb_hstd_HcdSndMbx
000000B4 6240                    		ADD #04H, R0
000000B6 E301                    		MOV.L R1, [R0]
000000B8                         L25:	; entry.split
                                 ;     162 
                                 ;     163     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",163
000000B8 EC01                    		MOV.L [R0], R1
000000BA A009                    		MOV.L R1, 04H[R0]
000000BC                         L26:	; entry.split1
                                 ;     164 }/* eof usb_hstd_ChangeDeviceState() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",164
000000BC 6705                    		RTSD #14H
000000BE                         _usb_hstd_TransferStart:
                                 		.STACK	_usb_hstd_TransferStart=32
                                 ;     165 
                                 ;     166 /******************************************************************************
                                 ;     167 Function Name   : usb_hstd_TransferStart
                                 ;     168 Description     : Send a request for data transfer to HCD (Host Control Driver) 
                                 ;     169                 : using the specified pipe.
                                 ;     170 Arguments       : USB_UTR_t *ptr : USB internal structure. Contains message.
                                 ;     171 Return          : USB_ER_t                  : USB_E_OK/USB_E_QOVR/USB_E_ERROR
                                 ;     172 ******************************************************************************/
                                 ;     173 USB_ER_t usb_hstd_TransferStart(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",173
000000BE 7100E4                  		ADD #0FFFFFFE4H, R0
000000C1 A181                    		MOV.L R1, 18H[R0]
                                 ;     174 {
                                 ;     175     USB_ER_t        err;
                                 ;     176     uint16_t        pipenum, devsel, connect_inf;
                                 ;     177 
                                 ;     178     pipenum = ptr->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",178
000000C3 D5100307                		MOV.W 06H[R1], 0EH[R0]
000000C7                         L28:	; entry.split
                                 ;     179     /* Pipe Transfer Process check */
                                 ;     180     if (usb_gcstd_Pipe[ptr->ip][pipenum] != USB_NULL)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",180
000000C7 A981                    		MOV.L 18H[R0], R1
000000C9 B991                    		MOVU.W 0CH[R1], R1
000000CB 751128                  		MUL #28H, R1
000000CE FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000000D4 4B1E                    		ADD R1, R14
000000D6 B989                    		MOVU.W 0EH[R0], R1
000000D8 FE61EE                  		MOV.L [R1,R14], R14
000000DB 610E                    		CMP #00H, R14
000000DD 20rr                    		BEQ L31
000000DF                         L29:	; bb10
                                 ;     181     {
                                 ;     182         /* Check PIPE TYPE */
                                 ;     183         if (usb_cstd_GetPipeType(ptr, pipenum) != USB_ISO)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",183
000000DF B98A                    		MOVU.W 0EH[R0], R2
000000E1 A981                    		MOV.L 18H[R0], R1
000000E3 05rrrrrr             A  		BSR _usb_cstd_GetPipeType
000000E7 770100C000              		CMP #0C000H, R1
000000EC 10                   S  		BEQ L31
000000ED                         L30:	; bb11
                                 ;     184         {
                                 ;     185             USB_PRINTF1("### R_usb_hstd_TransferStart overlaps %d\n", pipenum);
                                 ;     186             return USB_E_QOVR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",186
000000ED F90601D5                		MOV.L #0FFFFFFD5H, 04H[R0]
000000F1 2Err                 B  		BRA L47
000000F3                         L31:	; bb34
                                 ;     187         }
                                 ;     188     }
                                 ;     189 
                                 ;     190     if (pipenum == USB_PIPE0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",190
000000F3 B989                    		MOVU.W 0EH[R0], R1
000000F5 6101                    		CMP #00H, R1
000000F7 A981                    		MOV.L 18H[R0], R1
000000F9 18                   S  		BNE L33
000000FA                         L32:	; bb35
                                 ;     191     {
                                 ;     192         devsel = (uint16_t)(ptr->setup[4] << USB_DEVADDRBIT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",192
000000FA A999                    		MOV.L 1CH[R1], R1
000000FC 9911                    		MOV.W 08H[R1], R1
000000FE 6CC1                    		SHLL #0CH, R1
00000100 9201                    		MOV.W R1, 10H[R0]
00000102 08                   S  		BRA L34
00000103                         L33:	; bb44
                                 ;     193     }
                                 ;     194     else
                                 ;     195     {
                                 ;     196         /* Get device address from pipe number */
                                 ;     197         devsel = usb_cstd_GetDevsel(ptr, pipenum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",197
00000103 B98A                    		MOVU.W 0EH[R0], R2
00000105 05rrrrrr             A  		BSR _usb_cstd_GetDevsel
00000109 9201                    		MOV.W R1, 10H[R0]
0000010B                         L34:	; bb54
                                 ;     198     }
                                 ;     199     if ((devsel == USB_DEVICE_0) && (pipenum != USB_PIPE0))
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",199
0000010B BA01                    		MOVU.W 10H[R0], R1
0000010D 6101                    		CMP #00H, R1
0000010F 10                   S  		BEQ L36
00000110 2Err                 B  		BRA L38
00000112                         L35:	; bb55
                                 ;     200     {
                                 ;     201         USB_PRINTF1("### R_usb_hstd_TransferStart not configured %x\n", devsel);
                                 ;     202         return USB_E_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",202
00000112 F90601FF                		MOV.L #0FFFFFFFFH, 04H[R0]
00000116 2Err                 B  		BRA L47
00000118                         L36:	; bb61
00000118 B989                    		MOVU.W 0EH[R0], R1
0000011A 6101                    		CMP #00H, R1
0000011C 10                   S  		BEQ L38
0000011D                         L37:	; bb66
0000011D F80601                  		MOV.L #00000001H, [R0]
00000120 08                   S  		BRA L39
00000121                         L38:	; bb67
00000121 F80600                  		MOV.L #00000000H, [R0]
00000124                         L39:	; bb68
00000124 EC01                    		MOV.L [R0], R1
00000126 6101                    		CMP #00H, R1
00000128 21rr                    		BNE L35
0000012A                         L40:	; bb73
                                 ;     203     }
                                 ;     204 
                                 ;     205     /* Get device speed from device address */
                                 ;     206     connect_inf = usb_hstd_GetDevSpeed(ptr, devsel);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",206
0000012A BA02                    		MOVU.W 10H[R0], R2
0000012C A981                    		MOV.L 18H[R0], R1
0000012E 05rrrrrr             A  		BSR _usb_hstd_GetDevSpeed
00000132 9209                    		MOV.W R1, 12H[R0]
00000134                         L41:	; bb73.split
                                 ;     207     if (connect_inf == USB_NOCONNECT)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",207
00000134 BA09                    		MOVU.W 12H[R0], R1
00000136 6101                    		CMP #00H, R1
00000138 18                   S  		BNE L43
00000139                         L42:	; bb78
                                 ;     208     {
                                 ;     209         USB_PRINTF1("### R_usb_hstd_TransferStart not connect %x\n", devsel);
                                 ;     210         return USB_E_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",210
00000139 F90601FF                		MOV.L #0FFFFFFFFH, 04H[R0]
0000013D 2Err                 B  		BRA L47
0000013F                         L43:	; bb85
                                 ;     211     }
                                 ;     212 
                                 ;     213     ptr->msghead    = (USB_MH_t)USB_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",213
0000013F A981                    		MOV.L 18H[R0], R1
00000141 F81600                  		MOV.L #00000000H, [R1]
00000144                         L44:	; bb85.split
                                 ;     214     ptr->msginfo    = USB_MSG_HCD_SUBMITUTR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",214
00000144 A981                    		MOV.L 18H[R0], R1
00000146 F919021201              		MOV.W #0112H, 04H[R1]
0000014B                         L45:	; bb85.split1
                                 ;     215     /* Send message */
                                 ;     216     err = USB_SND_MSG(USB_HCD_MBX, (USB_MSG_t*)ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",216
0000014B A982                    		MOV.L 18H[R0], R2
0000014D 6611                    		MOV.L #00000001H, R1
0000014F 05rrrrrr             A  		BSR _usb_cstd_SndMsg
00000153 A081                    		MOV.L R1, 08H[R0]
00000155                         L46:	; bb85.split3
                                 ;     217     if (err != USB_E_OK)
                                 ;     218     {
                                 ;     219         USB_PRINTF1("### R_usb_hstd_TransferStart snd_msg error (%ld)\n", err);
                                 ;     220     }
                                 ;     221     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",221
00000155 E5000201                		MOV.L 08H[R0], 04H[R0]
00000159                         L47:	; bb102
00000159 A809                    		MOV.L 04H[R0], R1
0000015B A109                    		MOV.L R1, 14H[R0]
                                 ;     222 }/* eof usb_hstd_TransferStart() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",222
0000015D 6707                    		RTSD #1CH
0000015F                         _usb_hstd_DeviceUsbReset:
                                 		.STACK	_usb_hstd_DeviceUsbReset=12
                                 ;     223 
                                 ;     224 /******************************************************************************
                                 ;     225 Function Name   : usb_hstd_DeviceUsbReset
                                 ;     226 Description     : Send USB bus reset request to MGR task, and move USB device to 
                                 ;     227                 : default status.
                                 ;     228 Argument        : uint16_t devaddr          : Device Address
                                 ;     229 Return          : none
                                 ;     230 ******************************************************************************/
                                 ;     231 void usb_hstd_DeviceUsbReset(USB_UTR_t *ptr, uint16_t devaddr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",231
0000015F 6080                    		SUB #08H, R0
00000161 A009                    		MOV.L R1, 04H[R0]
00000163 900A                    		MOV.W R2, 02H[R0]
                                 ;     232 {
                                 ;     233     usb_hstd_MgrSndMbx(ptr, (uint16_t)USB_MSG_HCD_USBRESET, devaddr, (uint16_t)0u);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",233
00000165 B80B                    		MOVU.W 02H[R0], R3
00000167 A809                    		MOV.L 04H[R0], R1
00000169 6604                    		MOV.L #00000000H, R4
0000016B FB2A0301                		MOV.L #00000103H, R2
0000016F 39rrrr               W  		BSR _usb_hstd_MgrSndMbx
00000172 6702                    		RTSD #08H
00000174                         _usb_hstd_DeviceResume:
                                 		.STACK	_usb_hstd_DeviceResume=12
                                 ;     234 }/* eof usb_hstd_DeviceUsbReset() */
                                 ;     235 
                                 ;     236 /******************************************************************************
                                 ;     237 Function Name   : usb_hstd_DeviceResume
                                 ;     238 Description     : Send request for RESUME signal output to USB device to MGR task.
                                 ;     239 Argument        : uint16_t devaddr          : Device Address
                                 ;     240 Return          : none
                                 ;     241 ******************************************************************************/
                                 ;     242 void usb_hstd_DeviceResume(USB_UTR_t *ptr, uint16_t devaddr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",242
00000174 6080                    		SUB #08H, R0
00000176 A009                    		MOV.L R1, 04H[R0]
00000178 900A                    		MOV.W R2, 02H[R0]
                                 ;     243 {
                                 ;     244     usb_hstd_MgrSndMbx(ptr, (uint16_t)USB_MSG_HCD_RESUME, devaddr, (uint16_t)0u);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",244
0000017A B80B                    		MOVU.W 02H[R0], R3
0000017C A809                    		MOV.L 04H[R0], R1
0000017E 6604                    		MOV.L #00000000H, R4
00000180 FB2A0501                		MOV.L #00000105H, R2
00000184 39rrrr               W  		BSR _usb_hstd_MgrSndMbx
00000187 6702                    		RTSD #08H
00000189                         _usb_hstd_HcdSndMbx:
                                 		.STACK	_usb_hstd_HcdSndMbx=40
                                 ;     245 }/* eof usb_hstd_DeviceResume() */
                                 ;     246 
                                 ;     247 /******************************************************************************
                                 ;     248 Function Name   : usb_hstd_HcdSndMbx
                                 ;     249 Description     : Send specified message to HCD (Host Control Driver) task.
                                 ;     250 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     251                 : uint16_t  msginfo : Message info..
                                 ;     252                 : uint16_t  dat     : Pipe no.
                                 ;     253                 : uint16_t  *adr    : Address.
                                 ;     254                 : USB_CB_t  callback: Callback function pointer.
                                 ;     255 Return          : USB_ER_t          : USB_E_OK etc.
                                 ;     256 ******************************************************************************/
                                 ;     257 USB_ER_t usb_hstd_HcdSndMbx(USB_UTR_t *ptr, uint16_t msginfo, uint16_t dat, uint16_t *adr, USB_CB_t callback)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",257
00000189 7100DC                  		ADD #0FFFFFFDCH, R0
0000018C A201                    		MOV.L R1, 20H[R0]
0000018E 938A                    		MOV.W R2, 1EH[R0]
00000190 9383                    		MOV.W R3, 1CH[R0]
00000192 A184                    		MOV.L R4, 18H[R0]
00000194 E5000A05                		MOV.L 28H[R0], 14H[R0]
00000198 EF02                    		MOV.L R0, R2
0000019A 6611                    		MOV.L #00000001H, R1
                                 ;     258 {
                                 ;     259     USB_MH_t        p_blf;
                                 ;     260     USB_ER_t        err, err2;
                                 ;     261     USB_HCDINFO_t   *hp;
                                 ;     262 
                                 ;     263     /* Get mem pool blk */
                                 ;     264     err = USB_PGET_BLK(USB_HCD_MPL, &p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",264
0000019C 05rrrrrr             A  		BSR _usb_cstd_PgetBlk
000001A0 A009                    		MOV.L R1, 04H[R0]
000001A2                         L51:	; entry.split
                                 ;     265     if (err == USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",265
000001A2 A809                    		MOV.L 04H[R0], R1
000001A4 6101                    		CMP #00H, R1
000001A6 21rr                    		BNE L63
000001A8                         L52:	; bb12
                                 ;     266     {
                                 ;     267         hp = (USB_HCDINFO_t*)p_blf;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",267
000001A8 E40003                  		MOV.L [R0], 0CH[R0]
000001AB                         L53:	; bb12.split
                                 ;     268         hp->msghead     = (USB_MH_t)USB_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",268
000001AB A889                    		MOV.L 0CH[R0], R1
000001AD F81600                  		MOV.L #00000000H, [R1]
000001B0                         L54:	; bb12.split1
                                 ;     269         hp->msginfo     = msginfo;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",269
000001B0 9B89                    		MOV.W 1EH[R0], R1
000001B2 A88A                    		MOV.L 0CH[R0], R2
000001B4 90A1                    		MOV.W R1, 04H[R2]
000001B6                         L55:	; bb12.split2
                                 ;     270         hp->keyword     = dat;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",270
000001B6 9B81                    		MOV.W 1CH[R0], R1
000001B8 A88A                    		MOV.L 0CH[R0], R2
000001BA 90A9                    		MOV.W R1, 06H[R2]
000001BC                         L56:	; bb12.split3
                                 ;     271         hp->tranadr     = adr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",271
000001BC A981                    		MOV.L 18H[R0], R1
000001BE A88A                    		MOV.L 0CH[R0], R2
000001C0 A129                    		MOV.L R1, 14H[R2]
000001C2                         L57:	; bb12.split4
                                 ;     272         hp->complete    = callback;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",272
000001C2 A909                    		MOV.L 14H[R0], R1
000001C4 A88A                    		MOV.L 0CH[R0], R2
000001C6 A121                    		MOV.L R1, 10H[R2]
000001C8                         L58:	; bb12.split5
                                 ;     273         hp->ipp         = ptr->ipp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",273
000001C8 AA01                    		MOV.L 20H[R0], R1
000001CA A88A                    		MOV.L 0CH[R0], R2
000001CC E5120202                		MOV.L 08H[R1], 08H[R2]
000001D0                         L59:	; bb12.split6
                                 ;     274         hp->ip          = ptr->ip;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",274
000001D0 AA01                    		MOV.L 20H[R0], R1
000001D2 A88A                    		MOV.L 0CH[R0], R2
000001D4 D5120606                		MOV.W 0CH[R1], 0CH[R2]
000001D8                         L60:	; bb12.split7
                                 ;     275 
                                 ;     276         /* Send message */
                                 ;     277         err = USB_SND_MSG(USB_HCD_MBX, (USB_MSG_t*)p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",277
000001D8 EC02                    		MOV.L [R0], R2
000001DA 6611                    		MOV.L #00000001H, R1
000001DC 05rrrrrr             A  		BSR _usb_cstd_SndMsg
000001E0 A009                    		MOV.L R1, 04H[R0]
000001E2                         L61:	; bb12.split8
                                 ;     278         if (err != USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",278
000001E2 A809                    		MOV.L 04H[R0], R1
000001E4 6101                    		CMP #00H, R1
000001E6 20rr                    		BEQ L63
000001E8                         L62:	; bb46
                                 ;     279         {
                                 ;     280             USB_PRINTF1("### hHcdSndMbx snd_msg error (%ld)\n", err);
                                 ;     281             err2 = USB_REL_BLK(USB_HCD_MPL, (USB_MH_t)p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",281
000001E8 EC02                    		MOV.L [R0], R2
000001EA 6611                    		MOV.L #00000001H, R1
000001EC 05rrrrrr             A  		BSR _usb_cstd_RelBlk
000001F0 A081                    		MOV.L R1, 08H[R0]
000001F2                         L63:	; bb66
                                 ;     282             if (err2 != USB_E_OK)
                                 ;     283             {
                                 ;     284                 USB_PRINTF1("### hHcdSndMbx rel_blk error (%ld)\n", err2);
                                 ;     285             }
                                 ;     286         }
                                 ;     287     }
                                 ;     288     else
                                 ;     289     {
                                 ;     290         USB_PRINTF1("### hHcdSndMbx pget_blk error (%ld)\n", err);
                                 ;     291     }
                                 ;     292     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",292
000001F2 A809                    		MOV.L 04H[R0], R1
000001F4 A101                    		MOV.L R1, 10H[R0]
000001F6                         L64:	; bb66.split
                                 ;     293 }/* eof usb_hstd_HcdSndMbx() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",293
000001F6 6709                    		RTSD #24H
000001F8                         _usb_hstd_MgrSndMbx:
                                 		.STACK	_usb_hstd_MgrSndMbx=32
                                 ;     294 
                                 ;     295 /******************************************************************************
                                 ;     296 Function Name   : usb_hstd_MgrSndMbx
                                 ;     297 Description     : Send the message to MGR(Manager) task
                                 ;     298 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     299                 : uint16_t msginfo  : Message info.
                                 ;     300                 : uint16_t dat      : Port no.
                                 ;     301                 : uint16_t res               : Result
                                 ;     302 Return          : none
                                 ;     303 ******************************************************************************/
                                 ;     304 void usb_hstd_MgrSndMbx(USB_UTR_t *ptr, uint16_t msginfo, uint16_t dat, uint16_t res)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",304
000001F8 7100E4                  		ADD #0FFFFFFE4H, R0
000001FB A181                    		MOV.L R1, 18H[R0]
000001FD 928A                    		MOV.W R2, 16H[R0]
000001FF 9283                    		MOV.W R3, 14H[R0]
00000201 920C                    		MOV.W R4, 12H[R0]
00000203 EF02                    		MOV.L R0, R2
00000205 6621                    		MOV.L #00000002H, R1
                                 ;     305 {
                                 ;     306     USB_MH_t        p_blf;
                                 ;     307     USB_ER_t        err, err2;
                                 ;     308     USB_MGRINFO_t   *mp;
                                 ;     309 
                                 ;     310     /* Get mem pool blk */
                                 ;     311     err = USB_PGET_BLK(USB_MGR_MPL, &p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",311
00000207 05rrrrrr             A  		BSR _usb_cstd_PgetBlk
0000020B A009                    		MOV.L R1, 04H[R0]
0000020D                         L66:	; entry.split
                                 ;     312     if (err == USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",312
0000020D A809                    		MOV.L 04H[R0], R1
0000020F 6101                    		CMP #00H, R1
00000211 21rr                    		BNE L78
00000213                         L67:	; bb10
                                 ;     313     {
                                 ;     314         mp = (USB_MGRINFO_t *)p_blf;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",314
00000213 E40003                  		MOV.L [R0], 0CH[R0]
00000216                         L68:	; bb10.split
                                 ;     315         mp->msghead = (USB_MH_t)USB_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",315
00000216 A889                    		MOV.L 0CH[R0], R1
00000218 F81600                  		MOV.L #00000000H, [R1]
0000021B                         L69:	; bb10.split1
                                 ;     316         mp->msginfo = msginfo;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",316
0000021B 9A89                    		MOV.W 16H[R0], R1
0000021D A88A                    		MOV.L 0CH[R0], R2
0000021F 90A1                    		MOV.W R1, 04H[R2]
00000221                         L70:	; bb10.split2
                                 ;     317         mp->keyword = dat;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",317
00000221 9A81                    		MOV.W 14H[R0], R1
00000223 A88A                    		MOV.L 0CH[R0], R2
00000225 90A9                    		MOV.W R1, 06H[R2]
00000227                         L71:	; bb10.split3
                                 ;     318         mp->result  = res;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",318
00000227 9A09                    		MOV.W 12H[R0], R1
00000229 A88A                    		MOV.L 0CH[R0], R2
0000022B 91A9                    		MOV.W R1, 0EH[R2]
0000022D                         L72:	; bb10.split4
                                 ;     319         mp->ipp     = ptr->ipp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",319
0000022D A981                    		MOV.L 18H[R0], R1
0000022F A88A                    		MOV.L 0CH[R0], R2
00000231 E5120202                		MOV.L 08H[R1], 08H[R2]
00000235                         L73:	; bb10.split5
                                 ;     320         mp->ip      = ptr->ip;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",320
00000235 A981                    		MOV.L 18H[R0], R1
00000237 A88A                    		MOV.L 0CH[R0], R2
00000239 D5120606                		MOV.W 0CH[R1], 0CH[R2]
0000023D                         L74:	; bb10.split6
                                 ;     321 
                                 ;     322         /* Send message */
                                 ;     323         err = USB_SND_MSG(USB_MGR_MBX, (USB_MSG_t *)p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",323
0000023D EC02                    		MOV.L [R0], R2
0000023F 6621                    		MOV.L #00000002H, R1
00000241 05rrrrrr             A  		BSR _usb_cstd_SndMsg
00000245 A009                    		MOV.L R1, 04H[R0]
00000247                         L75:	; bb10.split7
                                 ;     324         if (err != USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",324
00000247 A809                    		MOV.L 04H[R0], R1
00000249 6101                    		CMP #00H, R1
0000024B 20rr                    		BEQ L78
0000024D                         L76:	; bb40
                                 ;     325         {
                                 ;     326             USB_PRINTF1("### hMgrSndMbx snd_msg error (%ld)\n", err);
                                 ;     327             err2 = USB_REL_BLK(USB_MGR_MPL, (USB_MH_t)p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",327
0000024D EC02                    		MOV.L [R0], R2
0000024F 6621                    		MOV.L #00000002H, R1
00000251 05rrrrrr             A  		BSR _usb_cstd_RelBlk
00000255 A081                    		MOV.L R1, 08H[R0]
00000257                         L77:	; bb40.split
                                 ;     328             if (err2 != USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",328
00000257 6707                    		RTSD #1CH
00000259                         L78:	; return
                                 ;     329             {
                                 ;     330                 USB_PRINTF1("### hMgrSndMbx rel_blk error (%ld)\n", err2);
                                 ;     331             }
                                 ;     332         }
                                 ;     333     }
                                 ;     334     else
                                 ;     335     {
                                 ;     336         USB_PRINTF1("### hMgrSndMbx pget_blk error (%ld)\n", err);
                                 ;     337     }
                                 ;     338 }/* eof usb_hstd_MgrSndMbx */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",338
00000259 6707                    		RTSD #1CH
0000025B                         _usb_hstd_HcdRelMpl:
                                 		.STACK	_usb_hstd_HcdRelMpl=16
                                 ;     339 
                                 ;     340 /******************************************************************************
                                 ;     341 Function Name   : usb_hstd_HcdRelMpl
                                 ;     342 Description     : Release the secured memory block.
                                 ;     343 Argument        : uint16_t n        : Error no.
                                 ;     344 Return          : none
                                 ;     345 ******************************************************************************/
                                 ;     346 void usb_hstd_HcdRelMpl(USB_UTR_t *ptr, uint16_t n)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",346
0000025B 60C0                    		SUB #0CH, R0
0000025D A081                    		MOV.L R1, 08H[R0]
0000025F 908A                    		MOV.W R2, 06H[R0]
                                 ;     347 {
                                 ;     348     USB_ER_t        err;
                                 ;     349 
                                 ;     350     /* Memory Pool Release */
                                 ;     351     err = USB_REL_BLK(USB_HCD_MPL, (USB_MH_t)ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",351
00000261 A882                    		MOV.L 08H[R0], R2
00000263 6611                    		MOV.L #00000001H, R1
00000265 05rrrrrr             A  		BSR _usb_cstd_RelBlk
00000269 E301                    		MOV.L R1, [R0]
0000026B                         L80:	; entry.split
                                 ;     352     if (err != USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",352
0000026B 6703                    		RTSD #0CH
0000026D                         _usb_hstd_Suspend:
                                 		.STACK	_usb_hstd_Suspend=16
                                 ;     353     {
                                 ;     354         USB_PRINTF1("### USB HCD rel_blk error: %d\n", n);
                                 ;     355     }
                                 ;     356 }/* eof usb_hstd_HcdRelMpl() */
                                 ;     357 
                                 ;     358 /******************************************************************************
                                 ;     359 Function Name   : usb_hstd_Suspend
                                 ;     360 Description     : Request suspend for USB device.
                                 ;     361 Argument        : uint16_t port     : Port no.
                                 ;     362 Return          : none
                                 ;     363 ******************************************************************************/
                                 ;     364 void usb_hstd_Suspend(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",364
0000026D 60C0                    		SUB #0CH, R0
0000026F A081                    		MOV.L R1, 08H[R0]
00000271 908A                    		MOV.W R2, 06H[R0]
                                 ;     365 {
                                 ;     366     USB_HCDINFO_t*    hp;
                                 ;     367 
                                 ;     368     /* Control transfer idle stage ? */
                                 ;     369     if (usb_ghstd_Ctsq[ptr->ip] == USB_IDLEST)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",369
00000273 A881                    		MOV.L 08H[R0], R1
00000275 B991                    		MOVU.W 0CH[R1], R1
00000277 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_Ctsq, R14
0000027D FED1EE                  		MOVU.W [R1,R14], R14
00000280 610E                    		CMP #00H, R14
00000282 21rr                    		BNE L86
00000284                         L82:	; bb4
                                 ;     370     {
                                 ;     371         /* USB suspend process */
                                 ;     372         usb_hstd_SuspendProcess(ptr, port);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",372
00000284 B88A                    		MOVU.W 06H[R0], R2
00000286 A881                    		MOV.L 08H[R0], R1
00000288 05rrrrrr             A  		BSR _usb_hstd_SuspendProcess
0000028C                         L83:	; bb4.split
                                 ;     373         /* Check clock */
                                 ;     374         usb_hstd_ChkClk(ptr, port, (uint16_t)USB_SUSPENDED);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",374
0000028C B88A                    		MOVU.W 06H[R0], R2
0000028E A881                    		MOV.L 08H[R0], R1
00000290 754350                  		MOV.L #00000050H, R3
00000293 05rrrrrr             A  		BSR _usb_hstd_ChkClk
00000297                         L84:	; bb4.split1
                                 ;     375         /* Callback */
                                 ;     376         hp = (USB_HCDINFO_t*)ptr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",376
00000297 E10002                  		MOV.L 08H[R0], [R0]
0000029A                         L85:	; bb4.split2
                                 ;     377         (hp->complete)(ptr, port, ptr->msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",377
0000029A A881                    		MOV.L 08H[R0], R1
0000029C B893                    		MOVU.W 04H[R1], R3
0000029E EC02                    		MOV.L [R0], R2
000002A0 A924                    		MOV.L 10H[R2], R4
000002A2 B88A                    		MOVU.W 06H[R0], R2
000002A4 7F14                    		JSR R4
000002A6 6703                    		RTSD #0CH
000002A8                         L86:	; bb17
000002A8 6611                    		MOV.L #00000001H, R1
                                 ;     378     }
                                 ;     379     else
                                 ;     380     {
                                 ;     381         /* 1ms wait */
                                 ;     382         usb_cpu_DelayXms((uint16_t)1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",382
000002AA 05rrrrrr             A  		BSR _usb_cpu_DelayXms
000002AE                         L87:	; bb17.split
                                 ;     383         /* Change device state request */
                                 ;     384         usb_hstd_ChangeDeviceState(ptr, &usb_hstd_StatusResult, ptr->msginfo, port);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",384
000002AE A881                    		MOV.L 08H[R0], R1
000002B0 B893                    		MOVU.W 04H[R1], R3
000002B2 B88C                    		MOVU.W 06H[R0], R4
000002B4 FB22rrrrrrrr            		MOV.L #_usb_hstd_StatusResult, R2
000002BA 39rrrr               W  		BSR _usb_hstd_ChangeDeviceState
000002BD 6703                    		RTSD #0CH
000002BF                         __$usb_hstd_SetSubmitutr:
                                 		.STACK	__$usb_hstd_SetSubmitutr=32
                                 ;     385     }
                                 ;     386 }/* eof usb_hstd_Suspend() */
                                 ;     387 
                                 ;     388 /******************************************************************************
                                 ;     389 Function Name   : usb_hstd_SetSubmitutr
                                 ;     390 Description     : Submit utr: Get the device address via the specified pipe num-
                                 ;     391                 : ber and do a USB transfer.
                                 ;     392 Arguments       : USB_UTR_t *ptr : USB system internal structure. Also used in 
                                 ;     393                 : this function to get device address, and specifies keyword and
                                 ;     394                 : USB channel.
                                 ;     395 Return          : USB_ER_t                      : USB_DONE
                                 ;     396 ******************************************************************************/
                                 ;     397 USB_ER_t usb_hstd_SetSubmitutr(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",397
000002BF 7100E4                  		ADD #0FFFFFFE4H, R0
000002C2 A181                    		MOV.L R1, 18H[R0]
                                 ;     398 {
                                 ;     399     uint16_t    pipenum, devsel, connect_inf;
                                 ;     400     uint16_t    end_flag;
                                 ;     401     USB_UTR_t    *pp;
                                 ;     402 
                                 ;     403     pipenum = ptr->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",403
000002C4 D5100304                		MOV.W 06H[R1], 08H[R0]
000002C8                         L89:	; entry.split
                                 ;     404     usb_gcstd_Pipe[ptr->ip][pipenum] = ptr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",404
000002C8 A981                    		MOV.L 18H[R0], R1
000002CA B992                    		MOVU.W 0CH[R1], R2
000002CC 751228                  		MUL #28H, R2
000002CF FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000002D5 4B2E                    		ADD R2, R14
000002D7 B902                    		MOVU.W 08H[R0], R2
000002D9 FE22E1                  		MOV.L R1, [R2,R14]
000002DC                         L90:	; entry.split1
                                 ;     405 
                                 ;     406     /* Get device address from pipe number */
                                 ;     407     if (pipenum == USB_PIPE0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",407
000002DC B901                    		MOVU.W 08H[R0], R1
000002DE 6101                    		CMP #00H, R1
000002E0 A981                    		MOV.L 18H[R0], R1
000002E2 18                   S  		BNE L92
000002E3                         L91:	; bb20
                                 ;     408     {
                                 ;     409         devsel = (uint16_t)(ptr->setup[4] << USB_DEVADDRBIT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",409
000002E3 A999                    		MOV.L 1CH[R1], R1
000002E5 9911                    		MOV.W 08H[R1], R1
000002E7 6CC1                    		SHLL #0CH, R1
000002E9 9109                    		MOV.W R1, 0AH[R0]
000002EB 08                   S  		BRA L93
000002EC                         L92:	; bb29
                                 ;     410     }
                                 ;     411     else
                                 ;     412     {
                                 ;     413         /* Get device address from pipe number */
                                 ;     414         devsel = usb_cstd_GetDevsel(ptr, pipenum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",414
000002EC B902                    		MOVU.W 08H[R0], R2
000002EE 05rrrrrr             A  		BSR _usb_cstd_GetDevsel
000002F2 9109                    		MOV.W R1, 0AH[R0]
000002F4                         L93:	; bb38
                                 ;     415     }
                                 ;     416     if ((devsel == USB_DEVICE_0) && (pipenum != USB_PIPE0))
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",416
000002F4 B909                    		MOVU.W 0AH[R0], R1
000002F6 6101                    		CMP #00H, R1
000002F8 20rr                    		BEQ L96
000002FA 2Err                 B  		BRA L98
000002FC                         L94:	; bb39
                                 ;     417     {
                                 ;     418         /* End of data transfer (IN/OUT) */
                                 ;     419         usb_cstd_ForcedTermination(ptr, pipenum, (uint16_t)USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",419
000002FC B902                    		MOVU.W 08H[R0], R2
000002FE 6673                    		MOV.L #00000007H, R3
00000300 05rrrrrr             A  		BSR _usb_cstd_ForcedTermination
00000304                         L95:	; bb39.split
                                 ;     420         return USB_DONE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",420
00000304 3E0100                  		MOV.L #00000000H, 04H[R0]
00000307 38rrrr               W  		BRA L120
0000030A                         L96:	; bb47
0000030A B901                    		MOVU.W 08H[R0], R1
0000030C 6101                    		CMP #00H, R1
0000030E 10                   S  		BEQ L98
0000030F                         L97:	; bb52
0000030F F80601                  		MOV.L #00000001H, [R0]
00000312 08                   S  		BRA L99
00000313                         L98:	; bb53
00000313 F80600                  		MOV.L #00000000H, [R0]
00000316                         L99:	; bb54
00000316 EC01                    		MOV.L [R0], R1
00000318 6101                    		CMP #00H, R1
0000031A A981                    		MOV.L 18H[R0], R1
0000031C 21rr                    		BNE L94
0000031E                         L100:	; bb59
                                 ;     421     }
                                 ;     422 
                                 ;     423     /* Get device speed from device address */
                                 ;     424     connect_inf = usb_hstd_GetDevSpeed(ptr, devsel);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",424
0000031E B90A                    		MOVU.W 0AH[R0], R2
00000320 05rrrrrr             A  		BSR _usb_hstd_GetDevSpeed
00000324 9181                    		MOV.W R1, 0CH[R0]
00000326                         L101:	; bb59.split
                                 ;     425     if (connect_inf == USB_NOCONNECT)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",425
00000326 B901                    		MOVU.W 08H[R0], R1
00000328 6101                    		CMP #00H, R1
0000032A FCDBE0                  		SCEQ.L R14
0000032D B981                    		MOVU.W 0CH[R0], R1
0000032F 6101                    		CMP #00H, R1
00000331 A981                    		MOV.L 18H[R0], R1
00000333 21rr                    		BNE L106
00000335                         L102:	; bb65
                                 ;     426     {
                                 ;     427         if (pipenum == USB_PIPE0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",427
00000335 5BEE                    		MOVU.B R14, R14
00000337 610E                    		CMP #00H, R14
00000339 10                   S  		BEQ L104
0000033A                         L103:	; bb66
0000033A 6672                    		MOV.L #00000007H, R2
                                 ;     428         {
                                 ;     429             /* Control Read/Write End */
                                 ;     430             usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",430
0000033C 05rrrrrr             A  		BSR _usb_hstd_ControlEnd
00000340 08                   S  		BRA L105
00000341                         L104:	; bb68
                                 ;     431         }
                                 ;     432         else
                                 ;     433         {
                                 ;     434             /* End of data transfer (IN/OUT) */
                                 ;     435             usb_cstd_ForcedTermination(ptr, pipenum, (uint16_t)USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",435
00000341 B902                    		MOVU.W 08H[R0], R2
00000343 6673                    		MOV.L #00000007H, R3
00000345 05rrrrrr             A  		BSR _usb_cstd_ForcedTermination
00000349                         L105:	; bb76
                                 ;     436         }
                                 ;     437         return USB_DONE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",437
00000349 3E0100                  		MOV.L #00000000H, 04H[R0]
0000034C 38rrrr               W  		BRA L120
0000034F                         L106:	; bb84
                                 ;     438     }
                                 ;     439 
                                 ;     440     /* Control Transfer */
                                 ;     441     if (pipenum == USB_PIPE0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",441
0000034F 5BEE                    		MOVU.B R14, R14
00000351 610E                    		CMP #00H, R14
00000353 3Arrrr               W  		BEQ L118
00000356                         L107:	; bb86
                                 ;     442     {
                                 ;     443         /* Control transfer idle stage ? */
                                 ;     444         if (usb_ghstd_Ctsq[ptr->ip] == USB_IDLEST)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",444
00000356 B991                    		MOVU.W 0CH[R1], R1
00000358 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_Ctsq, R14
0000035E FED1EE                  		MOVU.W [R1,R14], R14
00000361 610E                    		CMP #00H, R14
00000363 A981                    		MOV.L 18H[R0], R1
00000365 18                   S  		BNE L109
00000366                         L108:	; bb87
                                 ;     445         {            
                                 ;     446             usb_hstd_SetupStart(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",446
00000366 05rrrrrr             A  		BSR _usb_hstd_SetupStart
0000036A 38rrrr               W  		BRA L119
0000036D                         L109:	; bb90
                                 ;     447         }
                                 ;     448         /* Control Read Data */
                                 ;     449         else if (usb_ghstd_Ctsq[ptr->ip] == USB_DATARDCNT)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",449
0000036D B991                    		MOVU.W 0CH[R1], R1
0000036F FBE2rrrrrrrr            		MOV.L #_usb_ghstd_Ctsq, R14
00000375 FED1EE                  		MOVU.W [R1,R14], R14
00000378 755E14                  		CMP #14H, R14
0000037B A981                    		MOV.L 18H[R0], R1
0000037D B991                    		MOVU.W 0CH[R1], R1
0000037F 21rr                    		BNE L112
00000381                         L110:	; bb91
                                 ;     450         {
                                 ;     451             pp = usb_gcstd_Pipe[ptr->ip][USB_PIPE0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",451
00000381 751128                  		MUL #28H, R1
00000384 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
0000038A 4B1E                    		ADD R1, R14
0000038C E4E004                  		MOV.L [R14], 10H[R0]
0000038F                         L111:	; bb91.split
                                 ;     452             /* Control read start */
                                 ;     453             usb_hstd_ControlReadStart(ptr, pp->tranlen, (uint8_t*)pp->tranadr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",453
0000038F A901                    		MOV.L 10H[R0], R1
00000391 A91B                    		MOV.L 14H[R1], R3
00000393 A992                    		MOV.L 18H[R1], R2
00000395 A981                    		MOV.L 18H[R0], R1
00000397 05rrrrrr             A  		BSR _usb_hstd_ControlReadStart
0000039B 2Err                 B  		BRA L119
0000039D                         L112:	; bb108
                                 ;     454         }
                                 ;     455         /* Control Write Data */
                                 ;     456         else if (usb_ghstd_Ctsq[ptr->ip] == USB_DATAWRCNT)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",456
0000039D FBE2rrrrrrrr            		MOV.L #_usb_ghstd_Ctsq, R14
000003A3 FED1EE                  		MOVU.W [R1,R14], R14
000003A6 755E13                  		CMP #13H, R14
000003A9 A981                    		MOV.L 18H[R0], R1
000003AB 21rr                    		BNE L117
000003AD                         L113:	; bb109
                                 ;     457         {
                                 ;     458             pp = usb_gcstd_Pipe[ptr->ip][USB_PIPE0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",458
000003AD B991                    		MOVU.W 0CH[R1], R1
000003AF 751128                  		MUL #28H, R1
000003B2 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000003B8 4B1E                    		ADD R1, R14
000003BA E4E004                  		MOV.L [R14], 10H[R0]
000003BD                         L114:	; bb109.split
                                 ;     459             /* Control write start */
                                 ;     460             end_flag = usb_hstd_ControlWriteStart(ptr, pp->tranlen, (uint8_t*)pp->tranadr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",460
000003BD A901                    		MOV.L 10H[R0], R1
000003BF A91B                    		MOV.L 14H[R1], R3
000003C1 A992                    		MOV.L 18H[R1], R2
000003C3 A981                    		MOV.L 18H[R0], R1
000003C5 05rrrrrr             A  		BSR _usb_hstd_ControlWriteStart
000003C9 9189                    		MOV.W R1, 0EH[R0]
000003CB                         L115:	; bb109.split2
                                 ;     461             if (end_flag == USB_FIFOERROR)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",461
000003CB B989                    		MOVU.W 0EH[R0], R1
000003CD 7701FFFF00              		CMP #0FFFFH, R1
000003D2 21rr                    		BNE L119
000003D4                         L116:	; bb127
                                 ;     462             {
                                 ;     463                 USB_PRINTF0("### FIFO access error \n");
                                 ;     464                 /* Control Read/Write End */
                                 ;     465                 usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",465
000003D4 A981                    		MOV.L 18H[R0], R1
000003D6 6672                    		MOV.L #00000007H, R2
000003D8 05rrrrrr             A  		BSR _usb_hstd_ControlEnd
000003DC 2Err                 B  		BRA L119
000003DE                         L117:	; bb135
000003DE 6672                    		MOV.L #00000007H, R2
                                 ;     466             }
                                 ;     467         }
                                 ;     468         else
                                 ;     469         {
                                 ;     470             USB_PRINTF0("### Control transfer seaquence error \n");
                                 ;     471             /* Control Read/Write End */
                                 ;     472             usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",472
000003E0 05rrrrrr             A  		BSR _usb_hstd_ControlEnd
000003E4 08                   S  		BRA L119
000003E5                         L118:	; bb170
                                 ;     473         }
                                 ;     474     }
                                 ;     475     else
                                 ;     476     {
                                 ;     477         /* Data Transfer */
                                 ;     478         usb_hstd_SetReTransfer(ptr, pipenum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",478
000003E5 B902                    		MOVU.W 08H[R0], R2
000003E7 39rrrr               W  		BSR __$usb_hstd_SetReTransfer
000003EA                         L119:	; bb178
                                 ;     479     }
                                 ;     480     return USB_DONE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",480
000003EA 3E0100                  		MOV.L #00000000H, 04H[R0]
000003ED                         L120:	; bb180
000003ED A809                    		MOV.L 04H[R0], R1
000003EF A109                    		MOV.L R1, 14H[R0]
                                 ;     481 }/* eof usb_hstd_SetSubmitutr() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",481
000003F1 6707                    		RTSD #1CH
000003F3                         __$usb_hstd_SetReTransfer:
                                 		.STACK	__$usb_hstd_SetReTransfer=12
                                 ;     482 
                                 ;     483 /******************************************************************************
                                 ;     484 Function Name   : usb_hstd_SetReTransfer
                                 ;     485 Description     : Start IN/OUT transfer based on the specified pipe.
                                 ;     486 Argument        : uint16_t pipe             : Pipe number
                                 ;     487 Return          : none
                                 ;     488 ******************************************************************************/
                                 ;     489 void usb_hstd_SetReTransfer(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",489
000003F3 6080                    		SUB #08H, R0
000003F5 A009                    		MOV.L R1, 04H[R0]
000003F7 900A                    		MOV.W R2, 02H[R0]
                                 ;     490 {
                                 ;     491     /* Data Transfer */
                                 ;     492     if (usb_cstd_GetPipeDir(ptr, pipe) == USB_DIR_H_IN)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",492
000003F9 B80A                    		MOVU.W 02H[R0], R2
000003FB A809                    		MOV.L 04H[R0], R1
000003FD 05rrrrrr             A  		BSR _usb_cstd_GetPipeDir
00000401 6101                    		CMP #00H, R1
00000403 980A                    		MOV.W 02H[R0], R2
00000405 A809                    		MOV.L 04H[R0], R1
00000407 18                   S  		BNE L123
00000408                         L122:	; bb3
                                 ;     493     {
                                 ;     494         /* IN Transfer */
                                 ;     495         usb_cstd_ReceiveStart(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",495
00000408 5F22                    		MOVU.W R2, R2
0000040A 05rrrrrr             A  		BSR _usb_cstd_ReceiveStart
0000040E 6702                    		RTSD #08H
00000410                         L123:	; bb5
                                 ;     496     }
                                 ;     497     else
                                 ;     498     {
                                 ;     499         /* OUT Transfer */
                                 ;     500         usb_cstd_SendStart(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",500
00000410 5F22                    		MOVU.W R2, R2
00000412 05rrrrrr             A  		BSR _usb_cstd_SendStart
00000416 6702                    		RTSD #08H
00000418                         _usb_hstd_BusIntDisable:
                                 		.STACK	_usb_hstd_BusIntDisable=12
                                 ;     501     }
                                 ;     502 }/* eof usb_hstd_SetReTransfer() */
                                 ;     503 
                                 ;     504 /******************************************************************************
                                 ;     505 Function Name   : usb_hstd_BusIntDisable
                                 ;     506 Description     : Disable USB Bus Interrupts OVRCR, ATTCH, DTCH, and BCHG.
                                 ;     507 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     508                 : uint16_t  port : Port number.  //$REA - redundant!
                                 ;     509 Return          : none
                                 ;     510 ******************************************************************************/
                                 ;     511 void usb_hstd_BusIntDisable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",511
00000418 6080                    		SUB #08H, R0
0000041A A009                    		MOV.L R1, 04H[R0]
0000041C 900A                    		MOV.W R2, 02H[R0]
                                 ;     512 {
                                 ;     513     /* ATTCH interrupt disable */
                                 ;     514     usb_hstd_AttchDisable(ptr, port);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",514
0000041E B80A                    		MOVU.W 02H[R0], R2
00000420 A809                    		MOV.L 04H[R0], R1
00000422 05rrrrrr             A  		BSR _usb_hstd_AttchDisable
00000426                         L125:	; entry.split
                                 ;     515     /* DTCH     interrupt disable */
                                 ;     516     usb_hstd_DtchDisable(ptr, port);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",516
00000426 B80A                    		MOVU.W 02H[R0], R2
00000428 A809                    		MOV.L 04H[R0], R1
0000042A 05rrrrrr             A  		BSR _usb_hstd_DtchDisable
0000042E                         L126:	; entry.split1
                                 ;     517     /* BCHG     interrupt disable */
                                 ;     518     usb_hstd_BchgDisable(ptr, port);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",518
0000042E B80A                    		MOVU.W 02H[R0], R2
00000430 A809                    		MOV.L 04H[R0], R1
00000432 05rrrrrr             A  		BSR _usb_hstd_BchgDisable
00000436 6702                    		RTSD #08H
00000438                         _usb_hstd_Interrupt:
                                 		.STACK	_usb_hstd_Interrupt=16
                                 ;     519 }/* eof usb_hstd_BusIntDisable() */
                                 ;     520 
                                 ;     521 /******************************************************************************
                                 ;     522 Function Name   : usb_hstd_Interrupt
                                 ;     523 Description     : Execute appropriate process depending on which USB interrupt 
                                 ;     524                 : occurred.
                                 ;     525 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     526 Return          : none
                                 ;     527 ******************************************************************************/
                                 ;     528 void usb_hstd_Interrupt(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",528
00000438 60C0                    		SUB #0CH, R0
0000043A A081                    		MOV.L R1, 08H[R0]
                                 ;     529 {
                                 ;     530     uint16_t    intsts, end_flag;
                                 ;     531     USB_UTR_t    *pp;
                                 ;     532 
                                 ;     533     intsts = ptr->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",533
0000043C D11003                  		MOV.W 06H[R1], [R0]
0000043F                         L128:	; entry.split
                                 ;     534 //    bitsts = ptr->status;
                                 ;     535 
                                 ;     536     switch( intsts)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",536
0000043F 5C01                    		MOVU.W [R0], R1
00000441 755162                  		CMP #62H, R1
00000444 3Arrrr               W  		BEQ L154
00000447                         L129:	; entry.split
00000447 6121                    		CMP #02H, R1
00000449 20rr                    		BEQ L140
0000044B                         L130:	; entry.split
0000044B 6131                    		CMP #03H, R1
0000044D 20rr                    		BEQ L141
0000044F                         L131:	; entry.split
0000044F 755111                  		CMP #11H, R1
00000452 3Arrrr               W  		BEQ L167
00000455                         L132:	; entry.split
00000455 755113                  		CMP #13H, R1
00000458 3Arrrr               W  		BEQ L168
0000045B                         L133:	; entry.split
0000045B 755141                  		CMP #41H, R1
0000045E 3Arrrr               W  		BEQ L163
00000461                         L134:	; entry.split
00000461 755142                  		CMP #42H, R1
00000464 3Arrrr               W  		BEQ L165
00000467                         L135:	; entry.split
00000467 755143                  		CMP #43H, R1
0000046A 3Arrrr               W  		BEQ L166
0000046D                         L136:	; entry.split
0000046D 755144                  		CMP #44H, R1
00000470 3Arrrr               W  		BEQ L164
00000473                         L137:	; entry.split
00000473 755161                  		CMP #61H, R1
00000476 20rr                    		BEQ L142
00000478                         L138:	; entry.split
00000478 6111                    		CMP #01H, R1
0000047A 3Brrrr               W  		BNE L169
0000047D                         L139:	; bb
                                 ;     537     {
                                 ;     538 
                                 ;     539     /***** Processing PIPE0-MAX_PIPE_NO data *****/
                                 ;     540     case USB_INT_BRDY:
                                 ;     541         usb_hstd_BrdyPipe(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",541
0000047D A881                    		MOV.L 08H[R0], R1
0000047F 05rrrrrr             A  		BSR _usb_hstd_BrdyPipe
00000483 6703                    		RTSD #0CH
00000485                         L140:	; bb10
                                 ;     542     break;
                                 ;     543     case USB_INT_BEMP:
                                 ;     544         usb_hstd_BempPipe(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",544
00000485 A881                    		MOV.L 08H[R0], R1
00000487 05rrrrrr             A  		BSR _usb_hstd_BempPipe
0000048B 6703                    		RTSD #0CH
0000048D                         L141:	; bb12
                                 ;     545     break;
                                 ;     546     case USB_INT_NRDY:
                                 ;     547         usb_hstd_NrdyPipe(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",547
0000048D A881                    		MOV.L 08H[R0], R1
0000048F 05rrrrrr             A  		BSR _usb_hstd_NrdyPipe
00000493 6703                    		RTSD #0CH
00000495                         L142:	; bb14
                                 ;     548     break;
                                 ;     549 
                                 ;     550     /***** Processing Setup transaction *****/
                                 ;     551     case USB_INT_SACK:
                                 ;     552         switch( usb_ghstd_Ctsq[ptr->ip])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",552
00000495 A881                    		MOV.L 08H[R0], R1
00000497 B991                    		MOVU.W 0CH[R1], R1
00000499 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_Ctsq, R14
0000049F FED1EE                  		MOVU.W [R1,R14], R14
000004A2 611E                    		CMP #01H, R14
000004A4 20rr                    		BEQ L153
000004A6                         L143:	; bb14
000004A6 612E                    		CMP #02H, R14
000004A8 20rr                    		BEQ L149
000004AA                         L144:	; bb14
000004AA 613E                    		CMP #03H, R14
000004AC 20rr                    		BEQ L147
000004AE                         L145:	; bb14
000004AE 755E11                  		CMP #11H, R14
000004B1 20rr                    		BEQ L149
000004B3                         L146:	; bb14
000004B3 755E12                  		CMP #12H, R14
000004B6 3Brrrr               W  		BNE L169
000004B9                         L147:	; bb22
                                 ;     553         {
                                 ;     554         case USB_SETUPRD:
                                 ;     555             /* Next stage to Control read data */
                                 ;     556             /* continue */
                                 ;     557         case USB_SETUPRDCNT:
                                 ;     558             /* Next stage to Control read data */
                                 ;     559             pp = usb_gcstd_Pipe[ptr->ip][USB_PIPE0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",559
000004B9 A881                    		MOV.L 08H[R0], R1
000004BB B991                    		MOVU.W 0CH[R1], R1
000004BD 751128                  		MUL #28H, R1
000004C0 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000004C6 4B1E                    		ADD R1, R14
000004C8 E4E001                  		MOV.L [R14], 04H[R0]
000004CB                         L148:	; bb22.split
                                 ;     560             /* Control read start */
                                 ;     561             usb_hstd_ControlReadStart(ptr, pp->tranlen, (uint8_t*)pp->tranadr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",561
000004CB A809                    		MOV.L 04H[R0], R1
000004CD A91B                    		MOV.L 14H[R1], R3
000004CF A992                    		MOV.L 18H[R1], R2
000004D1 A881                    		MOV.L 08H[R0], R1
000004D3 05rrrrrr             A  		BSR _usb_hstd_ControlReadStart
000004D7 6703                    		RTSD #0CH
000004D9                         L149:	; bb38
                                 ;     562         break;
                                 ;     563         case USB_SETUPWR:
                                 ;     564             /* Next stage to Control Write data */
                                 ;     565             /* continue */
                                 ;     566         case USB_SETUPWRCNT:
                                 ;     567             /* Next stage to Control Write data */
                                 ;     568             pp = usb_gcstd_Pipe[ptr->ip][USB_PIPE0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",568
000004D9 A881                    		MOV.L 08H[R0], R1
000004DB B991                    		MOVU.W 0CH[R1], R1
000004DD 751128                  		MUL #28H, R1
000004E0 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000004E6 4B1E                    		ADD R1, R14
000004E8 E4E001                  		MOV.L [R14], 04H[R0]
000004EB                         L150:	; bb38.split
                                 ;     569             /* Control write start */
                                 ;     570             end_flag = usb_hstd_ControlWriteStart(ptr, pp->tranlen, (uint8_t*)pp->tranadr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",570
000004EB A809                    		MOV.L 04H[R0], R1
000004ED A91B                    		MOV.L 14H[R1], R3
000004EF A992                    		MOV.L 18H[R1], R2
000004F1 A881                    		MOV.L 08H[R0], R1
000004F3 05rrrrrr             A  		BSR _usb_hstd_ControlWriteStart
000004F7 9009                    		MOV.W R1, 02H[R0]
000004F9                         L151:	; bb38.split1
                                 ;     571             if (end_flag == USB_FIFOERROR)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",571
000004F9 B809                    		MOVU.W 02H[R0], R1
000004FB 7701FFFF00              		CMP #0FFFFH, R1
00000500 3Brrrr               W  		BNE L169
00000503                         L152:	; bb56
                                 ;     572             {
                                 ;     573                 USB_PRINTF0("### FIFO access error \n");
                                 ;     574                 /* Control Read/Write End */
                                 ;     575                 usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",575
00000503 A881                    		MOV.L 08H[R0], R1
00000505 6672                    		MOV.L #00000007H, R2
00000507 05rrrrrr             A  		BSR _usb_hstd_ControlEnd
0000050B 6703                    		RTSD #0CH
0000050D                         L153:	; bb63
                                 ;     576             }
                                 ;     577         break;
                                 ;     578         case USB_SETUPNDC:
                                 ;     579             /* Next stage to Control write no data */
                                 ;     580             usb_hstd_StatusStart(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",580
0000050D A881                    		MOV.L 08H[R0], R1
0000050F 05rrrrrr             A  		BSR _usb_hstd_StatusStart
00000513 6703                    		RTSD #0CH
00000515                         L154:	; bb67
                                 ;     581         break;
                                 ;     582         default:
                                 ;     583         break;
                                 ;     584         }
                                 ;     585     break;
                                 ;     586     case USB_INT_SIGN:
                                 ;     587         USB_PRINTF0("***SIGN\n");
                                 ;     588 #ifdef USB_HOST_COMPLIANCE_MODE
                                 ;     589         USB_COMPLIANCE_DISP(ptr, USB_COMP_ERR,USB_NO_ARG);
                                 ;     590 #endif /* USB_HOST_COMPLIANCE_MODE */
                                 ;     591         /* Ignore count */
                                 ;     592         usb_ghstd_IgnoreCnt[ptr->ip][USB_PIPE0]++;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",592
00000515 A881                    		MOV.L 08H[R0], R1
00000517 B991                    		MOVU.W 0CH[R1], R1
00000519 751114                  		MUL #14H, R1
0000051C FBE2rrrrrrrr            		MOV.L #_usb_ghstd_IgnoreCnt, R14
00000522 4B1E                    		ADD R1, R14
00000524 DCEF                    		MOV.W [R14], R15
00000526 621F                    		ADD #01H, R15
00000528 D3EF                    		MOV.W R15, [R14]
0000052A                         L155:	; bb67.split
                                 ;     593         USB_PRINTF2("### IGNORE Pipe %d is %d times (Setup) \n", USB_PIPE0, usb_ghstd_IgnoreCnt[ptr->ip][USB_PIPE0]);
                                 ;     594         if (usb_ghstd_IgnoreCnt[ptr->ip][USB_PIPE0] == USB_PIPEERROR)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",594
0000052A A881                    		MOV.L 08H[R0], R1
0000052C B991                    		MOVU.W 0CH[R1], R1
0000052E 751114                  		MUL #14H, R1
00000531 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_IgnoreCnt, R14
00000537 4B1E                    		ADD R1, R14
00000539 5CEE                    		MOVU.W [R14], R14
0000053B 611E                    		CMP #01H, R14
0000053D 21rr                    		BNE L157
0000053F                         L156:	; bb78
                                 ;     595         {
                                 ;     596             /* Setup Device Ignore count over */
                                 ;     597             usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",597
0000053F A881                    		MOV.L 08H[R0], R1
00000541 6672                    		MOV.L #00000007H, R2
00000543 05rrrrrr             A  		BSR _usb_hstd_ControlEnd
00000547 6703                    		RTSD #0CH
00000549                         L157:	; bb80
00000549 6651                    		MOV.L #00000005H, R1
                                 ;     598         }
                                 ;     599         else
                                 ;     600         {
                                 ;     601             /* Interrupt enable */
                                 ;     602             /* 5ms wait */
                                 ;     603             usb_cpu_DelayXms((uint16_t)5u);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",603
0000054B 05rrrrrr             A  		BSR _usb_cpu_DelayXms
0000054F                         L158:	; bb80.split
                                 ;     604             /* Status Clear */
                                 ;     605             usb_hreg_clr_sts_sign( ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",605
0000054F A881                    		MOV.L 08H[R0], R1
00000551 05rrrrrr             A  		BSR _usb_hreg_clr_sts_sign
00000555                         L159:	; bb80.split2
                                 ;     606             usb_hreg_clr_sts_sack( ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",606
00000555 A881                    		MOV.L 08H[R0], R1
00000557 05rrrrrr             A  		BSR _usb_hreg_clr_sts_sack
0000055B                         L160:	; bb80.split3
                                 ;     607             /* Setup Ignore,Setup Acknowledge enable */
                                 ;     608             usb_hreg_set_enb_signe( ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",608
0000055B A881                    		MOV.L 08H[R0], R1
0000055D 05rrrrrr             A  		BSR _usb_hreg_set_enb_signe
00000561                         L161:	; bb80.split4
                                 ;     609             usb_hreg_set_enb_sacke( ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",609
00000561 A881                    		MOV.L 08H[R0], R1
00000563 05rrrrrr             A  		BSR _usb_hreg_set_enb_sacke
00000567                         L162:	; bb80.split5
                                 ;     610             /* SETUP request send */
                                 ;     611             /* Send SETUP request */
                                 ;     612             usb_hreg_set_sureq( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",612
00000567 A881                    		MOV.L 08H[R0], R1
00000569 05rrrrrr             A  		BSR _usb_hreg_set_sureq
0000056D 6703                    		RTSD #0CH
0000056F                         L163:	; bb99
                                 ;     613         }
                                 ;     614     break;
                                 ;     615 
                                 ;     616     /***** Processing rootport0 *****/
                                 ;     617     case USB_INT_OVRCR0:
                                 ;     618         /* Port0 OVCR interrupt function */
                                 ;     619         usb_hstd_Ovrcr0Function(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",619
0000056F A881                    		MOV.L 08H[R0], R1
00000571 05rrrrrr             A  		BSR _usb_hstd_Ovrcr0Function
00000575 6703                    		RTSD #0CH
00000577                         L164:	; bb102
                                 ;     620     break;
                                 ;     621     case USB_INT_EOFERR0:
                                 ;     622         /* User program */
                                 ;     623     break;
                                 ;     624     case USB_INT_ATTCH0:
                                 ;     625         /* Port0 ATCH interrupt function */
                                 ;     626         usb_hstd_AttachProcess(ptr, (uint16_t)USB_PORT0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",626
00000577 A881                    		MOV.L 08H[R0], R1
00000579 6602                    		MOV.L #00000000H, R2
0000057B 05rrrrrr             A  		BSR _usb_hstd_AttachProcess
0000057F 6703                    		RTSD #0CH
00000581                         L165:	; bb104
                                 ;     627     break;
                                 ;     628     case USB_INT_BCHG0:
                                 ;     629         USB_PRINTF0("BCHG int port0\n");
                                 ;     630         /* Port0 BCHG interrupt function */
                                 ;     631         usb_hstd_Bchg0Function(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",631
00000581 A881                    		MOV.L 08H[R0], R1
00000583 05rrrrrr             A  		BSR _usb_hstd_Bchg0Function
00000587 6703                    		RTSD #0CH
00000589                         L166:	; bb106
                                 ;     632     break;
                                 ;     633     case USB_INT_DTCH0:
                                 ;     634         USB_PRINTF0("DTCH int port0\n");
                                 ;     635         /* USB detach process */
                                 ;     636         usb_hstd_DetachProcess(ptr, (uint16_t)USB_PORT0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",636
00000589 A881                    		MOV.L 08H[R0], R1
0000058B 6602                    		MOV.L #00000000H, R2
0000058D 05rrrrrr             A  		BSR _usb_hstd_DetachProcess
00000591 6703                    		RTSD #0CH
00000593                         L167:	; bb108
                                 ;     637     break;
                                 ;     638 /* Condition compilation by the difference of the devices */
                                 ;     639 #if USB_PORTSEL_PP == USB_2PORT_PP
                                 ;     640     /***** Processing rootport1 *****/
                                 ;     641     case USB_INT_OVRCR1:
                                 ;     642         if ((usb_creg_read_syssts( ptr, USB_PORT0 ) & USB_OVCBIT) == 0)
                                 ;     643         {
                                 ;     644             USB_PRINTF0(" OVCR int port1\n");
                                 ;     645             /* OVRCR interrupt disable */
                                 ;     646             usb_hstd_OvrcrDisable(ptr, (uint16_t)USB_PORT1);
                                 ;     647             /* Notification over current */
                                 ;     648             usb_hstd_OvcrNotifiation(ptr, (uint16_t)USB_PORT1);
                                 ;     649         }
                                 ;     650     break;
                                 ;     651     case USB_INT_EOFERR1:
                                 ;     652         /* User program */
                                 ;     653     break;
                                 ;     654     case USB_INT_ATTCH1:
                                 ;     655         USB_PRINTF0("ATTCH int port1\n");
                                 ;     656         /* USB attach / detach */
                                 ;     657         usb_hstd_AttachProcess(ptr, (uint16_t)USB_PORT1);
                                 ;     658     break;
                                 ;     659     case USB_INT_BCHG1:
                                 ;     660         /* SUSPENDED check */
                                 ;     661         if (usb_ghstd_RemortPort[USB_PORT1] == USB_SUSPENDED)
                                 ;     662         {
                                 ;     663             if (USB_RESUME == (usb_creg_read_dvstctr( ptr, USB_PORT1 ) & USB_RESUME ))
                                 ;     664             {
                                 ;     665                 USB_PRINTF0("BCHG(RWUP) int port1\n");
                                 ;     666                 usb_ghstd_RemortPort[USB_PORT1] = USB_DEFAULT;
                                 ;     667                 /* Change device state to resume */
                                 ;     668                 usb_hstd_DeviceResume(ptr, (uint16_t)(USB_PORT1 + USB_DEVICEADDR));
                                 ;     669             }
                                 ;     670             else
                                 ;     671             {
                                 ;     672                 /* Decide USB Line state (ATTACH) */
                                 ;     673                 if (USB_DETACH == usb_hstd_ChkAttach(ptr, (uint16_t)USB_PORT1))
                                 ;     674                 {
                                 ;     675                     usb_ghstd_RemortPort[USB_PORT1] = USB_DEFAULT;
                                 ;     676                     /* USB detach process */
                                 ;     677                     usb_hstd_DetachProcess(ptr, (uint16_t)USB_PORT1);
                                 ;     678                 }
                                 ;     679                 else
                                 ;     680                 {
                                 ;     681                     /* Enable port BCHG interrupt */
                                 ;     682                     usb_hstd_BchgEnable(ptr, (uint16_t)USB_PORT1);
                                 ;     683                     /* Check clock */
                                 ;     684                     usb_hstd_ChkClk(ptr, (uint16_t)USB_PORT1, (uint16_t)USB_SUSPENDED);
                                 ;     685                 }
                                 ;     686             }
                                 ;     687         }
                                 ;     688         else
                                 ;     689         {
                                 ;     690             /* USB detach process */
                                 ;     691             usb_hstd_DetachProcess(ptr, (uint16_t)USB_PORT1);
                                 ;     692         }
                                 ;     693     break;
                                 ;     694     case USB_INT_DTCH1:
                                 ;     695         USB_PRINTF0("DTCH int port1\n");
                                 ;     696         /* USB detach process */
                                 ;     697         usb_hstd_DetachProcess(ptr, (uint16_t)USB_PORT1);
                                 ;     698     break;
                                 ;     699 #endif    /* USB_PORTSEL_PP == USB_2PORT_PP */
                                 ;     700 #ifdef USB_HOST_BC_ENABLE
                                 ;     701     case USB_INT_PDDETINT0:
                                 ;     702         /* Port0 PDDETINT interrupt function */
                                 ;     703         if(USB_BC_SUPPORT_IP == ptr->ip)
                                 ;     704         {
                                 ;     705             usb_hstd_pddetint_process(ptr, (uint16_t)USB_PORT0);
                                 ;     706         }
                                 ;     707     break;
                                 ;     708 #endif
                                 ;     709     case USB_INT_VBINT:
                                 ;     710         /* User program */
                                 ;     711         usb_creg_clr_enb_vbse( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",711
00000593 A881                    		MOV.L 08H[R0], R1
00000595 05rrrrrr             A  		BSR _usb_creg_clr_enb_vbse
00000599 6703                    		RTSD #0CH
0000059B                         L168:	; bb110
                                 ;     712     break;
                                 ;     713     case USB_INT_SOFR:
                                 ;     714 #ifdef USB_HOST_COMPLIANCE_MODE
                                 ;     715         usb_ghstd_responce_counter++;
                                 ;     716         if(usb_ghstd_responce_counter == USB_RESPONCE_COUNTER_VALUE)
                                 ;     717         {
                                 ;     718             usb_creg_clr_enb_sofe( ptr );
                                 ;     719             USB_COMPLIANCE_DISP(ptr, USB_COMP_NOTRESP, USB_NO_ARG);
                                 ;     720             usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_STOP);
                                 ;     721         }
                                 ;     722 #else  /* USB_HOST_COMPLIANCE_MODE */
                                 ;     723         /* User program */
                                 ;     724         usb_creg_clr_enb_sofe( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",724
0000059B A881                    		MOV.L 08H[R0], R1
0000059D 05rrrrrr             A  		BSR _usb_creg_clr_enb_sofe
000005A1 6703                    		RTSD #0CH
000005A3                         L169:	; return
                                 ;     725 #endif /* USB_HOST_COMPLIANCE_MODE */
                                 ;     726     break;
                                 ;     727 
                                 ;     728     /*** ERROR ***/
                                 ;     729     case USB_INT_UNKNOWN:
                                 ;     730         USB_PRINTF0("hINT_UNKNOWN\n");
                                 ;     731     break;
                                 ;     732     default:
                                 ;     733         USB_PRINTF1("hINT_default %X\n", intsts);
                                 ;     734     break;
                                 ;     735     }
                                 ;     736 }/* eof usb_hstd_Interrupt() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",736
000005A3 6703                    		RTSD #0CH
000005A5                         _usb_hstd_ClearFeature:
                                 		.STACK	_usb_hstd_ClearFeature=24
                                 ;     737 
                                 ;     738 /******************************************************************************
                                 ;     739 Function Name   : usb_hstd_ClearFeature
                                 ;     740 Description     : Send ClearFeature command to the connected USB device.
                                 ;     741 Arguments       : uint16_t addr     : Device address.
                                 ;     742                 : uint16_t epnum    : Endpoint number.
                                 ;     743                 : USB_CB_t complete : Callback function.
                                 ;     744 Return value    : uint16_t          : Error info.
                                 ;     745 ******************************************************************************/
                                 ;     746 USB_ER_t usb_hstd_ClearFeature(USB_UTR_t *ptr, uint16_t addr, uint16_t epnum, USB_CB_t complete)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",746
000005A5 7100EC                  		ADD #0FFFFFFECH, R0
000005A8 A101                    		MOV.L R1, 10H[R0]
000005AA 918A                    		MOV.W R2, 0EH[R0]
000005AC 9183                    		MOV.W R3, 0CH[R0]
000005AE A084                    		MOV.L R4, 08H[R0]
                                 ;     747 {
                                 ;     748     USB_ER_t    ret_code;
                                 ;     749 
                                 ;     750     if (epnum == 0xFF)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",750
000005B0 B981                    		MOVU.W 0CH[R0], R1
000005B2 7551FF                  		CMP #0FFH, R1
000005B5 21rr                    		BNE L174
000005B7                         L171:	; bb6
                                 ;     751     {
                                 ;     752         /* ClearFeature(Device) */
                                 ;     753         usb_shstd_ClearStallRequest[0]    = USB_CLEAR_FEATURE | USB_HOST_TO_DEV | USB_STANDARD | USB_DEVICE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",753
000005B7 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R14
000005BD F8E90001                		MOV.W #0100H, [R14]
000005C1                         L172:	; bb6.split
                                 ;     754         usb_shstd_ClearStallRequest[1]    = USB_DEV_REMOTE_WAKEUP;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",754
000005C1 FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R1
000005C7 3D1101                  		MOV.W #0001H, 02H[R1]
000005CA                         L173:	; bb6.split1
                                 ;     755         usb_shstd_ClearStallRequest[2]    = (uint16_t)0x0000;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",755
000005CA FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R1
000005D0 3D1200                  		MOV.W #0000H, 04H[R1]
000005D3 2Err                 B  		BRA L177
000005D5                         L174:	; bb7
                                 ;     756     }
                                 ;     757     else
                                 ;     758     {
                                 ;     759         /* ClearFeature(endpoint) */
                                 ;     760         usb_shstd_ClearStallRequest[0]    = USB_CLEAR_FEATURE | USB_HOST_TO_DEV | USB_STANDARD | USB_ENDPOINT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",760
000005D5 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R14
000005DB F8E90201                		MOV.W #0102H, [R14]
000005DF                         L175:	; bb7.split
                                 ;     761         usb_shstd_ClearStallRequest[1]    = USB_ENDPOINT_HALT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",761
000005DF FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R1
000005E5 3D1100                  		MOV.W #0000H, 02H[R1]
000005E8                         L176:	; bb7.split2
                                 ;     762         usb_shstd_ClearStallRequest[2]    = epnum;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",762
000005E8 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R14
000005EE D50E0602                		MOV.W 0CH[R0], 04H[R14]
000005F2                         L177:	; bb13
                                 ;     763     }
                                 ;     764     usb_shstd_ClearStallRequest[3]    = (uint16_t)0x0000;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",764
000005F2 FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R1
000005F8 3D1300                  		MOV.W #0000H, 06H[R1]
000005FB                         L178:	; bb13.split
                                 ;     765     usb_shstd_ClearStallRequest[4]    = addr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",765
000005FB FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R14
00000601 D50E0704                		MOV.W 0EH[R0], 08H[R14]
00000605                         L179:	; bb13.split3
                                 ;     766 
                                 ;     767     usb_shstd_ClearStallControl.tranadr    = (void*)usb_shstd_ClearStallData;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",767
00000605 FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R1
0000060B FB22rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallData, R2
00000611 A11A                    		MOV.L R2, 14H[R1]
00000613                         L180:	; bb13.split4
                                 ;     768     usb_shstd_ClearStallControl.complete    = complete;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",768
00000613 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R14
00000619 E50E0204                		MOV.L 08H[R0], 10H[R14]
0000061D                         L181:	; bb13.split5
                                 ;     769     usb_shstd_ClearStallControl.tranlen    = (uint32_t)usb_shstd_ClearStallRequest[3];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",769
0000061D FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R1
00000623 B899                    		MOVU.W 06H[R1], R1
00000625 FB22rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R2
0000062B A1A1                    		MOV.L R1, 18H[R2]
0000062D                         L182:	; bb13.split6
                                 ;     770     usb_shstd_ClearStallControl.keyword    = USB_PIPE0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",770
0000062D FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R1
00000633 3D1300                  		MOV.W #0000H, 06H[R1]
00000636                         L183:	; bb13.split7
                                 ;     771     usb_shstd_ClearStallControl.setup    = usb_shstd_ClearStallRequest;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",771
00000636 FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R1
0000063C FB22rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallRequest, R2
00000642 A19A                    		MOV.L R2, 1CH[R1]
00000644                         L184:	; bb13.split8
                                 ;     772     usb_shstd_ClearStallControl.segment    = USB_TRAN_END;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",772
00000644 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R14
0000064A F9E42580                		MOV.B #80H, 25H[R14]
0000064E                         L185:	; bb13.split9
                                 ;     773 
                                 ;     774     usb_shstd_ClearStallControl.ip    = ptr->ip;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",774
0000064E A901                    		MOV.L 10H[R0], R1
00000650 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R14
00000656 D51E0606                		MOV.W 0CH[R1], 0CH[R14]
0000065A                         L186:	; bb13.split10
                                 ;     775     usb_shstd_ClearStallControl.ipp    = ptr->ipp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",775
0000065A A901                    		MOV.L 10H[R0], R1
0000065C FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R14
00000662 E51E0202                		MOV.L 08H[R1], 08H[R14]
00000666                         L187:	; bb13.split11
                                 ;     776 
                                 ;     777     ret_code = usb_hstd_TransferStart(&usb_shstd_ClearStallControl);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",777
00000666 FB12rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallControl, R1
0000066C 39rrrr               W  		BSR _usb_hstd_TransferStart
0000066F E301                    		MOV.L R1, [R0]
00000671                         L188:	; bb13.split12
                                 ;     778 
                                 ;     779     return ret_code;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",779
00000671 EC01                    		MOV.L [R0], R1
00000673 A009                    		MOV.L R1, 04H[R0]
00000675                         L189:	; bb13.split13
                                 ;     780 }/* eof usb_hstd_ClearFeature() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",780
00000675 6705                    		RTSD #14H
00000677                         _usb_hstd_ClearStall:
                                 		.STACK	_usb_hstd_ClearStall=28
                                 ;     781 
                                 ;     782 /******************************************************************************
                                 ;     783 Function Name   : usb_hstd_ClearStall
                                 ;     784 Description     : Clear Stall
                                 ;     785 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     786                 : uint16_t pipe      : Pipe number.
                                 ;     787                 : USB_CB_t complete        : Callback function
                                 ;     788 Return value    : uint16_t           : Error info.
                                 ;     789 ******************************************************************************/
                                 ;     790 USB_ER_t usb_hstd_ClearStall(USB_UTR_t *ptr, uint16_t pipe, USB_CB_t complete)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",790
00000677 7100E8                  		ADD #0FFFFFFE8H, R0
0000067A A109                    		MOV.L R1, 14H[R0]
0000067C 920A                    		MOV.W R2, 12H[R0]
0000067E A08B                    		MOV.L R3, 0CH[R0]
                                 ;     791 {
                                 ;     792     USB_ER_t    err;
                                 ;     793     uint8_t     dir_ep;
                                 ;     794     uint16_t    devsel;
                                 ;     795 
                                 ;     796     dir_ep = usb_cstd_Pipe2Epadr(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",796
00000680 BA0A                    		MOVU.W 12H[R0], R2
00000682 A909                    		MOV.L 14H[R0], R1
00000684 05rrrrrr             A  		BSR _usb_cstd_Pipe2Epadr
00000688 8109                    		MOV.B R1, 05H[R0]
0000068A                         L191:	; entry.split
                                 ;     797     devsel = usb_cstd_GetDeviceAddress(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",797
0000068A BA0A                    		MOVU.W 12H[R0], R2
0000068C A909                    		MOV.L 14H[R0], R1
0000068E 05rrrrrr             A  		BSR _usb_cstd_GetDeviceAddress
00000692 9089                    		MOV.W R1, 06H[R0]
00000694                         L192:	; entry.split1
                                 ;     798 
                                 ;     799     err = usb_hstd_ClearFeature(ptr, (uint16_t)(devsel >> USB_DEVADDRBIT), (uint16_t)dir_ep, complete);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",799
00000694 A88C                    		MOV.L 0CH[R0], R4
00000696 B10B                    		MOVU.B 05H[R0], R3
00000698 B88A                    		MOVU.W 06H[R0], R2
0000069A A909                    		MOV.L 14H[R0], R1
0000069C 68C2                    		SHLR #0CH, R2
0000069E 39rrrr               W  		BSR _usb_hstd_ClearFeature
000006A1 E301                    		MOV.L R1, [R0]
000006A3                         L193:	; entry.split2
                                 ;     800     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",800
000006A3 EC01                    		MOV.L [R0], R1
000006A5 A081                    		MOV.L R1, 08H[R0]
000006A7                         L194:	; entry.split3
                                 ;     801 }/* eof usb_hstd_ClearStall() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",801
000006A7 6706                    		RTSD #18H
000006A9                         __$usb_hstd_ClearStallResult:
                                 		.STACK	__$usb_hstd_ClearStallResult=28
                                 ;     802 
                                 ;     803 /******************************************************************************
                                 ;     804 Function Name   : usb_hstd_ClearStallResult
                                 ;     805 Description     : Callback function to notify HCD task that usb_hstd_ClearStall function is completed
                                 ;     806 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     807                 : uint16_t      data1       : Not Use
                                 ;     808                 : uint16_t      data2       : Not Use
                                 ;     809 Return value    : uint16_t                 : error info
                                 ;     810 ******************************************************************************/
                                 ;     811 void usb_hstd_ClearStallResult(USB_UTR_t *ptr, uint16_t data1, uint16_t data2 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",811
000006A9 7100E8                  		ADD #0FFFFFFE8H, R0
000006AC A109                    		MOV.L R1, 14H[R0]
000006AE 920A                    		MOV.W R2, 12H[R0]
000006B0 9203                    		MOV.W R3, 10H[R0]
000006B2 EF02                    		MOV.L R0, R2
000006B4 6611                    		MOV.L #00000001H, R1
                                 ;     812 {
                                 ;     813     USB_MH_t        p_blf;
                                 ;     814     USB_ER_t        err, err2;
                                 ;     815     USB_UTR_t        *up;
                                 ;     816 
                                 ;     817     /* Get mem pool blk */
                                 ;     818     err = USB_PGET_BLK(USB_HCD_MPL, &p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",818
000006B6 05rrrrrr             A  		BSR _usb_cstd_PgetBlk
000006BA A009                    		MOV.L R1, 04H[R0]
000006BC                         L196:	; entry.split
                                 ;     819     if (err == USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",819
000006BC A809                    		MOV.L 04H[R0], R1
000006BE 6101                    		CMP #00H, R1
000006C0 21rr                    		BNE L207
000006C2                         L197:	; bb9
                                 ;     820     {
                                 ;     821         up = (USB_UTR_t*)p_blf;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",821
000006C2 E40003                  		MOV.L [R0], 0CH[R0]
000006C5                         L198:	; bb9.split
                                 ;     822         up->msghead    = (USB_MH_t)USB_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",822
000006C5 A889                    		MOV.L 0CH[R0], R1
000006C7 F81600                  		MOV.L #00000000H, [R1]
000006CA                         L199:	; bb9.split1
                                 ;     823         up->msginfo    = USB_MSG_HCD_CLR_STALL_RESULT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",823
000006CA A889                    		MOV.L 0CH[R0], R1
000006CC F919020C01              		MOV.W #010CH, 04H[R1]
000006D1                         L200:	; bb9.split2
                                 ;     824         up->status    = ptr->status;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",824
000006D1 A909                    		MOV.L 14H[R0], R1
000006D3 A88A                    		MOV.L 0CH[R0], R2
000006D5 D5121010                		MOV.W 20H[R1], 20H[R2]
000006D9                         L201:	; bb9.split3
                                 ;     825 
                                 ;     826         up->ipp    = ptr->ipp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",826
000006D9 A909                    		MOV.L 14H[R0], R1
000006DB A88A                    		MOV.L 0CH[R0], R2
000006DD E5120202                		MOV.L 08H[R1], 08H[R2]
000006E1                         L202:	; bb9.split4
                                 ;     827         up->ip    = ptr->ip;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",827
000006E1 A909                    		MOV.L 14H[R0], R1
000006E3 A88A                    		MOV.L 0CH[R0], R2
000006E5 D5120606                		MOV.W 0CH[R1], 0CH[R2]
000006E9                         L203:	; bb9.split5
                                 ;     828 
                                 ;     829         /* Send message */
                                 ;     830         err = USB_SND_MSG(USB_HCD_MBX, (USB_MSG_t*)p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",830
000006E9 EC02                    		MOV.L [R0], R2
000006EB 6611                    		MOV.L #00000001H, R1
000006ED 05rrrrrr             A  		BSR _usb_cstd_SndMsg
000006F1 A009                    		MOV.L R1, 04H[R0]
000006F3                         L204:	; bb9.split6
                                 ;     831         if (err != USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",831
000006F3 A809                    		MOV.L 04H[R0], R1
000006F5 6101                    		CMP #00H, R1
000006F7 20rr                    		BEQ L207
000006F9                         L205:	; bb37
                                 ;     832         {
                                 ;     833             USB_PRINTF1("### hHcdSndMbx snd_msg error (%ld)\n", err);
                                 ;     834             err2 = USB_REL_BLK(USB_HCD_MPL, (USB_MH_t)p_blf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",834
000006F9 EC02                    		MOV.L [R0], R2
000006FB 6611                    		MOV.L #00000001H, R1
000006FD 05rrrrrr             A  		BSR _usb_cstd_RelBlk
00000701 A081                    		MOV.L R1, 08H[R0]
00000703                         L206:	; bb37.split
                                 ;     835             if (err2 != USB_E_OK)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",835
00000703 6706                    		RTSD #18H
00000705                         L207:	; return
                                 ;     836             {
                                 ;     837                 USB_PRINTF1("### hHcdSndMbx rel_blk error (%ld)\n", err2);
                                 ;     838             }
                                 ;     839         }
                                 ;     840     }
                                 ;     841     else
                                 ;     842     {
                                 ;     843         USB_PRINTF1("### hHcdSndMbx pget_blk error (%ld)\n", err);
                                 ;     844     }
                                 ;     845 }/* eof usb_hstd_ClearStallResult() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",845
00000705 6706                    		RTSD #18H
00000707                         _usb_hstd_HcdTask:
                                 		.STACK	_usb_hstd_HcdTask=40
                                 ;     846 
                                 ;     847 #endif  /* (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP) */
                                 ;     848 
                                 ;     849 /******************************************************************************
                                 ;     850 Function Name   : usb_hstd_HcdTask
                                 ;     851 Description     : USB Host Control Driver Task.
                                 ;     852 Argument        : USB_VP_INT stacd  : Task Start Code.
                                 ;     853 Return          : none
                                 ;     854 ******************************************************************************/
                                 ;     855 void usb_hstd_HcdTask(USB_VP_INT stacd)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",855
00000707 7100DC                  		ADD #0FFFFFFDCH, R0
0000070A A201                    		MOV.L R1, 20H[R0]
0000070C 38rrrr               W  		BRA L313
0000070F                         L209:	; bb15
                                 ;     856 {
                                 ;     857 #if (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP)
                                 ;     858     USB_UTR_t       *mess, *ptr;
                                 ;     859     USB_ER_t        err;
                                 ;     860     uint16_t        rootport, pipenum, msginfo;
                                 ;     861     uint16_t        connect_inf;
                                 ;     862     uint16_t        retval;
                                 ;     863     USB_HCDINFO_t*  hp;
                                 ;     864 #ifdef FREE_RTOS_PP
                                 ;     865     for( ;; )
                                 ;     866     {
                                 ;     867 #endif
                                 ;     868     /* Receive message */
                                 ;     869     err = USB_TRCV_MSG(USB_HCD_MBX, (USB_MSG_t**)&mess, (USB_TM_t)10000);
                                 ;     870     if ( (err != USB_E_OK) && (err != USB_E_TMOUT))
                                 ;     871     {
                                 ;     872 #ifdef FREE_RTOS_PP
                                 ;     873         continue;
                                 ;     874 #else
                                 ;     875         return;
                                 ;     876 #endif
                                 ;     877     }
                                 ;     878     else
                                 ;     879     {
                                 ;     880         ptr = (USB_UTR_t *)mess;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",880
0000070F E5000102                		MOV.L 04H[R0], 08H[R0]
00000713                         L210:	; bb15.split
                                 ;     881         hp  = (USB_HCDINFO_t*)mess;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",881
00000713 E5000107                		MOV.L 04H[R0], 1CH[R0]
00000717                         L211:	; bb15.split1
                                 ;     882 
                                 ;     883         /* Peripheral Function */
                                 ;     884         if (usb_cstd_is_host_mode(ptr) == USB_NO)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",884
00000717 A881                    		MOV.L 08H[R0], R1
00000719 05rrrrrr             A  		BSR _usb_cstd_is_host_mode
0000071D 6101                    		CMP #00H, R1
0000071F 3Arrrr               W  		BEQ L313
00000722                         L212:	; bb26
                                 ;     885         {
                                 ;     886 #ifdef FREE_RTOS_PP
                                 ;     887             continue;
                                 ;     888 #else
                                 ;     889             return;
                                 ;     890 #endif
                                 ;     891         }
                                 ;     892 
                                 ;     893         rootport    = ptr->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",893
00000722 A881                    		MOV.L 08H[R0], R1
00000724 D5100309                		MOV.W 06H[R1], 12H[R0]
00000728                         L213:	; bb26.split
                                 ;     894         pipenum     = ptr->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",894
00000728 A881                    		MOV.L 08H[R0], R1
0000072A D510030A                		MOV.W 06H[R1], 14H[R0]
0000072E                         L214:	; bb26.split2
                                 ;     895 
                                 ;     896         /* Branch Hcd Task receive Message Command */
                                 ;     897         msginfo = ptr->msginfo;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",897
0000072E A881                    		MOV.L 08H[R0], R1
00000730 D510020B                		MOV.W 04H[R1], 16H[R0]
00000734                         L215:	; bb26.split3
                                 ;     898         switch( msginfo)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",898
00000734 BA89                    		MOVU.W 16H[R0], R1
00000736 7211FFFE                		ADD #0FFFFFEFFH, R1
0000073A 755117                  		CMP #17H, R1
0000073D 25rr                  * 		BGTU L313
         38rrrr                  
00000742                         L216:	; bb26.split3
00000742 FBE2rrrrrrrr            		MOV.L #L315, R14
00000748 FE51EE                  		.swmov L315, R1, R14, R14
0000074B                         L316:
0000074B 7F4E                    		BRA.L R14
0000074D                         L217:	; bb38
                                 ;     899         {
                                 ;     900             case USB_MSG_HCD_INT:
                                 ;     901                 /* USB INT */
                                 ;     902                 usb_hstd_Interrupt(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",902
0000074D A881                    		MOV.L 08H[R0], R1
0000074F 39rrrr               W  		BSR _usb_hstd_Interrupt
00000752 38rrrr               W  		BRA L313
00000755                         L218:	; bb40
                                 ;     903             break;
                                 ;     904 
                                 ;     905             case USB_MSG_HCD_PCUTINT:
                                 ;     906                 /* Start Oscillation: Interrupt wakeup */
                                 ;     907                 usb_cstd_InterruptClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",907
00000755 A881                    		MOV.L 08H[R0], R1
00000757 05rrrrrr             A  		BSR _usb_cstd_InterruptClock
0000075B                         L219:	; bb40.split
                                 ;     908                 ptr = (USB_UTR_t*)usb_shstd_HcdMsg;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",908
0000075B FBE2rrrrrrrr            		MOV.L #__$usb_shstd_HcdMsg, R14
00000761 E4E002                  		MOV.L [R14], 08H[R0]
00000764                         L220:	; bb40.split4
                                 ;     909                 /* USB interrupt Handler */
                                 ;     910                 usb_hstd_InterruptHandler(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",910
00000764 A881                    		MOV.L 08H[R0], R1
00000766 05rrrrrr             A  		BSR _usb_hstd_InterruptHandler
0000076A                         L221:	; bb40.split5
                                 ;     911                 /* USB INT */
                                 ;     912                 usb_hstd_Interrupt(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",912
0000076A A881                    		MOV.L 08H[R0], R1
0000076C 39rrrr               W  		BSR _usb_hstd_Interrupt
0000076F                         L222:	; bb40.split6
                                 ;     913                 ptr->msginfo = USB_MSG_HCD_INT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",913
0000076F A881                    		MOV.L 08H[R0], R1
00000771 F919021701              		MOV.W #0117H, 04H[R1]
00000776 38rrrr               W  		BRA L313
00000779                         L223:	; bb47
                                 ;     914             break;
                                 ;     915 
                                 ;     916             case USB_MSG_HCD_SUBMITUTR:
                                 ;     917                 /* USB Submit utr */
                                 ;     918                 usb_hstd_SetSubmitutr(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",918
00000779 A881                    		MOV.L 08H[R0], R1
0000077B 39rrrr               W  		BSR __$usb_hstd_SetSubmitutr
0000077E 38rrrr               W  		BRA L313
00000781                         L224:	; bb50
                                 ;     919             break;
                                 ;     920 
                                 ;     921             case USB_MSG_HCD_ATTACH:
                                 ;     922                 /* Start Oscillation */
                                 ;     923                 usb_cstd_SelfClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",923
00000781 A881                    		MOV.L 08H[R0], R1
00000783 05rrrrrr             A  		BSR _usb_cstd_SelfClock
00000787                         L225:	; bb50.split
                                 ;     924                 /* USB attach / detach */
                                 ;     925                 usb_hstd_AttachProcess(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",925
00000787 BA0A                    		MOVU.W 12H[R0], R2
00000789 A881                    		MOV.L 08H[R0], R1
0000078B 05rrrrrr             A  		BSR _usb_hstd_AttachProcess
0000078F                         L226:	; bb50.split7
                                 ;     926                 /* Callback */
                                 ;     927                 (hp->complete)(ptr, rootport, USB_MSG_HCD_ATTACH);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",927
0000078F A989                    		MOV.L 1CH[R0], R1
00000791 A914                    		MOV.L 10H[R1], R4
00000793 BA0A                    		MOVU.W 12H[R0], R2
00000795 A881                    		MOV.L 08H[R0], R1
00000797 FB3A0101                		MOV.L #00000101H, R3
0000079B 7F14                    		JSR R4
0000079D                         L227:	; bb50.split8
                                 ;     928                 /* Release Memory Block */
                                 ;     929                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",929
0000079D BA8A                    		MOVU.W 16H[R0], R2
0000079F A881                    		MOV.L 08H[R0], R1
000007A1 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
000007A4 38rrrr               W  		BRA L313
000007A7                         L228:	; bb61
                                 ;     930             break;
                                 ;     931 
                                 ;     932             case USB_MSG_HCD_ATTACH_MGR:
                                 ;     933                 /* Start Oscillation */
                                 ;     934                 usb_cstd_SelfClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",934
000007A7 A881                    		MOV.L 08H[R0], R1
000007A9 05rrrrrr             A  		BSR _usb_cstd_SelfClock
000007AD                         L229:	; bb61.split
                                 ;     935                 /* USB attach / detach */
                                 ;     936                 usb_hstd_AttachProcess(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",936
000007AD BA0A                    		MOVU.W 12H[R0], R2
000007AF A881                    		MOV.L 08H[R0], R1
000007B1 05rrrrrr             A  		BSR _usb_hstd_AttachProcess
000007B5                         L230:	; bb61.split9
                                 ;     937                 connect_inf = usb_cstd_PortSpeed(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",937
000007B5 BA0A                    		MOVU.W 12H[R0], R2
000007B7 A881                    		MOV.L 08H[R0], R1
000007B9 05rrrrrr             A  		BSR _usb_cstd_PortSpeed
000007BD 9301                    		MOV.W R1, 18H[R0]
000007BF                         L231:	; bb61.split10
                                 ;     938                 /* Callback */
                                 ;     939                 (hp->complete)(ptr, rootport, connect_inf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",939
000007BF A989                    		MOV.L 1CH[R0], R1
000007C1 A914                    		MOV.L 10H[R1], R4
000007C3 BB03                    		MOVU.W 18H[R0], R3
000007C5 BA0A                    		MOVU.W 12H[R0], R2
000007C7 A881                    		MOV.L 08H[R0], R1
000007C9 7F14                    		JSR R4
000007CB                         L232:	; bb61.split11
                                 ;     940                 /* Release Memory Block */
                                 ;     941                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",941
000007CB BA8A                    		MOVU.W 16H[R0], R2
000007CD A881                    		MOV.L 08H[R0], R1
000007CF 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
000007D2 38rrrr               W  		BRA L313
000007D5                         L233:	; bb76
                                 ;     942             break;
                                 ;     943 
                                 ;     944             case USB_MSG_HCD_DETACH:
                                 ;     945                 /* Start Oscillation */
                                 ;     946                 usb_cstd_SelfClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",946
000007D5 A881                    		MOV.L 08H[R0], R1
000007D7 05rrrrrr             A  		BSR _usb_cstd_SelfClock
000007DB                         L234:	; bb76.split
                                 ;     947                 /* USB detach process */
                                 ;     948                 usb_hstd_DetachProcess(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",948
000007DB BA0A                    		MOVU.W 12H[R0], R2
000007DD A881                    		MOV.L 08H[R0], R1
000007DF 05rrrrrr             A  		BSR _usb_hstd_DetachProcess
000007E3                         L235:	; bb76.split12
                                 ;     949 
                                 ;     950                 /* Callback */
                                 ;     951                 (hp->complete)(ptr, rootport, USB_MSG_HCD_DETACH);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",951
000007E3 A989                    		MOV.L 1CH[R0], R1
000007E5 A914                    		MOV.L 10H[R1], R4
000007E7 BA0A                    		MOVU.W 12H[R0], R2
000007E9 A881                    		MOV.L 08H[R0], R1
000007EB FB3A0201                		MOV.L #00000102H, R3
000007EF 7F14                    		JSR R4
000007F1                         L236:	; bb76.split13
                                 ;     952                 /* Release Memory Block */
                                 ;     953                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",953
000007F1 BA8A                    		MOVU.W 16H[R0], R2
000007F3 A881                    		MOV.L 08H[R0], R1
000007F5 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
000007F8 38rrrr               W  		BRA L313
000007FB                         L237:	; bb87
                                 ;     954             break;
                                 ;     955 
                                 ;     956             case USB_MSG_HCD_DETACH_MGR:
                                 ;     957                 usb_creg_clr_dvstctr( ptr, USB_PORT0, (USB_RWUPE | USB_USBRST | USB_RESUME | USB_UACT));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",957
000007FB A881                    		MOV.L 08H[R0], R1
000007FD 7543F0                  		MOV.L #000000F0H, R3
00000800 6602                    		MOV.L #00000000H, R2
00000802 05rrrrrr             A  		BSR _usb_creg_clr_dvstctr
00000806                         L238:	; bb87.split
00000806 6611                    		MOV.L #00000001H, R1
                                 ;     958 
                                 ;     959                 usb_cpu_DelayXms(1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",959
00000808 05rrrrrr             A  		BSR _usb_cpu_DelayXms
0000080C                         L239:	; bb87.split14
                                 ;     960                 /* interrupt disable */
                                 ;     961                 usb_hstd_AttchDisable(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",961
0000080C BA0A                    		MOVU.W 12H[R0], R2
0000080E A881                    		MOV.L 08H[R0], R1
00000810 05rrrrrr             A  		BSR _usb_hstd_AttchDisable
00000814                         L240:	; bb87.split15
                                 ;     962                 usb_hstd_DtchDisable(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",962
00000814 BA0A                    		MOVU.W 12H[R0], R2
00000816 A881                    		MOV.L 08H[R0], R1
00000818 05rrrrrr             A  		BSR _usb_hstd_DtchDisable
0000081C                         L241:	; bb87.split16
                                 ;     963                 usb_hstd_BchgDisable(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",963
0000081C BA0A                    		MOVU.W 12H[R0], R2
0000081E A881                    		MOV.L 08H[R0], R1
00000820 05rrrrrr             A  		BSR _usb_hstd_BchgDisable
00000824                         L242:	; bb87.split17
                                 ;     964                 (hp->complete)(ptr, rootport, USB_MSG_HCD_DETACH_MGR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",964
00000824 A989                    		MOV.L 1CH[R0], R1
00000826 A914                    		MOV.L 10H[R1], R4
00000828 BA0A                    		MOVU.W 12H[R0], R2
0000082A A881                    		MOV.L 08H[R0], R1
0000082C FB3A0A01                		MOV.L #0000010AH, R3
00000830 7F14                    		JSR R4
00000832                         L243:	; bb87.split18
                                 ;     965                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",965
00000832 BA8A                    		MOVU.W 16H[R0], R2
00000834 A881                    		MOV.L 08H[R0], R1
00000836 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000839 38rrrr               W  		BRA L313
0000083C                         L244:	; bb102
                                 ;     966             break;
                                 ;     967 
                                 ;     968             case USB_MSG_HCD_USBRESET:
                                 ;     969                 /* USB bus reset */
                                 ;     970                 usb_hstd_BusReset(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",970
0000083C BA0A                    		MOVU.W 12H[R0], R2
0000083E A881                    		MOV.L 08H[R0], R1
00000840 05rrrrrr             A  		BSR _usb_hstd_BusReset
00000844                         L245:	; bb102.split
                                 ;     971                 /* Check current port speed */
                                 ;     972                 connect_inf = usb_cstd_PortSpeed(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",972
00000844 BA0A                    		MOVU.W 12H[R0], R2
00000846 A881                    		MOV.L 08H[R0], R1
00000848 05rrrrrr             A  		BSR _usb_cstd_PortSpeed
0000084C 9301                    		MOV.W R1, 18H[R0]
0000084E                         L246:	; bb102.split19
                                 ;     973                 /* Callback */
                                 ;     974                 (hp->complete)(ptr, rootport, connect_inf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",974
0000084E A989                    		MOV.L 1CH[R0], R1
00000850 A914                    		MOV.L 10H[R1], R4
00000852 BB03                    		MOVU.W 18H[R0], R3
00000854 BA0A                    		MOVU.W 12H[R0], R2
00000856 A881                    		MOV.L 08H[R0], R1
00000858 7F14                    		JSR R4
0000085A                         L247:	; bb102.split20
                                 ;     975                 /* Release Memory Block */
                                 ;     976                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",976
0000085A BA8A                    		MOVU.W 16H[R0], R2
0000085C A881                    		MOV.L 08H[R0], R1
0000085E 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000861 38rrrr               W  		BRA L313
00000864                         L248:	; bb116
                                 ;     977             break;
                                 ;     978 
                                 ;     979             case USB_MSG_HCD_REMOTE:
                                 ;     980                 /* Suspend device */
                                 ;     981                 usb_ghstd_RemortPort[rootport] = USB_SUSPENDED;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",981
00000864 BA09                    		MOVU.W 12H[R0], R1
00000866 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_RemortPort, R14
0000086C 754F50                  		MOV.L #00000050H, R15
0000086F FE11EF                  		MOV.W R15, [R1,R14]
00000872                         L249:	; bb116.split
                                 ;     982                 usb_hstd_Suspend(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",982
00000872 BA0A                    		MOVU.W 12H[R0], R2
00000874 A881                    		MOV.L 08H[R0], R1
00000876 39rrrr               W  		BSR _usb_hstd_Suspend
00000879                         L250:	; bb116.split21
                                 ;     983                 /* CallBack */
                                 ;     984                 (hp->complete)(ptr, rootport, USB_MSG_HCD_REMOTE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",984
00000879 A989                    		MOV.L 1CH[R0], R1
0000087B A914                    		MOV.L 10H[R1], R4
0000087D BA0A                    		MOVU.W 12H[R0], R2
0000087F A881                    		MOV.L 08H[R0], R1
00000881 FB3A0601                		MOV.L #00000106H, R3
00000885 7F14                    		JSR R4
00000887                         L251:	; bb116.split22
                                 ;     985                 /* Release Memory Block */
                                 ;     986                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",986
00000887 BA8A                    		MOVU.W 16H[R0], R2
00000889 A881                    		MOV.L 08H[R0], R1
0000088B 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
0000088E 38rrrr               W  		BRA L313
00000891                         L252:	; bb129
                                 ;     987             break;
                                 ;     988 
                                 ;     989             case USB_MSG_HCD_SUSPEND:
                                 ;     990                 /* Suspend device */
                                 ;     991                 usb_hstd_Suspend(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",991
00000891 BA0A                    		MOVU.W 12H[R0], R2
00000893 A881                    		MOV.L 08H[R0], R1
00000895 39rrrr               W  		BSR _usb_hstd_Suspend
00000898                         L253:	; bb129.split
                                 ;     992                 (hp->complete)(ptr, rootport, USB_MSG_HCD_SUSPEND);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",992
00000898 A989                    		MOV.L 1CH[R0], R1
0000089A A914                    		MOV.L 10H[R1], R4
0000089C BA0A                    		MOVU.W 12H[R0], R2
0000089E A881                    		MOV.L 08H[R0], R1
000008A0 FB3A0401                		MOV.L #00000104H, R3
000008A4 7F14                    		JSR R4
000008A6                         L254:	; bb129.split23
                                 ;     993                 /* Release Memory Block */
                                 ;     994                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",994
000008A6 BA8A                    		MOVU.W 16H[R0], R2
000008A8 A881                    		MOV.L 08H[R0], R1
000008AA 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
000008AD 38rrrr               W  		BRA L313
000008B0                         L255:	; bb139
                                 ;     995             break;
                                 ;     996 
                                 ;     997             case USB_MSG_HCD_RESUME:
                                 ;     998                 /* Start Oscillation */
                                 ;     999                 usb_cstd_SelfClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",999
000008B0 A881                    		MOV.L 08H[R0], R1
000008B2 05rrrrrr             A  		BSR _usb_cstd_SelfClock
000008B6                         L256:	; bb139.split
                                 ;    1000                 /* USB resume */
                                 ;    1001                 usb_hstd_ResumeProcess(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1001
000008B6 BA0A                    		MOVU.W 12H[R0], R2
000008B8 A881                    		MOV.L 08H[R0], R1
000008BA 05rrrrrr             A  		BSR _usb_hstd_ResumeProcess
000008BE                         L257:	; bb139.split24
                                 ;    1002                 /* Callback */
                                 ;    1003                 (hp->complete)(ptr, rootport, USB_MSG_HCD_RESUME);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1003
000008BE A989                    		MOV.L 1CH[R0], R1
000008C0 A914                    		MOV.L 10H[R1], R4
000008C2 BA0A                    		MOVU.W 12H[R0], R2
000008C4 A881                    		MOV.L 08H[R0], R1
000008C6 FB3A0501                		MOV.L #00000105H, R3
000008CA 7F14                    		JSR R4
000008CC                         L258:	; bb139.split25
                                 ;    1004                 /* Release Memory Block */
                                 ;    1005                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1005
000008CC BA8A                    		MOVU.W 16H[R0], R2
000008CE A881                    		MOV.L 08H[R0], R1
000008D0 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
000008D3 38rrrr               W  		BRA L313
000008D6                         L259:	; bb150
                                 ;    1006             break;
                                 ;    1007 
                                 ;    1008             case USB_MSG_HCD_VBON:
                                 ;    1009                 /* Start Oscillation */
                                 ;    1010                 usb_cstd_SelfClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1010
000008D6 A881                    		MOV.L 08H[R0], R1
000008D8 05rrrrrr             A  		BSR _usb_cstd_SelfClock
000008DC                         L260:	; bb150.split
                                 ;    1011                 /* Interrupt Enable */
                                 ;    1012                 usb_hstd_OvrcrEnable(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1012
000008DC BA0A                    		MOVU.W 12H[R0], R2
000008DE A881                    		MOV.L 08H[R0], R1
000008E0 05rrrrrr             A  		BSR _usb_hstd_OvrcrEnable
000008E4                         L261:	; bb150.split26
                                 ;    1013                 /* USB VBUS control ON */
                                 ;    1014                 usb_hstd_VbusControl(ptr, rootport, (uint16_t)USB_VBON);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1014
000008E4 BA0A                    		MOVU.W 12H[R0], R2
000008E6 A881                    		MOV.L 08H[R0], R1
000008E8 6603                    		MOV.L #00000000H, R3
000008EA 05rrrrrr             A  		BSR _usb_hstd_VbusControl
000008EE                         L262:	; bb150.split27
000008EE 754164                  		MOV.L #00000064H, R1
                                 ;    1015 #ifndef USB_HOST_BC_ENABLE
                                 ;    1016                 /* 100ms wait */
                                 ;    1017                 usb_cpu_DelayXms((uint16_t)100u);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1017
000008F1 05rrrrrr             A  		BSR _usb_cpu_DelayXms
000008F5                         L263:	; bb150.split28
                                 ;    1018 #endif /* ! USB_HOST_BC_ENABLE */
                                 ;    1019                 /* Callback */
                                 ;    1020                 (hp->complete)(ptr, rootport, USB_MSG_HCD_VBON);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1020
000008F5 A989                    		MOV.L 1CH[R0], R1
000008F7 A914                    		MOV.L 10H[R1], R4
000008F9 BA0A                    		MOVU.W 12H[R0], R2
000008FB A881                    		MOV.L 08H[R0], R1
000008FD FB3A0701                		MOV.L #00000107H, R3
00000901 7F14                    		JSR R4
00000903                         L264:	; bb150.split29
                                 ;    1021                 /* Release Memory Block */
                                 ;    1022                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1022
00000903 BA8A                    		MOVU.W 16H[R0], R2
00000905 A881                    		MOV.L 08H[R0], R1
00000907 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
0000090A 38rrrr               W  		BRA L313
0000090D                         L265:	; bb163
                                 ;    1023             break;
                                 ;    1024 
                                 ;    1025             case USB_MSG_HCD_VBOFF:
                                 ;    1026                 /* Start Oscillation */
                                 ;    1027                 usb_cstd_SelfClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1027
0000090D A881                    		MOV.L 08H[R0], R1
0000090F 05rrrrrr             A  		BSR _usb_cstd_SelfClock
00000913                         L266:	; bb163.split
                                 ;    1028                 /* USB VBUS control OFF */
                                 ;    1029                 usb_hstd_VbusControl(ptr, rootport, (uint16_t)USB_VBOFF);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1029
00000913 BA0A                    		MOVU.W 12H[R0], R2
00000915 A881                    		MOV.L 08H[R0], R1
00000917 6613                    		MOV.L #00000001H, R3
00000919 05rrrrrr             A  		BSR _usb_hstd_VbusControl
0000091D                         L267:	; bb163.split30
                                 ;    1030                 usb_hstd_OvrcrDisable(ptr, rootport);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1030
0000091D BA0A                    		MOVU.W 12H[R0], R2
0000091F A881                    		MOV.L 08H[R0], R1
00000921 05rrrrrr             A  		BSR _usb_hstd_OvrcrDisable
00000925                         L268:	; bb163.split31
00000925 754164                  		MOV.L #00000064H, R1
                                 ;    1031 
                                 ;    1032                 /* 100ms wait */
                                 ;    1033                 usb_cpu_DelayXms((uint16_t)100u);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1033
00000928 05rrrrrr             A  		BSR _usb_cpu_DelayXms
0000092C                         L269:	; bb163.split32
                                 ;    1034                 /* Callback */
                                 ;    1035                 (hp->complete)(ptr, rootport, USB_MSG_HCD_VBOFF);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1035
0000092C A989                    		MOV.L 1CH[R0], R1
0000092E A914                    		MOV.L 10H[R1], R4
00000930 BA0A                    		MOVU.W 12H[R0], R2
00000932 A881                    		MOV.L 08H[R0], R1
00000934 FB3A0801                		MOV.L #00000108H, R3
00000938 7F14                    		JSR R4
0000093A                         L270:	; bb163.split33
                                 ;    1036                 /* Release Memory Block */
                                 ;    1037                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1037
0000093A BA8A                    		MOVU.W 16H[R0], R2
0000093C A881                    		MOV.L 08H[R0], R1
0000093E 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000941 38rrrr               W  		BRA L313
00000944                         L271:	; bb176
                                 ;    1038             break;
                                 ;    1039 
                                 ;    1040             case USB_MSG_HCD_CLR_STALLBIT:
                                 ;    1041                 /* STALL */
                                 ;    1042                 usb_cstd_ClrStall(ptr, pipenum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1042
00000944 BA82                    		MOVU.W 14H[R0], R2
00000946 A881                    		MOV.L 08H[R0], R1
00000948 05rrrrrr             A  		BSR _usb_cstd_ClrStall
0000094C                         L272:	; bb176.split
                                 ;    1043                 /* Callback */
                                 ;    1044                 (hp->complete)(ptr, (uint16_t)USB_NO_ARG, (uint16_t)USB_MSG_HCD_CLR_STALLBIT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1044
0000094C A989                    		MOV.L 1CH[R0], R1
0000094E A914                    		MOV.L 10H[R1], R4
00000950 A881                    		MOV.L 08H[R0], R1
00000952 FB3A0D01                		MOV.L #0000010DH, R3
00000956 6602                    		MOV.L #00000000H, R2
00000958 7F14                    		JSR R4
0000095A                         L273:	; bb176.split34
                                 ;    1045                 /* Release Memory Block */
                                 ;    1046                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1046
0000095A BA8A                    		MOVU.W 16H[R0], R2
0000095C A881                    		MOV.L 08H[R0], R1
0000095E 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000961 38rrrr               W  		BRA L313
00000964                         L274:	; bb185
                                 ;    1047             break;
                                 ;    1048 
                                 ;    1049             case USB_MSG_HCD_SQTGLBIT:
                                 ;    1050                 pipenum = ptr->keyword & USB_PIPENM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1050
00000964 A881                    		MOV.L 08H[R0], R1
00000966 B899                    		MOVU.W 06H[R1], R1
00000968 6471                    		AND #07H, R1
0000096A 9281                    		MOV.W R1, 14H[R0]
0000096C                         L275:	; bb185.split
                                 ;    1051                 /* SQ toggle */
                                 ;    1052                 usb_cstd_DoSqtgl(ptr, pipenum, ptr->keyword);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1052
0000096C A881                    		MOV.L 08H[R0], R1
0000096E B89B                    		MOVU.W 06H[R1], R3
00000970 BA82                    		MOVU.W 14H[R0], R2
00000972 05rrrrrr             A  		BSR _usb_cstd_DoSqtgl
00000976                         L276:	; bb185.split35
                                 ;    1053                 /* Callback */
                                 ;    1054                 (hp->complete)(ptr, (uint16_t)USB_NO_ARG, (uint16_t)USB_MSG_HCD_SQTGLBIT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1054
00000976 A989                    		MOV.L 1CH[R0], R1
00000978 A914                    		MOV.L 10H[R1], R4
0000097A A881                    		MOV.L 08H[R0], R1
0000097C FB3A0F01                		MOV.L #0000010FH, R3
00000980 6602                    		MOV.L #00000000H, R2
00000982 7F14                    		JSR R4
00000984                         L277:	; bb185.split36
                                 ;    1055                 /* Release Memory Block */
                                 ;    1056                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1056
00000984 BA8A                    		MOVU.W 16H[R0], R2
00000986 A881                    		MOV.L 08H[R0], R1
00000988 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
0000098B 38rrrr               W  		BRA L313
0000098E                         L278:	; bb203
                                 ;    1057             break;
                                 ;    1058 
                                 ;    1059             case USB_MSG_HCD_CLR_STALL:
                                 ;    1060                 usb_shstd_ClearStallCall = hp->complete;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1060
0000098E A989                    		MOV.L 1CH[R0], R1
00000990 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallCall, R14
00000996 E11E04                  		MOV.L 10H[R1], [R14]
00000999                         L279:	; bb203.split
                                 ;    1061                 usb_shstd_ClearStallPipe = pipenum;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1061
00000999 FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallPipe, R14
0000099F D10E0A                  		MOV.W 14H[R0], [R14]
000009A2                         L280:	; bb203.split37
                                 ;    1062                 err = usb_hstd_ClearStall(ptr, pipenum, (USB_CB_t)&usb_hstd_ClearStallResult);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1062
000009A2 BA82                    		MOVU.W 14H[R0], R2
000009A4 A881                    		MOV.L 08H[R0], R1
000009A6 FB32rrrrrrrr            		MOV.L #__$usb_hstd_ClearStallResult, R3
000009AC 39rrrr               W  		BSR _usb_hstd_ClearStall
000009AF A089                    		MOV.L R1, 0CH[R0]
000009B1                         L281:	; bb203.split38
                                 ;    1063                 if( USB_E_QOVR == err )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1063
000009B1 A889                    		MOV.L 0CH[R0], R1
000009B3 7501D5                  		CMP #0FFFFFFD5H, R1
000009B6 A882                    		MOV.L 08H[R0], R2
000009B8 21rr                    		BNE L283
000009BA                         L282:	; bb212
000009BA FB3AE803                		MOV.L #000003E8H, R3
000009BE 6611                    		MOV.L #00000001H, R1
                                 ;    1064                 {
                                 ;    1065                     USB_WAI_MSG( USB_HCD_MBX, ptr, 1000 );  /* Retry */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1065
000009C0 05rrrrrr             A  		BSR _usb_cstd_WaiMsg
000009C4 38rrrr               W  		BRA L313
000009C7                         L283:	; bb216
                                 ;    1066                 }
                                 ;    1067                 else
                                 ;    1068                 {
                                 ;    1069                     /* Release Memory Block */
                                 ;    1070                     usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1070
000009C7 BA8B                    		MOVU.W 16H[R0], R3
000009C9 EF21                    		MOV.L R2, R1
000009CB EF32                    		MOV.L R3, R2
000009CD 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
000009D0 38rrrr               W  		BRA L313
000009D3                         L284:	; bb224
                                 ;    1071                 }
                                 ;    1072             break;
                                 ;    1073             case USB_MSG_HCD_CLR_STALL_RESULT:
                                 ;    1074                 ptr = (USB_UTR_t*)mess;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1074
000009D3 E5000102                		MOV.L 04H[R0], 08H[R0]
000009D7                         L285:	; bb224.split
                                 ;    1075                 retval = ptr -> status;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1075
000009D7 A881                    		MOV.L 08H[R0], R1
000009D9 D510100D                		MOV.W 20H[R1], 1AH[R0]
000009DD                         L286:	; bb224.split39
                                 ;    1076     
                                 ;    1077                 if (retval == USB_DATA_TMO)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1077
000009DD BB09                    		MOVU.W 1AH[R0], R1
000009DF 6191                    		CMP #09H, R1
000009E1 20rr                    		BEQ L291
000009E3                         L287:	; bb232
                                 ;    1078                 {
                                 ;    1079                     USB_PRINTF0("*** Standard Request Timeout error !\n");
                                 ;    1080                 }
                                 ;    1081                 else if (retval == USB_DATA_STALL)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1081
000009E3 BB09                    		MOVU.W 1AH[R0], R1
000009E5 6161                    		CMP #06H, R1
000009E7 20rr                    		BEQ L291
000009E9                         L288:	; bb235
                                 ;    1082                 {
                                 ;    1083                     USB_PRINTF0("*** Standard Request STALL !\n");
                                 ;    1084                 }
                                 ;    1085                 else if (retval != USB_CTRL_END)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1085
000009E9 BB09                    		MOVU.W 1AH[R0], R1
000009EB 6101                    		CMP #00H, R1
000009ED 21rr                    		BNE L291
000009EF                         L289:	; bb237
                                 ;    1086                 {
                                 ;    1087                     USB_PRINTF0("*** Standard Request error !\n");
                                 ;    1088                 }
                                 ;    1089                 else
                                 ;    1090                 {
                                 ;    1091                     usb_cstd_ClrStall(ptr, usb_shstd_ClearStallPipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1091
000009EF FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallPipe, R14
000009F5 5CE2                    		MOVU.W [R14], R2
000009F7 A881                    		MOV.L 08H[R0], R1
000009F9 05rrrrrr             A  		BSR _usb_cstd_ClrStall
000009FD                         L290:	; bb237.split
                                 ;    1092                     usb_creg_set_sqclr(ptr, usb_shstd_ClearStallPipe);    /* SQCLR */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1092
000009FD FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallPipe, R14
00000A03 5CE2                    		MOVU.W [R14], R2
00000A05 A881                    		MOV.L 08H[R0], R1
00000A07 05rrrrrr             A  		BSR _usb_creg_set_sqclr
00000A0B                         L291:	; bb259
                                 ;    1093                 }
                                 ;    1094                 (*usb_shstd_ClearStallCall)(ptr, retval, USB_MSG_HCD_CLR_STALL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1094
00000A0B FBE2rrrrrrrr            		MOV.L #__$usb_shstd_ClearStallCall, R14
00000A11 ECEE                    		MOV.L [R14], R14
00000A13 BB0A                    		MOVU.W 1AH[R0], R2
00000A15 A881                    		MOV.L 08H[R0], R1
00000A17 FB3A0901                		MOV.L #00000109H, R3
00000A1B 7F1E                    		JSR R14
00000A1D                         L292:	; bb259.split
                                 ;    1095             
                                 ;    1096                 /* Release Memory Block */
                                 ;    1097                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1097
00000A1D BA8A                    		MOVU.W 16H[R0], R2
00000A1F A881                    		MOV.L 08H[R0], R1
00000A21 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000A24 38rrrr               W  		BRA L313
00000A27                         L293:	; bb265
                                 ;    1098             break;
                                 ;    1099 
                                 ;    1100             case USB_MSG_HCD_CLRSEQBIT:
                                 ;    1101                 /* SQCLR */
                                 ;    1102                 usb_creg_set_sqclr(ptr, pipenum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1102
00000A27 BA82                    		MOVU.W 14H[R0], R2
00000A29 A881                    		MOV.L 08H[R0], R1
00000A2B 05rrrrrr             A  		BSR _usb_creg_set_sqclr
00000A2F                         L294:	; bb265.split
                                 ;    1103                 /* Callback */
                                 ;    1104                 (hp->complete)(ptr, (uint16_t)USB_NO_ARG, (uint16_t)USB_MSG_HCD_CLRSEQBIT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1104
00000A2F A989                    		MOV.L 1CH[R0], R1
00000A31 A914                    		MOV.L 10H[R1], R4
00000A33 A881                    		MOV.L 08H[R0], R1
00000A35 FB3A1501                		MOV.L #00000115H, R3
00000A39 6602                    		MOV.L #00000000H, R2
00000A3B 7F14                    		JSR R4
00000A3D                         L295:	; bb265.split40
                                 ;    1105                 /* Release Memory Block */
                                 ;    1106                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1106
00000A3D BA8A                    		MOVU.W 16H[R0], R2
00000A3F A881                    		MOV.L 08H[R0], R1
00000A41 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000A44 38rrrr               W  		BRA L313
00000A47                         L296:	; bb274
                                 ;    1107             break;
                                 ;    1108 
                                 ;    1109             case USB_MSG_HCD_SETSEQBIT:
                                 ;    1110                 /* SQSET */
                                 ;    1111                 usb_creg_set_sqset(ptr, pipenum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1111
00000A47 BA82                    		MOVU.W 14H[R0], R2
00000A49 A881                    		MOV.L 08H[R0], R1
00000A4B 05rrrrrr             A  		BSR _usb_creg_set_sqset
00000A4F                         L297:	; bb274.split
                                 ;    1112                 /* Callback */
                                 ;    1113                 (hp->complete)(ptr, (uint16_t)USB_NO_ARG, (uint16_t)USB_MSG_HCD_SETSEQBIT);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1113
00000A4F A989                    		MOV.L 1CH[R0], R1
00000A51 A914                    		MOV.L 10H[R1], R4
00000A53 A881                    		MOV.L 08H[R0], R1
00000A55 FB3A1601                		MOV.L #00000116H, R3
00000A59 6602                    		MOV.L #00000000H, R2
00000A5B 7F14                    		JSR R4
00000A5D                         L298:	; bb274.split41
                                 ;    1114                 /* Release Memory Block */
                                 ;    1115                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1115
00000A5D BA8A                    		MOVU.W 16H[R0], R2
00000A5F A881                    		MOV.L 08H[R0], R1
00000A61 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000A64 38rrrr               W  		BRA L313
00000A67                         L299:	; bb284
                                 ;    1116             break;
                                 ;    1117 
                                 ;    1118             case USB_MSG_HCD_TRANSEND1:
                                 ;    1119                 /* Pipe Transfer Process check */
                                 ;    1120                 if (usb_gcstd_Pipe[ptr->ip][pipenum] != USB_NULL) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1120
00000A67 A881                    		MOV.L 08H[R0], R1
00000A69 B991                    		MOVU.W 0CH[R1], R1
00000A6B 751128                  		MUL #28H, R1
00000A6E FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
00000A74 4B1E                    		ADD R1, R14
00000A76 BA81                    		MOVU.W 14H[R0], R1
00000A78 FE61EE                  		MOV.L [R1,R14], R14
00000A7B 610E                    		CMP #00H, R14
00000A7D 20rr                    		BEQ L303
00000A7F                         L300:	; bb286
                                 ;    1121                 {
                                 ;    1122                     /* Control Transfer stop */
                                 ;    1123                     if (pipenum == USB_PIPE0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1123
00000A7F BA81                    		MOVU.W 14H[R0], R1
00000A81 6101                    		CMP #00H, R1
00000A83 A881                    		MOV.L 08H[R0], R1
00000A85 18                   S  		BNE L302
00000A86                         L301:	; bb287
00000A86 6692                    		MOV.L #00000009H, R2
                                 ;    1124                     {
                                 ;    1125                         /* Control Read/Write End */
                                 ;    1126                         usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1126
00000A88 05rrrrrr             A  		BSR _usb_hstd_ControlEnd
00000A8C 08                   S  		BRA L303
00000A8D                         L302:	; bb289
                                 ;    1127                     }
                                 ;    1128                     else
                                 ;    1129                     {
                                 ;    1130                         /* Transfer stop */
                                 ;    1131                         usb_cstd_ForcedTermination(ptr, pipenum, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1131
00000A8D BA82                    		MOVU.W 14H[R0], R2
00000A8F 6693                    		MOV.L #00000009H, R3
00000A91 05rrrrrr             A  		BSR _usb_cstd_ForcedTermination
00000A95                         L303:	; bb312
                                 ;    1132                     }
                                 ;    1133                 }
                                 ;    1134                 else
                                 ;    1135                 {
                                 ;    1136                     USB_PRINTF1("### Host not transferd %d\n",pipenum);
                                 ;    1137                 }
                                 ;    1138                 /* Release Memory Block */
                                 ;    1139                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1139
00000A95 BA8A                    		MOVU.W 16H[R0], R2
00000A97 A881                    		MOV.L 08H[R0], R1
00000A99 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000A9C 2Err                 B  		BRA L313
00000A9E                         L304:	; bb316
                                 ;    1140             break;
                                 ;    1141 
                                 ;    1142             case USB_MSG_HCD_TRANSEND2:
                                 ;    1143                 /* Pipe Transfer Process check */
                                 ;    1144                 if (usb_gcstd_Pipe[ptr->ip][pipenum] != USB_NULL)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1144
00000A9E A881                    		MOV.L 08H[R0], R1
00000AA0 B991                    		MOVU.W 0CH[R1], R1
00000AA2 751128                  		MUL #28H, R1
00000AA5 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
00000AAB 4B1E                    		ADD R1, R14
00000AAD BA81                    		MOVU.W 14H[R0], R1
00000AAF FE61EE                  		MOV.L [R1,R14], R14
00000AB2 610E                    		CMP #00H, R14
00000AB4 20rr                    		BEQ L308
00000AB6                         L305:	; bb318
                                 ;    1145                 {
                                 ;    1146                     /* Control Transfer stop */
                                 ;    1147                     if (pipenum == USB_PIPE0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1147
00000AB6 BA81                    		MOVU.W 14H[R0], R1
00000AB8 6101                    		CMP #00H, R1
00000ABA A881                    		MOV.L 08H[R0], R1
00000ABC 18                   S  		BNE L307
00000ABD                         L306:	; bb319
00000ABD 6682                    		MOV.L #00000008H, R2
                                 ;    1148                     {
                                 ;    1149                         /* Control Read/Write End */
                                 ;    1150                         usb_hstd_ControlEnd(ptr, (uint16_t)USB_DATA_STOP);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1150
00000ABF 05rrrrrr             A  		BSR _usb_hstd_ControlEnd
00000AC3 08                   S  		BRA L308
00000AC4                         L307:	; bb321
                                 ;    1151                     }
                                 ;    1152                     else
                                 ;    1153                     {
                                 ;    1154                         /* Transfer stop */
                                 ;    1155                         usb_cstd_ForcedTermination(ptr, pipenum, (uint16_t)USB_DATA_STOP);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1155
00000AC4 BA82                    		MOVU.W 14H[R0], R2
00000AC6 6683                    		MOV.L #00000008H, R3
00000AC8 05rrrrrr             A  		BSR _usb_cstd_ForcedTermination
00000ACC                         L308:	; bb344
                                 ;    1156                     }
                                 ;    1157                 }
                                 ;    1158                 else
                                 ;    1159                 {
                                 ;    1160                     USB_PRINTF1("### Host not transferd %d\n",pipenum);
                                 ;    1161                 }
                                 ;    1162                 /* Release Memory Block */
                                 ;    1163                 usb_hstd_HcdRelMpl(ptr, msginfo);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",1163
00000ACC BA8A                    		MOVU.W 16H[R0], R2
00000ACE A881                    		MOV.L 08H[R0], R1
00000AD0 39rrrr               W  		BSR _usb_hstd_HcdRelMpl
00000AD3 2Err                 B  		BRA L313
00000AD5                         L309:	; bb354
00000AD5 A889                    		MOV.L 0CH[R0], R1
00000AD7 7501CE                  		CMP #0FFFFFFCEH, R1
00000ADA 10                   S  		BEQ L311
00000ADB                         L310:	; bb358
00000ADB F80601                  		MOV.L #00000001H, [R0]
00000ADE 08                   S  		BRA L312
00000ADF                         L311:	; bb359
00000ADF F80600                  		MOV.L #00000000H, [R0]
00000AE2                         L312:	; bb360
00000AE2 EC01                    		MOV.L [R0], R1
00000AE4 6101                    		CMP #00H, R1
00000AE6 3Arrrr               W  		BEQ L209
00000AE9                         L313:	; bb367.split
00000AE9 FB3A1027                		MOV.L #00002710H, R3
00000AED 710204                  		ADD #04H, R0, R2
00000AF0 6611                    		MOV.L #00000001H, R1
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",869
00000AF2 05rrrrrr             A  		BSR _usb_cstd_RecMsg
00000AF6 A089                    		MOV.L R1, 0CH[R0]
00000AF8                         L314:	; bb367.split42
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hdriver.c",870
00000AF8 A889                    		MOV.L 0CH[R0], R1
00000AFA 6101                    		CMP #00H, R1
00000AFC 21rr                    		BNE L309
00000AFE 2Err                 B  		BRA L311
                                 ;    1164             break;
                                 ;    1165 
                                 ;    1166 #ifdef USB_DTC_ENABLE
                                 ;    1167             case USB_MSG_HCD_D0FIFO_INT:
                                 ;    1168                 usb_cstd_D0fifoInt(ptr);
                                 ;    1169             break;
                                 ;    1170 #endif /* USB_DTC_ENABLE */
                                 ;    1171 
                                 ;    1172             case USB_MSG_HCD_D1FIFO_INT:
                                 ;    1173             break;
                                 ;    1174 
                                 ;    1175             case USB_MSG_HCD_RESM_INT:
                                 ;    1176             break;
                                 ;    1177 
                                 ;    1178             default:
                                 ;    1179             break;
                                 ;    1180         }
                                 ;    1181     }
                                 ;    1182 #ifdef FREE_RTOS_PP
                                 ;    1183 	}
                                 ;    1184 
                                 ;    1185 #endif
                                 ;    1186 #endif  /* (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP) */
                                 ;    1187 }/* eof usb_hstd_HcdTask() */
                                 ;    1188 /******************************************************************************
                                 ;    1189 End  Of File
                                 ;    1190 ******************************************************************************/
                                 ;    1191 
                                 		.SECTION	B,DATA,ALIGN=4
00000000                         _usb_ghstd_DeviceDrv:
00000000(00000370H)              		.blkl	220
00000370                         __$usb_shstd_HcdMsg:
00000370(00000004H)              		.blkl	1
00000374                         __$usb_shstd_ClearStallControl:
00000374(0000002CH)              		.blkl	11
000003A0                         __$usb_shstd_ClearStallCall:
000003A0(00000004H)              		.blkl	1
                                 		.SECTION	B_2,DATA,ALIGN=2
00000000                         _usb_ghstd_DeviceInfo:
00000000(00000160H)              		.blkw	176
00000160                         _usb_ghstd_RemortPort:
00000160(00000004H)              		.blkw	2
00000164                         _usb_ghstd_Ctsq:
00000164(00000004H)              		.blkw	2
00000168                         _usb_ghstd_MgrMode:
00000168(00000008H)              		.blkw	4
00000170                         _usb_ghstd_DcpRegister:
00000170(0000002CH)              		.blkw	22
0000019C                         _usb_ghstd_DeviceAddr:
0000019C(00000004H)              		.blkw	2
000001A0                         _usb_ghstd_DeviceSpeed:
000001A0(00000004H)              		.blkw	2
000001A4                         _usb_ghstd_DeviceNum:
000001A4(00000004H)              		.blkw	2
000001A8                         _usb_ghstd_IgnoreCnt:
000001A8(00000028H)              		.blkw	20
000001D0                         __$usb_shstd_ClearStallPipe:
000001D0(00000002H)              		.blkw	1
000001D2                         __$usb_shstd_ClearStallRequest:
000001D2(0000000AH)              		.blkw	5
                                 		.SECTION	B_1,DATA
00000000                         __$usb_shstd_ClearStallData:
00000000(0000000AH)              		.blkb	10
                                 		.swsection	W,stuff
00000000                         L315:
00000000 rrrr                    		.switch		L224-L316
00000002 rrrr                    		.switch		L233-L316
00000004 rrrr                    		.switch		L244-L316
00000006 rrrr                    		.switch		L252-L316
00000008 rrrr                    		.switch		L255-L316
0000000A rrrr                    		.switch		L248-L316
0000000C rrrr                    		.switch		L259-L316
0000000E rrrr                    		.switch		L265-L316
00000010 rrrr                    		.switch		L278-L316
00000012 rrrr                    		.switch		L237-L316
00000014 rrrr                    		.switch		L228-L316
00000016 rrrr                    		.switch		L284-L316
00000018 rrrr                    		.switch		L271-L316
0000001A rrrr                    		.switch		L313-L316
0000001C rrrr                    		.switch		L274-L316
0000001E rrrr                    		.switch		L313-L316
00000020 rrrr                    		.switch		L313-L316
00000022 rrrr                    		.switch		L223-L316
00000024 rrrr                    		.switch		L299-L316
00000026 rrrr                    		.switch		L304-L316
00000028 rrrr                    		.switch		L293-L316
0000002A rrrr                    		.switch		L296-L316
0000002C rrrr                    		.switch		L217-L316
0000002E rrrr                    		.switch		L218-L316
                                 		.SECTION	W,ROMDATA,ALIGN=4
                                 		.SECTION	W_1,ROMDATA
                                 		.SECTION	W_2,ROMDATA,ALIGN=2
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     03075   LINES

Section List

Attr         Size               Name
CODE     0000002816(00000B00H)  P
DATA     0000000932(000003A4H)  B
DATA     0000000476(000001DCH)  B_2
DATA     0000000010(0000000AH)  B_1
ROMDATA  0000000000(00000000H)  W
ROMDATA  0000000000(00000000H)  W_1
ROMDATA  0000000048(00000030H)  W_2

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx124\$ccrx\r_usb_hdriver.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01\CompactaXP_build\r_usb_hdriver.lst
-output=C:\Workspace\e2studio\git\MT01\CompactaXP_build\r_usb_basic\src\driver\host\r_usb_hdriver.obj
