* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Tue Feb 28 14:07:30 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  28-Feb-2017 14:07:30
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_hstdfunction.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01\r_lvd_rx,C:\Workspace\e2studio\git\MT01\r_lvd_rx\src,C:/Workspace/e2studio/git/MT01/r_tfa
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_hstdfunction.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=1,EASYMAK=0,MOBILE=0,FREE_RTOS_PP
                                 ;r_usb_hstdfunction.c
                                 
                                 		.glb	_usb_ghstd_RemortPort
                                 		.glb	_usb_ghstd_EnumarationProcess
                                 		.glb	_usb_hstd_Bchg0Function
                                 		.glb	_usb_creg_read_dvstctr
                                 		.glb	_usb_hstd_DeviceResume
                                 		.glb	_usb_hstd_ChkAttach
                                 		.glb	_usb_hstd_DetachProcess
                                 		.glb	_usb_hstd_BchgEnable
                                 		.glb	_usb_hstd_ChkClk
                                 		.glb	_usb_hstd_LsConnectFunction
                                 		.glb	_usb_hstd_AttachFunction
                                 		.glb	_usb_cpu_DelayXms
                                 		.glb	_usb_hstd_Ovrcr0Function
                                 		.glb	_usb_hstd_OvcrNotifiation
                                 		.glb	_usb_hstd_EnumFunction1
                                 		.glb	_usb_hstd_EnumFunction2
                                 		.glb	_usb_hstd_EnumFunction3
                                 		.glb	_usb_hstd_EnumFunction4
                                 		.glb	_usb_hstd_EnumFunction5
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _usb_hstd_Bchg0Function:
                                 		.STACK	_usb_hstd_Bchg0Function=12
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_hstdfunction.c
                                 ;      21 * Description  : USB Host standard request related functions.
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Support Multi device.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 
                                 ;      30 /******************************************************************************
                                 ;      31 Includes   <System Includes> , "Project Includes"
                                 ;      32 ******************************************************************************/
                                 ;      33 #include "r_usb_basic_if.h"
                                 ;      34 #include "r_usb_reg_access.h"
                                 ;      35 
                                 ;      36 
                                 ;      37 #if (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP)
                                 ;      38 
                                 ;      39 /******************************************************************************
                                 ;      40 Constant macro definitions
                                 ;      41 ******************************************************************************/
                                 ;      42 
                                 ;      43 
                                 ;      44 /******************************************************************************
                                 ;      45 External variables and functions
                                 ;      46 ******************************************************************************/
                                 ;      47 extern void (*usb_ghstd_EnumarationProcess[8])(USB_UTR_t *,uint16_t, uint16_t);    
                                 ;      48 /* Enumeration Table */
                                 ;      49 
                                 ;      50 /******************************************************************************
                                 ;      51 Private global variables and functions
                                 ;      52 ******************************************************************************/
                                 ;      53 
                                 ;      54 /******************************************************************************
                                 ;      55 Renesas Abstracted Host Standard functions
                                 ;      56 ******************************************************************************/
                                 ;      57 
                                 ;      58 /******************************************************************************
                                 ;      59 Function Name   : usb_hstd_Bchg0Function
                                 ;      60 Description     : Execute the process appropriate to the status of the connected 
                                 ;      61                 : USB device when a BCHG interrupt occurred.
                                 ;      62 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;      63 Return value    : none
                                 ;      64 ******************************************************************************/
                                 ;      65 void usb_hstd_Bchg0Function(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",65
00000000 6080                    		SUB #08H, R0
00000002 A009                    		MOV.L R1, 04H[R0]
                                 ;      66 {
                                 ;      67     uint16_t    buf, connect_inf;
                                 ;      68 
                                 ;      69     /* SUSPENDED check */
                                 ;      70     if( usb_ghstd_RemortPort[USB_PORT0] == USB_SUSPENDED )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",70
00000004 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_RemortPort, R14
0000000A 5CEE                    		MOVU.W [R14], R14
0000000C 755E50                  		CMP #50H, R14
0000000F 21rr                    		BNE L21
00000011                         L11:	; bb4
00000011 6602                    		MOV.L #00000000H, R2
                                 ;      71     {
                                 ;      72         /* Device State Control Register - Resume enable check */
                                 ;      73         buf = usb_creg_read_dvstctr( ptr, USB_PORT0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",73
00000013 05rrrrrr             A  		BSR _usb_creg_read_dvstctr
00000017 D301                    		MOV.W R1, [R0]
00000019                         L12:	; bb4.split
                                 ;      74 
                                 ;      75         if( (uint16_t)(buf & USB_RESUME) == USB_RESUME )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",75
00000019 5C01                    		MOVU.W [R0], R1
0000001B 752120                  		AND #20H, R1
0000001E 755120                  		CMP #20H, R1
00000021 21rr                    		BNE L15
00000023                         L13:	; bb7
                                 ;      76         {
                                 ;      77             USB_PRINTF0("remote wakeup port0\n");
                                 ;      78             usb_ghstd_RemortPort[USB_PORT0] = USB_DEFAULT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",78
00000023 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_RemortPort, R14
00000029 F8E528                  		MOV.W #0028H, [R14]
0000002C                         L14:	; bb7.split
                                 ;      79             /* Change device state to resume */
                                 ;      80             usb_hstd_DeviceResume(ptr, (uint16_t)(USB_PORT0 + USB_DEVICEADDR));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",80
0000002C A809                    		MOV.L 04H[R0], R1
0000002E 6612                    		MOV.L #00000001H, R2
00000030 05rrrrrr             A  		BSR _usb_hstd_DeviceResume
00000034 6702                    		RTSD #08H
00000036                         L15:	; bb9
                                 ;      81         }
                                 ;      82         else
                                 ;      83         {
                                 ;      84             /* Decide USB Line state (ATTACH) */
                                 ;      85             connect_inf = usb_hstd_ChkAttach(ptr, (uint16_t)USB_PORT0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",85
00000036 A809                    		MOV.L 04H[R0], R1
00000038 6602                    		MOV.L #00000000H, R2
0000003A 05rrrrrr             A  		BSR _usb_hstd_ChkAttach
0000003E 9009                    		MOV.W R1, 02H[R0]
00000040                         L16:	; bb9.split
                                 ;      86             if( connect_inf == USB_DETACH )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",86
00000040 B809                    		MOVU.W 02H[R0], R1
00000042 755143                  		CMP #43H, R1
00000045 21rr                    		BNE L19
00000047                         L17:	; bb13
                                 ;      87             {
                                 ;      88                 usb_ghstd_RemortPort[USB_PORT0] = USB_DEFAULT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",88
00000047 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_RemortPort, R14
0000004D F8E528                  		MOV.W #0028H, [R14]
00000050                         L18:	; bb13.split
                                 ;      89                 /* USB detach process */
                                 ;      90                 usb_hstd_DetachProcess(ptr, (uint16_t)USB_PORT0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",90
00000050 A809                    		MOV.L 04H[R0], R1
00000052 6602                    		MOV.L #00000000H, R2
00000054 05rrrrrr             A  		BSR _usb_hstd_DetachProcess
00000058 6702                    		RTSD #08H
0000005A                         L19:	; bb15
                                 ;      91             }
                                 ;      92             else
                                 ;      93             {
                                 ;      94                 /* Enable port BCHG interrupt */
                                 ;      95                 usb_hstd_BchgEnable(ptr, (uint16_t)USB_PORT0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",95
0000005A A809                    		MOV.L 04H[R0], R1
0000005C 6602                    		MOV.L #00000000H, R2
0000005E 05rrrrrr             A  		BSR _usb_hstd_BchgEnable
00000062                         L20:	; bb15.split
                                 ;      96                 /* Check clock */
                                 ;      97                 usb_hstd_ChkClk(ptr, (uint16_t)USB_PORT0, (uint16_t)USB_SUSPENDED);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",97
00000062 A809                    		MOV.L 04H[R0], R1
00000064 754350                  		MOV.L #00000050H, R3
00000067 6602                    		MOV.L #00000000H, R2
00000069 05rrrrrr             A  		BSR _usb_hstd_ChkClk
0000006D 6702                    		RTSD #08H
0000006F                         L21:	; bb32
0000006F 6602                    		MOV.L #00000000H, R2
                                 ;      98             }
                                 ;      99         }
                                 ;     100     }
                                 ;     101     else
                                 ;     102     {
                                 ;     103         /* USB detach process */
                                 ;     104         usb_hstd_DetachProcess(ptr, (uint16_t)USB_PORT0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",104
00000071 05rrrrrr             A  		BSR _usb_hstd_DetachProcess
00000075 6702                    		RTSD #08H
00000077                         _usb_hstd_LsConnectFunction:
                                 		.STACK	_usb_hstd_LsConnectFunction=8
                                 ;     105     }
                                 ;     106 }
                                 ;     107 /******************************************************************************
                                 ;     108 End of function usb_hstd_Bchg0Function
                                 ;     109 ******************************************************************************/
                                 ;     110 
                                 ;     111 /******************************************************************************
                                 ;     112 Function Name   : usb_hstd_LsConnectFunction
                                 ;     113 Description     : Low-speed device connect.
                                 ;     114 Arguments       : none
                                 ;     115 Return value    : none
                                 ;     116 ******************************************************************************/
                                 ;     117 void usb_hstd_LsConnectFunction(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",117
00000077 6040                    		SUB #04H, R0
00000079 E301                    		MOV.L R1, [R0]
                                 ;     118 {
                                 ;     119     (*usb_ghstd_EnumarationProcess[0])(ptr, (uint16_t)USB_DEVICE_0, (uint16_t)0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",119
0000007B FBE2rrrrrrrr            		MOV.L #_usb_ghstd_EnumarationProcess, R14
00000081 ECEE                    		MOV.L [R14], R14
00000083 6602                    		MOV.L #00000000H, R2
00000085 EF23                    		MOV.L R2, R3
00000087 7F1E                    		JSR R14
00000089 6701                    		RTSD #04H
0000008B                         _usb_hstd_AttachFunction:
                                 		.STACK	_usb_hstd_AttachFunction=4
                                 ;     120 }
                                 ;     121 /******************************************************************************
                                 ;     122 End of function usb_hstd_LsConnectFunction
                                 ;     123 ******************************************************************************/
                                 ;     124 
                                 ;     125 
                                 ;     126 /******************************************************************************
                                 ;     127 Function Name   : usb_hstd_AttachFunction
                                 ;     128 Description     : Device attach.
                                 ;     129 Arguments       : none
                                 ;     130 Return value    : none
                                 ;     131 ******************************************************************************/
                                 ;     132 void usb_hstd_AttachFunction(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",132
0000008B 754164                  		MOV.L #00000064H, R1
                                 ;     133 {
                                 ;     134     /* 100ms wait */
                                 ;     135     usb_cpu_DelayXms((uint16_t)100);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",135
0000008E 05rrrrrr             A  		BSR _usb_cpu_DelayXms
00000092 02                      		RTS
00000093                         _usb_hstd_Ovrcr0Function:
                                 		.STACK	_usb_hstd_Ovrcr0Function=8
                                 ;     136 }
                                 ;     137 /******************************************************************************
                                 ;     138 End of function usb_hstd_AttachFunction
                                 ;     139 ******************************************************************************/
                                 ;     140 
                                 ;     141 
                                 ;     142 /******************************************************************************
                                 ;     143 Function Name   : usb_hstd_Ovrcr0Function
                                 ;     144 Description     : Set USB registers as required due to an OVRCR (over-current)
                                 ;     145                 : interrupt, and notify the MGR (manager) task about this.
                                 ;     146 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     147 Return value    : none
                                 ;     148 ******************************************************************************/
                                 ;     149 void usb_hstd_Ovrcr0Function(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",149
00000093 6040                    		SUB #04H, R0
00000095 E301                    		MOV.L R1, [R0]
00000097 6602                    		MOV.L #00000000H, R2
                                 ;     150 {
                                 ;     151     /* Over-current bit check */
                                 ;     152     USB_PRINTF0(" OVCR int port0\n");
                                 ;     153     /* OVRCR interrupt disable */
                                 ;     154     /* Notification over current */
                                 ;     155     usb_hstd_OvcrNotifiation(ptr, (uint16_t)USB_PORT0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",155
00000099 05rrrrrr             A  		BSR _usb_hstd_OvcrNotifiation
0000009D 6701                    		RTSD #04H
0000009F                         _usb_hstd_EnumFunction1:
                                 		.STACK	_usb_hstd_EnumFunction1=8
                                 ;     156 }
                                 ;     157 /******************************************************************************
                                 ;     158 End of function usb_hstd_Ovrcr0Function
                                 ;     159 ******************************************************************************/
                                 ;     160 
                                 ;     161 /******************************************************************************
                                 ;     162 Function Name   : usb_hstd_EnumFunction1
                                 ;     163 Description     : Device enumeration function nr 1.
                                 ;     164 Arguments       : none
                                 ;     165 Return value    : uint16_t              : USB_DONE
                                 ;     166 ******************************************************************************/
                                 ;     167 uint16_t usb_hstd_EnumFunction1(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",167
0000009F 6040                    		SUB #04H, R0
                                 ;     168 {
                                 ;     169     return USB_DONE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",169
000000A1 3D0100                  		MOV.W #0000H, 02H[R0]
000000A4 9809                    		MOV.W 02H[R0], R1
000000A6                         L26:	; entry.split
                                 ;     170 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",170
000000A6 5F11                    		MOVU.W R1, R1
000000A8 6701                    		RTSD #04H
000000AA                         _usb_hstd_EnumFunction2:
                                 		.STACK	_usb_hstd_EnumFunction2=12
                                 ;     171 /******************************************************************************
                                 ;     172 End of function usb_hstd_EnumFunction1
                                 ;     173 ******************************************************************************/
                                 ;     174 
                                 ;     175 /******************************************************************************
                                 ;     176 Function Name   : usb_hstd_EnumFunction2
                                 ;     177 Description     : Device enumeration function nr 2.
                                 ;     178 Arguments       : uint16_t *enummode    : Enumeration mode.
                                 ;     179 Return value    : uint16_t              : USB_YES
                                 ;     180 ******************************************************************************/
                                 ;     181 uint16_t usb_hstd_EnumFunction2(uint16_t* enummode)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",181
000000AA 6080                    		SUB #08H, R0
000000AC A009                    		MOV.L R1, 04H[R0]
                                 ;     182 {
                                 ;     183     return USB_YES;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",183
000000AE 3D0101                  		MOV.W #0001H, 02H[R0]
000000B1 9809                    		MOV.W 02H[R0], R1
000000B3                         L28:	; entry.split
                                 ;     184 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",184
000000B3 5F11                    		MOVU.W R1, R1
000000B5 6702                    		RTSD #08H
000000B7                         _usb_hstd_EnumFunction3:
                                 		.STACK	_usb_hstd_EnumFunction3=12
                                 ;     185 /******************************************************************************
                                 ;     186 End of function usb_hstd_EnumFunction2
                                 ;     187 ******************************************************************************/
                                 ;     188 
                                 ;     189 /******************************************************************************
                                 ;     190 Function Name   : usb_hstd_EnumFunction3
                                 ;     191 Description     : Device enumeration function nr 3.
                                 ;     192 Arguments       : uint16_t devaddr      : Device address
                                 ;     193                 : uint16_t enum_seq     : 
                                 ;     194 Return value    : none
                                 ;     195 ******************************************************************************/
                                 ;     196 void usb_hstd_EnumFunction3(USB_UTR_t *ptr, uint16_t devaddr, uint16_t enum_seq)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",196
000000B7 6080                    		SUB #08H, R0
000000B9 A009                    		MOV.L R1, 04H[R0]
000000BB 900A                    		MOV.W R2, 02H[R0]
000000BD D303                    		MOV.W R3, [R0]
                                 ;     197 {
                                 ;     198     (*usb_ghstd_EnumarationProcess[5])(ptr, devaddr, enum_seq);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",198
000000BF FB12rrrrrrrr            		MOV.L #_usb_ghstd_EnumarationProcess, R1
000000C5 A91C                    		MOV.L 14H[R1], R4
000000C7 5C03                    		MOVU.W [R0], R3
000000C9 B80A                    		MOVU.W 02H[R0], R2
000000CB A809                    		MOV.L 04H[R0], R1
000000CD 7F14                    		JSR R4
000000CF 6702                    		RTSD #08H
000000D1                         _usb_hstd_EnumFunction4:
                                 		.STACK	_usb_hstd_EnumFunction4=16
                                 ;     199 }
                                 ;     200 /******************************************************************************
                                 ;     201 End of function usb_hstd_EnumFunction3
                                 ;     202 ******************************************************************************/
                                 ;     203 
                                 ;     204 /******************************************************************************
                                 ;     205 Function Name   : usb_hstd_EnumFunction4
                                 ;     206 Description     : Device enumeration function nr 4.
                                 ;     207 Arguments       : uint16_t *reqnum      : Request number.
                                 ;     208                 : uint16_t *enummode    : 
                                 ;     209                 : uint16_t devaddr      : Device address.
                                 ;     210 Return value    : none
                                 ;     211 ******************************************************************************/
                                 ;     212 void usb_hstd_EnumFunction4(uint16_t* reqnum, uint16_t* enummode, uint16_t devaddr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",212
000000D1 60C0                    		SUB #0CH, R0
000000D3 A081                    		MOV.L R1, 08H[R0]
000000D5 A00A                    		MOV.L R2, 04H[R0]
000000D7 900B                    		MOV.W R3, 02H[R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",214
000000D9 6703                    		RTSD #0CH
000000DB                         _usb_hstd_EnumFunction5:
                                 		.STACK	_usb_hstd_EnumFunction5=4
                                 ;     213 {
                                 ;     214 }
                                 ;     215 /******************************************************************************
                                 ;     216 End of function usb_hstd_EnumFunction4
                                 ;     217 ******************************************************************************/
                                 ;     218 
                                 ;     219 /******************************************************************************
                                 ;     220 Function Name   : usb_hstd_EnumFunction5
                                 ;     221 Description     : Device enumeration function nr 5.
                                 ;     222 Arguments       : none
                                 ;     223 Return value    : none
                                 ;     224 ******************************************************************************/
                                 ;     225 void usb_hstd_EnumFunction5(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\host\r_usb_hstdfunction.c",225
000000DB 02                      		RTS
                                 ;     226 {
                                 ;     227     USB_PRINTF0(" Get_DeviceDescrip(8-2)\n");
                                 ;     228 }
                                 ;     229 /******************************************************************************
                                 ;     230 End of function usb_hstd_EnumFunction5
                                 ;     231 ******************************************************************************/
                                 ;     232 
                                 ;     233 #endif  /* (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP) */
                                 ;     234 
                                 ;     235 /******************************************************************************
                                 ;     236 End  Of File
                                 ;     237 ******************************************************************************/
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00431   LINES

Section List

Attr         Size               Name
CODE     0000000220(000000DCH)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx99\$ccrx\r_usb_hstdfunction.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01\CompactaXP_build\r_usb_hstdfunction.lst
-output=C:\Workspace\e2studio\git\MT01\CompactaXP_build\r_usb_basic\src\driver\host\r_usb_hstdfunction.obj
