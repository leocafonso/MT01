* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Sun Feb 19 10:54:28 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  19-Feb-2017 10:54:28
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_cstdapi.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01\r_lvd_rx,C:\Workspace\e2studio\git\MT01\r_lvd_rx\src,C:/Workspace/e2studio/git/MT01/r_tfa
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_cstdapi.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=0,MOBILE=1,FREE_RTOS_PP
                                 ;r_usb_cstdapi.c
                                 
                                 		.glb	_R_USB_GetVersion
                                 		.glb	_R_USB_Open
                                 		.glb	_usb_cpu_module_start
                                 		.glb	_R_USB_Close
                                 		.glb	_usb_cpu_module_stop
                                 		.glb	_R_usb_cstd_GetUsbIpAdr
                                 		.glb	_usb_cstd_GetUsbIpAdr
                                 		.glb	_R_usb_cstd_UsbIpInit
                                 		.glb	_R_usb_cstd_ClearHwFunction
                                 		.glb	_usb_cstd_WaitUsbip
                                 		.glb	_usb_cstd_AsspConfig
                                 		.glb	_usb_cstd_InitialClock
                                 		.glb	_usb_cstd_Pinconfig
                                 		.glb	_usb_cstd_set_usbip_mode
                                 		.glb	_usb_cstd_SelfClock
                                 		.glb	_usb_cstd_SetNak
                                 		.glb	_usb_cstd_ClearIntEnb
                                 		.glb	_usb_creg_write_brdyenb
                                 		.glb	_usb_creg_write_nrdyenb
                                 		.glb	_usb_creg_write_bempenb
                                 		.glb	_usb_cstd_ClearIntSts
                                 		.glb	_usb_creg_write_brdysts
                                 		.glb	_usb_creg_write_nrdysts
                                 		.glb	_usb_creg_write_bempsts
                                 		.glb	_usb_cstd_ClearDline
                                 		.glb	_usb_creg_clr_hse
                                 		.glb	_usb_creg_clr_dcfm
                                 		.glb	_usb_cstd_SwReset
                                 		.glb	_R_usb_cstd_SetRegDvstctr0
                                 		.glb	_usb_creg_write_dvstctr
                                 		.glb	_R_usb_cstd_SetRegPipeCtr
                                 		.glb	_usb_creg_write_pipectr
                                 		.glb	_R_usb_cstd_SetBuf
                                 		.glb	_usb_cstd_SetBuf
                                 		.glb	_R_usb_cstd_debug_hook
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _R_USB_GetVersion:
                                 		.STACK	_R_USB_GetVersion=12
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_cstdapi.c
                                 ;      21 * Description  : A USB Host and Peripheral common low level API.
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Added RX71M.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 
                                 ;      30 /******************************************************************************
                                 ;      31 Includes   <System Includes> , "Project Includes"
                                 ;      32 ******************************************************************************/
                                 ;      33 #include "r_usb_basic_if.h"
                                 ;      34 #include "r_usb_reg_access.h"       /* USB register access function */
                                 ;      35 #include "r_usb_api.h"
                                 ;      36 
                                 ;      37 
                                 ;      38 /******************************************************************************
                                 ;      39 Constant macro definitions
                                 ;      40 ******************************************************************************/
                                 ;      41 
                                 ;      42 
                                 ;      43 /******************************************************************************
                                 ;      44 External variables and functions
                                 ;      45 ******************************************************************************/
                                 ;      46 extern usb_err_t    usb_cpu_module_start( usb_ip_t ip_type );
                                 ;      47 extern usb_err_t    usb_cpu_module_stop( usb_ip_t ip_type );
                                 ;      48 
                                 ;      49 /******************************************************************************
                                 ;      50 Private global variables and functions
                                 ;      51 ******************************************************************************/
                                 ;      52 
                                 ;      53 
                                 ;      54 /******************************************************************************
                                 ;      55 Renesas Abstracted common Signal functions
                                 ;      56 ******************************************************************************/
                                 ;      57 
                                 ;      58 /*****************************************************************************
                                 ;      59 * Function Name: R_USB_GetVersion
                                 ;      60 * Description  : Returns the version of this module. The version number is 
                                 ;      61 *                encoded such that the top two bytes are the major version
                                 ;      62 *                number and the bottom two bytes are the minor version number.
                                 ;      63 * Arguments    : none
                                 ;      64 * Return Value : version number
                                 ;      65 ******************************************************************************/
                                 ;      66 #pragma inline(R_USB_GetVersion)
                                 ;      67 uint32_t R_USB_GetVersion(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",67
00000000 6080                    		SUB #08H, R0
                                 ;      68 {
                                 ;      69     uint32_t version = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",69
00000002 F80600                  		MOV.L #00000000H, [R0]
00000005                         L11:	; entry.split
                                 ;      70 
                                 ;      71     version = (USB_VERSION_MAJOR << 16) | USB_VERSION_MINOR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",71
00000005 F8065A                  		MOV.L #0000005AH, [R0]
00000008                         L12:	; entry.split1
                                 ;      72 
                                 ;      73     return version;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",73
00000008 EC01                    		MOV.L [R0], R1
0000000A A009                    		MOV.L R1, 04H[R0]
0000000C                         L13:	; entry.split2
                                 ;      74 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",74
0000000C 6702                    		RTSD #08H
0000000E                         _R_USB_Open:
                                 		.STACK	_R_USB_Open=12
                                 ;      75 /******************************************************************************
                                 ;      76 End of function
                                 ;      77 ******************************************************************************/
                                 ;      78 
                                 ;      79 /******************************************************************************
                                 ;      80 Function Name   : R_USB_Open
                                 ;      81 Description     : Initializes the USB module. It's only called once.
                                 ;      82 Arguments       : usb_ip_t ip_type  : USB_IP0/USB_IP1
                                 ;      83 Return value    : USB_SUCCESS -
                                 ;      84                     USB module is initialized successfully
                                 ;      85                   USB_ERR_OPENED
                                 ;      86                     USB is opened already
                                 ;      87                   USB_ERR_BUSY
                                 ;      88                     Lock has already been acquired by another task
                                 ;      89 ******************************************************************************/
                                 ;      90 usb_err_t R_USB_Open( usb_ip_t ip_type )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",90
0000000E 6080                    		SUB #08H, R0
00000010 A009                    		MOV.L R1, 04H[R0]
                                 ;      91 {
                                 ;      92     return usb_cpu_module_start( ip_type );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",92
00000012 05rrrrrr             A  		BSR _usb_cpu_module_start
00000016 E301                    		MOV.L R1, [R0]
00000018                         L15:	; entry.split
                                 ;      93 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",93
00000018 6702                    		RTSD #08H
0000001A                         _R_USB_Close:
                                 		.STACK	_R_USB_Close=12
                                 ;      94 /******************************************************************************
                                 ;      95 End of function
                                 ;      96 ******************************************************************************/
                                 ;      97 
                                 ;      98 /******************************************************************************
                                 ;      99 Function Name   : R_USB_Close
                                 ;     100 Description     : Initializes the USB module. It's only called once.
                                 ;     101 Arguments       : usb_ip_t ip_type  : USB_IP0/USB_IP1
                                 ;     102 Return value    : USB_SUCCESS -
                                 ;     103                     USB module is initialized successfully
                                 ;     104                   USB_ERR_OPENED
                                 ;     105                     USB is opened already
                                 ;     106                   USB_ERR_BUSY
                                 ;     107                     Lock has already been acquired by another task
                                 ;     108 ******************************************************************************/
                                 ;     109 usb_err_t R_USB_Close( usb_ip_t ip_type )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",109
0000001A 6080                    		SUB #08H, R0
0000001C A009                    		MOV.L R1, 04H[R0]
                                 ;     110 {
                                 ;     111     return usb_cpu_module_stop( ip_type );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",111
0000001E 05rrrrrr             A  		BSR _usb_cpu_module_stop
00000022 E301                    		MOV.L R1, [R0]
00000024                         L17:	; entry.split
                                 ;     112 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",112
00000024 6702                    		RTSD #08H
00000026                         _R_usb_cstd_GetUsbIpAdr:
                                 		.STACK	_R_usb_cstd_GetUsbIpAdr=12
                                 ;     113 /******************************************************************************
                                 ;     114 End of function
                                 ;     115 ******************************************************************************/
                                 ;     116 
                                 ;     117 /******************************************************************************
                                 ;     118 Function Name   : R_usb_cstd_GetUsbIpAdr  
                                 ;     119 Description     : Return USB register base address of specified USB IP.
                                 ;     120 Arguments       : uint16_t  ipno        : USB IP No. that requires the base 
                                 ;     121                                           address value 
                                 ;     122 Return value    : USB_REGADR_t          : Address value
                                 ;     123 ******************************************************************************/
                                 ;     124 USB_REGADR_t    R_usb_cstd_GetUsbIpAdr( uint16_t ipno )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",124
00000026 6080                    		SUB #08H, R0
00000028 9089                    		MOV.W R1, 06H[R0]
                                 ;     125 {
                                 ;     126     return (USB_REGADR_t)usb_cstd_GetUsbIpAdr( ipno );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",126
0000002A B889                    		MOVU.W 06H[R0], R1
0000002C 05rrrrrr             A  		BSR _usb_cstd_GetUsbIpAdr
00000030 E301                    		MOV.L R1, [R0]
00000032                         L19:	; entry.split
                                 ;     127 }/* eof R_usb_cstd_GetUsbIpAdr */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",127
00000032 6702                    		RTSD #08H
00000034                         _R_usb_cstd_UsbIpInit:
                                 		.STACK	_R_usb_cstd_UsbIpInit=12
                                 ;     128  
                                 ;     129 /******************************************************************************
                                 ;     130 Function Name   : R_usb_cstd_UsbIpInit
                                 ;     131 Description     : Initialize the USB IP.
                                 ;     132 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     133                 : uint16_t  usb_mode    : USB mode (Host/Peripheral).
                                 ;     134 Return value    : none
                                 ;     135 ******************************************************************************/
                                 ;     136 void R_usb_cstd_UsbIpInit( USB_UTR_t *ptr, uint16_t usb_mode )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",136
00000034 6080                    		SUB #08H, R0
00000036 A009                    		MOV.L R1, 04H[R0]
00000038 900A                    		MOV.W R2, 02H[R0]
                                 ;     137 {
                                 ;     138     usb_cstd_WaitUsbip( ptr );      /* Wait USB-H/W access enable */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",138
0000003A A809                    		MOV.L 04H[R0], R1
0000003C 05rrrrrr             A  		BSR _usb_cstd_WaitUsbip
00000040                         L21:	; entry.split
                                 ;     139     usb_cstd_AsspConfig( ptr );     /* Set ASSP pin_config */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",139
00000040 A809                    		MOV.L 04H[R0], R1
00000042 05rrrrrr             A  		BSR _usb_cstd_AsspConfig
00000046                         L22:	; entry.split1
                                 ;     140     usb_cstd_InitialClock( ptr );   /* Start clock */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",140
00000046 A809                    		MOV.L 04H[R0], R1
00000048 05rrrrrr             A  		BSR _usb_cstd_InitialClock
0000004C                         L23:	; entry.split2
                                 ;     141     R_usb_cstd_ClearHwFunction( ptr );  /* nitinalize USB register (Host/Peripheral common) */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",141
0000004C A809                    		MOV.L 04H[R0], R1
0000004E 39rrrr               W  		BSR _R_usb_cstd_ClearHwFunction
00000051                         L24:	; entry.split3
                                 ;     142     usb_cstd_Pinconfig( ptr );      /* Set pin_config */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",142
00000051 A809                    		MOV.L 04H[R0], R1
00000053 05rrrrrr             A  		BSR _usb_cstd_Pinconfig
00000057                         L25:	; entry.split4
                                 ;     143 
                                 ;     144     usb_cstd_set_usbip_mode( ptr, usb_mode );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",144
00000057 B80A                    		MOVU.W 02H[R0], R2
00000059 A809                    		MOV.L 04H[R0], R1
0000005B 05rrrrrr             A  		BSR _usb_cstd_set_usbip_mode
0000005F 6702                    		RTSD #08H
00000061                         _R_usb_cstd_ClearHwFunction:
                                 		.STACK	_R_usb_cstd_ClearHwFunction=8
                                 ;     145 }/* eof R_usb_cstd_UsbIpInit */
                                 ;     146  
                                 ;     147 /******************************************************************************
                                 ;     148 Function Name   : R_usb_cstd_ClearHwFunction
                                 ;     149 Description     : Initinalize USB register (Host/Peripheral common)
                                 ;     150 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     151 Return value    : none
                                 ;     152 ******************************************************************************/
                                 ;     153 void R_usb_cstd_ClearHwFunction(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",153
00000061 6040                    		SUB #04H, R0
00000063 E301                    		MOV.L R1, [R0]
                                 ;     154 {
                                 ;     155     usb_cstd_SelfClock(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",155
00000065 05rrrrrr             A  		BSR _usb_cstd_SelfClock
00000069                         L27:	; entry.split
                                 ;     156 
                                 ;     157     usb_cstd_SetNak(ptr, USB_PIPE0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",157
00000069 EC01                    		MOV.L [R0], R1
0000006B 6602                    		MOV.L #00000000H, R2
0000006D 05rrrrrr             A  		BSR _usb_cstd_SetNak
00000071                         L28:	; entry.split1
                                 ;     158 #if defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M)
                                 ;     159     usb_creg_set_bus_wait( ptr );
                                 ;     160 #endif /* #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M) */
                                 ;     161     usb_cstd_ClearIntEnb( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",161
00000071 EC01                    		MOV.L [R0], R1
00000073 05rrrrrr             A  		BSR _usb_cstd_ClearIntEnb
00000077                         L29:	; entry.split2
                                 ;     162 
                                 ;     163     /* Interrupt Disable(BRDY,NRDY,USB_BEMP) */
                                 ;     164     usb_creg_write_brdyenb( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",164
00000077 EC01                    		MOV.L [R0], R1
00000079 6602                    		MOV.L #00000000H, R2
0000007B 05rrrrrr             A  		BSR _usb_creg_write_brdyenb
0000007F                         L30:	; entry.split3
                                 ;     165     usb_creg_write_nrdyenb( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",165
0000007F EC01                    		MOV.L [R0], R1
00000081 6602                    		MOV.L #00000000H, R2
00000083 05rrrrrr             A  		BSR _usb_creg_write_nrdyenb
00000087                         L31:	; entry.split4
                                 ;     166     usb_creg_write_bempenb( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",166
00000087 EC01                    		MOV.L [R0], R1
00000089 6602                    		MOV.L #00000000H, R2
0000008B 05rrrrrr             A  		BSR _usb_creg_write_bempenb
0000008F                         L32:	; entry.split5
                                 ;     167 
                                 ;     168     /* Interrupt status clear */
                                 ;     169     usb_cstd_ClearIntSts( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",169
0000008F EC01                    		MOV.L [R0], R1
00000091 05rrrrrr             A  		BSR _usb_cstd_ClearIntSts
00000095                         L33:	; entry.split6
                                 ;     170 
                                 ;     171     /* Interrupt status clear(USB_BRDY,NRDY,USB_BEMP) */
                                 ;     172     usb_creg_write_brdysts( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",172
00000095 EC01                    		MOV.L [R0], R1
00000097 6602                    		MOV.L #00000000H, R2
00000099 05rrrrrr             A  		BSR _usb_creg_write_brdysts
0000009D                         L34:	; entry.split7
                                 ;     173     usb_creg_write_nrdysts( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",173
0000009D EC01                    		MOV.L [R0], R1
0000009F 6602                    		MOV.L #00000000H, R2
000000A1 05rrrrrr             A  		BSR _usb_creg_write_nrdysts
000000A5                         L35:	; entry.split8
                                 ;     174     usb_creg_write_bempsts( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",174
000000A5 EC01                    		MOV.L [R0], R1
000000A7 6602                    		MOV.L #00000000H, R2
000000A9 05rrrrrr             A  		BSR _usb_creg_write_bempsts
000000AD                         L36:	; entry.split9
                                 ;     175 
                                 ;     176     /* D+/D- control line set */
                                 ;     177     usb_cstd_ClearDline( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",177
000000AD EC01                    		MOV.L [R0], R1
000000AF 05rrrrrr             A  		BSR _usb_cstd_ClearDline
000000B3                         L37:	; entry.split10
                                 ;     178 
                                 ;     179     usb_creg_clr_hse( ptr, USB_PORT0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",179
000000B3 EC01                    		MOV.L [R0], R1
000000B5 6602                    		MOV.L #00000000H, R2
000000B7 05rrrrrr             A  		BSR _usb_creg_clr_hse
000000BB                         L38:	; entry.split11
                                 ;     180     usb_creg_clr_hse( ptr, USB_PORT1 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",180
000000BB EC01                    		MOV.L [R0], R1
000000BD 6612                    		MOV.L #00000001H, R2
000000BF 05rrrrrr             A  		BSR _usb_creg_clr_hse
000000C3                         L39:	; entry.split12
                                 ;     181 
                                 ;     182     /* Function controller select */
                                 ;     183     usb_creg_clr_dcfm( ptr ); 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",183
000000C3 EC01                    		MOV.L [R0], R1
000000C5 05rrrrrr             A  		BSR _usb_creg_clr_dcfm
000000C9                         L40:	; entry.split13
                                 ;     184     usb_cstd_SwReset(ptr);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",184
000000C9 EC01                    		MOV.L [R0], R1
000000CB 05rrrrrr             A  		BSR _usb_cstd_SwReset
000000CF 6701                    		RTSD #04H
000000D1                         _R_usb_cstd_SetRegDvstctr0:
                                 		.STACK	_R_usb_cstd_SetRegDvstctr0=12
                                 ;     185 
                                 ;     186 }/* eof R_usb_cstd_ClearHwFunction */
                                 ;     187 
                                 ;     188 /******************************************************************************
                                 ;     189 Function Name   : R_usb_cstd_SetRegDvstctr0
                                 ;     190 Description     : Setting the value(2nd argument) to DVSTCTR0 register
                                 ;     191 Arguments       : USB_UTR_t *ptr       ; USB internal structure. Selects USB channel.
                                 ;     192                 : uint16_t   val        : setting value
                                 ;     193 Return value    : none
                                 ;     194 ******************************************************************************/
                                 ;     195 void    R_usb_cstd_SetRegDvstctr0( USB_UTR_t *ptr, uint16_t val )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",195
000000D1 6080                    		SUB #08H, R0
000000D3 A009                    		MOV.L R1, 04H[R0]
000000D5 900A                    		MOV.W R2, 02H[R0]
                                 ;     196 {
                                 ;     197 
                                 ;     198     usb_creg_write_dvstctr( ptr, USB_PORT0, val );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",198
000000D7 B80B                    		MOVU.W 02H[R0], R3
000000D9 A809                    		MOV.L 04H[R0], R1
000000DB 6602                    		MOV.L #00000000H, R2
000000DD 05rrrrrr             A  		BSR _usb_creg_write_dvstctr
000000E1 6702                    		RTSD #08H
000000E3                         _R_usb_cstd_SetRegPipeCtr:
                                 		.STACK	_R_usb_cstd_SetRegPipeCtr=12
                                 ;     199 
                                 ;     200 }
                                 ;     201 /******************************************************************************
                                 ;     202 End of function R_usb_cstd_SetRegDvstctr0
                                 ;     203 ******************************************************************************/
                                 ;     204 
                                 ;     205 /******************************************************************************
                                 ;     206 Function Name   : R_usb_cstd_SetRegPipeCtr
                                 ;     207 Description     : Setting the value(3rd argument) to PIPExCTR register
                                 ;     208 Arguments       : USB_UTR_t *ptr      ; USB internal structure. Selects USB channel.
                                 ;     209                 : uint16_t   pipeno    ; Pipe No. 
                                 ;     210                 : uint16_t   val       ; setting value
                                 ;     211 Return value    : none
                                 ;     212 ******************************************************************************/
                                 ;     213 void    R_usb_cstd_SetRegPipeCtr( USB_UTR_t *ptr, uint16_t pipeno, uint16_t val )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",213
000000E3 6080                    		SUB #08H, R0
000000E5 A009                    		MOV.L R1, 04H[R0]
000000E7 900A                    		MOV.W R2, 02H[R0]
000000E9 D303                    		MOV.W R3, [R0]
                                 ;     214 {
                                 ;     215 
                                 ;     216     usb_creg_write_pipectr( ptr, pipeno, val );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",216
000000EB 5C03                    		MOVU.W [R0], R3
000000ED B80A                    		MOVU.W 02H[R0], R2
000000EF A809                    		MOV.L 04H[R0], R1
000000F1 05rrrrrr             A  		BSR _usb_creg_write_pipectr
000000F5 6702                    		RTSD #08H
000000F7                         _R_usb_cstd_SetBuf:
                                 		.STACK	_R_usb_cstd_SetBuf=12
                                 ;     217 
                                 ;     218 }
                                 ;     219 /******************************************************************************
                                 ;     220 End of function R_usb_cstd_SetRegPipeCtr
                                 ;     221 ******************************************************************************/
                                 ;     222 
                                 ;     223 /******************************************************************************
                                 ;     224 Function Name   : R_usb_cstd_SetBuf
                                 ;     225 Description     : Set PID (packet ID) of the specified pipe to BUF.
                                 ;     226 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     227                 : uint16_t pipe  : Pipe number.
                                 ;     228 Return value    : none
                                 ;     229 ******************************************************************************/
                                 ;     230 void R_usb_cstd_SetBuf(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",230
000000F7 6080                    		SUB #08H, R0
000000F9 A009                    		MOV.L R1, 04H[R0]
000000FB 900A                    		MOV.W R2, 02H[R0]
                                 ;     231 {
                                 ;     232     usb_cstd_SetBuf(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",232
000000FD B80A                    		MOVU.W 02H[R0], R2
000000FF A809                    		MOV.L 04H[R0], R1
00000101 05rrrrrr             A  		BSR _usb_cstd_SetBuf
00000105 6702                    		RTSD #08H
00000107                         _R_usb_cstd_debug_hook:
                                 		.STACK	_R_usb_cstd_debug_hook=8
                                 ;     233 }
                                 ;     234 /******************************************************************************
                                 ;     235 End of function R_usb_cstd_SetRegPipeCtr
                                 ;     236 ******************************************************************************/
                                 ;     237 
                                 ;     238 /******************************************************************************
                                 ;     239 Function Name   : R_usb_cstd_debug_hook
                                 ;     240 Description     : Debug hook
                                 ;     241 Arguments       : uint16_t error_code          : error code
                                 ;     242 Return value    : none
                                 ;     243 ******************************************************************************/
                                 ;     244 void R_usb_cstd_debug_hook(uint16_t error_code)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",244
00000107 6040                    		SUB #04H, R0
00000109 9009                    		MOV.W R1, 02H[R0]
0000010B                         L45:	; bb2
                                 ;     245 {
                                 ;     246    while(1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\driver\comm\r_usb_cstdapi.c",246
0000010B 2Err                 B  		BRA L45
                                 ;     247 }   /* eof R_usb_cstd_debug_hook() */
                                 ;     248 
                                 ;     249 /******************************************************************************
                                 ;     250 End  Of File
                                 ;     251 ******************************************************************************/
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00511   LINES

Section List

Attr         Size               Name
CODE     0000000269(0000010DH)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx7E87\$ccrx\r_usb_cstdapi.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01\Mobile_build\r_usb_cstdapi.lst
-output=C:\Workspace\e2studio\git\MT01\Mobile_build\r_usb_basic\src\driver\comm\r_usb_cstdapi.obj
