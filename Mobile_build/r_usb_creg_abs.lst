* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Sun Feb 19 10:54:30 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  19-Feb-2017 10:54:30
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_creg_abs.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01\r_lvd_rx,C:\Workspace\e2studio\git\MT01\r_lvd_rx\src,C:/Workspace/e2studio/git/MT01/r_tfa
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_creg_abs.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=0,MOBILE=1,FREE_RTOS_PP
                                 ;r_usb_creg_abs.c
                                 
                                 		.glb	_usb_gcstd_DataCnt
                                 		.glb	_usb_ghstd_IgnoreCnt
                                 		.glb	_usb_gcstd_Pipe
                                 		.glb	_usb_gcstd_XckeMode
                                 		.glb	_usb_gcstd_HsEnable
                                 		.glb	_usb_gcstd_RhstBit
                                 		.glb	_usb_gcstd_DvsqBit
                                 		.glb	_usb_gcstd_AddrBit
                                 		.glb	_usb_gcstd_SqmonBit
                                 		.glb	_usb_cstd_GetUsbIpAdr
                                 		.glb	_R_usb_cstd_debug_hook
                                 		.glb	_usb_cstd_GetD0fifo16Adr
                                 		.glb	_usb_cstd_GetD0fifo8Adr
                                 		.glb	_usb_cstd_AsspConfig
                                 		.glb	_usb_cstd_Pinconfig
                                 		.glb	_usb_creg_write_fifosel
                                 		.glb	_usb_cstd_InitialClock
                                 		.glb	_usb_creg_set_scke
                                 		.glb	_usb_cstd_InterruptClock
                                 		.glb	_usb_cstd_SelfClock
                                 		.glb	_usb_cstd_StopClock
                                 		.glb	_usb_cstd_GetBufSize
                                 		.glb	_usb_creg_read_dcpmaxp
                                 		.glb	_usb_creg_write_pipesel
                                 		.glb	_usb_creg_read_pipemaxp
                                 		.glb	_usb_cstd_pipe_init
                                 		.glb	_usb_creg_clr_brdyenb
                                 		.glb	_usb_creg_clr_nrdyenb
                                 		.glb	_usb_creg_clr_bempenb
                                 		.glb	_usb_cstd_ClrStall
                                 		.glb	_usb_creg_write_pipecfg
                                 		.glb	_usb_creg_write_pipebuf
                                 		.glb	_usb_creg_write_pipemaxp
                                 		.glb	_usb_creg_write_pipeperi
                                 		.glb	_usb_creg_set_sqclr
                                 		.glb	_usb_cstd_DoAclrm
                                 		.glb	_usb_creg_set_csclr
                                 		.glb	_usb_creg_clr_sts_brdy
                                 		.glb	_usb_creg_clr_sts_nrdy
                                 		.glb	_usb_creg_clr_sts_bemp
                                 		.glb	_usb_cstd_ClrPipeCnfg
                                 		.glb	_usb_cstd_WaitUsbip
                                 		.glb	_usb_cstd_SetNak
                                 		.glb	_usb_creg_clr_pid
                                 		.glb	_usb_creg_read_pipectr
                                 		.glb	_usb_cstd_write_fifo
                                 		.glb	_usb_creg_write_fifo16
                                 		.glb	_usb_creg_set_mbw
                                 		.glb	_usb_creg_write_fifo8
                                 		.glb	_usb_creg_write_fifo32
                                 		.glb	_usb_cstd_read_fifo
                                 		.glb	_usb_creg_read_fifo16
                                 		.glb	_usb_creg_read_fifo32
                                 		.glb	_usb_cstd_is_set_frdy
                                 		.glb	_usb_cstd_chg_curpipe
                                 		.glb	_usb_creg_read_fifoctr
                                 		.glb	_usb_creg_read_syscfg
                                 		.glb	_usb_creg_read_syssts
                                 		.glb	_usb_creg_rmw_fifosel
                                 		.glb	_usb_creg_read_fifosel
                                 		.glb	_usb_cstd_FifoClr
                                 		.glb	_usb_cstd_SetTransactionCounter
                                 		.glb	_usb_cstd_ClrTransactionCounter
                                 		.glb	_usb_creg_set_trclr
                                 		.glb	_usb_creg_write_pipetrn
                                 		.glb	_usb_creg_set_trenb
                                 		.glb	_usb_creg_clr_trenb
                                 		.glb	_usb_cstd_ForcedTermination
                                 		.glb	_usb_creg_set_bclr
                                 		.glb	_usb_cstd_nrdy_endprocess
                                 		.glb	_usb_cstd_GetPid
                                 		.glb	_usb_cpu_DelayXms
                                 		.glb	_usb_cstd_SetBuf
                                 		.glb	_usb_cstd_is_host_mode
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _usb_cstd_GetUsbIpAdr:
                                 		.STACK	_usb_cstd_GetUsbIpAdr=16
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_creg_abs.c
                                 ;      21 * Description  : Call USB register access function
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Added RX71M.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 
                                 ;      30 /******************************************************************************
                                 ;      31 Includes   <System Includes> , "Project Includes"
                                 ;      32 ******************************************************************************/
                                 ;      33 #include "r_usb_basic_if.h"
                                 ;      34 #include "r_usb_reg_access.h"
                                 ;      35 
                                 ;      36 
                                 ;      37 /******************************************************************************
                                 ;      38 Constant macro definitions
                                 ;      39 ******************************************************************************/
                                 ;      40 /* Condition compilation by the difference of the endian */
                                 ;      41 #if USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP
                                 ;      42     #define USB_FIFOENDIAN      USB_FIFO_LITTLE
                                 ;      43 #else   /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;      44     #define USB_FIFOENDIAN      USB_FIFO_BIG
                                 ;      45 #endif  /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;      46 
                                 ;      47 #define USB_BUFSIZE_BIT 10
                                 ;      48 
                                 ;      49 /******************************************************************************
                                 ;      50 Static variables and functions
                                 ;      51 ******************************************************************************/
                                 ;      52 #ifdef USB_DTC_ENABLE
                                 ;      53 static  void        usb_cstd_D0FifoselSet(USB_UTR_t *ptr);
                                 ;      54 #endif /* USB_DTC_ENABLE */
                                 ;      55 /******************************************************************************
                                 ;      56 Private global variables and functions
                                 ;      57 ******************************************************************************/
                                 ;      58 uint16_t    usb_gcstd_RhstBit;
                                 ;      59 uint16_t    usb_gcstd_DvsqBit;
                                 ;      60 uint16_t    usb_gcstd_AddrBit;
                                 ;      61 uint16_t    usb_gcstd_SqmonBit;
                                 ;      62 
                                 ;      63 /******************************************************************************
                                 ;      64 Function Name   : usb_cstd_GetUsbIpAdr
                                 ;      65 Description     : Get base address of the selected USB channel's peripheral 
                                 ;      66                 : registers.
                                 ;      67 Argument        : uint16_t ipnum  : USB_USBIP_0 (0), or USB_USBIP_1 (1).
                                 ;      68 Return          : USB_REGADR_t    : A pointer to the USB_597IP register 
                                 ;      69                                   : structure USB_REGISTER containing all USB
                                 ;      70                                   : channel's registers.
                                 ;      71 ******************************************************************************/
                                 ;      72 USB_REGADR_t    usb_cstd_GetUsbIpAdr( uint16_t ipnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",72
00000000 60C0                    		SUB #0CH, R0
00000002 9109                    		MOV.W R1, 0AH[R0]
                                 ;      73 {
                                 ;      74     USB_REGADR_t    ptr;
                                 ;      75 
                                 ;      76     if( ipnum == USB_USBIP_0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",76
00000004 6101                    		CMP #00H, R1
00000006 18                   S  		BNE L12
00000007                         L11:	; bb3
                                 ;      77     {
                                 ;      78         ptr = (USB_REGADR_t)&USB0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",78
00000007 F80E00000A              		MOV.L #000A0000H, [R0]
0000000C 2Err                 B  		BRA L15
0000000E                         L12:	; bb5
                                 ;      79     }
                                 ;      80     else if( ipnum == USB_USBIP_1 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",80
0000000E B909                    		MOVU.W 0AH[R0], R1
00000010 6111                    		CMP #01H, R1
00000012 18                   S  		BNE L14
00000013                         L13:	; bb6
                                 ;      81     {
                                 ;      82 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;      83         ptr = (USB_REGADR_t)&USBA;
                                 ;      84 #else
                                 ;      85         ptr = (USB_REGADR_t)&USB1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",85
00000013 F80E00020A              		MOV.L #000A0200H, [R0]
00000018 08                   S  		BRA L15
00000019                         L14:	; bb7
00000019 FB1A0108                		MOV.L #00000801H, R1
                                 ;      86 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;      87     }
                                 ;      88     else
                                 ;      89     {
                                 ;      90         USB_DEBUG_HOOK( USB_DEBUG_HOOK_STD | USB_DEBUG_HOOK_CODE1 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",90
0000001D 05rrrrrr             A  		BSR _R_usb_cstd_debug_hook
00000021                         L15:	; bb18
                                 ;      91     }
                                 ;      92 
                                 ;      93     return ptr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",93
00000021 EC01                    		MOV.L [R0], R1
00000023 A009                    		MOV.L R1, 04H[R0]
00000025                         L16:	; bb18.split
                                 ;      94 } /* eof usb_cstd_GetUsbIpAdr() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",94
00000025 6703                    		RTSD #0CH
00000027                         _usb_cstd_GetD0fifo16Adr:
                                 		.STACK	_usb_cstd_GetD0fifo16Adr=12
                                 ;      95 
                                 ;      96 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;      97 /******************************************************************************
                                 ;      98 Function Name   : usb_cstd_GetD0fifo32Adr
                                 ;      99 Description     : Get 16 bits of used channel's D0FIFO register content.
                                 ;     100 Arguments       : USB_UTR_t *ptr : USB system internal structure. Selects channel.
                                 ;     101 Return          : Address of D0FIFO
                                 ;     102 ******************************************************************************/
                                 ;     103 uint32_t    usb_cstd_GetD0fifo32Adr( USB_UTR_t *ptr )
                                 ;     104 {
                                 ;     105     if(ptr->ip == USB_USBIP_0)
                                 ;     106     {
                                 ;     107         return (uint32_t)0;
                                 ;     108     }
                                 ;     109     else if(ptr->ip == USB_USBIP_1)
                                 ;     110     {
                                 ;     111         return (uint32_t)(&ptr->ipp1->D0FIFO.LONG);
                                 ;     112     }
                                 ;     113 
                                 ;     114     return (uint32_t)0;
                                 ;     115 }/* eof usb_cstd_GetD0fifo32Adr() */
                                 ;     116 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     117 /******************************************************************************
                                 ;     118 Function Name   : usb_cstd_GetD0fifo16Adr
                                 ;     119 Description     : Get 16 bits of used channel's D0FIFO register content.
                                 ;     120 Arguments       : USB_UTR_t *ptr : USB system internal structure. Selects channel.
                                 ;     121 Return          : Address of D0FIFO
                                 ;     122 ******************************************************************************/
                                 ;     123 uint32_t    usb_cstd_GetD0fifo16Adr( USB_UTR_t *ptr )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",123
00000027 6080                    		SUB #08H, R0
00000029 A009                    		MOV.L R1, 04H[R0]
                                 ;     124 {
                                 ;     125 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;     126     if(ptr->ip == USB_USBIP_0)
                                 ;     127     {
                                 ;     128         return (uint32_t)(&ptr->ipp->D0FIFO.WORD);
                                 ;     129     }
                                 ;     130     else if(ptr->ip == USB_USBIP_1)
                                 ;     131     {
                                 ;     132 #if USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP
                                 ;     133         return (uint32_t)(&ptr->ipp1->D0FIFO.WORD.H);
                                 ;     134 
                                 ;     135 #else
                                 ;     136         return (uint32_t)(&ptr->ipp1->D0FIFO.WORD.L);
                                 ;     137 #endif  /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;     138     }
                                 ;     139 
                                 ;     140     return 0;
                                 ;     141 #else
                                 ;     142     return (uint32_t)(&ptr->ipp->D0FIFO.WORD);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",142
0000002B A891                    		MOV.L 08H[R1], R1
0000002D 711118                  		ADD #18H, R1
00000030 E301                    		MOV.L R1, [R0]
00000032                         L18:	; entry.split
                                 ;     143 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     144 }/* eof usb_cstd_GetD0fifo16Adr() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",144
00000032 6702                    		RTSD #08H
00000034                         _usb_cstd_GetD0fifo8Adr:
                                 		.STACK	_usb_cstd_GetD0fifo8Adr=12
                                 ;     145 
                                 ;     146 /******************************************************************************
                                 ;     147 Function Name   : usb_cstd_GetD0fifo8Adr
                                 ;     148 Description     : Get 8 bits of used channel's D0FIFO register content.
                                 ;     149 Arguments       : USB_UTR_t *ptr : USB system internal structure. Selects channel.
                                 ;     150 Return          : Address of D0FIFO
                                 ;     151 ******************************************************************************/
                                 ;     152 uint32_t    usb_cstd_GetD0fifo8Adr( USB_UTR_t *ptr )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",152
00000034 6080                    		SUB #08H, R0
00000036 A009                    		MOV.L R1, 04H[R0]
                                 ;     153 {
                                 ;     154 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;     155     if(ptr->ip == USB_USBIP_0)
                                 ;     156     {
                                 ;     157         return (uint32_t)(&ptr->ipp->D0FIFO.BYTE.L);
                                 ;     158     }
                                 ;     159     else if(ptr->ip == USB_USBIP_1)
                                 ;     160     {
                                 ;     161 #if USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP
                                 ;     162         return (uint32_t)(&ptr->ipp1->D0FIFO.BYTE.HH);
                                 ;     163 #else
                                 ;     164         return (uint32_t)(&ptr->ipp1->D0FIFO.BYTE.LL);
                                 ;     165 #endif  /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;     166     }
                                 ;     167 
                                 ;     168     return 0;
                                 ;     169 #else
                                 ;     170     return (uint32_t)(&ptr->ipp->D0FIFO.BYTE.L);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",170
00000038 A891                    		MOV.L 08H[R1], R1
0000003A 711118                  		ADD #18H, R1
0000003D E301                    		MOV.L R1, [R0]
0000003F                         L20:	; entry.split
                                 ;     171 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     172 }/* eof usb_cstd_GetD0fifo8Adr() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",172
0000003F 6702                    		RTSD #08H
00000041                         _usb_cstd_AsspConfig:
                                 		.STACK	_usb_cstd_AsspConfig=8
                                 ;     173 
                                 ;     174 /******************************************************************************
                                 ;     175 Function Name   : usb_cstd_AsspConfig
                                 ;     176 Description     : Not processed as the functionality is provided by R8A66597(ASSP).
                                 ;     177 Arguments       : not used
                                 ;     178 Return value    : -
                                 ;     179 ******************************************************************************/
                                 ;     180 void usb_cstd_AsspConfig(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",180
00000041 6040                    		SUB #04H, R0
00000043 E301                    		MOV.L R1, [R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",182
00000045 6701                    		RTSD #04H
00000047                         _usb_cstd_Pinconfig:
                                 		.STACK	_usb_cstd_Pinconfig=8
                                 ;     181 {
                                 ;     182 }/* eof usb_cstd_AsspConfig() */
                                 ;     183 
                                 ;     184 /******************************************************************************
                                 ;     185 Function Name   : usb_cstd_Pinconfig
                                 ;     186 Description     : Set FIFO select register. This will assign a pipe to the FIFOs, 
                                 ;     187                 : and control how FIFOs are accessed.
                                 ;     188 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     189 Return value    : -
                                 ;     190 ******************************************************************************/
                                 ;     191 void usb_cstd_Pinconfig(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",191
00000047 6040                    		SUB #04H, R0
00000049 E301                    		MOV.L R1, [R0]
0000004B FB3A0004                		MOV.L #00000400H, R3
0000004F 6602                    		MOV.L #00000000H, R2
                                 ;     192 {
                                 ;     193 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;     194     if(ptr->ip == USB_USBIP_0)
                                 ;     195     {
                                 ;     196         /* CFIFO Port Select Register  (0x20) */
                                 ;     197         usb_creg_write_fifosel( ptr, USB_CUSE, USB0_CFIFO_MBW );
                                 ;     198         /* D0FIFO Port Select Register (0x28) */
                                 ;     199         usb_creg_write_fifosel( ptr, USB_D0USE, USB0_D0FIFO_MBW );
                                 ;     200         /* D1FIFO Port Select Register (0x2C) */
                                 ;     201         usb_creg_write_fifosel( ptr, USB_D1USE, USB0_D1FIFO_MBW );
                                 ;     202     }
                                 ;     203     else if(ptr->ip == USB_USBIP_1)
                                 ;     204     {
                                 ;     205         /* CFIFO Port Select Register  (0x20) */
                                 ;     206         usb_creg_write_fifosel( ptr, USB_CUSE, USB1_CFIFO_MBW );
                                 ;     207         /* D0FIFO Port Select Register (0x28) */
                                 ;     208         usb_creg_write_fifosel( ptr, USB_D0USE, USB1_D0FIFO_MBW );
                                 ;     209         /* D1FIFO Port Select Register (0x2C) */
                                 ;     210         usb_creg_write_fifosel( ptr, USB_D1USE, USB1_D1FIFO_MBW );
                                 ;     211     }
                                 ;     212     /* setting ENDIAN for CFIFOSEL */
                                 ;     213     usb_creg_set_bigend( ptr, USB_CUSE, USB_FIFOENDIAN );
                                 ;     214     /* setting ENDIAN for D0FIFOSEL */
                                 ;     215     usb_creg_set_bigend( ptr, USB_D0USE, USB_FIFOENDIAN );
                                 ;     216     /* setting ENDIAN for D1FIFOSEL */
                                 ;     217     usb_creg_set_bigend( ptr, USB_D1USE, USB_FIFOENDIAN );
                                 ;     218 #else
                                 ;     219     /* CFIFO Port Select Register  (0x20) */
                                 ;     220     usb_creg_write_fifosel( ptr, USB_CUSE, USB0_CFIFO_MBW );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",220
00000051 05rrrrrr             A  		BSR _usb_creg_write_fifosel
00000055                         L23:	; entry.split
                                 ;     221     /* D0FIFO Port Select Register (0x28) */
                                 ;     222     usb_creg_write_fifosel( ptr, USB_D0USE, USB0_D0FIFO_MBW );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",222
00000055 EC01                    		MOV.L [R0], R1
00000057 FB3A0004                		MOV.L #00000400H, R3
0000005B 6612                    		MOV.L #00000001H, R2
0000005D 05rrrrrr             A  		BSR _usb_creg_write_fifosel
00000061                         L24:	; entry.split1
                                 ;     223     /* D1FIFO Port Select Register (0x2C) */
                                 ;     224     usb_creg_write_fifosel( ptr, USB_D1USE, USB0_D1FIFO_MBW );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",224
00000061 EC01                    		MOV.L [R0], R1
00000063 FB3A0004                		MOV.L #00000400H, R3
00000067 6632                    		MOV.L #00000003H, R2
00000069 05rrrrrr             A  		BSR _usb_creg_write_fifosel
0000006D 6701                    		RTSD #04H
0000006F                         _usb_cstd_InitialClock:
                                 		.STACK	_usb_cstd_InitialClock=8
                                 ;     225 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     226 } /* eof usb_cstd_Pinconfig() */
                                 ;     227 
                                 ;     228 /******************************************************************************
                                 ;     229 Function Name   : usb_cstd_InitialClock
                                 ;     230 Description     : Enable USB module clock. Resets and starts peripheral.
                                 ;     231 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     232 Return value    : none
                                 ;     233 ******************************************************************************/
                                 ;     234 void usb_cstd_InitialClock(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",234
0000006F 6040                    		SUB #04H, R0
00000071 E301                    		MOV.L R1, [R0]
                                 ;     235 {
                                 ;     236 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;     237     if (ptr -> ip  == USB_USBIP_0)
                                 ;     238     {
                                 ;     239         usb_creg_set_scke( ptr );
                                 ;     240     }
                                 ;     241     else if (ptr -> ip == USB_USBIP_1)
                                 ;     242     {
                                 ;     243 
                                 ;     244 #if defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M)
                                 ;     245         usb_creg_clr_hseb( ptr );
                                 ;     246         usb_creg_write_repsel( ptr );
                                 ;     247 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     248 
                                 ;     249         usb_creg_write_clksel( ptr );
                                 ;     250         usb_creg_clr_pllreset( ptr );
                                 ;     251         usb_creg_clr_dirpd( ptr );
                                 ;     252         usb_creg_set_suspendm( ptr );
                                 ;     253 
                                 ;     254         while(!(ptr-> ipp1->PLLSTA.BIT.PLLLOCK));
                                 ;     255     }
                                 ;     256     else{
                                 ;     257     }
                                 ;     258 #else
                                 ;     259     usb_creg_set_scke( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",259
00000073 05rrrrrr             A  		BSR _usb_creg_set_scke
00000077 6701                    		RTSD #04H
00000079                         _usb_cstd_InterruptClock:
                                 		.STACK	_usb_cstd_InterruptClock=8
                                 ;     260 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     261 
                                 ;     262 }/* eof usb_cstd_InitialClock() */
                                 ;     263 
                                 ;     264 /******************************************************************************
                                 ;     265 Function Name   : usb_cstd_InterruptClock
                                 ;     266 Description     : Not processed as the functionality is provided by R8A66597(ASSP).
                                 ;     267 Arguments       : USB_UTR_t *ptr    : Not used
                                 ;     268 Return value    : none
                                 ;     269 ******************************************************************************/
                                 ;     270 void usb_cstd_InterruptClock(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",270
00000079 6040                    		SUB #04H, R0
0000007B E301                    		MOV.L R1, [R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",272
0000007D 6701                    		RTSD #04H
0000007F                         _usb_cstd_SelfClock:
                                 		.STACK	_usb_cstd_SelfClock=8
                                 ;     271 {
                                 ;     272 }/* eof usb_cstd_InterruptClock() */
                                 ;     273 
                                 ;     274 /******************************************************************************
                                 ;     275 Function Name   : usb_cstd_SelfClock
                                 ;     276 Description     : Not processed as the functionality is provided by R8A66597(ASSP).
                                 ;     277 Arguments       : USB_UTR_t *ptr    : Not used
                                 ;     278 Return value    : none
                                 ;     279 ******************************************************************************/
                                 ;     280 void usb_cstd_SelfClock(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",280
0000007F 6040                    		SUB #04H, R0
00000081 E301                    		MOV.L R1, [R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",282
00000083 6701                    		RTSD #04H
00000085                         _usb_cstd_StopClock:
                                 		.STACK	_usb_cstd_StopClock=8
                                 ;     281 {
                                 ;     282 }/* eof usb_cstd_SelfClock() */
                                 ;     283 
                                 ;     284 /******************************************************************************
                                 ;     285 Function Name   : usb_cstd_StopClock
                                 ;     286 Description     : Not processed as the functionality is provided by R8A66597(ASSP).
                                 ;     287 Arguments       : USB_UTR_t *ptr    : Not used
                                 ;     288 Return value    : none
                                 ;     289 ******************************************************************************/
                                 ;     290 void usb_cstd_StopClock(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",290
00000085 6040                    		SUB #04H, R0
00000087 E301                    		MOV.L R1, [R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",292
00000089 6701                    		RTSD #04H
0000008B                         _usb_cstd_GetBufSize:
                                 		.STACK	_usb_cstd_GetBufSize=16
                                 ;     291 {
                                 ;     292 }/* eof usb_cstd_StopClock() */
                                 ;     293 
                                 ;     294 #ifdef USB_DTC_ENABLE
                                 ;     295 /******************************************************************************
                                 ;     296 Function Name   : usb_cstd_D0FifoselSet
                                 ;     297 Description     : Set DOFIFO access width, set to DMA buffer clear mode and 
                                 ;     298                 : the endian setting.
                                 ;     299 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     300 Return value    : none
                                 ;     301 ******************************************************************************/
                                 ;     302 void usb_cstd_D0FifoselSet(USB_UTR_t *ptr)
                                 ;     303 {
                                 ;     304     /* Big endian mode set */
                                 ;     305 //  usb_creg_set_bigend( ptr, USB_D0DMA, 1 ); 
                                 ;     306     /* DMA buffer clear mode set */
                                 ;     307     usb_creg_clr_dclrm( ptr, USB_D0DMA );
                                 ;     308     /* Maximum bit width for FIFO access set */
                                 ;     309 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;     310     if(ptr->ip == USB_USBIP_0)
                                 ;     311     {
                                 ;     312         usb_creg_set_mbw( ptr, USB_D0DMA, USB0_D0FIFO_MBW );
                                 ;     313     }
                                 ;     314     else if (ptr->ip == USB_USBIP_1)
                                 ;     315     {
                                 ;     316         usb_creg_set_mbw( ptr, USB_D0DMA, USB1_D0FIFO_MBW );
                                 ;     317     }
                                 ;     318 #else
                                 ;     319     usb_creg_set_mbw( ptr, USB_D0DMA, USB0_D0FIFO_MBW );
                                 ;     320 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     321 
                                 ;     322 }/* eof usb_cstd_D0FifoselSet() */
                                 ;     323 #endif    /* USB_DTC_ENABLE */
                                 ;     324 
                                 ;     325 /******************************************************************************
                                 ;     326 Function Name   : usb_cstd_GetBufSize
                                 ;     327 Description     : Return buffer size, or max packet size, of specified pipe.
                                 ;     328 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     329                 : uint16_t pipe     : Pipe number.
                                 ;     330 Return value    : uint16_t          : FIFO buffer size or max packet size.
                                 ;     331 ******************************************************************************/
                                 ;     332 uint16_t usb_cstd_GetBufSize(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",332
0000008B 60C0                    		SUB #0CH, R0
0000008D A081                    		MOV.L R1, 08H[R0]
0000008F 908A                    		MOV.W R2, 06H[R0]
                                 ;     333 {
                                 ;     334     uint16_t    size, buffer;
                                 ;     335 
                                 ;     336     if(ptr->ip == USB_USBIP_0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",336
00000091 A881                    		MOV.L 08H[R0], R1
00000093 B991                    		MOVU.W 0CH[R1], R1
00000095 6101                    		CMP #00H, R1
00000097 21rr                    		BNE L35
00000099                         L30:	; bb6
                                 ;     337     {
                                 ;     338         if( pipe == USB_PIPE0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",338
00000099 B889                    		MOVU.W 06H[R0], R1
0000009B 6101                    		CMP #00H, R1
0000009D A881                    		MOV.L 08H[R0], R1
0000009F 18                   S  		BNE L32
000000A0                         L31:	; bb7
                                 ;     339         {
                                 ;     340             /* Not continuation transmit */
                                 ;     341             buffer = usb_creg_read_dcpmaxp( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",341
000000A0 05rrrrrr             A  		BSR _usb_creg_read_dcpmaxp
000000A4 9009                    		MOV.W R1, 02H[R0]
000000A6 2Err                 B  		BRA L34
000000A8                         L32:	; bb10
                                 ;     342         }
                                 ;     343         else
                                 ;     344         {
                                 ;     345             /* Pipe select */
                                 ;     346             usb_creg_write_pipesel( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",346
000000A8 B88A                    		MOVU.W 06H[R0], R2
000000AA 05rrrrrr             A  		BSR _usb_creg_write_pipesel
000000AE                         L33:	; bb10.split
                                 ;     347             buffer = usb_creg_read_pipemaxp( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",347
000000AE A881                    		MOV.L 08H[R0], R1
000000B0 05rrrrrr             A  		BSR _usb_creg_read_pipemaxp
000000B4 9009                    		MOV.W R1, 02H[R0]
000000B6                         L34:	; bb19
                                 ;     348         }
                                 ;     349         /* Max Packet Size */
                                 ;     350         size = (uint16_t)(buffer & USB_MXPS);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",350
000000B6 B809                    		MOVU.W 02H[R0], R1
000000B8 7621FF07                		AND #07FFH, R1
000000BC D301                    		MOV.W R1, [R0]
000000BE                         L35:	; bb31
                                 ;     351     }
                                 ;     352 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;     353     else
                                 ;     354     {
                                 ;     355         if( pipe == USB_PIPE0 )
                                 ;     356         {
                                 ;     357             buffer = usb_creg_read_dcpcfg( ptr );
                                 ;     358             if( (buffer & USB_CNTMDFIELD) == USB_CNTMDFIELD )
                                 ;     359             {
                                 ;     360                 /* Continuation transmit */
                                 ;     361                 /* Buffer Size */
                                 ;     362                 size = USB_PIPE0BUF;
                                 ;     363             }
                                 ;     364             else
                                 ;     365             {
                                 ;     366                 /* Not continuation transmit */
                                 ;     367                 buffer = usb_creg_read_dcpmaxp( ptr );
                                 ;     368                 /* Max Packet Size */
                                 ;     369                 size = (uint16_t)(buffer & USB_MAXP);
                                 ;     370             }
                                 ;     371         }
                                 ;     372         else
                                 ;     373         {
                                 ;     374             /* Pipe select */
                                 ;     375             usb_creg_write_pipesel( ptr, pipe );
                                 ;     376             
                                 ;     377             /* Read CNTMD */
                                 ;     378             buffer = usb_creg_read_pipecfg( ptr );
                                 ;     379             if( (buffer & USB_CNTMDFIELD) == USB_CNTMDFIELD )
                                 ;     380             {
                                 ;     381                 buffer = usb_creg_read_pipebuf( ptr );
                                 ;     382                 /* Buffer Size */
                                 ;     383                 size = (uint16_t)((uint16_t)((buffer >> USB_BUFSIZE_BIT) + 1) * USB_PIPEXBUF);
                                 ;     384             }
                                 ;     385             else
                                 ;     386             {
                                 ;     387                 buffer = usb_creg_read_pipemaxp( ptr );
                                 ;     388                 /* Max Packet Size */
                                 ;     389                 size = (uint16_t)(buffer & USB_MXPS);
                                 ;     390             }
                                 ;     391         }
                                 ;     392     }
                                 ;     393 #endif  /* defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     394     return size;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",394
000000BE D40002                  		MOV.W [R0], 04H[R0]
000000C1 9881                    		MOV.W 04H[R0], R1
000000C3                         L36:	; bb31.split
                                 ;     395 }/* eof usb_cstd_GetBufSize() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",395
000000C3 5F11                    		MOVU.W R1, R1
000000C5 6703                    		RTSD #0CH
000000C7                         _usb_cstd_pipe_init:
                                 		.STACK	_usb_cstd_pipe_init=20
                                 ;     396 
                                 ;     397 /******************************************************************************
                                 ;     398 Function Name   : usb_cstd_pipe_init
                                 ;     399 Description     : Initialization of registers associated with specified pipe.
                                 ;     400 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     401                 : uint16_t pipe     : Pipe Number
                                 ;     402                 : uint16_t *tbl     : ep table
                                 ;     403                 : uint16_t ofs      : ep table offset
                                 ;     404 Return value    : none
                                 ;     405 ******************************************************************************/
                                 ;     406 void usb_cstd_pipe_init(USB_UTR_t *ptr, uint16_t pipe, uint16_t *tbl, uint16_t ofs)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",406
000000C7 7100F0                  		ADD #0FFFFFFF0H, R0
000000CA A089                    		MOV.L R1, 0CH[R0]
000000CC 910A                    		MOV.W R2, 0AH[R0]
000000CE A00B                    		MOV.L R3, 04H[R0]
000000D0 900C                    		MOV.W R4, 02H[R0]
                                 ;     407 {
                                 ;     408 
                                 ;     409     usb_gcstd_Pipe[ptr->ip][pipe] = (USB_UTR_t*)USB_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",409
000000D2 A889                    		MOV.L 0CH[R0], R1
000000D4 B991                    		MOVU.W 0CH[R1], R1
000000D6 751128                  		MUL #28H, R1
000000D9 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000000DF 4B1E                    		ADD R1, R14
000000E1 660F                    		MOV.L #00000000H, R15
000000E3 B909                    		MOVU.W 0AH[R0], R1
000000E5 FE21EF                  		MOV.L R15, [R1,R14]
000000E8                         L38:	; entry.split
                                 ;     410 
                                 ;     411     /* Interrupt Disable */
                                 ;     412     /* Ready         Int Disable */
                                 ;     413     usb_creg_clr_brdyenb( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",413
000000E8 B90A                    		MOVU.W 0AH[R0], R2
000000EA A889                    		MOV.L 0CH[R0], R1
000000EC 05rrrrrr             A  		BSR _usb_creg_clr_brdyenb
000000F0                         L39:	; entry.split1
                                 ;     414 
                                 ;     415     /* NotReady      Int Disable */
                                 ;     416     usb_creg_clr_nrdyenb( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",416
000000F0 B90A                    		MOVU.W 0AH[R0], R2
000000F2 A889                    		MOV.L 0CH[R0], R1
000000F4 05rrrrrr             A  		BSR _usb_creg_clr_nrdyenb
000000F8                         L40:	; entry.split2
                                 ;     417 
                                 ;     418     /* Empty/SizeErr Int Disable */
                                 ;     419     usb_creg_clr_bempenb( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",419
000000F8 B90A                    		MOVU.W 0AH[R0], R2
000000FA A889                    		MOV.L 0CH[R0], R1
000000FC 05rrrrrr             A  		BSR _usb_creg_clr_bempenb
00000100                         L41:	; entry.split3
                                 ;     420 
                                 ;     421     /* PID=NAK & clear STALL */
                                 ;     422     usb_cstd_ClrStall(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",422
00000100 B90A                    		MOVU.W 0AH[R0], R2
00000102 A889                    		MOV.L 0CH[R0], R1
00000104 05rrrrrr             A  		BSR _usb_cstd_ClrStall
00000108                         L42:	; entry.split4
                                 ;     423     
                                 ;     424     /* PIPE Configuration */
                                 ;     425     usb_creg_write_pipesel( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",425
00000108 B90A                    		MOVU.W 0AH[R0], R2
0000010A A889                    		MOV.L 0CH[R0], R1
0000010C 05rrrrrr             A  		BSR _usb_creg_write_pipesel
00000110                         L43:	; entry.split5
                                 ;     426 
                                 ;     427     if( USB_D0DMA == tbl[ofs + 5] )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",427
00000110 B809                    		MOVU.W 02H[R0], R1
00000112 6C11                    		SHLL #01H, R1
00000114 06890101                		ADD 04H[R0].L, R1
00000118 B919                    		MOVU.W 0AH[R1], R1
0000011A 6121                    		CMP #02H, R1
0000011C 21rr                    		BNE L45
0000011E                         L44:	; bb23
                                 ;     428     {
                                 ;     429         tbl[ofs + 1] |= USB_BFREON;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",429
0000011E B809                    		MOVU.W 02H[R0], R1
00000120 6C11                    		SHLL #01H, R1
00000122 06890101                		ADD 04H[R0].L, R1
00000126 B81A                    		MOVU.W 02H[R1], R2
00000128 78A2                    		BSET #0AH, R2
0000012A 901A                    		MOV.W R2, 02H[R1]
0000012C                         L45:	; bb42
                                 ;     430     }
                                 ;     431 
                                 ;     432     usb_creg_write_pipecfg( ptr, tbl[ofs + 1]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",432
0000012C B809                    		MOVU.W 02H[R0], R1
0000012E 6C11                    		SHLL #01H, R1
00000130 06890101                		ADD 04H[R0].L, R1
00000134 B81A                    		MOVU.W 02H[R1], R2
00000136 A889                    		MOV.L 0CH[R0], R1
00000138 05rrrrrr             A  		BSR _usb_creg_write_pipecfg
0000013C                         L46:	; bb42.split
                                 ;     433 
                                 ;     434     usb_creg_write_pipebuf( ptr, tbl[ofs + 2] );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",434
0000013C B809                    		MOVU.W 02H[R0], R1
0000013E 6C11                    		SHLL #01H, R1
00000140 06890101                		ADD 04H[R0].L, R1
00000144 B892                    		MOVU.W 04H[R1], R2
00000146 A889                    		MOV.L 0CH[R0], R1
00000148 05rrrrrr             A  		BSR _usb_creg_write_pipebuf
0000014C                         L47:	; bb42.split6
                                 ;     435     usb_creg_write_pipemaxp( ptr, tbl[ofs + 3] );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",435
0000014C B809                    		MOVU.W 02H[R0], R1
0000014E 6C11                    		SHLL #01H, R1
00000150 06890101                		ADD 04H[R0].L, R1
00000154 B89A                    		MOVU.W 06H[R1], R2
00000156 A889                    		MOV.L 0CH[R0], R1
00000158 05rrrrrr             A  		BSR _usb_creg_write_pipemaxp
0000015C                         L48:	; bb42.split7
                                 ;     436     usb_creg_write_pipeperi( ptr, tbl[ofs + 4] );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",436
0000015C B809                    		MOVU.W 02H[R0], R1
0000015E 6C11                    		SHLL #01H, R1
00000160 06890101                		ADD 04H[R0].L, R1
00000164 B912                    		MOVU.W 08H[R1], R2
00000166 A889                    		MOV.L 0CH[R0], R1
00000168 05rrrrrr             A  		BSR _usb_creg_write_pipeperi
0000016C                         L49:	; bb42.split8
                                 ;     437 
                                 ;     438     /* FIFO buffer DATA-PID initialized */
                                 ;     439     usb_creg_write_pipesel( ptr, USB_PIPE0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",439
0000016C A889                    		MOV.L 0CH[R0], R1
0000016E 6602                    		MOV.L #00000000H, R2
00000170 05rrrrrr             A  		BSR _usb_creg_write_pipesel
00000174                         L50:	; bb42.split9
                                 ;     440 
                                 ;     441     /* SQCLR */
                                 ;     442     usb_creg_set_sqclr(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",442
00000174 B90A                    		MOVU.W 0AH[R0], R2
00000176 A889                    		MOV.L 0CH[R0], R1
00000178 05rrrrrr             A  		BSR _usb_creg_set_sqclr
0000017C                         L51:	; bb42.split10
                                 ;     443     /* ACLRM */
                                 ;     444     usb_cstd_DoAclrm(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",444
0000017C B90A                    		MOVU.W 0AH[R0], R2
0000017E A889                    		MOV.L 0CH[R0], R1
00000180 05rrrrrr             A  		BSR _usb_cstd_DoAclrm
00000184                         L52:	; bb42.split11
                                 ;     445     /* CSSTS */
                                 ;     446     usb_creg_set_csclr(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",446
00000184 B90A                    		MOVU.W 0AH[R0], R2
00000186 A889                    		MOV.L 0CH[R0], R1
00000188 05rrrrrr             A  		BSR _usb_creg_set_csclr
0000018C                         L53:	; bb42.split12
                                 ;     447     
                                 ;     448     /* Interrupt status clear */
                                 ;     449     /* Ready         Int Clear */
                                 ;     450     usb_creg_clr_sts_brdy( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",450
0000018C B90A                    		MOVU.W 0AH[R0], R2
0000018E A889                    		MOV.L 0CH[R0], R1
00000190 05rrrrrr             A  		BSR _usb_creg_clr_sts_brdy
00000194                         L54:	; bb42.split13
                                 ;     451 
                                 ;     452     /* NotReady      Int Clear */
                                 ;     453     usb_creg_clr_sts_nrdy( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",453
00000194 B90A                    		MOVU.W 0AH[R0], R2
00000196 A889                    		MOV.L 0CH[R0], R1
00000198 05rrrrrr             A  		BSR _usb_creg_clr_sts_nrdy
0000019C                         L55:	; bb42.split14
                                 ;     454 
                                 ;     455     /* Empty/SizeErr Int Clear */
                                 ;     456     usb_creg_clr_sts_bemp( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",456
0000019C B90A                    		MOVU.W 0AH[R0], R2
0000019E A889                    		MOV.L 0CH[R0], R1
000001A0 05rrrrrr             A  		BSR _usb_creg_clr_sts_bemp
000001A4 6704                    		RTSD #10H
000001A6                         _usb_cstd_ClrPipeCnfg:
                                 		.STACK	_usb_cstd_ClrPipeCnfg=12
                                 ;     457 }/* eof usb_cstd_pipe_init() */
                                 ;     458 
                                 ;     459 /******************************************************************************
                                 ;     460 Function Name   : usb_cstd_ClrPipeCnfg
                                 ;     461 Description     : Clear specified pipe configuration register.
                                 ;     462 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     463                 : uint16_t pipe_no  : pipe number
                                 ;     464 Return value    : none
                                 ;     465 ******************************************************************************/
                                 ;     466 void usb_cstd_ClrPipeCnfg(USB_UTR_t *ptr, uint16_t pipe_no)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",466
000001A6 6080                    		SUB #08H, R0
000001A8 A009                    		MOV.L R1, 04H[R0]
000001AA 900A                    		MOV.W R2, 02H[R0]
                                 ;     467 {
                                 ;     468 #ifdef USB_DTC_ENABLE
                                 ;     469     uint16_t    buffer;
                                 ;     470 #endif    /* USB_DTC_ENABLE */
                                 ;     471 
                                 ;     472     usb_gcstd_Pipe[ptr->ip][pipe_no] = (USB_UTR_t*)USB_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",472
000001AC A809                    		MOV.L 04H[R0], R1
000001AE B991                    		MOVU.W 0CH[R1], R1
000001B0 751128                  		MUL #28H, R1
000001B3 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000001B9 4B1E                    		ADD R1, R14
000001BB 660F                    		MOV.L #00000000H, R15
000001BD B809                    		MOVU.W 02H[R0], R1
000001BF FE21EF                  		MOV.L R15, [R1,R14]
000001C2                         L57:	; entry.split
                                 ;     473 
                                 ;     474     /* PID=NAK & clear STALL */
                                 ;     475     usb_cstd_ClrStall(ptr, pipe_no);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",475
000001C2 B80A                    		MOVU.W 02H[R0], R2
000001C4 A809                    		MOV.L 04H[R0], R1
000001C6 05rrrrrr             A  		BSR _usb_cstd_ClrStall
000001CA                         L58:	; entry.split1
                                 ;     476     
                                 ;     477     /* Interrupt disable */
                                 ;     478     /* Ready         Int Disable */
                                 ;     479     usb_creg_clr_brdyenb( ptr, pipe_no );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",479
000001CA B80A                    		MOVU.W 02H[R0], R2
000001CC A809                    		MOV.L 04H[R0], R1
000001CE 05rrrrrr             A  		BSR _usb_creg_clr_brdyenb
000001D2                         L59:	; entry.split2
                                 ;     480 
                                 ;     481     /* NotReady      Int Disable */
                                 ;     482     usb_creg_clr_nrdyenb( ptr, pipe_no );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",482
000001D2 B80A                    		MOVU.W 02H[R0], R2
000001D4 A809                    		MOV.L 04H[R0], R1
000001D6 05rrrrrr             A  		BSR _usb_creg_clr_nrdyenb
000001DA                         L60:	; entry.split3
                                 ;     483 
                                 ;     484     /* Empty/SizeErr Int Disable */
                                 ;     485     usb_creg_clr_bempenb( ptr, pipe_no );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",485
000001DA B80A                    		MOVU.W 02H[R0], R2
000001DC A809                    		MOV.L 04H[R0], R1
000001DE 05rrrrrr             A  		BSR _usb_creg_clr_bempenb
000001E2                         L61:	; entry.split4
                                 ;     486 
                                 ;     487     /* PIPE Configuration */
                                 ;     488     usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_CUSE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",488
000001E2 A809                    		MOV.L 04H[R0], R1
000001E4 6602                    		MOV.L #00000000H, R2
000001E6 EF23                    		MOV.L R2, R3
000001E8 EF24                    		MOV.L R2, R4
000001EA 39rrrr               W  		BSR _usb_cstd_chg_curpipe
000001ED                         L62:	; entry.split5
                                 ;     489 #ifdef USB_DTC_ENABLE   
                                 ;     490     /* Clear D0FIFO-port */
                                 ;     491     buffer = usb_creg_read_fifosel( ptr, USB_D0DMA );
                                 ;     492 
                                 ;     493     if( (buffer & USB_CURPIPE) == pipe_no )
                                 ;     494     {
                                 ;     495         usb_cpu_d0fifo_stop_dma(ptr);
                                 ;     496 
                                 ;     497         usb_cstd_D0fifoStopUsb(ptr);
                                 ;     498         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D0USE, USB_NO);
                                 ;     499     }
                                 ;     500     /* Clear D1FIFO-port */
                                 ;     501     buffer = usb_creg_read_fifosel( ptr, USB_D1DMA );
                                 ;     502 
                                 ;     503     if( (buffer & USB_CURPIPE) == pipe_no )
                                 ;     504     {
                                 ;     505         if(ptr->ip == USB_USBIP_0)
                                 ;     506         {
                                 ;     507             usb_creg_set_mbw( ptr, USB_D1USE, USB0_D1FIFO_MBW );
                                 ;     508         }
                                 ;     509         else if (ptr->ip == USB_USBIP_1)
                                 ;     510         {
                                 ;     511             usb_creg_set_mbw( ptr, USB_D1USE, USB1_D1FIFO_MBW );
                                 ;     512         }
                                 ;     513 
                                 ;     514         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D1USE, USB_NO);
                                 ;     515     }
                                 ;     516 #endif    /* USB_DTC_ENABLE */
                                 ;     517     usb_creg_write_pipesel( ptr, pipe_no );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",517
000001ED B80A                    		MOVU.W 02H[R0], R2
000001EF A809                    		MOV.L 04H[R0], R1
000001F1 05rrrrrr             A  		BSR _usb_creg_write_pipesel
000001F5                         L63:	; entry.split6
                                 ;     518     usb_creg_write_pipecfg( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",518
000001F5 A809                    		MOV.L 04H[R0], R1
000001F7 6602                    		MOV.L #00000000H, R2
000001F9 05rrrrrr             A  		BSR _usb_creg_write_pipecfg
000001FD                         L64:	; entry.split7
                                 ;     519 
                                 ;     520     usb_creg_write_pipebuf( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",520
000001FD A809                    		MOV.L 04H[R0], R1
000001FF 6602                    		MOV.L #00000000H, R2
00000201 05rrrrrr             A  		BSR _usb_creg_write_pipebuf
00000205                         L65:	; entry.split8
                                 ;     521     usb_creg_write_pipemaxp( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",521
00000205 A809                    		MOV.L 04H[R0], R1
00000207 6602                    		MOV.L #00000000H, R2
00000209 05rrrrrr             A  		BSR _usb_creg_write_pipemaxp
0000020D                         L66:	; entry.split9
                                 ;     522     usb_creg_write_pipeperi( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",522
0000020D A809                    		MOV.L 04H[R0], R1
0000020F 6602                    		MOV.L #00000000H, R2
00000211 05rrrrrr             A  		BSR _usb_creg_write_pipeperi
00000215                         L67:	; entry.split10
                                 ;     523     usb_creg_write_pipesel( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",523
00000215 A809                    		MOV.L 04H[R0], R1
00000217 6602                    		MOV.L #00000000H, R2
00000219 05rrrrrr             A  		BSR _usb_creg_write_pipesel
0000021D                         L68:	; entry.split11
                                 ;     524 
                                 ;     525     /* FIFO buffer DATA-PID initialized */
                                 ;     526     /* SQCLR */
                                 ;     527     usb_creg_set_sqclr(ptr, pipe_no);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",527
0000021D B80A                    		MOVU.W 02H[R0], R2
0000021F A809                    		MOV.L 04H[R0], R1
00000221 05rrrrrr             A  		BSR _usb_creg_set_sqclr
00000225                         L69:	; entry.split12
                                 ;     528     /* ACLRM */
                                 ;     529     usb_cstd_DoAclrm(ptr, pipe_no);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",529
00000225 B80A                    		MOVU.W 02H[R0], R2
00000227 A809                    		MOV.L 04H[R0], R1
00000229 05rrrrrr             A  		BSR _usb_cstd_DoAclrm
0000022D                         L70:	; entry.split13
                                 ;     530     /* CSSTS */
                                 ;     531     usb_creg_set_csclr(ptr, pipe_no);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",531
0000022D B80A                    		MOVU.W 02H[R0], R2
0000022F A809                    		MOV.L 04H[R0], R1
00000231 05rrrrrr             A  		BSR _usb_creg_set_csclr
00000235                         L71:	; entry.split14
                                 ;     532     usb_cstd_ClrTransactionCounter(ptr, pipe_no);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",532
00000235 B80A                    		MOVU.W 02H[R0], R2
00000237 A809                    		MOV.L 04H[R0], R1
00000239 39rrrr               W  		BSR _usb_cstd_ClrTransactionCounter
0000023C                         L72:	; entry.split15
                                 ;     533     
                                 ;     534     /* Interrupt status clear */
                                 ;     535     /* Ready         Int Clear */
                                 ;     536     usb_creg_clr_sts_brdy( ptr, pipe_no );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",536
0000023C B80A                    		MOVU.W 02H[R0], R2
0000023E A809                    		MOV.L 04H[R0], R1
00000240 05rrrrrr             A  		BSR _usb_creg_clr_sts_brdy
00000244                         L73:	; entry.split16
                                 ;     537 
                                 ;     538     /* NotReady      Int Clear */
                                 ;     539     usb_creg_clr_sts_nrdy( ptr, pipe_no );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",539
00000244 B80A                    		MOVU.W 02H[R0], R2
00000246 A809                    		MOV.L 04H[R0], R1
00000248 05rrrrrr             A  		BSR _usb_creg_clr_sts_nrdy
0000024C                         L74:	; entry.split17
                                 ;     540 
                                 ;     541     /* Empty/SizeErr Int Clear */
                                 ;     542     usb_creg_clr_sts_bemp( ptr, pipe_no );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",542
0000024C B80A                    		MOVU.W 02H[R0], R2
0000024E A809                    		MOV.L 04H[R0], R1
00000250 05rrrrrr             A  		BSR _usb_creg_clr_sts_bemp
00000254 6702                    		RTSD #08H
00000256                         _usb_cstd_WaitUsbip:
                                 		.STACK	_usb_cstd_WaitUsbip=8
                                 ;     543 }/* eof usb_cstd_ClrPipeCnfg() */
                                 ;     544 
                                 ;     545 /******************************************************************************
                                 ;     546 Function Name   : usb_cstd_WaitUsbip
                                 ;     547 Description     : Wait USB ASSP ready
                                 ;     548 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     549 Return value    : none
                                 ;     550 ******************************************************************************/
                                 ;     551 void usb_cstd_WaitUsbip(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",551
00000256 6040                    		SUB #04H, R0
00000258 E301                    		MOV.L R1, [R0]
                                 ;     552 {
                                 ;     553     /* XCKE Mode Flag */
                                 ;     554     usb_gcstd_XckeMode = USB_NO;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",554
0000025A FBE2rrrrrrrr            		MOV.L #_usb_gcstd_XckeMode, R14
00000260 F8E500                  		MOV.W #0000H, [R14]
00000263                         L76:	; entry.split
                                 ;     555 
                                 ;     556     if(ptr->ip == USB_USBIP_0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",556
00000263 EC01                    		MOV.L [R0], R1
00000265 B991                    		MOVU.W 0CH[R1], R1
00000267 6101                    		CMP #00H, R1
00000269 21rr                    		BNE L78
0000026B                         L77:	; bb2
                                 ;     557     {
                                 ;     558         /* Hi-speed enable */
                                 ;     559         usb_gcstd_HsEnable[ptr->ip] = USB_HS_DISABLE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",559
0000026B FBE2rrrrrrrr            		MOV.L #_usb_gcstd_HsEnable, R14
00000271 660F                    		MOV.L #00000000H, R15
00000273 FE11EF                  		MOV.W R15, [R1,R14]
00000276 6701                    		RTSD #04H
00000278                         L78:	; bb8
                                 ;     560     }
                                 ;     561     else if(ptr->ip == USB_USBIP_1)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",561
00000278 6111                    		CMP #01H, R1
0000027A 21rr                    		BNE L80
0000027C                         L79:	; bb9
                                 ;     562     {
                                 ;     563         /* Hi-speed enable */
                                 ;     564 #if( USB_SPEED_MODE_PP == USB_HS_PP )
                                 ;     565         usb_gcstd_HsEnable[ptr->ip] = USB_HS_ENABLE;
                                 ;     566 #else   /* USB_SPEED_MODE_PP == USB_HS_PP  */
                                 ;     567         usb_gcstd_HsEnable[ptr->ip] = USB_HS_DISABLE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",567
0000027C EC01                    		MOV.L [R0], R1
0000027E B991                    		MOVU.W 0CH[R1], R1
00000280 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_HsEnable, R14
00000286 660F                    		MOV.L #00000000H, R15
00000288 FE11EF                  		MOV.W R15, [R1,R14]
0000028B 6701                    		RTSD #04H
0000028D                         L80:	; return
                                 ;     568 #endif  /* USB_SPEED_MODE_PP == USB_HS_PP */
                                 ;     569     }
                                 ;     570 }/* eof usb_cstd_WaitUsbip() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",570
0000028D 6701                    		RTSD #04H
0000028F                         _usb_cstd_SetNak:
                                 		.STACK	_usb_cstd_SetNak=16
                                 ;     571 
                                 ;     572 /******************************************************************************
                                 ;     573 Function Name   : usb_cstd_SetNak
                                 ;     574 Description     : Set up to NAK the specified pipe.
                                 ;     575 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     576                 : uint16_t pipe     : Pipe Number
                                 ;     577 Return value    : none
                                 ;     578 ******************************************************************************/
                                 ;     579 void usb_cstd_SetNak(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",579
0000028F 60C0                    		SUB #0CH, R0
00000291 A081                    		MOV.L R1, 08H[R0]
00000293 908A                    		MOV.W R2, 06H[R0]
                                 ;     580 {
                                 ;     581     uint16_t        buf, n;
                                 ;     582 
                                 ;     583     /* Set NAK */
                                 ;     584     usb_creg_clr_pid( ptr, pipe, (uint16_t)USB_PID_BUF );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",584
00000295 B88A                    		MOVU.W 06H[R0], R2
00000297 A881                    		MOV.L 08H[R0], R1
00000299 6613                    		MOV.L #00000001H, R3
0000029B 05rrrrrr             A  		BSR _usb_creg_clr_pid
0000029F                         L82:	; entry.split
                                 ;     585 
                                 ;     586     /* The state of PBUSY continues while transmitting the packet when it is a detach. */
                                 ;     587     /* 1ms comes off when leaving because the packet duration might not exceed 1ms.  */
                                 ;     588     /* Whether it is PBUSY release or 1ms passage can be judged. */
                                 ;     589     for( n = 0; n < 0xFFFFu; ++n )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",589
0000029F 3D0200                  		MOV.W #0000H, 04H[R0]
000002A2 2Err                 B  		BRA L87
000002A4                         L83:	; bb
                                 ;     590     {
                                 ;     591         /* PIPE control reg read */
                                 ;     592         buf = usb_creg_read_pipectr( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",592
000002A4 B88A                    		MOVU.W 06H[R0], R2
000002A6 A881                    		MOV.L 08H[R0], R1
000002A8 05rrrrrr             A  		BSR _usb_creg_read_pipectr
000002AC 9009                    		MOV.W R1, 02H[R0]
000002AE                         L84:	; bb.split
                                 ;     593         if( (uint16_t)(buf & USB_PBUSY) == 0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",593
000002AE B809                    		MOVU.W 02H[R0], R1
000002B0 7C51                    		BTST #05H, R1
000002B2 18                   S  		BNE L86
000002B3                         L85:	; bb10
                                 ;     594         {
                                 ;     595             n = 0xFFFEu;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",595
000002B3 F90902FEFF              		MOV.W #0FFFEH, 04H[R0]
000002B8                         L86:	; bb18
000002B8 9881                    		MOV.W 04H[R0], R1
000002BA 6211                    		ADD #01H, R1
000002BC 9081                    		MOV.W R1, 04H[R0]
000002BE                         L87:	; bb21
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",589
000002BE B881                    		MOVU.W 04H[R0], R1
000002C0 7701FFFF00              		CMP #0FFFFH, R1
000002C5 21rr                    		BNE L83
000002C7                         L88:	; return
                                 ;     596         }
                                 ;     597     }
                                 ;     598 }/* eof usb_cstd_SetNak() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",598
000002C7 6703                    		RTSD #0CH
000002C9                         _usb_cstd_write_fifo:
                                 		.STACK	_usb_cstd_write_fifo=24
                                 ;     599 
                                 ;     600 /******************************************************************************
                                 ;     601 Function Name   : usb_cstd_write_fifo
                                 ;     602 Description     : Write specified amount of data to specified USB FIFO. 
                                 ;     603 Arguments       : USB_UTR_t *ptr        : USB system internal structure. Selects channel.
                                 ;     604                 : uint16_t  count       : Write size.
                                 ;     605                 : uint16_t  pipemode    : The mode of CPU/DMA(D0)/DMA(D1).
                                 ;     606                 : uint16_t  *write_p    : Address of buffer of data to write.
                                 ;     607 Return value    : The incremented address of last argument (write_p).
                                 ;     608 ******************************************************************************/
                                 ;     609 uint8_t *usb_cstd_write_fifo( USB_UTR_t *ptr, uint16_t count, uint16_t pipemode, uint8_t *write_p )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",609
000002C9 7100EC                  		ADD #0FFFFFFECH, R0
000002CC A101                    		MOV.L R1, 10H[R0]
000002CE 918A                    		MOV.W R2, 0EH[R0]
000002D0 9183                    		MOV.W R3, 0CH[R0]
000002D2 A084                    		MOV.L R4, 08H[R0]
                                 ;     610 {
                                 ;     611     uint16_t    even;
                                 ;     612     uint16_t    odd;
                                 ;     613 
                                 ;     614     if(ptr->ip == USB_USBIP_0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",614
000002D4 A901                    		MOV.L 10H[R0], R1
000002D6 B991                    		MOVU.W 0CH[R1], R1
000002D8 6101                    		CMP #00H, R1
000002DA 21rr                    		BNE L99
000002DC                         L90:	; bb7
                                 ;     615     {
                                 ;     616         for( even = (uint16_t)(count >> 1); (even != 0); --even )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",616
000002DC B989                    		MOVU.W 0EH[R0], R1
000002DE 6811                    		SHLR #01H, R1
000002E0 D301                    		MOV.W R1, [R0]
000002E2 2Err                 B  		BRA L93
000002E4                         L91:	; bb12
                                 ;     617         {
                                 ;     618             /* 16bit access */
                                 ;     619             usb_creg_write_fifo16( ptr, pipemode, *((uint16_t *)write_p) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",619
000002E4 A881                    		MOV.L 08H[R0], R1
000002E6 5C13                    		MOVU.W [R1], R3
000002E8 B982                    		MOVU.W 0CH[R0], R2
000002EA A901                    		MOV.L 10H[R0], R1
000002EC 05rrrrrr             A  		BSR _usb_creg_write_fifo16
000002F0                         L92:	; bb12.split
                                 ;     620 
                                 ;     621             /* Renewal write pointer */
                                 ;     622             write_p += sizeof(uint16_t);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",622
000002F0 A881                    		MOV.L 08H[R0], R1
000002F2 6221                    		ADD #02H, R1
000002F4 A081                    		MOV.L R1, 08H[R0]
000002F6 DC01                    		MOV.W [R0], R1
000002F8 6011                    		SUB #01H, R1
000002FA D301                    		MOV.W R1, [R0]
000002FC                         L93:	; bb22
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",616
000002FC 5C01                    		MOVU.W [R0], R1
000002FE 6101                    		CMP #00H, R1
00000300 21rr                    		BNE L91
00000302                         L94:	; bb28
                                 ;     623         }
                                 ;     624 
                                 ;     625         if( (count & (uint16_t)0x0001u) != 0u )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",625
00000302 B989                    		MOVU.W 0EH[R0], R1
00000304 7C01                    		BTST #00H, R1
00000306 3Arrrr               W  		BEQ L114
00000309                         L95:	; bb29
                                 ;     626         {
                                 ;     627             /* 8bit access */
                                 ;     628             /* count == odd */
                                 ;     629             /* Change FIFO access width */
                                 ;     630             usb_creg_set_mbw( ptr, pipemode, USB_MBW_8 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",630
00000309 B982                    		MOVU.W 0CH[R0], R2
0000030B A901                    		MOV.L 10H[R0], R1
0000030D 6603                    		MOV.L #00000000H, R3
0000030F 05rrrrrr             A  		BSR _usb_creg_set_mbw
00000313                         L96:	; bb29.split
                                 ;     631 
                                 ;     632             /* FIFO write */
                                 ;     633             usb_creg_write_fifo8( ptr, pipemode, *write_p );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",633
00000313 A881                    		MOV.L 08H[R0], R1
00000315 5813                    		MOVU.B [R1], R3
00000317 B982                    		MOVU.W 0CH[R0], R2
00000319 A901                    		MOV.L 10H[R0], R1
0000031B 05rrrrrr             A  		BSR _usb_creg_write_fifo8
0000031F                         L97:	; bb29.split1
                                 ;     634 
                                 ;     635             /* Return FIFO access width */
                                 ;     636             usb_creg_set_mbw( ptr, pipemode, USB_MBW_16 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",636
0000031F B982                    		MOVU.W 0CH[R0], R2
00000321 A901                    		MOV.L 10H[R0], R1
00000323 FB3A0004                		MOV.L #00000400H, R3
00000327 05rrrrrr             A  		BSR _usb_creg_set_mbw
0000032B                         L98:	; bb29.split2
                                 ;     637 
                                 ;     638             /* Renewal write pointer */
                                 ;     639             write_p++;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",639
0000032B A881                    		MOV.L 08H[R0], R1
0000032D 6211                    		ADD #01H, R1
0000032F A081                    		MOV.L R1, 08H[R0]
00000331 38rrrr               W  		BRA L114
00000334                         L99:	; bb48
                                 ;     640         }
                                 ;     641     }
                                 ;     642     else if(ptr->ip == USB_USBIP_1)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",642
00000334 A901                    		MOV.L 10H[R0], R1
00000336 B991                    		MOVU.W 0CH[R1], R1
00000338 6111                    		CMP #01H, R1
0000033A 3Brrrr               W  		BNE L114
0000033D                         L100:	; bb49
                                 ;     643     {
                                 ;     644         for( even = (uint16_t)(count >> 2); (even != 0); --even )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",644
0000033D B989                    		MOVU.W 0EH[R0], R1
0000033F 6821                    		SHLR #02H, R1
00000341 D301                    		MOV.W R1, [R0]
00000343 2Err                 B  		BRA L103
00000345                         L101:	; bb54
                                 ;     645         {
                                 ;     646             /* 16bit access */
                                 ;     647             usb_creg_write_fifo32( ptr, pipemode, *((uint32_t *)write_p) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",647
00000345 A881                    		MOV.L 08H[R0], R1
00000347 EC13                    		MOV.L [R1], R3
00000349 B982                    		MOVU.W 0CH[R0], R2
0000034B A901                    		MOV.L 10H[R0], R1
0000034D 05rrrrrr             A  		BSR _usb_creg_write_fifo32
00000351                         L102:	; bb54.split
                                 ;     648 
                                 ;     649             /* Renewal write pointer */
                                 ;     650             write_p += sizeof(uint32_t);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",650
00000351 A881                    		MOV.L 08H[R0], R1
00000353 6241                    		ADD #04H, R1
00000355 A081                    		MOV.L R1, 08H[R0]
00000357 DC01                    		MOV.W [R0], R1
00000359 6011                    		SUB #01H, R1
0000035B D301                    		MOV.W R1, [R0]
0000035D                         L103:	; bb64
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",644
0000035D 5C01                    		MOVU.W [R0], R1
0000035F 6101                    		CMP #00H, R1
00000361 21rr                    		BNE L101
00000363                         L104:	; bb70
                                 ;     651         }
                                 ;     652         odd = count % 4;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",652
00000363 B989                    		MOVU.W 0EH[R0], R1
00000365 6431                    		AND #03H, R1
00000367 9009                    		MOV.W R1, 02H[R0]
00000369                         L105:	; bb70.split
                                 ;     653         if( (odd & (uint16_t)0x0002u) != 0u )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",653
00000369 B809                    		MOVU.W 02H[R0], R1
0000036B 7C11                    		BTST #01H, R1
0000036D 20rr                    		BEQ L109
0000036F                         L106:	; bb76
                                 ;     654         {
                                 ;     655             /* 16bit access */
                                 ;     656             /* Change FIFO access width */
                                 ;     657             usb_creg_set_mbw( ptr, pipemode, USB_MBW_16 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",657
0000036F B982                    		MOVU.W 0CH[R0], R2
00000371 A901                    		MOV.L 10H[R0], R1
00000373 FB3A0004                		MOV.L #00000400H, R3
00000377 05rrrrrr             A  		BSR _usb_creg_set_mbw
0000037B                         L107:	; bb76.split
                                 ;     658             /* FIFO write */
                                 ;     659             usb_creg_write_fifo16( ptr, pipemode, *((uint16_t *)write_p) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",659
0000037B A881                    		MOV.L 08H[R0], R1
0000037D 5C13                    		MOVU.W [R1], R3
0000037F B982                    		MOVU.W 0CH[R0], R2
00000381 A901                    		MOV.L 10H[R0], R1
00000383 05rrrrrr             A  		BSR _usb_creg_write_fifo16
00000387                         L108:	; bb76.split3
                                 ;     660 
                                 ;     661             /* Renewal write pointer */
                                 ;     662             write_p += sizeof(uint16_t);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",662
00000387 A881                    		MOV.L 08H[R0], R1
00000389 6221                    		ADD #02H, R1
0000038B A081                    		MOV.L R1, 08H[R0]
0000038D                         L109:	; bb94
                                 ;     663         }
                                 ;     664         if( (odd & (uint16_t)0x0001u) != 0u )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",664
0000038D B809                    		MOVU.W 02H[R0], R1
0000038F 7C01                    		BTST #00H, R1
00000391 20rr                    		BEQ L113
00000393                         L110:	; bb95
                                 ;     665         {
                                 ;     666             /* 8bit access */
                                 ;     667             /* count == odd */
                                 ;     668             /* Change FIFO access width */
                                 ;     669             usb_creg_set_mbw( ptr, pipemode, USB_MBW_8 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",669
00000393 B982                    		MOVU.W 0CH[R0], R2
00000395 A901                    		MOV.L 10H[R0], R1
00000397 6603                    		MOV.L #00000000H, R3
00000399 05rrrrrr             A  		BSR _usb_creg_set_mbw
0000039D                         L111:	; bb95.split
                                 ;     670 
                                 ;     671             /* FIFO write */
                                 ;     672             usb_creg_write_fifo8( ptr, pipemode, *write_p );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",672
0000039D A881                    		MOV.L 08H[R0], R1
0000039F 5813                    		MOVU.B [R1], R3
000003A1 B982                    		MOVU.W 0CH[R0], R2
000003A3 A901                    		MOV.L 10H[R0], R1
000003A5 05rrrrrr             A  		BSR _usb_creg_write_fifo8
000003A9                         L112:	; bb95.split4
                                 ;     673 
                                 ;     674             /* Renewal write pointer */
                                 ;     675             write_p++;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",675
000003A9 A881                    		MOV.L 08H[R0], R1
000003AB 6211                    		ADD #01H, R1
000003AD A081                    		MOV.L R1, 08H[R0]
000003AF                         L113:	; bb110
                                 ;     676         }
                                 ;     677         /* Return FIFO access width */
                                 ;     678         usb_creg_set_mbw( ptr, pipemode, USB_MBW_32 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",678
000003AF B982                    		MOVU.W 0CH[R0], R2
000003B1 A901                    		MOV.L 10H[R0], R1
000003B3 FB3A0008                		MOV.L #00000800H, R3
000003B7 05rrrrrr             A  		BSR _usb_creg_set_mbw
000003BB                         L114:	; bb128
                                 ;     679     }
                                 ;     680     return write_p;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",680
000003BB A881                    		MOV.L 08H[R0], R1
000003BD A009                    		MOV.L R1, 04H[R0]
000003BF                         L115:	; bb128.split
                                 ;     681 
                                 ;     682 }/* eof usb_cstd_write_fifo() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",682
000003BF 6705                    		RTSD #14H
000003C1                         _usb_cstd_read_fifo:
                                 		.STACK	_usb_cstd_read_fifo=32
                                 ;     683 
                                 ;     684 /******************************************************************************
                                 ;     685 Function Name   : usb_cstd_read_fifo
                                 ;     686 Description     : Read specified buffer size from the USB FIFO.
                                 ;     687 Arguments       : USB_UTR_t *ptr        : USB system internal structure. Selects channel.
                                 ;     688                 : uint16_t  count       : Read size.
                                 ;     689                 : uint16_t  pipemode    : The mode of CPU/DMA(D0)/DMA(D1).
                                 ;     690                 : uint16_t  *write_p    : Address of buffer to store the read data.
                                 ;     691 Return value    : Pointer to a buffer that contains the data to be read next.
                                 ;     692 ******************************************************************************/
                                 ;     693 uint8_t *usb_cstd_read_fifo( USB_UTR_t *ptr, uint16_t count, uint16_t pipemode, uint8_t *read_p )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",693
000003C1 7EA6                    		PUSH.L R6
000003C3 7100E8                  		ADD #0FFFFFFE8H, R0
000003C6 A109                    		MOV.L R1, 14H[R0]
000003C8 920A                    		MOV.W R2, 12H[R0]
000003CA 9203                    		MOV.W R3, 10H[R0]
000003CC A08C                    		MOV.L R4, 0CH[R0]
                                 ;     694 {
                                 ;     695     uint16_t    even;
                                 ;     696     uint16_t    odd;
                                 ;     697     uint32_t    odd_byte_data_temp;
                                 ;     698 #if USB_CPUBYTE_PP != USB_BYTE_LITTLE_PP
                                 ;     699     uint16_t    i;
                                 ;     700 #endif
                                 ;     701     if(ptr->ip == USB_USBIP_0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",701
000003CE A909                    		MOV.L 14H[R0], R1
000003D0 B991                    		MOVU.W 0CH[R1], R1
000003D2 6101                    		CMP #00H, R1
000003D4 21rr                    		BNE L125
000003D6                         L117:	; bb8
                                 ;     702     {
                                 ;     703         for( even = (uint16_t)(count >> 1); (even != 0); --even )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",703
000003D6 BA09                    		MOVU.W 12H[R0], R1
000003D8 6811                    		SHLR #01H, R1
000003DA D301                    		MOV.W R1, [R0]
000003DC 2Err                 B  		BRA L120
000003DE                         L118:	; bb13
                                 ;     704         {
                                 ;     705             /* 16bit FIFO access */
                                 ;     706             *(uint16_t *)read_p= usb_creg_read_fifo16( ptr, pipemode );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",706
000003DE BA02                    		MOVU.W 10H[R0], R2
000003E0 A909                    		MOV.L 14H[R0], R1
000003E2 A88E                    		MOV.L 0CH[R0], R6
000003E4 05rrrrrr             A  		BSR _usb_creg_read_fifo16
000003E8 D361                    		MOV.W R1, [R6]
000003EA                         L119:	; bb13.split
                                 ;     707 
                                 ;     708             /* Renewal read pointer */
                                 ;     709             read_p += sizeof( uint16_t );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",709
000003EA A889                    		MOV.L 0CH[R0], R1
000003EC 6221                    		ADD #02H, R1
000003EE A089                    		MOV.L R1, 0CH[R0]
000003F0 DC01                    		MOV.W [R0], R1
000003F2 6011                    		SUB #01H, R1
000003F4 D301                    		MOV.W R1, [R0]
000003F6                         L120:	; bb23
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",703
000003F6 5C01                    		MOVU.W [R0], R1
000003F8 6101                    		CMP #00H, R1
000003FA 21rr                    		BNE L118
000003FC                         L121:	; bb29
                                 ;     710         }
                                 ;     711         if( (count & (uint16_t)0x0001) != 0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",711
000003FC BA09                    		MOVU.W 12H[R0], R1
000003FE 7C01                    		BTST #00H, R1
00000400 3Arrrr               W  		BEQ L140
00000403                         L122:	; bb30
                                 ;     712         {
                                 ;     713              /* 16bit FIFO access */
                                 ;     714             odd_byte_data_temp = usb_creg_read_fifo16( ptr, pipemode );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",714
00000403 BA02                    		MOVU.W 10H[R0], R2
00000405 A909                    		MOV.L 14H[R0], R1
00000407 05rrrrrr             A  		BSR _usb_creg_read_fifo16
0000040B A009                    		MOV.L R1, 04H[R0]
0000040D                         L123:	; bb30.split
                                 ;     715 /* Condition compilation by the difference of the endian */
                                 ;     716 #if USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP
                                 ;     717             *read_p = (uint8_t)( odd_byte_data_temp & 0x00ff);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",717
0000040D B101                    		MOVU.B 04H[R0], R1
0000040F A88A                    		MOV.L 0CH[R0], R2
00000411 C321                    		MOV.B R1, [R2]
00000413                         L124:	; bb30.split1
                                 ;     718 #else    /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;     719             *read_p = (uint8_t)( odd_byte_data_temp >> 8 );
                                 ;     720 #endif    /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;     721             /* Renewal read pointer */
                                 ;     722             read_p += sizeof( uint8_t );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",722
00000413 A889                    		MOV.L 0CH[R0], R1
00000415 6211                    		ADD #01H, R1
00000417 A089                    		MOV.L R1, 0CH[R0]
00000419 2Err                 B  		BRA L140
0000041B                         L125:	; bb49
                                 ;     723         }
                                 ;     724     }
                                 ;     725     else if(ptr->ip == USB_USBIP_1)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",725
0000041B A909                    		MOV.L 14H[R0], R1
0000041D B991                    		MOVU.W 0CH[R1], R1
0000041F 6111                    		CMP #01H, R1
00000421 21rr                    		BNE L140
00000423                         L126:	; bb50
                                 ;     726     {
                                 ;     727         for( even = (uint16_t)(count >> 2); (even != 0); --even )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",727
00000423 BA09                    		MOVU.W 12H[R0], R1
00000425 6821                    		SHLR #02H, R1
00000427 D301                    		MOV.W R1, [R0]
00000429 2Err                 B  		BRA L129
0000042B                         L127:	; bb55
                                 ;     728         {
                                 ;     729             /* 32bit FIFO access */
                                 ;     730             *(uint32_t *)read_p= usb_creg_read_fifo32( ptr, pipemode );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",730
0000042B BA02                    		MOVU.W 10H[R0], R2
0000042D A909                    		MOV.L 14H[R0], R1
0000042F A88E                    		MOV.L 0CH[R0], R6
00000431 05rrrrrr             A  		BSR _usb_creg_read_fifo32
00000435 E361                    		MOV.L R1, [R6]
00000437                         L128:	; bb55.split
                                 ;     731 
                                 ;     732             /* Renewal read pointer */
                                 ;     733             read_p += sizeof( uint32_t );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",733
00000437 A889                    		MOV.L 0CH[R0], R1
00000439 6241                    		ADD #04H, R1
0000043B A089                    		MOV.L R1, 0CH[R0]
0000043D DC01                    		MOV.W [R0], R1
0000043F 6011                    		SUB #01H, R1
00000441 D301                    		MOV.W R1, [R0]
00000443                         L129:	; bb65
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",727
00000443 5C01                    		MOVU.W [R0], R1
00000445 6101                    		CMP #00H, R1
00000447 21rr                    		BNE L127
00000449                         L130:	; bb71
                                 ;     734         }
                                 ;     735         odd = count % 4;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",735
00000449 BA09                    		MOVU.W 12H[R0], R1
0000044B 6431                    		AND #03H, R1
0000044D 9009                    		MOV.W R1, 02H[R0]
0000044F                         L131:	; bb71.split
                                 ;     736         if(count < 4)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",736
0000044F BA09                    		MOVU.W 12H[R0], R1
00000451 6131                    		CMP #03H, R1
00000453 2Arr                    		BGT L133
00000455                         L132:	; bb77
                                 ;     737         {
                                 ;     738             odd = count;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",738
00000455 D5000901                		MOV.W 12H[R0], 02H[R0]
00000459                         L133:	; bb85
                                 ;     739         }
                                 ;     740         if( odd != 0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",740
00000459 B809                    		MOVU.W 02H[R0], R1
0000045B 6101                    		CMP #00H, R1
0000045D 20rr                    		BEQ L140
0000045F                         L134:	; bb86
                                 ;     741         {
                                 ;     742              /* 32bit FIFO access */
                                 ;     743             odd_byte_data_temp = usb_creg_read_fifo32( ptr, pipemode );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",743
0000045F BA02                    		MOVU.W 10H[R0], R2
00000461 A909                    		MOV.L 14H[R0], R1
00000463 05rrrrrr             A  		BSR _usb_creg_read_fifo32
00000467 A009                    		MOV.L R1, 04H[R0]
00000469                         L135:	; bb90
                                 ;     744 /* Condition compilation by the difference of the endian */
                                 ;     745 #if USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP
                                 ;     746             do{
                                 ;     747                 *read_p = (uint8_t)( odd_byte_data_temp & 0x000000ff );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",747
00000469 B101                    		MOVU.B 04H[R0], R1
0000046B A88A                    		MOV.L 0CH[R0], R2
0000046D C321                    		MOV.B R1, [R2]
0000046F                         L136:	; bb90.split
                                 ;     748                 odd_byte_data_temp = odd_byte_data_temp >> 8;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",748
0000046F A809                    		MOV.L 04H[R0], R1
00000471 6881                    		SHLR #08H, R1
00000473 A009                    		MOV.L R1, 04H[R0]
00000475                         L137:	; bb90.split2
                                 ;     749                 /* Renewal read pointer */
                                 ;     750                 read_p += sizeof( uint8_t );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",750
00000475 A889                    		MOV.L 0CH[R0], R1
00000477 6211                    		ADD #01H, R1
00000479 A089                    		MOV.L R1, 0CH[R0]
0000047B                         L138:	; bb90.split3
                                 ;     751                 odd--;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",751
0000047B 9809                    		MOV.W 02H[R0], R1
0000047D 6011                    		SUB #01H, R1
0000047F 9009                    		MOV.W R1, 02H[R0]
00000481                         L139:	; bb90.split4
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",746
00000481 B809                    		MOVU.W 02H[R0], R1
00000483 6101                    		CMP #00H, R1
00000485 21rr                    		BNE L135
00000487                         L140:	; bb128
                                 ;     752             }while( odd != 0 );
                                 ;     753 #else    /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;     754             for(i = 0; i < odd; i++)
                                 ;     755             {
                                 ;     756                 *read_p = (uint8_t)( ( odd_byte_data_temp >> (24 -(i*8))) & 0x000000ff );
                                 ;     757                 /* Renewal read pointer */
                                 ;     758                 read_p += sizeof( uint8_t );
                                 ;     759             }
                                 ;     760 #endif    /* USB_CPUBYTE_PP == USB_BYTE_LITTLE_PP */
                                 ;     761         }
                                 ;     762     }
                                 ;     763     return read_p;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",763
00000487 A889                    		MOV.L 0CH[R0], R1
00000489 A081                    		MOV.L R1, 08H[R0]
0000048B                         L141:	; bb128.split
                                 ;     764 }/* eof usb_cstd_read_fifo() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",764
0000048B 3F6607                  		RTSD #1CH, R6-R6
0000048E                         _usb_cstd_is_set_frdy:
                                 		.STACK	_usb_cstd_is_set_frdy=24
                                 ;     765 
                                 ;     766 /******************************************************************************
                                 ;     767 Function Name   : usb_cstd_is_set_frdy
                                 ;     768 Description     : Changes the specified FIFO port by the specified pipe.
                                 ;     769                 : Please change the wait time for your MCU.
                                 ;     770 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     771                 : uint16_t pipe     : Pipe Number
                                 ;     772                 : uint16_t fifosel  : FIFO select
                                 ;     773                 : uint16_t isel     : ISEL bit status
                                 ;     774 Return value    : FRDY status
                                 ;     775 ******************************************************************************/
                                 ;     776 uint16_t usb_cstd_is_set_frdy(USB_UTR_t *ptr, uint16_t pipe, uint16_t fifosel, uint16_t isel)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",776
0000048E 7100EC                  		ADD #0FFFFFFECH, R0
00000491 A101                    		MOV.L R1, 10H[R0]
00000493 918A                    		MOV.W R2, 0EH[R0]
00000495 9183                    		MOV.W R3, 0CH[R0]
00000497 910C                    		MOV.W R4, 0AH[R0]
                                 ;     777 {
                                 ;     778     uint16_t    buffer, i;
                                 ;     779 
                                 ;     780     /* Changes the FIFO port by the pipe. */
                                 ;     781     usb_cstd_chg_curpipe(ptr, pipe, fifosel, isel);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",781
00000499 B90C                    		MOVU.W 0AH[R0], R4
0000049B B983                    		MOVU.W 0CH[R0], R3
0000049D B98A                    		MOVU.W 0EH[R0], R2
0000049F A901                    		MOV.L 10H[R0], R1
000004A1 39rrrr               W  		BSR _usb_cstd_chg_curpipe
000004A4                         L143:	; entry.split
                                 ;     782 
                                 ;     783     for( i = 0; i < 4; i++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",783
000004A4 3D0300                  		MOV.W #0000H, 06H[R0]
000004A7 2Err                 B  		BRA L149
000004A9                         L144:	; bb
                                 ;     784     {
                                 ;     785         buffer = usb_creg_read_fifoctr( ptr, fifosel );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",785
000004A9 B982                    		MOVU.W 0CH[R0], R2
000004AB A901                    		MOV.L 10H[R0], R1
000004AD 05rrrrrr             A  		BSR _usb_creg_read_fifoctr
000004B1 9081                    		MOV.W R1, 04H[R0]
000004B3                         L145:	; bb.split
                                 ;     786 
                                 ;     787         if( (uint16_t)(buffer & USB_FRDY) == USB_FRDY )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",787
000004B3 B881                    		MOVU.W 04H[R0], R1
000004B5 76210020                		AND #2000H, R1
000004B9 76010020                		CMP #2000H, R1
000004BD 18                   S  		BNE L147
000004BE                         L146:	; bb15
                                 ;     788         {
                                 ;     789             return (buffer);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",789
000004BE D5000201                		MOV.W 04H[R0], 02H[R0]
000004C2 2Err                 B  		BRA L151
000004C4                         L147:	; bb25
                                 ;     790         }
                                 ;     791         USB_PRINTF1("*** FRDY wait pipe = %d\n", pipe);
                                 ;     792         
                                 ;     793         /* Caution!!!
                                 ;     794      * Depending on the external bus speed of CPU, you may need to wait
                                 ;     795      * for 100ns here.
                                 ;     796      * For details, please look at the data sheet.   */
                                 ;     797     /***** The example of reference. *****/
                                 ;     798         buffer = usb_creg_read_syscfg( ptr, USB_PORT0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",798
000004C4 A901                    		MOV.L 10H[R0], R1
000004C6 6602                    		MOV.L #00000000H, R2
000004C8 05rrrrrr             A  		BSR _usb_creg_read_syscfg
000004CC 9081                    		MOV.W R1, 04H[R0]
000004CE                         L148:	; bb25.split
                                 ;     799         buffer = usb_creg_read_syssts( ptr, USB_PORT0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",799
000004CE A901                    		MOV.L 10H[R0], R1
000004D0 6602                    		MOV.L #00000000H, R2
000004D2 05rrrrrr             A  		BSR _usb_creg_read_syssts
000004D6 9081                    		MOV.W R1, 04H[R0]
000004D8 9889                    		MOV.W 06H[R0], R1
000004DA 6211                    		ADD #01H, R1
000004DC 9089                    		MOV.W R1, 06H[R0]
000004DE                         L149:	; bb32
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",783
000004DE B889                    		MOVU.W 06H[R0], R1
000004E0 6141                    		CMP #04H, R1
000004E2 29rr                    		BLT L144
000004E4                         L150:	; bb38
                                 ;     800     /*************************************/
                                 ;     801     }
                                 ;     802     return (USB_FIFOERROR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",802
000004E4 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
000004E9                         L151:	; bb40
000004E9 D5000104                		MOV.W 02H[R0], 08H[R0]
                                 ;     803 }/* eof of function usb_cstd_is_set_frdy() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",803
000004ED B901                    		MOVU.W 08H[R0], R1
000004EF 6705                    		RTSD #14H
000004F1                         _usb_cstd_chg_curpipe:
                                 		.STACK	_usb_cstd_chg_curpipe=16
                                 ;     804 
                                 ;     805 /******************************************************************************
                                 ;     806 Function Name   : usb_cstd_chg_curpipe
                                 ;     807 Description     : Switch FIFO and pipe number.
                                 ;     808 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     809                 : uint16_t pipe     : Pipe number.
                                 ;     810                 : uint16_t fifosel  : FIFO selected (CPU, D0, D1..)
                                 ;     811                 : uint16_t isel     : CFIFO Port Access Direction.(Pipe1 to 9:Set to 0)
                                 ;     812 Return value    : none
                                 ;     813 ******************************************************************************/
                                 ;     814 void usb_cstd_chg_curpipe(USB_UTR_t *ptr, uint16_t pipe, uint16_t fifosel, uint16_t isel)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",814
000004F1 60C0                    		SUB #0CH, R0
000004F3 A081                    		MOV.L R1, 08H[R0]
000004F5 908A                    		MOV.W R2, 06H[R0]
000004F7 9083                    		MOV.W R3, 04H[R0]
000004F9 900C                    		MOV.W R4, 02H[R0]
                                 ;     815 {
                                 ;     816     uint16_t    buffer;
                                 ;     817 
                                 ;     818     /* Select FIFO */
                                 ;     819     switch( fifosel )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",819
000004FB B881                    		MOVU.W 04H[R0], R1
000004FD 6101                    		CMP #00H, R1
000004FF 21rr                    		BNE L156
00000501                         L153:	; bb
                                 ;     820     {
                                 ;     821     /* CFIFO use */
                                 ;     822     case USB_CUSE:
                                 ;     823         /* ISEL=1, CURPIPE=0 */
                                 ;     824         usb_creg_rmw_fifosel( ptr, USB_CUSE, (USB_RCNT|isel|pipe), (USB_RCNT|USB_ISEL|USB_CURPIPE) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",824
00000501 B80B                    		MOVU.W 02H[R0], R3
00000503 06D50303                		OR 06H[R0].UW, R3
00000507 A881                    		MOV.L 08H[R0], R1
00000509 78F3                    		BSET #0FH, R3
0000050B FB4E2F8000              		MOV.L #0000802FH, R4
00000510 6602                    		MOV.L #00000000H, R2
00000512 05rrrrrr             A  		BSR _usb_creg_rmw_fifosel
00000516                         L154:	; bb15
                                 ;     825         do
                                 ;     826         {
                                 ;     827             buffer = usb_creg_read_fifosel( ptr, USB_CUSE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",827
00000516 A881                    		MOV.L 08H[R0], R1
00000518 6602                    		MOV.L #00000000H, R2
0000051A 05rrrrrr             A  		BSR _usb_creg_read_fifosel
0000051E D301                    		MOV.W R1, [R0]
00000520                         L155:	; bb15.split
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",825
00000520 5C01                    		MOVU.W [R0], R1
00000522 75212F                  		AND #2FH, R1
00000525 980A                    		MOV.W 02H[R0], R2
00000527 06550203                		OR 06H[R0].W, R2
0000052B 5F2E                    		MOVU.W R2, R14
0000052D 47E1                    		CMP R14, R1
0000052F 21rr                    		BNE L154
00000531                         L156:	; return
                                 ;     828         }
                                 ;     829         while( (buffer & (uint16_t)(USB_ISEL|USB_CURPIPE))
                                 ;     830             != (uint16_t)(isel|pipe) );
                                 ;     831     break;
                                 ;     832     /* D0FIFO use */
                                 ;     833     case USB_D0USE:
                                 ;     834     /* continue */
                                 ;     835 #ifdef USB_DTC_ENABLE
                                 ;     836     /* D0FIFO DMA */
                                 ;     837     case USB_D0DMA:
                                 ;     838         /* D0FIFO pipe select */
                                 ;     839         usb_creg_set_curpipe( ptr, USB_D0DMA, pipe );
                                 ;     840         do
                                 ;     841         {
                                 ;     842             buffer = usb_creg_read_fifosel( ptr, USB_D0DMA );
                                 ;     843         }
                                 ;     844         while( (uint16_t)(buffer & USB_CURPIPE) != pipe );
                                 ;     845 #endif    /* USB_DTC_ENABLE */
                                 ;     846         break;
                                 ;     847     /* D1FIFO use */
                                 ;     848     case USB_D1USE:
                                 ;     849         /* continue */
                                 ;     850 #ifdef USB_DTC_ENABLE
                                 ;     851     /* D1FIFO DMA */
                                 ;     852     case USB_D1DMA:
                                 ;     853         /* D1FIFO pipe select */
                                 ;     854         usb_creg_set_curpipe( ptr, USB_D1DMA, pipe );
                                 ;     855 
                                 ;     856         do
                                 ;     857         {
                                 ;     858             buffer = usb_creg_read_fifosel( ptr, USB_D1DMA );
                                 ;     859         }
                                 ;     860         while( (uint16_t)(buffer & USB_CURPIPE) != pipe );
                                 ;     861 #endif    /* USB_DTC_ENABLE */
                                 ;     862         break;
                                 ;     863     default:
                                 ;     864         break;
                                 ;     865     }
                                 ;     866 }/* eof usb_cstd_chg_curpipe() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",866
00000531 6703                    		RTSD #0CH
00000533                         _usb_cstd_FifoClr:
                                 		.STACK	_usb_cstd_FifoClr=16
                                 ;     867 
                                 ;     868 /******************************************************************************
                                 ;     869 Function Name   : usb_cstd_FifoClr
                                 ;     870 Description     : Clear the specified PIPE FIFO using Auto Buffer Clear Mode.
                                 ;     871 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     872                 : uint16_t pipe     : Pipe Number
                                 ;     873 Return value    : none
                                 ;     874 ******************************************************************************/
                                 ;     875 void usb_cstd_FifoClr(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",875
00000533 60C0                    		SUB #0CH, R0
00000535 A081                    		MOV.L R1, 08H[R0]
00000537 908A                    		MOV.W R2, 06H[R0]
                                 ;     876 {
                                 ;     877     uint16_t        buf, i;
                                 ;     878 
                                 ;     879     if( pipe == USB_USEPIPE )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",879
00000539 7552FE                  		CMP #0FEH, R2
0000053C A881                    		MOV.L 08H[R0], R1
0000053E 21rr                    		BNE L163
00000540                         L158:	; bb5
00000540 6613                    		MOV.L #00000001H, R3
00000542 6602                    		MOV.L #00000000H, R2
                                 ;     880     {
                                 ;     881         /* Changes the FIFO port by the pipe. */
                                 ;     882         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D0USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",882
00000544 EF24                    		MOV.L R2, R4
00000546 39rrrr               W  		BSR _usb_cstd_chg_curpipe
00000549                         L159:	; bb5.split
                                 ;     883         
                                 ;     884         /* Changes the FIFO port by the pipe. */
                                 ;     885         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D1USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",885
00000549 A881                    		MOV.L 08H[R0], R1
0000054B 6633                    		MOV.L #00000003H, R3
0000054D 6602                    		MOV.L #00000000H, R2
0000054F EF24                    		MOV.L R2, R4
00000551 39rrrr               W  		BSR _usb_cstd_chg_curpipe
00000554                         L160:	; bb5.split1
                                 ;     886         for( i = USB_MIN_PIPE_NO; i <= USB_MAX_PIPE_NO; i++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",886
00000554 3D0201                  		MOV.W #0001H, 04H[R0]
00000557 2Err                 B  		BRA L162
00000559                         L161:	; bb7
                                 ;     887         {
                                 ;     888             /* Do pipe ACLRM */
                                 ;     889             usb_cstd_DoAclrm(ptr, i);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",889
00000559 B882                    		MOVU.W 04H[R0], R2
0000055B A881                    		MOV.L 08H[R0], R1
0000055D 05rrrrrr             A  		BSR _usb_cstd_DoAclrm
00000561 9881                    		MOV.W 04H[R0], R1
00000563 6211                    		ADD #01H, R1
00000565 9081                    		MOV.W R1, 04H[R0]
00000567                         L162:	; bb12
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",886
00000567 B881                    		MOVU.W 04H[R0], R1
00000569 61A1                    		CMP #0AH, R1
0000056B 23rr                    		BLTU L161
0000056D 2Err                 B  		BRA L170
0000056F                         L163:	; bb18
0000056F 6612                    		MOV.L #00000001H, R2
                                 ;     890         }
                                 ;     891     }
                                 ;     892     else
                                 ;     893     {
                                 ;     894         buf = usb_creg_read_fifosel( ptr, USB_D0USE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",894
00000571 05rrrrrr             A  		BSR _usb_creg_read_fifosel
00000575 9009                    		MOV.W R1, 02H[R0]
00000577                         L164:	; bb18.split
                                 ;     895         if( (buf & USB_CURPIPE) == pipe )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",895
00000577 B809                    		MOVU.W 02H[R0], R1
00000579 64F1                    		AND #0FH, R1
0000057B 06C50103                		CMP 06H[R0].UW, R1
0000057F 21rr                    		BNE L166
00000581                         L165:	; bb22
                                 ;     896         {
                                 ;     897             /* Changes the FIFO port by the pipe. */
                                 ;     898             usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D0USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",898
00000581 A881                    		MOV.L 08H[R0], R1
00000583 6613                    		MOV.L #00000001H, R3
00000585 6602                    		MOV.L #00000000H, R2
00000587 EF24                    		MOV.L R2, R4
00000589 39rrrr               W  		BSR _usb_cstd_chg_curpipe
0000058C                         L166:	; bb32
                                 ;     899         }
                                 ;     900         buf = usb_creg_read_fifosel( ptr, USB_D1USE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",900
0000058C A881                    		MOV.L 08H[R0], R1
0000058E 6632                    		MOV.L #00000003H, R2
00000590 05rrrrrr             A  		BSR _usb_creg_read_fifosel
00000594 9009                    		MOV.W R1, 02H[R0]
00000596                         L167:	; bb32.split
                                 ;     901         if( (buf & USB_CURPIPE) == pipe )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",901
00000596 B809                    		MOVU.W 02H[R0], R1
00000598 64F1                    		AND #0FH, R1
0000059A 06C50103                		CMP 06H[R0].UW, R1
0000059E 21rr                    		BNE L169
000005A0                         L168:	; bb36
                                 ;     902         {
                                 ;     903             /* Changes the FIFO port by the pipe. */
                                 ;     904             usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D1USE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",904
000005A0 A881                    		MOV.L 08H[R0], R1
000005A2 6633                    		MOV.L #00000003H, R3
000005A4 6602                    		MOV.L #00000000H, R2
000005A6 EF24                    		MOV.L R2, R4
000005A8 39rrrr               W  		BSR _usb_cstd_chg_curpipe
000005AB                         L169:	; bb46
                                 ;     905         }
                                 ;     906         /* Do pipe ACLRM */
                                 ;     907         usb_cstd_DoAclrm(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",907
000005AB B88A                    		MOVU.W 06H[R0], R2
000005AD A881                    		MOV.L 08H[R0], R1
000005AF 05rrrrrr             A  		BSR _usb_cstd_DoAclrm
000005B3 6703                    		RTSD #0CH
000005B5                         L170:	; return
                                 ;     908     }
                                 ;     909 }/* eof usb_cstd_FifoClr() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",909
000005B5 6703                    		RTSD #0CH
000005B7                         _usb_cstd_SetTransactionCounter:
                                 		.STACK	_usb_cstd_SetTransactionCounter=12
                                 ;     910 
                                 ;     911 /******************************************************************************
                                 ;     912 Function Name   : usb_cstd_SetTransactionCounter
                                 ;     913 Description     : Set specified Pipe Transaction Counter Register.
                                 ;     914 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     915                 : uint16_t trnreg   : Pipe number
                                 ;     916                 : uint16_t trncnt       : Transaction counter
                                 ;     917 Return value    : none
                                 ;     918 ******************************************************************************/
                                 ;     919 void usb_cstd_SetTransactionCounter(USB_UTR_t *ptr, uint16_t trnreg, uint16_t trncnt)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",919
000005B7 6080                    		SUB #08H, R0
000005B9 A009                    		MOV.L R1, 04H[R0]
000005BB 900A                    		MOV.W R2, 02H[R0]
000005BD D303                    		MOV.W R3, [R0]
                                 ;     920 {
                                 ;     921 
                                 ;     922     usb_creg_set_trclr( ptr, trnreg );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",922
000005BF B80A                    		MOVU.W 02H[R0], R2
000005C1 A809                    		MOV.L 04H[R0], R1
000005C3 05rrrrrr             A  		BSR _usb_creg_set_trclr
000005C7                         L172:	; entry.split
                                 ;     923     usb_creg_write_pipetrn( ptr, trnreg, trncnt );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",923
000005C7 5C03                    		MOVU.W [R0], R3
000005C9 B80A                    		MOVU.W 02H[R0], R2
000005CB A809                    		MOV.L 04H[R0], R1
000005CD 05rrrrrr             A  		BSR _usb_creg_write_pipetrn
000005D1                         L173:	; entry.split1
                                 ;     924     usb_creg_set_trenb( ptr, trnreg );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",924
000005D1 B80A                    		MOVU.W 02H[R0], R2
000005D3 A809                    		MOV.L 04H[R0], R1
000005D5 05rrrrrr             A  		BSR _usb_creg_set_trenb
000005D9 6702                    		RTSD #08H
000005DB                         _usb_cstd_ClrTransactionCounter:
                                 		.STACK	_usb_cstd_ClrTransactionCounter=12
                                 ;     925 
                                 ;     926 }/* eof usb_cstd_SetTransactionCounter() */
                                 ;     927 
                                 ;     928 /******************************************************************************
                                 ;     929 Function Name   : usb_cstd_ClrTransactionCounter
                                 ;     930 Description     : Clear specified Pipe Transaction Counter Register.
                                 ;     931 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     932                 : uint16_t trnreg   : Pipe Number
                                 ;     933 Return value    : none
                                 ;     934 ******************************************************************************/
                                 ;     935 void usb_cstd_ClrTransactionCounter(USB_UTR_t *ptr, uint16_t trnreg)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",935
000005DB 6080                    		SUB #08H, R0
000005DD A009                    		MOV.L R1, 04H[R0]
000005DF 900A                    		MOV.W R2, 02H[R0]
                                 ;     936 {
                                 ;     937     usb_creg_clr_trenb( ptr, trnreg );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",937
000005E1 B80A                    		MOVU.W 02H[R0], R2
000005E3 A809                    		MOV.L 04H[R0], R1
000005E5 05rrrrrr             A  		BSR _usb_creg_clr_trenb
000005E9                         L175:	; entry.split
                                 ;     938     usb_creg_set_trclr( ptr, trnreg );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",938
000005E9 B80A                    		MOVU.W 02H[R0], R2
000005EB A809                    		MOV.L 04H[R0], R1
000005ED 05rrrrrr             A  		BSR _usb_creg_set_trclr
000005F1 6702                    		RTSD #08H
000005F3                         _usb_cstd_ForcedTermination:
                                 		.STACK	_usb_cstd_ForcedTermination=20
                                 ;     939 }/* eof usb_cstd_ClrTransactionCounter() */
                                 ;     940 
                                 ;     941 /******************************************************************************
                                 ;     942 Function Name   : usb_cstd_ForcedTermination
                                 ;     943 Description     : Terminate data transmission and reception.
                                 ;     944 Arguments       : USB_UTR_t *ptr    : USB system internal structure. Selects channel.
                                 ;     945                 : uint16_t pipe     : Pipe Number
                                 ;     946                 : uint16_t status   : Transfer status type
                                 ;     947 Return value    : none
                                 ;     948 Note            : In the case of timeout status, it does not call back.
                                 ;     949 ******************************************************************************/
                                 ;     950 void usb_cstd_ForcedTermination(USB_UTR_t *ptr, uint16_t pipe, uint16_t status)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",950
000005F3 7EA6                    		PUSH.L R6
000005F5 60C0                    		SUB #0CH, R0
000005F7 A081                    		MOV.L R1, 08H[R0]
000005F9 908A                    		MOV.W R2, 06H[R0]
000005FB 9083                    		MOV.W R3, 04H[R0]
                                 ;     951 {
                                 ;     952     uint16_t    buffer;
                                 ;     953 
                                 ;     954     /* PID = NAK */
                                 ;     955     /* Set NAK */
                                 ;     956     usb_cstd_SetNak(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",956
000005FD B88A                    		MOVU.W 06H[R0], R2
000005FF A881                    		MOV.L 08H[R0], R1
00000601 39rrrr               W  		BSR _usb_cstd_SetNak
00000604                         L177:	; entry.split
                                 ;     957 
                                 ;     958     /* Disable Interrupt */
                                 ;     959     /* Disable Ready Interrupt */
                                 ;     960     usb_creg_clr_brdyenb(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",960
00000604 B88A                    		MOVU.W 06H[R0], R2
00000606 A881                    		MOV.L 08H[R0], R1
00000608 05rrrrrr             A  		BSR _usb_creg_clr_brdyenb
0000060C                         L178:	; entry.split1
                                 ;     961     /* Disable Not Ready Interrupt */
                                 ;     962     usb_creg_clr_nrdyenb(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",962
0000060C B88A                    		MOVU.W 06H[R0], R2
0000060E A881                    		MOV.L 08H[R0], R1
00000610 05rrrrrr             A  		BSR _usb_creg_clr_nrdyenb
00000614                         L179:	; entry.split2
                                 ;     963     /* Disable Empty Interrupt */
                                 ;     964     usb_creg_clr_bempenb(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",964
00000614 B88A                    		MOVU.W 06H[R0], R2
00000616 A881                    		MOV.L 08H[R0], R1
00000618 05rrrrrr             A  		BSR _usb_creg_clr_bempenb
0000061C                         L180:	; entry.split3
                                 ;     965 
                                 ;     966     usb_cstd_ClrTransactionCounter(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",966
0000061C B88A                    		MOVU.W 06H[R0], R2
0000061E A881                    		MOV.L 08H[R0], R1
00000620 39rrrr               W  		BSR _usb_cstd_ClrTransactionCounter
00000623                         L181:	; entry.split4
                                 ;     967 
                                 ;     968     /* Clear D1FIFO-port */
                                 ;     969     buffer = usb_creg_read_fifosel( ptr, USB_CUSE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",969
00000623 A881                    		MOV.L 08H[R0], R1
00000625 6602                    		MOV.L #00000000H, R2
00000627 05rrrrrr             A  		BSR _usb_creg_read_fifosel
0000062B 9009                    		MOV.W R1, 02H[R0]
0000062D                         L182:	; entry.split5
                                 ;     970     if( (buffer & USB_CURPIPE) == pipe )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",970
0000062D B809                    		MOVU.W 02H[R0], R1
0000062F 64F1                    		AND #0FH, R1
00000631 06C50103                		CMP 06H[R0].UW, R1
00000635 21rr                    		BNE L188
00000637                         L183:	; bb17
                                 ;     971     {
                                 ;     972         if(ptr->ip == USB_USBIP_0)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",972
00000637 A881                    		MOV.L 08H[R0], R1
00000639 B992                    		MOVU.W 0CH[R1], R2
0000063B 6102                    		CMP #00H, R2
0000063D 21rr                    		BNE L185
0000063F                         L184:	; bb18
0000063F FB3A0004                		MOV.L #00000400H, R3
00000643 6602                    		MOV.L #00000000H, R2
                                 ;     973         {
                                 ;     974             usb_creg_set_mbw( ptr, USB_CUSE, USB0_CFIFO_MBW );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",974
00000645 05rrrrrr             A  		BSR _usb_creg_set_mbw
00000649 2Err                 B  		BRA L187
0000064B                         L185:	; bb21
                                 ;     975         }
                                 ;     976         else if (ptr->ip == USB_USBIP_1)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",976
0000064B B991                    		MOVU.W 0CH[R1], R1
0000064D 6111                    		CMP #01H, R1
0000064F 21rr                    		BNE L187
00000651                         L186:	; bb22
                                 ;     977         {
                                 ;     978             usb_creg_set_mbw( ptr, USB_CUSE, USB1_CFIFO_MBW );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",978
00000651 A881                    		MOV.L 08H[R0], R1
00000653 FB3A0008                		MOV.L #00000800H, R3
00000657 6602                    		MOV.L #00000000H, R2
00000659 05rrrrrr             A  		BSR _usb_creg_set_mbw
0000065D                         L187:	; bb38
                                 ;     979         }
                                 ;     980 
                                 ;     981         /* Changes the FIFO port by the pipe. */
                                 ;     982         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_CUSE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",982
0000065D A881                    		MOV.L 08H[R0], R1
0000065F 6602                    		MOV.L #00000000H, R2
00000661 EF23                    		MOV.L R2, R3
00000663 EF24                    		MOV.L R2, R4
00000665 39rrrr               W  		BSR _usb_cstd_chg_curpipe
00000668                         L188:	; bb48
                                 ;     983     }
                                 ;     984 #ifdef USB_DTC_ENABLE
                                 ;     985     /* Clear D0FIFO-port */
                                 ;     986     buffer = usb_creg_read_fifosel( ptr, USB_D0DMA );
                                 ;     987     if( (buffer & USB_CURPIPE) == pipe )
                                 ;     988     {
                                 ;     989         /* Stop DMA,FIFO access */
                                 ;     990         usb_cpu_d0fifo_stop_dma(ptr);
                                 ;     991 
                                 ;     992         usb_cstd_D0fifoStopUsb(ptr);
                                 ;     993         usb_cstd_D0FifoselSet(ptr);
                                 ;     994         if(ptr->ip == USB_USBIP_0)
                                 ;     995         {
                                 ;     996             usb_creg_write_dmacfg( ptr, USB_D0DMA, USB_CPU_ADR_RD_WR );
                                 ;     997         }
                                 ;     998         else if (ptr->ip == USB_USBIP_1)
                                 ;     999         {
                                 ;    1000 //            usb_creg_set_mbw( ptr, USB_D1USE, USB1_D1FIFO_MBW );
                                 ;    1001         }
                                 ;    1002         /* Changes the FIFO port by the pipe. */
                                 ;    1003         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D0USE, USB_NO);
                                 ;    1004     }
                                 ;    1005     /* Clear D1FIFO-port */
                                 ;    1006     buffer = usb_creg_read_fifosel( ptr, USB_D1DMA );
                                 ;    1007     if( (buffer & USB_CURPIPE) == pipe )
                                 ;    1008     {
                                 ;    1009         if(ptr->ip == USB_USBIP_0)
                                 ;    1010         {
                                 ;    1011             usb_creg_set_mbw( ptr, USB_D1USE, USB0_D1FIFO_MBW );
                                 ;    1012         }
                                 ;    1013         else if (ptr->ip == USB_USBIP_1)
                                 ;    1014         {
                                 ;    1015             usb_creg_set_mbw( ptr, USB_D1USE, USB1_D1FIFO_MBW );
                                 ;    1016         }
                                 ;    1017         /* Changes the FIFO port by the pipe. */
                                 ;    1018         usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_D1USE, USB_NO);
                                 ;    1019     }
                                 ;    1020 #endif    /* USB_DTC_ENABLE */
                                 ;    1021 
                                 ;    1022     /* Changes the FIFO port by the pipe. */
                                 ;    1023     usb_cstd_chg_curpipe(ptr, pipe, (uint16_t)USB_CUSE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1023
00000668 B88A                    		MOVU.W 06H[R0], R2
0000066A A881                    		MOV.L 08H[R0], R1
0000066C 6603                    		MOV.L #00000000H, R3
0000066E EF34                    		MOV.L R3, R4
00000670 39rrrr               W  		BSR _usb_cstd_chg_curpipe
00000673                         L189:	; bb48.split
                                 ;    1024     buffer = usb_creg_read_fifoctr( ptr, USB_CUSE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1024
00000673 A881                    		MOV.L 08H[R0], R1
00000675 6602                    		MOV.L #00000000H, R2
00000677 05rrrrrr             A  		BSR _usb_creg_read_fifoctr
0000067B 9009                    		MOV.W R1, 02H[R0]
0000067D                         L190:	; bb48.split6
                                 ;    1025     if( (uint16_t)(buffer & USB_FRDY) == USB_FRDY )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1025
0000067D B809                    		MOVU.W 02H[R0], R1
0000067F 76210020                		AND #2000H, R1
00000683 76010020                		CMP #2000H, R1
00000687 18                   S  		BNE L192
00000688                         L191:	; bb54
                                 ;    1026     {
                                 ;    1027         /* Clear BVAL */
                                 ;    1028         usb_creg_set_bclr( ptr, USB_CUSE );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1028
00000688 A881                    		MOV.L 08H[R0], R1
0000068A 6602                    		MOV.L #00000000H, R2
0000068C 05rrrrrr             A  		BSR _usb_creg_set_bclr
00000690                         L192:	; bb64
                                 ;    1029     }
                                 ;    1030 
                                 ;    1031     /* FIFO buffer SPLIT transaction initialized */
                                 ;    1032     usb_cstd_chg_curpipe(ptr, (uint16_t)USB_PIPE0, (uint16_t)USB_CUSE, USB_NO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1032
00000690 A881                    		MOV.L 08H[R0], R1
00000692 6602                    		MOV.L #00000000H, R2
00000694 EF23                    		MOV.L R2, R3
00000696 EF24                    		MOV.L R2, R4
00000698 39rrrr               W  		BSR _usb_cstd_chg_curpipe
0000069B                         L193:	; bb64.split
                                 ;    1033     usb_creg_set_csclr(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1033
0000069B B88A                    		MOVU.W 06H[R0], R2
0000069D A881                    		MOV.L 08H[R0], R1
0000069F 05rrrrrr             A  		BSR _usb_creg_set_csclr
000006A3                         L194:	; bb64.split7
                                 ;    1034 
                                 ;    1035     /* Call Back */
                                 ;    1036     if( usb_gcstd_Pipe[ptr->ip][pipe] != USB_NULL )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1036
000006A3 A881                    		MOV.L 08H[R0], R1
000006A5 B991                    		MOVU.W 0CH[R1], R1
000006A7 751128                  		MUL #28H, R1
000006AA FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000006B0 4B1E                    		ADD R1, R14
000006B2 B889                    		MOVU.W 06H[R0], R1
000006B4 FE61EE                  		MOV.L [R1,R14], R14
000006B7 610E                    		CMP #00H, R14
000006B9 3Arrrr               W  		BEQ L204
000006BC                         L195:	; bb69
                                 ;    1037     {
                                 ;    1038         /* Transfer information set */
                                 ;    1039         usb_gcstd_Pipe[ptr->ip][pipe]->tranlen  = usb_gcstd_DataCnt[ptr->ip][pipe];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1039
000006BC A881                    		MOV.L 08H[R0], R1
000006BE B991                    		MOVU.W 0CH[R1], R1
000006C0 751128                  		MUL #28H, R1
000006C3 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_DataCnt, R14
000006C9 4B1E                    		ADD R1, R14
000006CB B88A                    		MOVU.W 06H[R0], R2
000006CD FE62E3                  		MOV.L [R2,R14], R3
000006D0 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000006D6 4B1E                    		ADD R1, R14
000006D8 FE62E1                  		MOV.L [R2,R14], R1
000006DB A193                    		MOV.L R3, 18H[R1]
000006DD                         L196:	; bb69.split
                                 ;    1040         usb_gcstd_Pipe[ptr->ip][pipe]->status   = status;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1040
000006DD A881                    		MOV.L 08H[R0], R1
000006DF B991                    		MOVU.W 0CH[R1], R1
000006E1 751128                  		MUL #28H, R1
000006E4 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000006EA 4B1E                    		ADD R1, R14
000006EC B889                    		MOVU.W 06H[R0], R1
000006EE FE61E1                  		MOV.L [R1,R14], R1
000006F1 D5010210                		MOV.W 04H[R0], 20H[R1]
000006F5                         L197:	; bb69.split8
                                 ;    1041         usb_gcstd_Pipe[ptr->ip][pipe]->pipectr  = usb_creg_read_pipectr(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1041
000006F5 A881                    		MOV.L 08H[R0], R1
000006F7 B992                    		MOVU.W 0CH[R1], R2
000006F9 751228                  		MUL #28H, R2
000006FC FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
00000702 4B2E                    		ADD R2, R14
00000704 B88A                    		MOVU.W 06H[R0], R2
00000706 FE62E6                  		MOV.L [R2,R14], R6
00000709 05rrrrrr             A  		BSR _usb_creg_read_pipectr
0000070D 9469                    		MOV.W R1, 22H[R6]
0000070F                         L198:	; bb69.split9
                                 ;    1042 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;    1043         usb_gcstd_Pipe[ptr->ip][pipe]->errcnt   = (uint8_t)usb_ghstd_IgnoreCnt[ptr->ip][pipe];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1043
0000070F A881                    		MOV.L 08H[R0], R1
00000711 B991                    		MOVU.W 0CH[R1], R1
00000713 EF1E                    		MOV.L R1, R14
00000715 751E14                  		MUL #14H, R14
00000718 FBF2rrrrrrrr            		MOV.L #_usb_ghstd_IgnoreCnt, R15
0000071E 4BEF                    		ADD R14, R15
00000720 751128                  		MUL #28H, R1
00000723 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
00000729 4B1E                    		ADD R1, R14
0000072B B889                    		MOVU.W 06H[R0], R1
0000072D FE61EE                  		MOV.L [R1,R14], R14
00000730 6C11                    		SHLL #01H, R1
00000732 FECF1F                  		MOVU.B [R15,R1], R15
00000735 C7EF24                  		MOV.B R15, 24H[R14]
00000738                         L199:	; bb69.split10
                                 ;    1044 #else   /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;    1045         usb_gcstd_Pipe[ptr->ip][pipe]->errcnt   = 0;
                                 ;    1046 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;    1047 
                                 ;    1048         usb_gcstd_Pipe[ptr->ip][pipe]->ipp  = ptr->ipp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1048
00000738 A881                    		MOV.L 08H[R0], R1
0000073A B992                    		MOVU.W 0CH[R1], R2
0000073C 751228                  		MUL #28H, R2
0000073F FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
00000745 4B2E                    		ADD R2, R14
00000747 B88A                    		MOVU.W 06H[R0], R2
00000749 FE62EE                  		MOV.L [R2,R14], R14
0000074C E51E0202                		MOV.L 08H[R1], 08H[R14]
00000750                         L200:	; bb69.split11
                                 ;    1049         usb_gcstd_Pipe[ptr->ip][pipe]->ip   = ptr->ip;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1049
00000750 A881                    		MOV.L 08H[R0], R1
00000752 B991                    		MOVU.W 0CH[R1], R1
00000754 EF1E                    		MOV.L R1, R14
00000756 751E28                  		MUL #28H, R14
00000759 FBF2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R15
0000075F 4BEF                    		ADD R14, R15
00000761 B88A                    		MOVU.W 06H[R0], R2
00000763 FE62F2                  		MOV.L [R2,R15], R2
00000766 91A1                    		MOV.W R1, 0CH[R2]
00000768                         L201:	; bb69.split12
                                 ;    1050 
                                 ;    1051         if( USB_NULL != ( usb_gcstd_Pipe[ptr->ip][pipe]->complete ) )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1051
00000768 A881                    		MOV.L 08H[R0], R1
0000076A B991                    		MOVU.W 0CH[R1], R1
0000076C 751128                  		MUL #28H, R1
0000076F FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
00000775 4B1E                    		ADD R1, R14
00000777 B889                    		MOVU.W 06H[R0], R1
00000779 FE61E1                  		MOV.L [R1,R14], R1
0000077C A911                    		MOV.L 10H[R1], R1
0000077E 6101                    		CMP #00H, R1
00000780 20rr                    		BEQ L203
00000782                         L202:	; bb170
                                 ;    1052         {
                                 ;    1053             (usb_gcstd_Pipe[ptr->ip][pipe]->complete)(usb_gcstd_Pipe[ptr->ip][pipe], 0, 0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1053
00000782 A881                    		MOV.L 08H[R0], R1
00000784 B991                    		MOVU.W 0CH[R1], R1
00000786 751128                  		MUL #28H, R1
00000789 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
0000078F 4B1E                    		ADD R1, R14
00000791 B889                    		MOVU.W 06H[R0], R1
00000793 FE61E1                  		MOV.L [R1,R14], R1
00000796 A914                    		MOV.L 10H[R1], R4
00000798 6602                    		MOV.L #00000000H, R2
0000079A EF23                    		MOV.L R2, R3
0000079C 7F14                    		JSR R4
0000079E                         L203:	; bb208
                                 ;    1054         }
                                 ;    1055         usb_gcstd_Pipe[ptr->ip][pipe] = (USB_UTR_t*)USB_NULL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1055
0000079E A881                    		MOV.L 08H[R0], R1
000007A0 B991                    		MOVU.W 0CH[R1], R1
000007A2 751128                  		MUL #28H, R1
000007A5 FBE2rrrrrrrr            		MOV.L #_usb_gcstd_Pipe, R14
000007AB 4B1E                    		ADD R1, R14
000007AD 660F                    		MOV.L #00000000H, R15
000007AF B889                    		MOVU.W 06H[R0], R1
000007B1 FE21EF                  		MOV.L R15, [R1,R14]
000007B4 3F6604                  		RTSD #10H, R6-R6
000007B7                         L204:	; return
                                 ;    1056     }
                                 ;    1057 }/* eof usb_cstd_ForcedTermination() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1057
000007B7 3F6604                  		RTSD #10H, R6-R6
000007BA                         _usb_cstd_nrdy_endprocess:
                                 		.STACK	_usb_cstd_nrdy_endprocess=12
                                 ;    1058 
                                 ;    1059 /******************************************************************************
                                 ;    1060 Function Name   : usb_cstd_nrdy_endprocess
                                 ;    1061 Description     : NRDY interrupt processing. (Forced termination of data trans-
                                 ;    1062                 : mission and reception of specified pipe.)
                                 ;    1063 Arguments       : USB_UTR_t *ptr       : USB system internal structure. Selects channel.
                                 ;    1064                 : uint16_t  pipe        : Pipe No
                                 ;    1065 Return value    : none
                                 ;    1066 Note            : none
                                 ;    1067 ******************************************************************************/
                                 ;    1068 void    usb_cstd_nrdy_endprocess( USB_UTR_t *ptr, uint16_t pipe )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1068
000007BA 6080                    		SUB #08H, R0
000007BC A009                    		MOV.L R1, 04H[R0]
000007BE 900A                    		MOV.W R2, 02H[R0]
                                 ;    1069 {
                                 ;    1070     if( usb_cstd_is_host_mode(ptr) == USB_YES )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1070
000007C0 A809                    		MOV.L 04H[R0], R1
000007C2 05rrrrrr             A  		BSR _usb_cstd_is_host_mode
000007C6 6111                    		CMP #01H, R1
000007C8 21rr                    		BNE L215
000007CA                         L206:	; bb4
                                 ;    1071     {
                                 ;    1072 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;    1073         uint16_t    buffer;
                                 ;    1074 
                                 ;    1075         /*
                                 ;    1076             Host Function
                                 ;    1077         */
                                 ;    1078         buffer = usb_cstd_GetPid(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1078
000007CA B80A                    		MOVU.W 02H[R0], R2
000007CC A809                    		MOV.L 04H[R0], R1
000007CE 05rrrrrr             A  		BSR _usb_cstd_GetPid
000007D2 D301                    		MOV.W R1, [R0]
000007D4                         L207:	; bb4.split
                                 ;    1079         /* STALL ? */
                                 ;    1080         if( (buffer & USB_PID_STALL) == USB_PID_STALL )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1080
000007D4 5C01                    		MOVU.W [R0], R1
000007D6 6421                    		AND #02H, R1
000007D8 6121                    		CMP #02H, R1
000007DA A809                    		MOV.L 04H[R0], R1
000007DC 18                   S  		BNE L209
000007DD                         L208:	; bb8
                                 ;    1081         {
                                 ;    1082             USB_PRINTF1("### STALL Pipe %d\n", pipe);
                                 ;    1083             /* @4 */
                                 ;    1084             /* End of data transfer */
                                 ;    1085             usb_cstd_ForcedTermination(ptr, pipe, USB_DATA_STALL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1085
000007DD B80A                    		MOVU.W 02H[R0], R2
000007DF 6663                    		MOV.L #00000006H, R3
000007E1 39rrrr               W  		BSR _usb_cstd_ForcedTermination
000007E4 6702                    		RTSD #08H
000007E6                         L209:	; bb11
000007E6 6602                    		MOV.L #00000000H, R2
                                 ;    1086         }
                                 ;    1087         else
                                 ;    1088         {
                                 ;    1089             /* Wait for About 60ns */
                                 ;    1090             buffer = usb_creg_read_syssts( ptr, USB_PORT0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1090
000007E8 05rrrrrr             A  		BSR _usb_creg_read_syssts
000007EC D301                    		MOV.W R1, [R0]
000007EE                         L210:	; bb11.split
                                 ;    1091             /* @3 */
                                 ;    1092             usb_ghstd_IgnoreCnt[ptr->ip][pipe]++;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1092
000007EE A809                    		MOV.L 04H[R0], R1
000007F0 B991                    		MOVU.W 0CH[R1], R1
000007F2 751114                  		MUL #14H, R1
000007F5 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_IgnoreCnt, R14
000007FB 4B1E                    		ADD R1, R14
000007FD B809                    		MOVU.W 02H[R0], R1
000007FF FE51EF                  		MOV.W [R1,R14], R15
00000802 621F                    		ADD #01H, R15
00000804 FE11EF                  		MOV.W R15, [R1,R14]
00000807                         L211:	; bb11.split1
                                 ;    1093             USB_PRINTF2("### IGNORE Pipe %d is %d times \n", pipe, usb_ghstd_IgnoreCnt[ptr->ip][pipe]);
                                 ;    1094             if( usb_ghstd_IgnoreCnt[ptr->ip][pipe] == USB_PIPEERROR )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1094
00000807 A809                    		MOV.L 04H[R0], R1
00000809 B991                    		MOVU.W 0CH[R1], R1
0000080B 751114                  		MUL #14H, R1
0000080E FBE2rrrrrrrr            		MOV.L #_usb_ghstd_IgnoreCnt, R14
00000814 4B1E                    		ADD R1, R14
00000816 B809                    		MOVU.W 02H[R0], R1
00000818 FED1EE                  		MOVU.W [R1,R14], R14
0000081B 611E                    		CMP #01H, R14
0000081D 21rr                    		BNE L213
0000081F                         L212:	; bb26
                                 ;    1095             {
                                 ;    1096                 /* Data Device Ignore X 3 call back */
                                 ;    1097                 /* End of data transfer */
                                 ;    1098                 usb_cstd_ForcedTermination(ptr, pipe, USB_DATA_ERR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1098
0000081F B80A                    		MOVU.W 02H[R0], R2
00000821 A809                    		MOV.L 04H[R0], R1
00000823 6673                    		MOV.L #00000007H, R3
00000825 39rrrr               W  		BSR _usb_cstd_ForcedTermination
00000828 6702                    		RTSD #08H
0000082A                         L213:	; bb29
0000082A 6651                    		MOV.L #00000005H, R1
                                 ;    1099             }
                                 ;    1100             else
                                 ;    1101             {
                                 ;    1102                 /* 5ms wait */
                                 ;    1103                 usb_cpu_DelayXms(5);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1103
0000082C 05rrrrrr             A  		BSR _usb_cpu_DelayXms
00000830                         L214:	; bb29.split
                                 ;    1104                 /* PIPEx Data Retry */
                                 ;    1105                 usb_cstd_SetBuf(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1105
00000830 B80A                    		MOVU.W 02H[R0], R2
00000832 A809                    		MOV.L 04H[R0], R1
00000834 05rrrrrr             A  		BSR _usb_cstd_SetBuf
00000838 6702                    		RTSD #08H
0000083A                         L215:	; return
                                 ;    1106             }
                                 ;    1107         }
                                 ;    1108 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;    1109     }
                                 ;    1110 }/* eof usb_cstd_nrdy_endprocess() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\comm\r_usb_creg_abs.c",1110
0000083A 6702                    		RTSD #08H
                                 ;    1111 
                                 ;    1112 /******************************************************************************
                                 ;    1113 End of file
                                 ;    1114 ******************************************************************************/
                                 ;    1115 
                                 		.SECTION	B_2,DATA,ALIGN=2
00000000                         _usb_gcstd_RhstBit:
00000000(00000002H)              		.blkw	1
00000002                         _usb_gcstd_DvsqBit:
00000002(00000002H)              		.blkw	1
00000004                         _usb_gcstd_AddrBit:
00000004(00000002H)              		.blkw	1
00000006                         _usb_gcstd_SqmonBit:
00000006(00000002H)              		.blkw	1
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     02543   LINES

Section List

Attr         Size               Name
CODE     0000002108(0000083CH)  P
DATA     0000000008(00000008H)  B_2

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx7E87\$ccrx\r_usb_creg_abs.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01\Mobile_build\r_usb_creg_abs.lst
-output=C:\Workspace\e2studio\git\MT01\Mobile_build\r_usb_basic\src\HW\comm\r_usb_creg_abs.obj
