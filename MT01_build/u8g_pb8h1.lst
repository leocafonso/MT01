* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Tue Mar 14 17:28:39 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  14-Mar-2017 17:28:39
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=u8g_pb8h1.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx\src,C:/Workspace/e2studio/
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=u8g_pb8h1.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=1,MOBILE=0,FREE_RTOS_PP
                                 ;u8g_pb8h1.c
                                 
                                 		.glb	_u8g_pb8h1_Init
                                 		.glb	_u8g_pb_Clear
                                 		.glb	_u8g_pb8h1_set_pixel
                                 		.glb	_u8g_pb8h1_SetPixel
                                 		.glb	_u8g_pb8h1_Set8PixelStd
                                 		.glb	_u8g_pb8h1_Set8PixelOpt2
                                 		.glb	_u8g_dev_pb8h1_base_fn
                                 		.glb	_u8g_pb_Is8PixelVisible
                                 		.glb	_u8g_page_First
                                 		.glb	_u8g_page_Next
                                 		.glb	_u8g_pb_GetPageBox
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _u8g_pb8h1_Init:
                                 		.STACK	_u8g_pb8h1_Init=16
                                 ;       1 /*
                                 ;       2 
                                 ;       3   u8g_pb8h1.c
                                 ;       4   
                                 ;       5   8bit height monochrom (1 bit) page buffer
                                 ;       6   byte has horizontal orientation
                                 ;       7 
                                 ;       8   Universal 8bit Graphics Library
                                 ;       9   
                                 ;      10   Copyright (c) 2011, olikraus@gmail.com
                                 ;      11   All rights reserved.
                                 ;      12 
                                 ;      13   Redistribution and use in source and binary forms, with or without modification, 
                                 ;      14   are permitted provided that the following conditions are met:
                                 ;      15 
                                 ;      16   * Redistributions of source code must retain the above copyright notice, this list 
                                 ;      17     of conditions and the following disclaimer.
                                 ;      18     
                                 ;      19   * Redistributions in binary form must reproduce the above copyright notice, this 
                                 ;      20     list of conditions and the following disclaimer in the documentation and/or other 
                                 ;      21     materials provided with the distribution.
                                 ;      22 
                                 ;      23   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
                                 ;      24   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
                                 ;      25   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
                                 ;      26   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
                                 ;      27   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
                                 ;      28   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
                                 ;      29   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
                                 ;      30   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
                                 ;      31   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
                                 ;      32   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
                                 ;      33   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
                                 ;      34   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
                                 ;      35   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
                                 ;      36 
                                 ;      37 
                                 ;      38   total buffer size is limited to 256 bytes because of the calculation inside the set pixel procedure
                                 ;      39 
                                 ;      40   23. Sep 2012: Bug with down procedure, see FPS 1st page --> fixed (bug located in u8g_clip.c)
                                 ;      41 
                                 ;      42 */
                                 ;      43 
                                 ;      44 #include "u8g.h"
                                 ;      45 #include <string.h>
                                 ;      46 
                                 ;      47 #ifdef __unix__
                                 ;      48 #include <assert.h>
                                 ;      49 #endif
                                 ;      50 
                                 ;      51 /* NEW_CODE disabled, because the performance increase was too slow and not worth compared */
                                 ;      52 /* to the increase of code size */
                                 ;      53 /* #define NEW_CODE */
                                 ;      54 
                                 ;      55 #ifdef __unix__
                                 ;      56 void *u8g_buf_lower_limit;
                                 ;      57 void *u8g_buf_upper_limit;
                                 ;      58 #endif
                                 ;      59 
                                 ;      60 void u8g_pb8h1_Init(u8g_pb_t *b, void *buf, u8g_uint_t width) U8G_NOINLINE;
                                 ;      61 void u8g_pb8h1_set_pixel(u8g_pb_t *b, u8g_uint_t x, u8g_uint_t y, uint8_t color_index) U8G_NOINLINE;
                                 ;      62 void u8g_pb8h1_SetPixel(u8g_pb_t *b, const u8g_dev_arg_pixel_t * const arg_pixel) U8G_NOINLINE ;
                                 ;      63 void u8g_pb8h1_Set8PixelStd(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel) U8G_NOINLINE;
                                 ;      64 uint8_t u8g_dev_pb8h1_base_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg);
                                 ;      65 
                                 ;      66 
                                 ;      67 #ifdef NEW_CODE
                                 ;      68 struct u8g_pb_h1_struct
                                 ;      69 {
                                 ;      70   u8g_uint_t x;
                                 ;      71   u8g_uint_t y;
                                 ;      72   uint8_t *ptr;
                                 ;      73   uint8_t mask;
                                 ;      74   uint8_t line_byte_len;
                                 ;      75   uint8_t cnt;
                                 ;      76 };
                                 ;      77 
                                 ;      78 static uint8_t u8g_pb8h1_bitmask[8] = { 0x080, 0x040, 0x020, 0x010, 0x008, 0x004, 0x002, 0x001 };
                                 ;      79 
                                 ;      80 static void u8g_pb8h1_state_right(struct u8g_pb_h1_struct *s)  U8G_NOINLINE;
                                 ;      81 static void u8g_pb8h1_state_right(struct u8g_pb_h1_struct *s)
                                 ;      82 {
                                 ;      83   register u8g_uint_t x;
                                 ;      84   x = s->x;
                                 ;      85   x++;
                                 ;      86   s->x = x;
                                 ;      87   x &= 7;
                                 ;      88   s->mask = u8g_pb8h1_bitmask[x];
                                 ;      89   if ( x == 0 )
                                 ;      90     s->ptr++;
                                 ;      91 }
                                 ;      92 
                                 ;      93 static void u8g_pb8h1_state_left(struct u8g_pb_h1_struct *s)
                                 ;      94 {
                                 ;      95   register u8g_uint_t x;
                                 ;      96   x = s->x;
                                 ;      97   x--;
                                 ;      98   s->x = x;
                                 ;      99   x &= 7;
                                 ;     100   s->mask = u8g_pb8h1_bitmask[x];
                                 ;     101   if ( x == 7 )
                                 ;     102     s->ptr--;
                                 ;     103 }
                                 ;     104 
                                 ;     105 static void u8g_pb8h1_state_down(struct u8g_pb_h1_struct *s)
                                 ;     106 {
                                 ;     107   s->y++;
                                 ;     108   s->ptr += s->line_byte_len;
                                 ;     109 }
                                 ;     110 
                                 ;     111 static void u8g_pb8h1_state_up(struct u8g_pb_h1_struct *s)
                                 ;     112 {
                                 ;     113   s->y--;
                                 ;     114   s->ptr -= s->line_byte_len;
                                 ;     115 }
                                 ;     116 
                                 ;     117 static void u8g_pb8h1_state_init(struct u8g_pb_h1_struct *s, u8g_pb_t *b, u8g_uint_t x, u8g_uint_t y) U8G_NOINLINE;
                                 ;     118 static void u8g_pb8h1_state_init(struct u8g_pb_h1_struct *s, u8g_pb_t *b, u8g_uint_t x, u8g_uint_t y)
                                 ;     119 {
                                 ;     120   u8g_uint_t tmp;
                                 ;     121   
                                 ;     122   uint8_t *ptr = b->buf;
                                 ;     123   
                                 ;     124   s->x = x;  
                                 ;     125   s->y = y;
                                 ;     126   
                                 ;     127   y -= b->p.page_y0;
                                 ;     128   
                                 ;     129   tmp = b->width;
                                 ;     130   tmp >>= 3;
                                 ;     131   s->line_byte_len = tmp;
                                 ;     132   
                                 ;     133   /* assume negative y values, can be down to -7, subtract this from the pointer and add correction of 8 to y */
                                 ;     134   ptr -= tmp*8;
                                 ;     135   y+=8;
                                 ;     136   /* it is important that the result of tmp*y can be 16 bit value also for 8 bit mode */
                                 ;     137   ptr += tmp*y;
                                 ;     138   
                                 ;     139   s->mask = u8g_pb8h1_bitmask[x & 7];
                                 ;     140   
                                 ;     141   /* assume negative x values (to -7), subtract 8 pixel from the pointer and add 8 to x */
                                 ;     142   ptr--;
                                 ;     143   x += 8;
                                 ;     144   x >>= 3;
                                 ;     145   ptr += x;
                                 ;     146   s->ptr = ptr;
                                 ;     147 }
                                 ;     148 
                                 ;     149 static void u8g_pb8h1_state_set_pixel(struct u8g_pb_h1_struct *s, uint8_t color_index) U8G_NOINLINE;
                                 ;     150 static void u8g_pb8h1_state_set_pixel(struct u8g_pb_h1_struct *s, uint8_t color_index)
                                 ;     151 {
                                 ;     152   
                                 ;     153 #ifdef __unix__
                                 ;     154   assert( s->ptr >= u8g_buf_lower_limit );
                                 ;     155   assert( s->ptr < u8g_buf_upper_limit );
                                 ;     156 #endif
                                 ;     157   
                                 ;     158   if ( color_index )
                                 ;     159   {
                                 ;     160     *s->ptr |= s->mask;
                                 ;     161   }
                                 ;     162   else
                                 ;     163   {
                                 ;     164     uint8_t mask = s->mask;
                                 ;     165     mask ^=0xff;
                                 ;     166     *s->ptr &= mask;
                                 ;     167   }  
                                 ;     168 }
                                 ;     169 #endif
                                 ;     170 
                                 ;     171 
                                 ;     172 void u8g_pb8h1_Init(u8g_pb_t *b, void *buf, u8g_uint_t width)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",172
00000000 60C0                    		SUB #0CH, R0
00000002 A081                    		MOV.L R1, 08H[R0]
00000004 A00A                    		MOV.L R2, 04H[R0]
00000006 808B                    		MOV.B R3, 03H[R0]
                                 ;     173 {
                                 ;     174   b->buf = buf;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",174
00000008 A809                    		MOV.L 04H[R0], R1
0000000A A882                    		MOV.L 08H[R0], R2
0000000C A0A1                    		MOV.L R1, 08H[R2]
0000000E                         L11:	; entry.split
                                 ;     175   b->width = width;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",175
0000000E B089                    		MOVU.B 03H[R0], R1
00000010 A882                    		MOV.L 08H[R0], R2
00000012 8129                    		MOV.B R1, 05H[R2]
00000014                         L12:	; entry.split1
                                 ;     176   u8g_pb_Clear(b);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",176
00000014 A881                    		MOV.L 08H[R0], R1
00000016 05rrrrrr             A  		BSR _u8g_pb_Clear
0000001A 6703                    		RTSD #0CH
0000001C                         _u8g_pb8h1_set_pixel:
                                 		.STACK	_u8g_pb8h1_set_pixel=20
                                 ;     177 }
                                 ;     178 
                                 ;     179 /* limitation: total buffer must not exceed 256 bytes */
                                 ;     180 void u8g_pb8h1_set_pixel(u8g_pb_t *b, u8g_uint_t x, u8g_uint_t y, uint8_t color_index)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",180
0000001C 7100F0                  		ADD #0FFFFFFF0H, R0
0000001F A089                    		MOV.L R1, 0CH[R0]
00000021 828A                    		MOV.B R2, 0BH[R0]
00000023 8283                    		MOV.B R3, 0AH[R0]
00000025 820C                    		MOV.B R4, 09H[R0]
                                 ;     181 {
                                 ;     182 #ifdef NEW_CODE
                                 ;     183   struct u8g_pb_h1_struct s;
                                 ;     184   u8g_pb8h1_state_init(&s, b, x, y);
                                 ;     185   u8g_pb8h1_state_set_pixel(&s, color_index);
                                 ;     186 
                                 ;     187 //  u8g_pb8h1_state_up(&s);
                                 ;     188 //  if ( s.y > b->p.page_y1 )
                                 ;     189 //    return;
                                 ;     190 //  if ( s.x > b->width )
                                 ;     191 //    return;
                                 ;     192 //  u8g_pb8h1_state_set_pixel(&s, color_index);
                                 ;     193 #else
                                 ;     194   register uint8_t mask;
                                 ;     195   u8g_uint_t tmp;
                                 ;     196   uint8_t *ptr = b->buf;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",196
00000027 A889                    		MOV.L 0CH[R0], R1
00000029 E5100201                		MOV.L 08H[R1], 04H[R0]
0000002D                         L14:	; entry.split
                                 ;     197   
                                 ;     198   y -= b->p.page_y0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",198
0000002D B281                    		MOVU.B 0AH[R0], R1
0000002F A88A                    		MOV.L 0CH[R0], R2
00000031 412102                  		SUB 02H[R2].UB, R1
00000034 8281                    		MOV.B R1, 0AH[R0]
00000036                         L15:	; entry.split1
                                 ;     199   tmp = b->width;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",199
00000036 A889                    		MOV.L 0CH[R0], R1
00000038 C5100503                		MOV.B 05H[R1], 03H[R0]
0000003C                         L16:	; entry.split2
                                 ;     200   tmp >>= 3;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",200
0000003C B089                    		MOVU.B 03H[R0], R1
0000003E 6831                    		SHLR #03H, R1
00000040 8089                    		MOV.B R1, 03H[R0]
00000042                         L17:	; entry.split3
                                 ;     201   tmp *= (uint8_t)y;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",201
00000042 B089                    		MOVU.B 03H[R0], R1
00000044 4D010A                  		MUL 0AH[R0].UB, R1
00000047 8089                    		MOV.B R1, 03H[R0]
00000049                         L18:	; entry.split4
                                 ;     202   ptr += tmp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",202
00000049 A809                    		MOV.L 04H[R0], R1
0000004B 490103                  		ADD 03H[R0].UB, R1
0000004E A009                    		MOV.L R1, 04H[R0]
00000050                         L19:	; entry.split5
                                 ;     203   
                                 ;     204   mask = 0x080;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",204
00000050 3C0280                  		MOV.B #80H, 02H[R0]
00000053                         L20:	; entry.split6
                                 ;     205   mask >>= x & 7;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",205
00000053 B289                    		MOVU.B 0BH[R0], R1
00000055 6471                    		AND #07H, R1
00000057 B082                    		MOVU.B 02H[R0], R2
00000059 FD6012                  		SHLR R1, R2
0000005C 8082                    		MOV.B R2, 02H[R0]
0000005E                         L21:	; entry.split7
                                 ;     206   x >>= 3;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",206
0000005E B289                    		MOVU.B 0BH[R0], R1
00000060 6831                    		SHLR #03H, R1
00000062 8289                    		MOV.B R1, 0BH[R0]
00000064                         L22:	; entry.split8
                                 ;     207   ptr += x;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",207
00000064 A809                    		MOV.L 04H[R0], R1
00000066 49010B                  		ADD 0BH[R0].UB, R1
00000069 A009                    		MOV.L R1, 04H[R0]
0000006B                         L23:	; entry.split9
                                 ;     208   if ( color_index )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",208
0000006B B209                    		MOVU.B 09H[R0], R1
0000006D 6101                    		CMP #00H, R1
0000006F 20rr                    		BEQ L25
00000071                         L24:	; bb52
                                 ;     209   {
                                 ;     210     *ptr |= mask;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",210
00000071 A809                    		MOV.L 04H[R0], R1
00000073 581E                    		MOVU.B [R1], R14
00000075 550E02                  		OR 02H[R0].UB, R14
00000078 C31E                    		MOV.B R14, [R1]
0000007A 6704                    		RTSD #10H
0000007C                         L25:	; bb60
                                 ;     211   }
                                 ;     212   else
                                 ;     213   {
                                 ;     214     mask ^=0xff;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",214
0000007C B081                    		MOVU.B 02H[R0], R1
0000007E 7E01                    		NOT R1
00000080 8081                    		MOV.B R1, 02H[R0]
00000082                         L26:	; bb60.split
                                 ;     215     *ptr &= mask;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",215
00000082 A809                    		MOV.L 04H[R0], R1
00000084 581E                    		MOVU.B [R1], R14
00000086 510E02                  		AND 02H[R0].UB, R14
00000089 C31E                    		MOV.B R14, [R1]
0000008B 6704                    		RTSD #10H
0000008D                         _u8g_pb8h1_SetPixel:
                                 		.STACK	_u8g_pb8h1_SetPixel=12
                                 ;     216   }
                                 ;     217 #endif
                                 ;     218 }
                                 ;     219 
                                 ;     220 
                                 ;     221 void u8g_pb8h1_SetPixel(u8g_pb_t *b, const u8g_dev_arg_pixel_t * const arg_pixel)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",221
0000008D 6080                    		SUB #08H, R0
0000008F A009                    		MOV.L R1, 04H[R0]
00000091 E302                    		MOV.L R2, [R0]
                                 ;     222 {
                                 ;     223   if ( arg_pixel->y < b->p.page_y0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",223
00000093 A809                    		MOV.L 04H[R0], R1
00000095 B02A                    		MOVU.B 01H[R2], R2
00000097 451202                  		CMP 02H[R1].UB, R2
0000009A 29rr                    		BLT L31
0000009C                         L28:	; bb16
                                 ;     224     return;
                                 ;     225   if ( arg_pixel->y > b->p.page_y1 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",225
0000009C EC01                    		MOV.L [R0], R1
0000009E B019                    		MOVU.B 01H[R1], R1
000000A0 A80A                    		MOV.L 04H[R0], R2
000000A2 452103                  		CMP 03H[R2].UB, R1
000000A5 2Arr                    		BGT L31
000000A7                         L29:	; bb32
                                 ;     226     return;
                                 ;     227   if ( arg_pixel->x >= b->width )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",227
000000A7 EC01                    		MOV.L [R0], R1
000000A9 581E                    		MOVU.B [R1], R14
000000AB A809                    		MOV.L 04H[R0], R1
000000AD 451E05                  		CMP 05H[R1].UB, R14
000000B0 28rr                    		BGE L31
000000B2                         L30:	; bb46
                                 ;     228     return;
                                 ;     229   u8g_pb8h1_set_pixel(b, arg_pixel->x, arg_pixel->y, arg_pixel->color);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",229
000000B2 EC01                    		MOV.L [R0], R1
000000B4 B114                    		MOVU.B 04H[R1], R4
000000B6 B01B                    		MOVU.B 01H[R1], R3
000000B8 5812                    		MOVU.B [R1], R2
000000BA A809                    		MOV.L 04H[R0], R1
000000BC 39rrrr               W  		BSR _u8g_pb8h1_set_pixel
000000BF 6702                    		RTSD #08H
000000C1                         L31:	; return
                                 ;     230 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",230
000000C1 6702                    		RTSD #08H
000000C3                         _u8g_pb8h1_Set8PixelStd:
                                 		.STACK	_u8g_pb8h1_Set8PixelStd=16
                                 ;     231 
                                 ;     232 void u8g_pb8h1_Set8PixelStd(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",232
000000C3 60C0                    		SUB #0CH, R0
000000C5 A081                    		MOV.L R1, 08H[R0]
000000C7 A00A                    		MOV.L R2, 04H[R0]
                                 ;     233 {
                                 ;     234   register uint8_t pixel = arg_pixel->pixel;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",234
000000C9 C5200203                		MOV.B 02H[R2], 03H[R0]
000000CD                         L33:	; bb6
                                 ;     235   do
                                 ;     236   {
                                 ;     237     if ( pixel & 128 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",237
000000CD F50703                  		BTST #07H, 03H[R0].B
000000D0 10                   S  		BEQ L35
000000D1                         L34:	; bb7
                                 ;     238     {
                                 ;     239       u8g_pb8h1_SetPixel(b, arg_pixel);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",239
000000D1 A80A                    		MOV.L 04H[R0], R2
000000D3 A881                    		MOV.L 08H[R0], R1
000000D5 39rrrr               W  		BSR _u8g_pb8h1_SetPixel
000000D8                         L35:	; bb15
                                 ;     240     }
                                 ;     241     switch( arg_pixel->dir )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",241
000000D8 A809                    		MOV.L 04H[R0], R1
000000DA B099                    		MOVU.B 03H[R1], R1
000000DC 6131                    		CMP #03H, R1
000000DE 20rr                    		BEQ L42
000000E0                         L36:	; bb15
000000E0 6111                    		CMP #01H, R1
000000E2 20rr                    		BEQ L40
000000E4                         L37:	; bb15
000000E4 6121                    		CMP #02H, R1
000000E6 20rr                    		BEQ L41
000000E8                         L38:	; bb15
000000E8 6101                    		CMP #00H, R1
000000EA 21rr                    		BNE L43
000000EC                         L39:	; bb20
                                 ;     242     {
                                 ;     243       case 0: arg_pixel->x++; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",243
000000EC A809                    		MOV.L 04H[R0], R1
000000EE 581E                    		MOVU.B [R1], R14
000000F0 621E                    		ADD #01H, R14
000000F2 C31E                    		MOV.B R14, [R1]
000000F4 2Err                 B  		BRA L43
000000F6                         L40:	; bb25
                                 ;     244       case 1: arg_pixel->y++; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",244
000000F6 A809                    		MOV.L 04H[R0], R1
000000F8 B01A                    		MOVU.B 01H[R1], R2
000000FA 6212                    		ADD #01H, R2
000000FC 801A                    		MOV.B R2, 01H[R1]
000000FE 2Err                 B  		BRA L43
00000100                         L41:	; bb30
                                 ;     245       case 2: arg_pixel->x--; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",245
00000100 A809                    		MOV.L 04H[R0], R1
00000102 581E                    		MOVU.B [R1], R14
00000104 601E                    		SUB #01H, R14
00000106 C31E                    		MOV.B R14, [R1]
00000108 08                   S  		BRA L43
00000109                         L42:	; bb35
                                 ;     246       case 3: arg_pixel->y--; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",246
00000109 A809                    		MOV.L 04H[R0], R1
0000010B B01A                    		MOVU.B 01H[R1], R2
0000010D 6012                    		SUB #01H, R2
0000010F 801A                    		MOV.B R2, 01H[R1]
00000111                         L43:	; bb40
                                 ;     247     }
                                 ;     248     pixel <<= 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",248
00000111 B089                    		MOVU.B 03H[R0], R1
00000113 6C11                    		SHLL #01H, R1
00000115 8089                    		MOV.B R1, 03H[R0]
00000117                         L44:	; bb40.split
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",235
00000117 B089                    		MOVU.B 03H[R0], R1
00000119 6101                    		CMP #00H, R1
0000011B 21rr                    		BNE L33
0000011D                         L45:	; return
                                 ;     249   } while( pixel != 0  );
                                 ;     250 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",250
0000011D 6703                    		RTSD #0CH
0000011F                         _u8g_pb8h1_Set8PixelOpt2:
                                 		.STACK	_u8g_pb8h1_Set8PixelOpt2=16
                                 ;     251 
                                 ;     252 void u8g_pb8h1_Set8PixelOpt2(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",252
0000011F 60C0                    		SUB #0CH, R0
00000121 A081                    		MOV.L R1, 08H[R0]
00000123 A00A                    		MOV.L R2, 04H[R0]
                                 ;     253 {
                                 ;     254   register uint8_t pixel = arg_pixel->pixel;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",254
00000125 C5200201                		MOV.B 02H[R2], 01H[R0]
00000129                         L47:	; entry.split
                                 ;     255   u8g_uint_t dx = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",255
00000129 3C0200                  		MOV.B #00H, 02H[R0]
0000012C                         L48:	; entry.split1
                                 ;     256   u8g_uint_t dy = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",256
0000012C 3C0300                  		MOV.B #00H, 03H[R0]
0000012F                         L49:	; entry.split2
                                 ;     257   
                                 ;     258   switch( arg_pixel->dir )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",258
0000012F A809                    		MOV.L 04H[R0], R1
00000131 B099                    		MOVU.B 03H[R1], R1
00000133 6131                    		CMP #03H, R1
00000135 20rr                    		BEQ L56
00000137                         L50:	; entry.split2
00000137 6111                    		CMP #01H, R1
00000139 20rr                    		BEQ L54
0000013B                         L51:	; entry.split2
0000013B 6121                    		CMP #02H, R1
0000013D 20rr                    		BEQ L55
0000013F                         L52:	; entry.split2
0000013F 6101                    		CMP #00H, R1
00000141 21rr                    		BNE L57
00000143                         L53:	; bb
                                 ;     259   {
                                 ;     260     case 0: dx++; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",260
00000143 B081                    		MOVU.B 02H[R0], R1
00000145 6211                    		ADD #01H, R1
00000147 8081                    		MOV.B R1, 02H[R0]
00000149 2Err                 B  		BRA L57
0000014B                         L54:	; bb14
                                 ;     261     case 1: dy++; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",261
0000014B B089                    		MOVU.B 03H[R0], R1
0000014D 6211                    		ADD #01H, R1
0000014F 8089                    		MOV.B R1, 03H[R0]
00000151 2Err                 B  		BRA L57
00000153                         L55:	; bb17
                                 ;     262     case 2: dx--; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",262
00000153 B081                    		MOVU.B 02H[R0], R1
00000155 6011                    		SUB #01H, R1
00000157 8081                    		MOV.B R1, 02H[R0]
00000159 08                   S  		BRA L57
0000015A                         L56:	; bb20
                                 ;     263     case 3: dy--; break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",263
0000015A B089                    		MOVU.B 03H[R0], R1
0000015C 6011                    		SUB #01H, R1
0000015E 8089                    		MOV.B R1, 03H[R0]
00000160                         L57:	; bb25
                                 ;     264   }
                                 ;     265   
                                 ;     266   do
                                 ;     267   {
                                 ;     268     if ( pixel & 128 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",268
00000160 F50701                  		BTST #07H, 01H[R0].B
00000163 10                   S  		BEQ L59
00000164                         L58:	; bb26
                                 ;     269       u8g_pb8h1_SetPixel(b, arg_pixel);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",269
00000164 A80A                    		MOV.L 04H[R0], R2
00000166 A881                    		MOV.L 08H[R0], R1
00000168 39rrrr               W  		BSR _u8g_pb8h1_SetPixel
0000016B                         L59:	; bb34
                                 ;     270     arg_pixel->x += dx;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",270
0000016B A809                    		MOV.L 04H[R0], R1
0000016D 581E                    		MOVU.B [R1], R14
0000016F 490E02                  		ADD 02H[R0].UB, R14
00000172 C31E                    		MOV.B R14, [R1]
00000174                         L60:	; bb34.split
                                 ;     271     arg_pixel->y += dy;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",271
00000174 A809                    		MOV.L 04H[R0], R1
00000176 B01A                    		MOVU.B 01H[R1], R2
00000178 490203                  		ADD 03H[R0].UB, R2
0000017B 801A                    		MOV.B R2, 01H[R1]
0000017D                         L61:	; bb34.split3
                                 ;     272     pixel <<= 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",272
0000017D B009                    		MOVU.B 01H[R0], R1
0000017F 6C11                    		SHLL #01H, R1
00000181 8009                    		MOV.B R1, 01H[R0]
00000183                         L62:	; bb34.split4
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",266
00000183 B009                    		MOVU.B 01H[R0], R1
00000185 6101                    		CMP #00H, R1
00000187 21rr                    		BNE L57
00000189                         L63:	; return
                                 ;     273   } while( pixel != 0  );  
                                 ;     274 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",274
00000189 6703                    		RTSD #0CH
0000018B                         _u8g_dev_pb8h1_base_fn:
                                 		.STACK	_u8g_dev_pb8h1_base_fn=32
                                 ;     275 
                                 ;     276 #ifdef NEW_CODE
                                 ;     277 static void u8g_pb8h1_Set8PixelState(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
                                 ;     278 {
                                 ;     279   register uint8_t pixel = arg_pixel->pixel;
                                 ;     280   struct u8g_pb_h1_struct s;
                                 ;     281   uint8_t cnt;
                                 ;     282   u8g_pb8h1_state_init(&s, b, arg_pixel->x, arg_pixel->y);
                                 ;     283   cnt = 8;
                                 ;     284   switch( arg_pixel->dir )
                                 ;     285   {
                                 ;     286     case 0: 
                                 ;     287       do
                                 ;     288       {
                                 ;     289 	if ( s.x < b->width )
                                 ;     290 	  if ( pixel & 128 )
                                 ;     291 	    u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
                                 ;     292 	u8g_pb8h1_state_right(&s); 
                                 ;     293 	pixel <<= 1;
                                 ;     294 	cnt--;
                                 ;     295       } while( cnt > 0 && pixel != 0  );
                                 ;     296       break;
                                 ;     297     case 1: 
                                 ;     298       do
                                 ;     299       {
                                 ;     300 	if ( s.y >= b->p.page_y0 )
                                 ;     301 	  if ( s.y <= b->p.page_y1 )
                                 ;     302 	    if ( pixel & 128 )
                                 ;     303 	      u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
                                 ;     304 	u8g_pb8h1_state_down(&s); 
                                 ;     305 	pixel <<= 1;
                                 ;     306 	cnt--;
                                 ;     307       } while( cnt > 0 && pixel != 0  );
                                 ;     308       break;
                                 ;     309     case 2: 
                                 ;     310       do
                                 ;     311       {
                                 ;     312 	if ( s.x < b->width )
                                 ;     313 	  if ( pixel & 128 )
                                 ;     314 	    u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
                                 ;     315 	u8g_pb8h1_state_left(&s); 
                                 ;     316 	pixel <<= 1;
                                 ;     317 	cnt--;
                                 ;     318       } while( cnt > 0 && pixel != 0 );
                                 ;     319       break;
                                 ;     320     case 3: 	
                                 ;     321       do
                                 ;     322       {
                                 ;     323 	if ( s.y >= b->p.page_y0 )
                                 ;     324 	  if ( s.y <= b->p.page_y1 )
                                 ;     325 	    if ( pixel & 128 )
                                 ;     326 	      u8g_pb8h1_state_set_pixel(&s, arg_pixel->color);
                                 ;     327 	u8g_pb8h1_state_up(&s); 
                                 ;     328 	pixel <<= 1;
                                 ;     329 	cnt--;
                                 ;     330       } while( cnt > 0 && pixel != 0  );
                                 ;     331       break;
                                 ;     332   }
                                 ;     333 }
                                 ;     334 #endif
                                 ;     335 
                                 ;     336 uint8_t u8g_dev_pb8h1_base_fn(u8g_t *u8g, u8g_dev_t *dev, uint8_t msg, void *arg)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",336
0000018B 7100E4                  		ADD #0FFFFFFE4H, R0
0000018E A181                    		MOV.L R1, 18H[R0]
00000190 A10A                    		MOV.L R2, 14H[R0]
00000192 848B                    		MOV.B R3, 13H[R0]
00000194 A08C                    		MOV.L R4, 0CH[R0]
                                 ;     337 {
                                 ;     338   u8g_pb_t *pb = (u8g_pb_t *)(dev->dev_mem);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",338
00000196 A909                    		MOV.L 14H[R0], R1
00000198 E5100101                		MOV.L 04H[R1], 04H[R0]
0000019C                         L65:	; entry.split
                                 ;     339   switch(msg)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",339
0000019C B489                    		MOVU.B 13H[R0], R1
0000019E 755114                  		CMP #14H, R1
000001A1 20rr                    		BEQ L76
000001A3                         L66:	; entry.split
000001A3 755115                  		CMP #15H, R1
000001A6 20rr                    		BEQ L78
000001A8                         L67:	; entry.split
000001A8 755117                  		CMP #17H, R1
000001AB 20rr                    		BEQ L81
000001AD                         L68:	; entry.split
000001AD 755132                  		CMP #32H, R1
000001B0 20rr                    		BEQ L75
000001B2                         L69:	; entry.split
000001B2 755148                  		CMP #48H, R1
000001B5 20rr                    		BEQ L84
000001B7                         L70:	; entry.split
000001B7 755146                  		CMP #46H, R1
000001BA 20rr                    		BEQ L82
000001BC                         L71:	; entry.split
000001BC 755147                  		CMP #47H, R1
000001BF 20rr                    		BEQ L83
000001C1                         L72:	; entry.split
000001C1 75513B                  		CMP #3BH, R1
000001C4 21rr                    		BNE L85
000001C6                         L73:	; bb12
                                 ;     340   {
                                 ;     341     case U8G_DEV_MSG_SET_8PIXEL:
                                 ;     342 #ifdef NEW_CODE
                                 ;     343       if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
                                 ;     344         u8g_pb8h1_Set8PixelState(pb, (u8g_dev_arg_pixel_t *)arg);
                                 ;     345 #else
                                 ;     346       if ( u8g_pb_Is8PixelVisible(pb, (u8g_dev_arg_pixel_t *)arg) )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",346
000001C6 A88A                    		MOV.L 0CH[R0], R2
000001C8 A809                    		MOV.L 04H[R0], R1
000001CA 05rrrrrr             A  		BSR _u8g_pb_Is8PixelVisible
000001CE 6101                    		CMP #00H, R1
000001D0 20rr                    		BEQ L85
000001D2                         L74:	; bb13
                                 ;     347         u8g_pb8h1_Set8PixelOpt2(pb, (u8g_dev_arg_pixel_t *)arg);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",347
000001D2 A88A                    		MOV.L 0CH[R0], R2
000001D4 A809                    		MOV.L 04H[R0], R1
000001D6 39rrrr               W  		BSR _u8g_pb8h1_Set8PixelOpt2
000001D9 2Err                 B  		BRA L85
000001DB                         L75:	; bb25
                                 ;     348 #endif
                                 ;     349       break;
                                 ;     350     case U8G_DEV_MSG_SET_PIXEL:
                                 ;     351       u8g_pb8h1_SetPixel(pb, (u8g_dev_arg_pixel_t *)arg);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",351
000001DB A88A                    		MOV.L 0CH[R0], R2
000001DD A809                    		MOV.L 04H[R0], R1
000001DF 39rrrr               W  		BSR _u8g_pb8h1_SetPixel
000001E2 2Err                 B  		BRA L85
000001E4                         L76:	; bb31
                                 ;     352       break;
                                 ;     353     case U8G_DEV_MSG_INIT:
                                 ;     354       break;
                                 ;     355     case U8G_DEV_MSG_STOP:
                                 ;     356       break;
                                 ;     357     case U8G_DEV_MSG_PAGE_FIRST:
                                 ;     358       u8g_pb_Clear(pb);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",358
000001E4 A809                    		MOV.L 04H[R0], R1
000001E6 05rrrrrr             A  		BSR _u8g_pb_Clear
000001EA                         L77:	; bb31.split
                                 ;     359       u8g_page_First(&(pb->p));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",359
000001EA A809                    		MOV.L 04H[R0], R1
000001EC 05rrrrrr             A  		BSR _u8g_page_First
000001F0 2Err                 B  		BRA L85
000001F2                         L78:	; bb36
                                 ;     360       break;
                                 ;     361     case U8G_DEV_MSG_PAGE_NEXT:
                                 ;     362       if ( u8g_page_Next(&(pb->p)) == 0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",362
000001F2 A809                    		MOV.L 04H[R0], R1
000001F4 05rrrrrr             A  		BSR _u8g_page_Next
000001F8 6101                    		CMP #00H, R1
000001FA 18                   S  		BNE L80
000001FB                         L79:	; bb37
                                 ;     363         return 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",363
000001FB 3C0300                  		MOV.B #00H, 03H[R0]
000001FE 2Err                 B  		BRA L86
00000200                         L80:	; bb46
                                 ;     364       u8g_pb_Clear(pb);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",364
00000200 A809                    		MOV.L 04H[R0], R1
00000202 05rrrrrr             A  		BSR _u8g_pb_Clear
00000206 2Err                 B  		BRA L85
00000208                         L81:	; bb48
                                 ;     365       break;
                                 ;     366 #ifdef U8G_DEV_MSG_IS_BBX_INTERSECTION
                                 ;     367     case U8G_DEV_MSG_IS_BBX_INTERSECTION:
                                 ;     368       return u8g_pb_IsIntersection(pb, (u8g_dev_arg_bbx_t *)arg);
                                 ;     369 #endif
                                 ;     370     case U8G_DEV_MSG_GET_PAGE_BOX:
                                 ;     371       u8g_pb_GetPageBox(pb, (u8g_box_t *)arg);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",371
00000208 A88A                    		MOV.L 0CH[R0], R2
0000020A A809                    		MOV.L 04H[R0], R1
0000020C 05rrrrrr             A  		BSR _u8g_pb_GetPageBox
00000210 2Err                 B  		BRA L85
00000212                         L82:	; bb52
                                 ;     372       break;
                                 ;     373     case U8G_DEV_MSG_GET_WIDTH:
                                 ;     374       *((u8g_uint_t *)arg) = pb->width;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",374
00000212 A809                    		MOV.L 04H[R0], R1
00000214 A88A                    		MOV.L 0CH[R0], R2
00000216 C11205                  		MOV.B 05H[R1], [R2]
00000219 2Err                 B  		BRA L85
0000021B                         L83:	; bb57
                                 ;     375       break;
                                 ;     376     case U8G_DEV_MSG_GET_HEIGHT:
                                 ;     377       *((u8g_uint_t *)arg) = pb->p.total_height;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",377
0000021B A809                    		MOV.L 04H[R0], R1
0000021D A88A                    		MOV.L 0CH[R0], R2
0000021F C11201                  		MOV.B 01H[R1], [R2]
00000222 08                   S  		BRA L85
00000223                         L84:	; bb65
                                 ;     378       break;
                                 ;     379     case U8G_DEV_MSG_SET_COLOR_ENTRY:
                                 ;     380       break;
                                 ;     381     case U8G_DEV_MSG_SET_XY_CB:
                                 ;     382       break;
                                 ;     383     case U8G_DEV_MSG_GET_MODE:
                                 ;     384       return U8G_MODE_BW;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",384
00000223 3C0301                  		MOV.B #01H, 03H[R0]
00000226 08                   S  		BRA L86
00000227                         L85:	; bb67
                                 ;     385   }
                                 ;     386   return 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",386
00000227 3C0301                  		MOV.B #01H, 03H[R0]
0000022A                         L86:	; bb69
0000022A C500030B                		MOV.B 03H[R0], 0BH[R0]
                                 ;     387 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb8h1.c",387
0000022E B289                    		MOVU.B 0BH[R0], R1
00000230 6707                    		RTSD #1CH
                                 ;     388  
                                 ;     389   
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00833   LINES

Section List

Attr         Size               Name
CODE     0000000562(00000232H)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx124\$ccrx\u8g_pb8h1.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01_master\MT01_build\u8g_pb8h1.lst
-output=C:\Workspace\e2studio\git\MT01_master\MT01_build\src\Display\u8g_pb8h1.obj
