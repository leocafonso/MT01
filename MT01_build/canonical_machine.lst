* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Mon Mar 20 17:54:04 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  20-Mar-2017 17:54:04
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=canonical_machine.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx\src,C:/Workspace/e2studio/
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=canonical_machine.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=1,MOBILE=0,FREE_RTOS_PP
                                 ;canonical_machine.c
                                 
                                 		.glb	__Stderr
                                 		.glb	_cfgArray
                                 		.glb	_arc
                                 		.glb	_mr
                                 		.glb	_iif_func_cycleStop
                                 		.glb	_cm
                                 		.glb	_fmt_vel
                                 		.glb	_fmt_feed
                                 		.glb	_fmt_line
                                 		.glb	_fmt_stat
                                 		.glb	_fmt_macs
                                 		.glb	_fmt_cycs
                                 		.glb	_fmt_mots
                                 		.glb	_fmt_hold
                                 		.glb	_fmt_home
                                 		.glb	_fmt_unit
                                 		.glb	_fmt_coor
                                 		.glb	_fmt_momo
                                 		.glb	_fmt_plan
                                 		.glb	_fmt_path
                                 		.glb	_fmt_dist
                                 		.glb	_fmt_frmo
                                 		.glb	_fmt_tool
                                 		.glb	_fmt_pos
                                 		.glb	_fmt_mpo
                                 		.glb	_fmt_ofs
                                 		.glb	_fmt_hom
                                 		.glb	_fmt_gpl
                                 		.glb	_fmt_gun
                                 		.glb	_fmt_gco
                                 		.glb	_fmt_gpa
                                 		.glb	_fmt_gdi
                                 		.glb	_fmt_ja
                                 		.glb	_fmt_ct
                                 		.glb	_fmt_sl
                                 		.glb	_fmt_ml
                                 		.glb	_fmt_ma
                                 		.glb	_fmt_ms
                                 		.glb	_cm_get_combined_state
                                 		.glb	_cm_get_machine_state
                                 		.glb	_cm_get_cycle_state
                                 		.glb	_cm_get_motion_state
                                 		.glb	_cm_get_hold_state
                                 		.glb	_cm_get_homing_state
                                 		.glb	_cm_set_motion_state
                                 		.glb	_cm_get_linenum
                                 		.glb	_cm_get_motion_mode
                                 		.glb	_cm_get_coord_system
                                 		.glb	_cm_get_units_mode
                                 		.glb	_cm_get_select_plane
                                 		.glb	_cm_get_path_control
                                 		.glb	_cm_get_distance_mode
                                 		.glb	_cm_get_feed_rate_mode
                                 		.glb	_cm_get_tool
                                 		.glb	_cm_get_spindle_mode
                                 		.glb	_cm_get_block_delete_switch
                                 		.glb	_cm_get_runtime_busy
                                 		.glb	_mp_get_runtime_busy
                                 		.glb	_cm_get_feed_rate
                                 		.glb	_cm_set_motion_mode
                                 		.glb	_cm_set_spindle_mode
                                 		.glb	_cm_set_spindle_speed_parameter
                                 		.glb	_cm_set_tool_number
                                 		.glb	_cm_set_absolute_override
                                 		.glb	_cm_set_model_linenum
                                 		.glb	_nv_add_object
                                 		.glb	_cm_get_active_coord_offset
                                 		.glb	_cm_get_work_offset
                                 		.glb	_cm_set_work_offsets
                                 		.glb	_cm_get_absolute_position
                                 		.glb	_mp_get_runtime_absolute_position
                                 		.glb	_cm_get_work_position
                                 		.glb	_mp_get_runtime_work_position
                                 		.glb	_cm_finalize_move
                                 		.glb	_cm_update_model_position_from_runtime
                                 		.glb	_cm_deferred_write_callback
                                 		.glb	_sprintf
                                 		.glb	_nv_get_index
                                 		.glb	_nv_persist
                                 		.glb	_cm_set_model_target
                                 		.glb	_cm_test_soft_limits
                                 		.glb	_canonical_machine_init
                                 		.glb	_canonical_machine_init_assertions
                                 		.glb	_cm_spindle_init
                                 		.glb	_cm_arc_init
                                 		.glb	_canonical_machine_test_assertions
                                 		.glb	_cm_soft_alarm
                                 		.glb	_rpt_exception
                                 		.glb	_cm_clear
                                 		.glb	_cm_hard_alarm
                                 		.glb	_cm_select_plane
                                 		.glb	_cm_set_units_mode
                                 		.glb	_cm_set_distance_mode
                                 		.glb	_stepper_init
                                 		.glb	_cm_spindle_control
                                 		.glb	_cm_set_coord_offsets
                                 		.glb	_cm_set_coord_system
                                 		.glb	_mp_queue_command
                                 		.glb	_mp_set_runtime_work_offset
                                 		.glb	_cm_set_position
                                 		.glb	_mp_set_planner_position
                                 		.glb	_mp_set_runtime_position
                                 		.glb	_mp_set_steps_to_runtime_position
                                 		.glb	_cm_set_absolute_origin
                                 		.glb	_cm_set_origin_offsets
                                 		.glb	_cm_reset_origin_offsets
                                 		.glb	_cm_suspend_origin_offsets
                                 		.glb	_cm_resume_origin_offsets
                                 		.glb	_cm_straight_traverse
                                 		.glb	_mp_aline
                                 		.glb	_cm_set_g28_position
                                 		.glb	_cm_goto_g28_position
                                 		.glb	_mp_get_planner_buffers_available
                                 		.glb	_cm_set_g30_position
                                 		.glb	_cm_goto_g30_position
                                 		.glb	_cm_set_feed_rate
                                 		.glb	_cm_set_feed_rate_mode
                                 		.glb	_cm_set_path_control
                                 		.glb	_cm_dwell
                                 		.glb	_mp_dwell
                                 		.glb	_cm_straight_feed
                                 		.glb	_cm_select_tool
                                 		.glb	_cm_change_tool
                                 		.glb	_cm_mist_coolant_control
                                 		.glb	_cm_flood_coolant_control
                                 		.glb	_cm_override_enables
                                 		.glb	_cm_feed_rate_override_enable
                                 		.glb	_cm_feed_rate_override_factor
                                 		.glb	_cm_traverse_override_enable
                                 		.glb	_cm_traverse_override_factor
                                 		.glb	_cm_spindle_override_enable
                                 		.glb	_cm_spindle_override_factor
                                 		.glb	_cm_message
                                 		.glb	_nv_add_string
                                 		.glb	_cm_request_feedhold
                                 		.glb	_cm_request_queue_flush
                                 		.glb	_cm_request_cycle_start
                                 		.glb	_cm_feedhold_sequencing_callback
                                 		.glb	_cm_queue_flush
                                 		.glb	_cm_cycle_start
                                 		.glb	_mp_end_hold
                                 		.glb	_mp_flush_planner
                                 		.glb	_qr_request_queue_report
                                 		.glb	_rx_request_rx_report
                                 		.glb	_mp_zero_segment_velocity
                                 		.glb	_sr_request_status_report
                                 		.glb	_qr_init_queue_report
                                 		.glb	_cm_cycle_end
                                 		.glb	_cm_program_stop
                                 		.glb	_cm_optional_program_stop
                                 		.glb	_cm_program_end
                                 		.glb	_cm_get_axis_char
                                 		.glb	_strchr
                                 		.glb	__get_msg_helper
                                 		.glb	_nv_copy_string
                                 		.glb	_cm_get_stat
                                 		.glb	_cm_get_macs
                                 		.glb	_cm_get_cycs
                                 		.glb	_cm_get_mots
                                 		.glb	_cm_get_hold
                                 		.glb	_cm_get_home
                                 		.glb	_cm_get_unit
                                 		.glb	_cm_get_coor
                                 		.glb	_cm_get_momo
                                 		.glb	_cm_get_plan
                                 		.glb	_cm_get_path
                                 		.glb	_cm_get_dist
                                 		.glb	_cm_get_frmo
                                 		.glb	_cm_get_toolv
                                 		.glb	_cm_get_mline
                                 		.glb	_cm_get_line
                                 		.glb	_cm_get_vel
                                 		.glb	_mp_get_runtime_velocity
                                 		.glb	_cm_get_feed
                                 		.glb	_cm_get_pos
                                 		.glb	_cm_get_mpo
                                 		.glb	_cm_get_ofs
                                 		.glb	_cm_get_am
                                 		.glb	_get_ui8
                                 		.glb	_cm_set_am
                                 		.glb	_set_ui8
                                 		.glb	_cm_get_axis_jerk
                                 		.glb	_cm_set_axis_jerk
                                 		.glb	_cm_set_xjm
                                 		.glb	_set_flu
                                 		.glb	_cm_set_xjh
                                 		.glb	_cm_run_qf
                                 		.glb	_cm_run_home
                                 		.glb	_cm_homing_cycle_start
                                 		.glb	_cm_dam
                                 		.glb	_printf
                                 		.glb	_cm_get_jogging_dest
                                 		.glb	_cm_run_jogx
                                 		.glb	_set_flt
                                 		.glb	_cm_jogging_cycle_start
                                 		.glb	_cm_run_jogy
                                 		.glb	_cm_run_jogz
                                 		.glb	_cm_run_joga
                                 		.glb	_cm_print_vel
                                 		.glb	_cm_print_feed
                                 		.glb	_cm_print_line
                                 		.glb	_cm_print_stat
                                 		.glb	_cm_print_macs
                                 		.glb	_cm_print_cycs
                                 		.glb	_cm_print_mots
                                 		.glb	_cm_print_hold
                                 		.glb	_cm_print_home
                                 		.glb	_cm_print_unit
                                 		.glb	_cm_print_coor
                                 		.glb	_cm_print_momo
                                 		.glb	_cm_print_plan
                                 		.glb	_cm_print_path
                                 		.glb	_cm_print_dist
                                 		.glb	_cm_print_frmo
                                 		.glb	_cm_print_tool
                                 		.glb	_text_print_flt_units
                                 		.glb	_text_print_int
                                 		.glb	_text_print_str
                                 		.glb	_cm_print_gpl
                                 		.glb	_cm_print_gun
                                 		.glb	_cm_print_gco
                                 		.glb	_cm_print_gpa
                                 		.glb	_cm_print_gdi
                                 		.glb	_cm_print_ja
                                 		.glb	_cm_print_ct
                                 		.glb	_cm_print_sl
                                 		.glb	_text_print_ui8
                                 		.glb	_cm_print_ml
                                 		.glb	_cm_print_ma
                                 		.glb	_cm_print_ms
                                 		.glb	_fprintf
                                 		.glb	_cm_print_am
                                 		.glb	_cm_print_fr
                                 		.glb	_cm_print_vm
                                 		.glb	_cm_print_tm
                                 		.glb	_cm_print_tn
                                 		.glb	_cm_print_jm
                                 		.glb	_cm_print_jh
                                 		.glb	_cm_print_jd
                                 		.glb	_cm_print_ra
                                 		.glb	_cm_print_sn
                                 		.glb	_cm_print_sx
                                 		.glb	_cm_print_sv
                                 		.glb	_cm_print_lv
                                 		.glb	_cm_print_lb
                                 		.glb	_cm_print_zb
                                 		.glb	_cm_print_cofs
                                 		.glb	_cm_print_cpos
                                 		.glb	_cm_print_pos
                                 		.glb	_cm_print_mpo
                                 		.glb	_cm_print_ofs
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _cm_get_combined_state:
                                 		.STACK	_cm_get_combined_state=8
                                 ;       1 /*
                                 ;       2  * canonical_machine.c - rs274/ngc canonical machine.
                                 ;       3  * This file is part of the TinyG project
                                 ;       4  *
                                 ;       5  * Copyright (c) 2010 - 2015 Alden S Hart, Jr.
                                 ;       6  * Copyright (c) 2014 - 2015 Robert Giseburt
                                 ;       7  *
                                 ;       8  * This file ("the software") is free software: you can redistribute it and/or modify
                                 ;       9  * it under the terms of the GNU General Public License, version 2 as published by the
                                 ;      10  * Free Software Foundation. You should have received a copy of the GNU General Public
                                 ;      11  * License, version 2 along with the software.  If not, see <http://www.gnu.org/licenses/>.
                                 ;      12  *
                                 ;      13  * As a special exception, you may use this file as part of a software library without
                                 ;      14  * restriction. Specifically, if other files instantiate templates or use macros or
                                 ;      15  * inline functions from this file, or you compile this file and link it with  other
                                 ;      16  * files to produce an executable, this file does not by itself cause the resulting
                                 ;      17  * executable to be covered by the GNU General Public License. This exception does not
                                 ;      18  * however invalidate any other reasons why the executable file might be covered by the
                                 ;      19  * GNU General Public License.
                                 ;      20  *
                                 ;      21  * THE SOFTWARE IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY
                                 ;      22  * WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
                                 ;      23  * OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT
                                 ;      24  * SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
                                 ;      25  * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF
                                 ;      26  * OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
                                 ;      27  */
                                 ;      28 /*
                                 ;      29  * 	This code is a loose implementation of Kramer, Proctor and Messina's canonical
                                 ;      30  *	machining functions as described in the NIST RS274/NGC v3
                                 ;      31  *
                                 ;      32  *	The canonical machine is the layer between the Gcode parser and the motion control
                                 ;      33  *	code for a specific robot. It keeps state and executes commands - passing the
                                 ;      34  *	stateless commands to the motion planning layer.
                                 ;      35  */
                                 ;      36 /* --- System state contexts - Gcode models ---
                                 ;      37  *
                                 ;      38  *	Useful reference for doing C callbacks http://www.newty.de/fpt/fpt.html
                                 ;      39  *
                                 ;      40  *	There are 3 temporal contexts for system state:
                                 ;      41  *	  - The gcode model in the canonical machine (the MODEL context, held in gm)
                                 ;      42  *	  - The gcode model used by the planner (PLANNER context, held in bf's and mm)
                                 ;      43  *	  - The gcode model used during motion for reporting (RUNTIME context, held in mr)
                                 ;      44  *
                                 ;      45  *	It's a bit more complicated than this. The 'gm' struct contains the core Gcode model
                                 ;      46  *	context. This originates in the canonical machine and is copied to each planner buffer
                                 ;      47  *	(bf buffer) during motion planning. Finally, the gm context is passed to the runtime
                                 ;      48  *	(mr) for the RUNTIME context. So at last count the Gcode model exists in as many as
                                 ;      49  *	30 copies in the system. (1+28+1)
                                 ;      50  *
                                 ;      51  *	Depending on the need, any one of these contexts may be called for reporting or by
                                 ;      52  *	a function. Most typically, all new commends from the gcode parser work form the MODEL
                                 ;      53  *	context, and status reports pull from the RUNTIME while in motion, and from MODEL when
                                 ;      54  *	at rest. A convenience is provided in the ACTIVE_MODEL pointer to point to the right
                                 ;      55  *	context.
                                 ;      56  */
                                 ;      57 /* --- Synchronizing command execution ---
                                 ;      58  *
                                 ;      59  *	Some gcode commands only set the MODEL state for interpretation of the current Gcode
                                 ;      60  *	block. For example, cm_set_feed_rate(). This sets the MODEL so the move time is
                                 ;      61  *	properly calculated for the current (and subsequent) blocks, so it's effected
                                 ;      62  *	immediately.
                                 ;      63  *
                                 ;      64  *	"Synchronous commands" are commands that affect the runtime need to be synchronized
                                 ;      65  *	with movement. Examples include G4 dwells, program stops and ends, and most M commands.
                                 ;      66  *	These are queued into the planner queue and execute from the queue. Synchronous commands
                                 ;      67  *	work like this:
                                 ;      68  *
                                 ;      69  *	  - Call the cm_xxx_xxx() function which will do any input validation and return an
                                 ;      70  *		error if it detects one.
                                 ;      71  *
                                 ;      72  *	  - The cm_ function calls mp_queue_command(). Arguments are a callback to the _exec_...()
                                 ;      73  *		function, which is the runtime execution routine, and any arguments that are needed
                                 ;      74  *		by the runtime. See typedef for *exec in planner.h for details
                                 ;      75  *
                                 ;      76  *	  - mp_queue_command() stores the callback and the args in a planner buffer.
                                 ;      77  *
                                 ;      78  *	  - When planner execution reaches the buffer it executes the callback w/ the args.
                                 ;      79  *		Take careful note that the callback executes under an interrupt, so beware of
                                 ;      80  *		variables that may need to be volatile.
                                 ;      81  *
                                 ;      82  *	Note:
                                 ;      83  *	  - The synchronous command execution mechanism uses 2 vectors in the bf buffer to store
                                 ;      84  *		and return values for the callback. It's obvious, but impractical to pass the entire
                                 ;      85  *		bf buffer to the callback as some of these commands are actually executed locally
                                 ;      86  *		and have no buffer.
                                 ;      87  */
                                 ;      88 
                                 ;      89 #include "tinyg.h"			// #1
                                 ;      90 #include "config.h"			// #2
                                 ;      91 #include "text_parser.h"
                                 ;      92 #include "canonical_machine.h"
                                 ;      93 #include "plan_arc.h"
                                 ;      94 #include "planner.h"
                                 ;      95 #include "stepper.h"
                                 ;      96 #include "encoder.h"
                                 ;      97 #include "spindle.h"
                                 ;      98 #include "report.h"
                                 ;      99 #include "gpio.h"
                                 ;     100 #include "switch.h"
                                 ;     101 #include "hardware.h"
                                 ;     102 #include "util.h"
                                 ;     103 #include "xio.h"			// for serial queue flush
                                 ;     104 #include "macros.h"
                                 ;     105 #include "controller.h"
                                 ;     106 
                                 ;     107 #include "interpreter_if.h"
                                 ;     108 /*
                                 ;     109 #ifdef __cplusplus
                                 ;     110 extern "C"{
                                 ;     111 #endif
                                 ;     112 */
                                 ;     113 /***********************************************************************************
                                 ;     114  **** STRUCTURE ALLOCATIONS ********************************************************
                                 ;     115  ***********************************************************************************/
                                 ;     116 
                                 ;     117 cmSingleton_t cm;		// canonical machine controller singleton
                                 ;     118 
                                 ;     119 /***********************************************************************************
                                 ;     120  **** GENERIC STATIC FUNCTIONS AND VARIABLES ***************************************
                                 ;     121  ***********************************************************************************/
                                 ;     122 
                                 ;     123 // command execution callbacks from planner queue
                                 ;     124 static void _exec_offset(float *value, float *flag);
                                 ;     125 static void _exec_change_tool(float *value, float *flag);
                                 ;     126 static void _exec_select_tool(float *value, float *flag);
                                 ;     127 static void _exec_mist_coolant_control(float *value, float *flag);
                                 ;     128 static void _exec_flood_coolant_control(float *value, float *flag);
                                 ;     129 static void _exec_absolute_origin(float *value, float *flag);
                                 ;     130 static void _exec_program_finalize(float *value, float *flag);
                                 ;     131 
                                 ;     132 static int8_t _get_axis(const index_t index);
                                 ;     133 static int8_t _get_axis_type(const index_t index);
                                 ;     134 
                                 ;     135 /***********************************************************************************
                                 ;     136  **** CODE *************************************************************************
                                 ;     137  ***********************************************************************************/
                                 ;     138 
                                 ;     139 /********************************
                                 ;     140  * Internal getters and setters *
                                 ;     141  ********************************/
                                 ;     142 /*
                                 ;     143  * Canonical Machine State functions
                                 ;     144  *
                                 ;     145  * cm_get_combined_state() - combines raw states into something a user might want to see
                                 ;     146  * cm_get_machine_state()
                                 ;     147  * cm_get_motion_state()
                                 ;     148  * cm_get_cycle_state()
                                 ;     149  * cm_get_hold_state()
                                 ;     150  * cm_get_homing_state()
                                 ;     151  * cm_set_motion_state() - adjusts active model pointer as well
                                 ;     152  */
                                 ;     153 uint8_t cm_get_combined_state()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",153
00000000 6040                    		SUB #04H, R0
                                 ;     154 {
                                 ;     155 	if (cm.cycle_state == CYCLE_OFF) { cm.combined_state = cm.machine_state;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",155
00000002 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000008 5AEE1E02                		MOVU.B 021EH[R14], R14
0000000C 610E                    		CMP #00H, R14
0000000E 21rr                    		BNE L37
00000010                         L36:	; bb1
00000010 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000016 CAEE1D021C02            		MOV.B 021DH[R14], 021CH[R14]
0000001C 38rrrr               W  		BRA L47
0000001F                         L37:	; bb4
                                 ;     156 	else if (cm.cycle_state == CYCLE_PROBE) { cm.combined_state = COMBINED_PROBE;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",156
0000001F FBE2rrrrrrrr            		MOV.L #_cm, R14
00000025 5AEE1E02                		MOVU.B 021EH[R14], R14
00000029 612E                    		CMP #02H, R14
0000002B 21rr                    		BNE L39
0000002D                         L38:	; bb5
0000002D FBE2rrrrrrrr            		MOV.L #_cm, R14
00000033 FAE41C0207              		MOV.B #07H, 021CH[R14]
00000038 2Err                 B  		BRA L47
0000003A                         L39:	; bb7
                                 ;     157 	else if (cm.cycle_state == CYCLE_HOMING) { cm.combined_state = COMBINED_HOMING;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",157
0000003A FBE2rrrrrrrr            		MOV.L #_cm, R14
00000040 5AEE1E02                		MOVU.B 021EH[R14], R14
00000044 613E                    		CMP #03H, R14
00000046 21rr                    		BNE L41
00000048                         L40:	; bb8
00000048 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000004E FAE41C0209              		MOV.B #09H, 021CH[R14]
00000053 2Err                 B  		BRA L47
00000055                         L41:	; bb10
                                 ;     158 	else if (cm.cycle_state == CYCLE_JOG) { cm.combined_state = COMBINED_JOG;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",158
00000055 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000005B 5AEE1E02                		MOVU.B 021EH[R14], R14
0000005F 614E                    		CMP #04H, R14
00000061 21rr                    		BNE L43
00000063                         L42:	; bb11
00000063 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000069 FAE41C020A              		MOV.B #0AH, 021CH[R14]
0000006E 2Err                 B  		BRA L47
00000070                         L43:	; bb13
                                 ;     159 	else {
                                 ;     160 		if (cm.motion_state == MOTION_RUN) cm.combined_state = COMBINED_RUN;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",160
00000070 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000076 5AEE1F02                		MOVU.B 021FH[R14], R14
0000007A 611E                    		CMP #01H, R14
0000007C 21rr                    		BNE L45
0000007E                         L44:	; bb14
0000007E FBE2rrrrrrrr            		MOV.L #_cm, R14
00000084 FAE41C0205              		MOV.B #05H, 021CH[R14]
00000089                         L45:	; bb20
                                 ;     161 		if (cm.motion_state == MOTION_HOLD) cm.combined_state = COMBINED_HOLD;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",161
00000089 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000008F 5AEE1F02                		MOVU.B 021FH[R14], R14
00000093 612E                    		CMP #02H, R14
00000095 21rr                    		BNE L47
00000097                         L46:	; bb21
00000097 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000009D FAE41C0206              		MOV.B #06H, 021CH[R14]
000000A2                         L47:	; bb52
                                 ;     162 	}
                                 ;     163 	if (cm.machine_state == MACHINE_SHUTDOWN) { cm.combined_state = COMBINED_SHUTDOWN;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",163
000000A2 FBE2rrrrrrrr            		MOV.L #_cm, R14
000000A8 5AEE1D02                		MOVU.B 021DH[R14], R14
000000AC 616E                    		CMP #06H, R14
000000AE 21rr                    		BNE L49
000000B0                         L48:	; bb53
000000B0 FBE2rrrrrrrr            		MOV.L #_cm, R14
000000B6 FAE41C020B              		MOV.B #0BH, 021CH[R14]
000000BB                         L49:	; bb59
                                 ;     164 
                                 ;     165 	return cm.combined_state;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",165
000000BB FBE2rrrrrrrr            		MOV.L #_cm, R14
000000C1 C6E01C0203              		MOV.B 021CH[R14], 03H[R0]
000000C6 B089                    		MOVU.B 03H[R0], R1
000000C8                         L50:	; bb59.split
                                 ;     166 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",166
000000C8 5B11                    		MOVU.B R1, R1
000000CA 6701                    		RTSD #04H
000000CC                         _cm_get_machine_state:
                                 		.STACK	_cm_get_machine_state=8
                                 ;     167 
                                 ;     168 uint8_t cm_get_machine_state() { return cm.machine_state;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",168
000000CC 6040                    		SUB #04H, R0
000000CE FBE2rrrrrrrr            		MOV.L #_cm, R14
000000D4 C6E01D0203              		MOV.B 021DH[R14], 03H[R0]
000000D9 B089                    		MOVU.B 03H[R0], R1
000000DB 6701                    		RTSD #04H
000000DD                         _cm_get_cycle_state:
                                 		.STACK	_cm_get_cycle_state=8
                                 ;     169 uint8_t cm_get_cycle_state() { return cm.cycle_state;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",169
000000DD 6040                    		SUB #04H, R0
000000DF FBE2rrrrrrrr            		MOV.L #_cm, R14
000000E5 C6E01E0203              		MOV.B 021EH[R14], 03H[R0]
000000EA B089                    		MOVU.B 03H[R0], R1
000000EC 6701                    		RTSD #04H
000000EE                         _cm_get_motion_state:
                                 		.STACK	_cm_get_motion_state=8
                                 ;     170 uint8_t cm_get_motion_state() { return cm.motion_state;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",170
000000EE 6040                    		SUB #04H, R0
000000F0 FBE2rrrrrrrr            		MOV.L #_cm, R14
000000F6 C6E01F0203              		MOV.B 021FH[R14], 03H[R0]
000000FB B089                    		MOVU.B 03H[R0], R1
000000FD 6701                    		RTSD #04H
000000FF                         _cm_get_hold_state:
                                 		.STACK	_cm_get_hold_state=8
                                 ;     171 uint8_t cm_get_hold_state() { return cm.hold_state;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",171
000000FF 6040                    		SUB #04H, R0
00000101 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000107 C6E0200203              		MOV.B 0220H[R14], 03H[R0]
0000010C B089                    		MOVU.B 03H[R0], R1
0000010E 6701                    		RTSD #04H
00000110                         _cm_get_homing_state:
                                 		.STACK	_cm_get_homing_state=8
                                 ;     172 uint8_t cm_get_homing_state() { return cm.homing_state;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",172
00000110 6040                    		SUB #04H, R0
00000112 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000118 C6E0210203              		MOV.B 0221H[R14], 03H[R0]
0000011D B089                    		MOVU.B 03H[R0], R1
0000011F 6701                    		RTSD #04H
00000121                         _cm_set_motion_state:
                                 		.STACK	_cm_set_motion_state=8
                                 ;     173 
                                 ;     174 void cm_set_motion_state(uint8_t motion_state)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",174
00000121 6040                    		SUB #04H, R0
00000123 8089                    		MOV.B R1, 03H[R0]
                                 ;     175 {
                                 ;     176 	cm.motion_state = motion_state;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",176
00000125 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000012B CBE11F02                		MOV.B R1, 021FH[R14]
0000012F                         L57:	; entry.split
                                 ;     177 
                                 ;     178 	switch (motion_state) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",178
0000012F B089                    		MOVU.B 03H[R0], R1
00000131 6121                    		CMP #02H, R1
00000133 20rr                    		BEQ L62
00000135                         L58:	; entry.split
00000135 6111                    		CMP #01H, R1
00000137 20rr                    		BEQ L61
00000139                         L59:	; entry.split
00000139 6101                    		CMP #00H, R1
0000013B 21rr                    		BNE L63
0000013D                         L60:	; bb
                                 ;     179 		case (MOTION_STOP): { ACTIVE_MODEL = MODEL; break; }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",179
0000013D FBE2rrrrrrrr            		MOV.L #_cm, R14
00000143 72EF5402                		ADD #0254H, R14, R15
00000147 E7EF94                  		MOV.L R15, 0250H[R14]
0000014A 6701                    		RTSD #04H
0000014C                         L61:	; bb5
                                 ;     180 		case (MOTION_RUN):  { ACTIVE_MODEL = RUNTIME; break; }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",180
0000014C FBE2rrrrrrrr            		MOV.L #_mr, R14
00000152 72EE4001                		ADD #0140H, R14
00000156 FBF2rrrrrrrr            		MOV.L #_cm, R15
0000015C E7FE94                  		MOV.L R14, 0250H[R15]
0000015F 6701                    		RTSD #04H
00000161                         L62:	; bb7
                                 ;     181 		case (MOTION_HOLD): { ACTIVE_MODEL = RUNTIME; break; }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",181
00000161 FBE2rrrrrrrr            		MOV.L #_mr, R14
00000167 72EE4001                		ADD #0140H, R14
0000016B FBF2rrrrrrrr            		MOV.L #_cm, R15
00000171 E7FE94                  		MOV.L R14, 0250H[R15]
00000174 6701                    		RTSD #04H
00000176                         L63:	; return
                                 ;     182 	}
                                 ;     183 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",183
00000176 6701                    		RTSD #04H
00000178                         _cm_get_linenum:
                                 		.STACK	_cm_get_linenum=12
                                 ;     184 
                                 ;     185 /***********************************
                                 ;     186  * Model State Getters and Setters *
                                 ;     187  ***********************************/
                                 ;     188 
                                 ;     189 /*	These getters and setters will work on any gm model with inputs:
                                 ;     190  *		MODEL 		(GCodeState_t *)&cm.gm		// absolute pointer from canonical machine gm model
                                 ;     191  *		PLANNER		(GCodeState_t *)&bf->gm		// relative to buffer *bf is currently pointing to
                                 ;     192  *		RUNTIME		(GCodeState_t *)&mr.gm		// absolute pointer from runtime mm struct
                                 ;     193  *		ACTIVE_MODEL cm.am						// active model pointer is maintained by state management
                                 ;     194  */
                                 ;     195 uint32_t cm_get_linenum(GCodeState_t *gcode_state) { return gcode_state->linenum;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",195
00000178 6080                    		SUB #08H, R0
0000017A A009                    		MOV.L R1, 04H[R0]
0000017C EC11                    		MOV.L [R1], R1
0000017E E301                    		MOV.L R1, [R0]
00000180 6702                    		RTSD #08H
00000182                         _cm_get_motion_mode:
                                 		.STACK	_cm_get_motion_mode=12
                                 ;     196 uint8_t cm_get_motion_mode(GCodeState_t *gcode_state) { return gcode_state->motion_mode;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",196
00000182 6080                    		SUB #08H, R0
00000184 A009                    		MOV.L R1, 04H[R0]
00000186 C5100403                		MOV.B 04H[R1], 03H[R0]
0000018A B089                    		MOVU.B 03H[R0], R1
0000018C 6702                    		RTSD #08H
0000018E                         _cm_get_coord_system:
                                 		.STACK	_cm_get_coord_system=12
                                 ;     197 uint8_t cm_get_coord_system(GCodeState_t *gcode_state) { return gcode_state->coord_system;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",197
0000018E 6080                    		SUB #08H, R0
00000190 A009                    		MOV.L R1, 04H[R0]
00000192 C5104F03                		MOV.B 4FH[R1], 03H[R0]
00000196 B089                    		MOVU.B 03H[R0], R1
00000198 6702                    		RTSD #08H
0000019A                         _cm_get_units_mode:
                                 		.STACK	_cm_get_units_mode=12
                                 ;     198 uint8_t cm_get_units_mode(GCodeState_t *gcode_state) { return gcode_state->units_mode;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",198
0000019A 6080                    		SUB #08H, R0
0000019C A009                    		MOV.L R1, 04H[R0]
0000019E C5104E03                		MOV.B 4EH[R1], 03H[R0]
000001A2 B089                    		MOVU.B 03H[R0], R1
000001A4 6702                    		RTSD #08H
000001A6                         _cm_get_select_plane:
                                 		.STACK	_cm_get_select_plane=12
                                 ;     199 uint8_t cm_get_select_plane(GCodeState_t *gcode_state) { return gcode_state->select_plane;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",199
000001A6 6080                    		SUB #08H, R0
000001A8 A009                    		MOV.L R1, 04H[R0]
000001AA C5104D03                		MOV.B 4DH[R1], 03H[R0]
000001AE B089                    		MOVU.B 03H[R0], R1
000001B0 6702                    		RTSD #08H
000001B2                         _cm_get_path_control:
                                 		.STACK	_cm_get_path_control=12
                                 ;     200 uint8_t cm_get_path_control(GCodeState_t *gcode_state) { return gcode_state->path_control;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",200
000001B2 6080                    		SUB #08H, R0
000001B4 A009                    		MOV.L R1, 04H[R0]
000001B6 C5105103                		MOV.B 51H[R1], 03H[R0]
000001BA B089                    		MOVU.B 03H[R0], R1
000001BC 6702                    		RTSD #08H
000001BE                         _cm_get_distance_mode:
                                 		.STACK	_cm_get_distance_mode=12
                                 ;     201 uint8_t cm_get_distance_mode(GCodeState_t *gcode_state) { return gcode_state->distance_mode;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",201
000001BE 6080                    		SUB #08H, R0
000001C0 A009                    		MOV.L R1, 04H[R0]
000001C2 C5105203                		MOV.B 52H[R1], 03H[R0]
000001C6 B089                    		MOVU.B 03H[R0], R1
000001C8 6702                    		RTSD #08H
000001CA                         _cm_get_feed_rate_mode:
                                 		.STACK	_cm_get_feed_rate_mode=12
                                 ;     202 uint8_t cm_get_feed_rate_mode(GCodeState_t *gcode_state) { return gcode_state->feed_rate_mode;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",202
000001CA 6080                    		SUB #08H, R0
000001CC A009                    		MOV.L R1, 04H[R0]
000001CE C5104C03                		MOV.B 4CH[R1], 03H[R0]
000001D2 B089                    		MOVU.B 03H[R0], R1
000001D4 6702                    		RTSD #08H
000001D6                         _cm_get_tool:
                                 		.STACK	_cm_get_tool=12
                                 ;     203 uint8_t cm_get_tool(GCodeState_t *gcode_state) { return gcode_state->tool;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",203
000001D6 6080                    		SUB #08H, R0
000001D8 A009                    		MOV.L R1, 04H[R0]
000001DA C5105403                		MOV.B 54H[R1], 03H[R0]
000001DE B089                    		MOVU.B 03H[R0], R1
000001E0 6702                    		RTSD #08H
000001E2                         _cm_get_spindle_mode:
                                 		.STACK	_cm_get_spindle_mode=12
                                 ;     204 uint8_t cm_get_spindle_mode(GCodeState_t *gcode_state) { return gcode_state->spindle_mode;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",204
000001E2 6080                    		SUB #08H, R0
000001E4 A009                    		MOV.L R1, 04H[R0]
000001E6 C5105803                		MOV.B 58H[R1], 03H[R0]
000001EA B089                    		MOVU.B 03H[R0], R1
000001EC 6702                    		RTSD #08H
000001EE                         _cm_get_block_delete_switch:
                                 		.STACK	_cm_get_block_delete_switch=8
                                 ;     205 uint8_t	cm_get_block_delete_switch() { return cm.gmx.block_delete_switch;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",205
000001EE 6040                    		SUB #04H, R0
000001F0 FBE2rrrrrrrr            		MOV.L #_cm, R14
000001F6 C6E0200303              		MOV.B 0320H[R14], 03H[R0]
000001FB B089                    		MOVU.B 03H[R0], R1
000001FD 6701                    		RTSD #04H
000001FF                         _cm_get_runtime_busy:
                                 		.STACK	_cm_get_runtime_busy=8
                                 ;     206 uint8_t cm_get_runtime_busy() { return (mp_get_runtime_busy());}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",206
000001FF 6040                    		SUB #04H, R0
00000201 05rrrrrr             A  		BSR _mp_get_runtime_busy
00000205 8089                    		MOV.B R1, 03H[R0]
00000207 B089                    		MOVU.B 03H[R0], R1
00000209 6701                    		RTSD #04H
0000020B                         _cm_get_feed_rate:
                                 		.STACK	_cm_get_feed_rate=12
                                 ;     207 
                                 ;     208 float cm_get_feed_rate(GCodeState_t *gcode_state) { return gcode_state->feed_rate;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",208
0000020B 6080                    		SUB #08H, R0
0000020D A009                    		MOV.L R1, 04H[R0]
0000020F AC11                    		MOV.L 40H[R1], R1
00000211 E301                    		MOV.L R1, [R0]
00000213 6702                    		RTSD #08H
00000215                         _cm_set_motion_mode:
                                 		.STACK	_cm_set_motion_mode=12
                                 ;     209 
                                 ;     210 void cm_set_motion_mode(GCodeState_t *gcode_state, uint8_t motion_mode) { gcode_state->motion_mode = motion_mode;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",210
00000215 6080                    		SUB #08H, R0
00000217 A009                    		MOV.L R1, 04H[R0]
00000219 808A                    		MOV.B R2, 03H[R0]
0000021B A809                    		MOV.L 04H[R0], R1
0000021D 8112                    		MOV.B R2, 04H[R1]
0000021F 6702                    		RTSD #08H
00000221                         _cm_set_spindle_mode:
                                 		.STACK	_cm_set_spindle_mode=12
                                 ;     211 void cm_set_spindle_mode(GCodeState_t *gcode_state, uint8_t spindle_mode) { gcode_state->spindle_mode = spindle_mode;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",211
00000221 6080                    		SUB #08H, R0
00000223 A009                    		MOV.L R1, 04H[R0]
00000225 808A                    		MOV.B R2, 03H[R0]
00000227 A809                    		MOV.L 04H[R0], R1
00000229 C71258                  		MOV.B R2, 58H[R1]
0000022C 6702                    		RTSD #08H
0000022E                         _cm_set_spindle_speed_parameter:
                                 		.STACK	_cm_set_spindle_speed_parameter=12
                                 ;     212 void cm_set_spindle_speed_parameter(GCodeState_t *gcode_state, float speed) { gcode_state->spindle_speed = speed;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",212
0000022E 6080                    		SUB #08H, R0
00000230 A009                    		MOV.L R1, 04H[R0]
00000232 E302                    		MOV.L R2, [R0]
00000234 A809                    		MOV.L 04H[R0], R1
00000236 A41A                    		MOV.L R2, 44H[R1]
00000238 6702                    		RTSD #08H
0000023A                         _cm_set_tool_number:
                                 		.STACK	_cm_set_tool_number=12
                                 ;     213 void cm_set_tool_number(GCodeState_t *gcode_state, uint8_t tool) { gcode_state->tool = tool;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",213
0000023A 6080                    		SUB #08H, R0
0000023C A009                    		MOV.L R1, 04H[R0]
0000023E 808A                    		MOV.B R2, 03H[R0]
00000240 A809                    		MOV.L 04H[R0], R1
00000242 C71254                  		MOV.B R2, 54H[R1]
00000245 6702                    		RTSD #08H
00000247                         _cm_set_absolute_override:
                                 		.STACK	_cm_set_absolute_override=12
                                 ;     214 
                                 ;     215 void cm_set_absolute_override(GCodeState_t *gcode_state, uint8_t absolute_override)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",215
00000247 6080                    		SUB #08H, R0
00000249 A009                    		MOV.L R1, 04H[R0]
0000024B 808A                    		MOV.B R2, 03H[R0]
                                 ;     216 {
                                 ;     217 	gcode_state->absolute_override = absolute_override;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",217
0000024D A809                    		MOV.L 04H[R0], R1
0000024F C71250                  		MOV.B R2, 50H[R1]
00000252                         L82:	; entry.split
                                 ;     218 	cm_set_work_offsets(MODEL);				// must reset offsets if you change absolute override
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",218
00000252 FB12rrrrrrrr            		MOV.L #_cm, R1
00000258 72115402                		ADD #0254H, R1
0000025C 39rrrr               W  		BSR _cm_set_work_offsets
0000025F 6702                    		RTSD #08H
00000261                         _cm_set_model_linenum:
                                 		.STACK	_cm_set_model_linenum=8
                                 ;     219 }
                                 ;     220 
                                 ;     221 void cm_set_model_linenum(uint32_t linenum)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",221
00000261 6040                    		SUB #04H, R0
00000263 E301                    		MOV.L R1, [R0]
                                 ;     222 {
                                 ;     223 	cm.gm.linenum = linenum;				// you must first set the model line number,
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",223
00000265 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000026B E7E195                  		MOV.L R1, 0254H[R14]
0000026E                         L84:	; entry.split
                                 ;     224 	nv_add_object((const char_t *)"n");	// then add the line number to the nv list
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",224
0000026E FB12rrrrrrrr            		MOV.L #_L10, R1
00000274 05rrrrrr             A  		BSR _nv_add_object
00000278 6701                    		RTSD #04H
0000027A                         _cm_get_active_coord_offset:
                                 		.STACK	_cm_get_active_coord_offset=20
                                 ;     225 }
                                 ;     226 
                                 ;     227 /***********************************************************************************
                                 ;     228  * COORDINATE SYSTEMS AND OFFSETS
                                 ;     229  * Functions to get, set and report coordinate systems and work offsets
                                 ;     230  * These functions are not part of the NIST defined functions
                                 ;     231  ***********************************************************************************/
                                 ;     232 /*
                                 ;     233  * Notes on Coordinate System and Offset functions
                                 ;     234  *
                                 ;     235  * All positional information in the canonical machine is kept as absolute coords and in
                                 ;     236  *	canonical units (mm). The offsets are only used to translate in and out of canonical form
                                 ;     237  *	during interpretation and response.
                                 ;     238  *
                                 ;     239  * Managing the coordinate systems & offsets is somewhat complicated. The following affect offsets:
                                 ;     240  *	- coordinate system selected. 1-9 correspond to G54-G59
                                 ;     241  *	- absolute override: forces current move to be interpreted in machine coordinates: G53 (system 0)
                                 ;     242  *	- G92 offsets are added "on top of" the coord system offsets -- if origin_offset_enable == true
                                 ;     243  *	- G28 and G30 moves; these are run in absolute coordinates
                                 ;     244  *
                                 ;     245  * The offsets themselves are considered static, are kept in cm, and are supposed to be persistent.
                                 ;     246  *
                                 ;     247  * To reduce complexity and data load the following is done:
                                 ;     248  *	- Full data for coordinates/offsets is only accessible by the canonical machine, not the downstream
                                 ;     249  *	- A fully resolved set of coord and G92 offsets, with per-move exceptions can be captured as "work_offsets"
                                 ;     250  *	- The core gcode context (gm) only knows about the active coord system and the work offsets
                                 ;     251  */
                                 ;     252 
                                 ;     253 /*
                                 ;     254  * cm_get_active_coord_offset() - return the currently active coordinate offset for an axis
                                 ;     255  *
                                 ;     256  *	Takes G5x, G92 and absolute override into account to return the active offset for this move
                                 ;     257  *
                                 ;     258  *	This function is typically used to evaluate and set offsets, as opposed to cm_get_work_offset()
                                 ;     259  *	which merely returns what's in the work_offset[] array.
                                 ;     260  */
                                 ;     261 
                                 ;     262 float cm_get_active_coord_offset(uint8_t axis)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",262
0000027A 7100F0                  		ADD #0FFFFFFF0H, R0
0000027D 8389                    		MOV.B R1, 0FH[R0]
                                 ;     263 {
                                 ;     264 	if (cm.gm.absolute_override == true) return (0);		// no offset if in absolute override mode
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",264
0000027F FBE2rrrrrrrr            		MOV.L #_cm, R14
00000285 5AEEA402                		MOVU.B 02A4H[R14], R14
00000289 611E                    		CMP #01H, R14
0000028B 18                   S  		BNE L87
0000028C                         L86:	; bb3
0000028C F80600                  		MOV.L #00000000H, [R0]
0000028F 2Err                 B  		BRA L91
00000291                         L87:	; bb9
                                 ;     265 	float offset = cm.offset[cm.gm.coord_system][axis];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",265
00000291 FB12rrrrrrrr            		MOV.L #_cm, R1
00000297 5A1EA302                		MOVU.B 02A3H[R1], R14
0000029B 751E18                  		MUL #18H, R14
0000029E 4BE1                    		ADD R14, R1
000002A0 B38A                    		MOVU.B 0FH[R0], R2
000002A2 6C22                    		SHLL #02H, R2
000002A4 4B21                    		ADD R2, R1
000002A6 E5100901                		MOV.L 24H[R1], 04H[R0]
000002AA                         L88:	; bb9.split
                                 ;     266 	if (cm.gmx.origin_offset_enable == true)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",266
000002AA FBE2rrrrrrrr            		MOV.L #_cm, R14
000002B0 5AEE1F03                		MOVU.B 031FH[R14], R14
000002B4 611E                    		CMP #01H, R14
000002B6 21rr                    		BNE L90
000002B8                         L89:	; bb19
                                 ;     267 		offset += cm.gmx.origin_offset[axis];				// includes G5x and G92 components
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",267
000002B8 B389                    		MOVU.B 0FH[R0], R1
000002BA 6C21                    		SHLL #02H, R1
000002BC FBE2rrrrrrrr            		MOV.L #_cm, R14
000002C2 4B1E                    		ADD R1, R14
000002C4 EDE1B3                  		MOV.L 02CCH[R14], R1
000002C7 FC890101                		FADD 04H[R0].L, R1
000002CB A009                    		MOV.L R1, 04H[R0]
000002CD                         L90:	; bb31
                                 ;     268 	return (offset);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",268
000002CD E10001                  		MOV.L 04H[R0], [R0]
000002D0                         L91:	; bb34
000002D0 EC01                    		MOV.L [R0], R1
000002D2 A081                    		MOV.L R1, 08H[R0]
                                 ;     269 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",269
000002D4 6704                    		RTSD #10H
000002D6                         _cm_get_work_offset:
                                 		.STACK	_cm_get_work_offset=16
                                 ;     270 
                                 ;     271 /*
                                 ;     272  * cm_get_work_offset() - return a coord offset from the gcode_state
                                 ;     273  *
                                 ;     274  *	This function accepts as input:
                                 ;     275  *		MODEL 		(GCodeState_t *)&cm.gm		// absolute pointer from canonical machine gm model
                                 ;     276  *		PLANNER		(GCodeState_t *)&bf->gm		// relative to buffer *bf is currently pointing to
                                 ;     277  *		RUNTIME		(GCodeState_t *)&mr.gm		// absolute pointer from runtime mm struct
                                 ;     278  *		ACTIVE_MODEL cm.am						// active model pointer is maintained by state management
                                 ;     279  */
                                 ;     280 
                                 ;     281 float cm_get_work_offset(GCodeState_t *gcode_state, uint8_t axis)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",281
000002D6 60C0                    		SUB #0CH, R0
000002D8 A081                    		MOV.L R1, 08H[R0]
000002DA 818A                    		MOV.B R2, 07H[R0]
                                 ;     282 {
                                 ;     283 	return (gcode_state->work_offset[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",283
000002DC B189                    		MOVU.B 07H[R0], R1
000002DE 6C21                    		SHLL #02H, R1
000002E0 06890102                		ADD 08H[R0].L, R1
000002E4 AA11                    		MOV.L 20H[R1], R1
000002E6 E301                    		MOV.L R1, [R0]
000002E8                         L93:	; entry.split
                                 ;     284 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",284
000002E8 6703                    		RTSD #0CH
000002EA                         _cm_set_work_offsets:
                                 		.STACK	_cm_set_work_offsets=16
                                 ;     285 
                                 ;     286 /*
                                 ;     287  * cm_set_work_offsets() - capture coord offsets from the model into absolute values in the gcode_state
                                 ;     288  *
                                 ;     289  *	This function accepts as input:
                                 ;     290  *		MODEL 		(GCodeState_t *)&cm.gm		// absolute pointer from canonical machine gm model
                                 ;     291  *		PLANNER		(GCodeState_t *)&bf->gm		// relative to buffer *bf is currently pointing to
                                 ;     292  *		RUNTIME		(GCodeState_t *)&mr.gm		// absolute pointer from runtime mm struct
                                 ;     293  *		ACTIVE_MODEL cm.am						// active model pointer is maintained by state management
                                 ;     294  */
                                 ;     295 
                                 ;     296 void cm_set_work_offsets(GCodeState_t *gcode_state)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",296
000002EA 7EA6                    		PUSH.L R6
000002EC 6080                    		SUB #08H, R0
000002EE A009                    		MOV.L R1, 04H[R0]
                                 ;     297 {
                                 ;     298 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",298
000002F0 3C0300                  		MOV.B #00H, 03H[R0]
000002F3 2Err                 B  		BRA L96
000002F5                         L95:	; bb
                                 ;     299 		gcode_state->work_offset[axis] = cm_get_active_coord_offset(axis);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",299
000002F5 B089                    		MOVU.B 03H[R0], R1
000002F7 FDC216                  		SHLL #02H, R1, R6
000002FA 06890601                		ADD 04H[R0].L, R6
000002FE 39rrrr               W  		BSR _cm_get_active_coord_offset
00000301 A261                    		MOV.L R1, 20H[R6]
00000303 B089                    		MOVU.B 03H[R0], R1
00000305 6211                    		ADD #01H, R1
00000307 8089                    		MOV.B R1, 03H[R0]
00000309                         L96:	; bb12
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",298
00000309 B089                    		MOVU.B 03H[R0], R1
0000030B 6161                    		CMP #06H, R1
0000030D 29rr                    		BLT L95
0000030F                         L97:	; return
                                 ;     300 	}
                                 ;     301 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",301
0000030F 3F6603                  		RTSD #0CH, R6-R6
00000312                         _cm_get_absolute_position:
                                 		.STACK	_cm_get_absolute_position=20
                                 ;     302 
                                 ;     303 /*
                                 ;     304  * cm_get_absolute_position() - get position of axis in absolute coordinates
                                 ;     305  *
                                 ;     306  *	This function accepts as input:
                                 ;     307  *		MODEL 		(GCodeState_t *)&cm.gm		// absolute pointer from canonical machine gm model
                                 ;     308  *		RUNTIME		(GCodeState_t *)&mr.gm		// absolute pointer from runtime mm struct
                                 ;     309  *
                                 ;     310  *	NOTE: Only MODEL and RUNTIME are supported (no PLANNER or bf's)
                                 ;     311  *	NOTE: Machine position is always returned in mm mode. No units conversion is performed
                                 ;     312  */
                                 ;     313 
                                 ;     314 float cm_get_absolute_position(GCodeState_t *gcode_state, uint8_t axis)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",314
00000312 7100F0                  		ADD #0FFFFFFF0H, R0
00000315 A089                    		MOV.L R1, 0CH[R0]
00000317 828A                    		MOV.B R2, 0BH[R0]
                                 ;     315 {
                                 ;     316 	if (gcode_state == MODEL) return (cm.gmx.position[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",316
00000319 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000031F 72EE5402                		ADD #0254H, R14
00000323 06850E03                		CMP 0CH[R0].L, R14
00000327 21rr                    		BNE L100
00000329                         L99:	; bb3
00000329 B289                    		MOVU.B 0BH[R0], R1
0000032B 6C21                    		SHLL #02H, R1
0000032D FBE2rrrrrrrr            		MOV.L #_cm, R14
00000333 4B1E                    		ADD R1, R14
00000335 E1E0AD                  		MOV.L 02B4H[R14], [R0]
00000338 08                   S  		BRA L101
00000339                         L100:	; bb12
                                 ;     317 	return (mp_get_runtime_absolute_position(axis));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",317
00000339 B289                    		MOVU.B 0BH[R0], R1
0000033B 05rrrrrr             A  		BSR _mp_get_runtime_absolute_position
0000033F E301                    		MOV.L R1, [R0]
00000341                         L101:	; bb16
00000341 EC01                    		MOV.L [R0], R1
00000343 A009                    		MOV.L R1, 04H[R0]
                                 ;     318 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",318
00000345 6704                    		RTSD #10H
00000347                         _cm_get_work_position:
                                 		.STACK	_cm_get_work_position=24
                                 ;     319 
                                 ;     320 /*
                                 ;     321  * cm_get_work_position() - return work position in external form
                                 ;     322  *
                                 ;     323  *	... that means in prevailing units (mm/inch) and with all offsets applied
                                 ;     324  *
                                 ;     325  * NOTE: This function only works after the gcode_state struct as had the work_offsets setup by
                                 ;     326  *		 calling cm_get_model_coord_offset_vector() first.
                                 ;     327  *
                                 ;     328  *	This function accepts as input:
                                 ;     329  *		MODEL 		(GCodeState_t *)&cm.gm		// absolute pointer from canonical machine gm model
                                 ;     330  *		RUNTIME		(GCodeState_t *)&mr.gm		// absolute pointer from runtime mm struct
                                 ;     331  *
                                 ;     332  * NOTE: Only MODEL and RUNTIME are supported (no PLANNER or bf's)
                                 ;     333  */
                                 ;     334 
                                 ;     335 float cm_get_work_position(GCodeState_t *gcode_state, uint8_t axis)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",335
00000347 7EA6                    		PUSH.L R6
00000349 7100F0                  		ADD #0FFFFFFF0H, R0
0000034C A089                    		MOV.L R1, 0CH[R0]
0000034E 828A                    		MOV.B R2, 0BH[R0]
                                 ;     336 {
                                 ;     337 	float position;
                                 ;     338 
                                 ;     339 	if (gcode_state == MODEL) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",339
00000350 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000356 72EE5402                		ADD #0254H, R14
0000035A 06850E03                		CMP 0CH[R0].L, R14
0000035E 21rr                    		BNE L104
00000360                         L103:	; bb4
                                 ;     340 		position = cm.gmx.position[axis] - cm_get_active_coord_offset(axis);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",340
00000360 B289                    		MOVU.B 0BH[R0], R1
00000362 FDC21E                  		SHLL #02H, R1, R14
00000365 FBF2rrrrrrrr            		MOV.L #_cm, R15
0000036B 4BEF                    		ADD R14, R15
0000036D EDF6AD                  		MOV.L 02B4H[R15], R6
00000370 39rrrr               W  		BSR _cm_get_active_coord_offset
00000373 FC8316                  		FSUB R1, R6
00000376 E306                    		MOV.L R6, [R0]
00000378 08                   S  		BRA L105
00000379                         L104:	; bb12
                                 ;     341 	} else {
                                 ;     342 		position = mp_get_runtime_work_position(axis);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",342
00000379 B289                    		MOVU.B 0BH[R0], R1
0000037B 05rrrrrr             A  		BSR _mp_get_runtime_work_position
0000037F E301                    		MOV.L R1, [R0]
00000381                         L105:	; bb19
                                 ;     343 	}
                                 ;     344 	if (gcode_state->units_mode == INCHES) { position /= MM_PER_INCH; }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",344
00000381 A889                    		MOV.L 0CH[R0], R1
00000383 591E4E                  		MOVU.B 4EH[R1], R14
00000386 610E                    		CMP #00H, R14
00000388 21rr                    		BNE L107
0000038A                         L106:	; bb20
0000038A EC01                    		MOV.L [R0], R1
0000038C FD72413333CB41          		FDIV #41CB3333H, R1
00000393 E301                    		MOV.L R1, [R0]
00000395                         L107:	; bb30
                                 ;     345 	return (position);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",345
00000395 EC01                    		MOV.L [R0], R1
00000397 A009                    		MOV.L R1, 04H[R0]
00000399                         L108:	; bb30.split
                                 ;     346 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",346
00000399 3F6605                  		RTSD #14H, R6-R6
0000039C                         _cm_finalize_move:
                                 		.STACK	_cm_finalize_move=8
                                 ;     347 
                                 ;     348 /***********************************************************************************
                                 ;     349  * CRITICAL HELPERS
                                 ;     350  * Core functions supporting the canonical machining functions
                                 ;     351  * These functions are not part of the NIST defined functions
                                 ;     352  ***********************************************************************************/
                                 ;     353 /*
                                 ;     354  * cm_finalize_move() - perform final operations for a traverse or feed
                                 ;     355  * cm_update_model_position_from_runtime() - set endpoint position from final runtime position
                                 ;     356  *
                                 ;     357  * 	These routines set the point position in the gcode model.
                                 ;     358  *
                                 ;     359  * 	Note: As far as the canonical machine is concerned the final position of a Gcode block (move)
                                 ;     360  *	is achieved as soon as the move is planned and the move target becomes the new model position.
                                 ;     361  *	In reality the planner will (in all likelihood) have only just queued the move for later
                                 ;     362  *	execution, and the real tool position is still close to the starting point.
                                 ;     363  */
                                 ;     364 
                                 ;     365 void cm_finalize_move() {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",365
0000039C 6040                    		SUB #04H, R0
                                 ;     366 	copy_vector(cm.gmx.position, cm.gm.target);		// update model position
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",366
0000039E FB12rrrrrrrr            		MOV.L #_cm, R1
000003A4 72125C02                		ADD #025CH, R1, R2
000003A8 7211B402                		ADD #02B4H, R1
000003AC 754318                  		MOV.L #00000018H, R3
000003AF 7F8F                    		SMOVF
000003B1                         L110:	; entry.split
                                 ;     367 
                                 ;     368 	// if in ivnerse time mode reset feed rate so next block requires an explicit feed rate setting
                                 ;     369 	if ((cm.gm.feed_rate_mode == INVERSE_TIME_MODE) && (cm.gm.motion_mode == MOTION_MODE_STRAIGHT_FEED)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",369
000003B1 FBE2rrrrrrrr            		MOV.L #_cm, R14
000003B7 5AEEA002                		MOVU.B 02A0H[R14], R14
000003BB 610E                    		CMP #00H, R14
000003BD 20rr                    		BEQ L112
000003BF 2Err                 B  		BRA L114
000003C1                         L111:	; bb1
                                 ;     370 		cm.gm.feed_rate = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",370
000003C1 FBE2rrrrrrrr            		MOV.L #_cm, R14
000003C7 F9E6A500                		MOV.L #00000000H, 0294H[R14]
000003CB 6701                    		RTSD #04H
000003CD                         L112:	; bb5
000003CD FBE2rrrrrrrr            		MOV.L #_cm, R14
000003D3 5AEE5802                		MOVU.B 0258H[R14], R14
000003D7 611E                    		CMP #01H, R14
000003D9 18                   S  		BNE L114
000003DA                         L113:	; bb10
000003DA F80601                  		MOV.L #00000001H, [R0]
000003DD 08                   S  		BRA L115
000003DE                         L114:	; bb11
000003DE F80600                  		MOV.L #00000000H, [R0]
000003E1                         L115:	; bb12
000003E1 EC01                    		MOV.L [R0], R1
000003E3 6101                    		CMP #00H, R1
000003E5 21rr                    		BNE L111
000003E7                         L116:	; return
                                 ;     371 	}
                                 ;     372 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",372
000003E7 6701                    		RTSD #04H
000003E9                         _cm_update_model_position_from_runtime:
                                 		.STACK	_cm_update_model_position_from_runtime=4
                                 ;     373 
                                 ;     374 void cm_update_model_position_from_runtime() { copy_vector(cm.gmx.position, mr.gm.target); }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",374
000003E9 FB22rrrrrrrr            		MOV.L #_mr, R2
000003EF 72224801                		ADD #0148H, R2
000003F3 FB12rrrrrrrr            		MOV.L #_cm, R1
000003F9 7211B402                		ADD #02B4H, R1
000003FD 754318                  		MOV.L #00000018H, R3
00000400 7F8F                    		SMOVF
00000402 02                      		RTS
00000403                         _cm_deferred_write_callback:
                                 		.STACK	_cm_deferred_write_callback=60
                                 ;     375 
                                 ;     376 /*
                                 ;     377  * cm_deferred_write_callback() - write any changed G10 values back to persistence
                                 ;     378  *
                                 ;     379  *	Only runs if there is G10 data to write, there is no movement, and the serial queues are quiescent
                                 ;     380  *	This could be made tighter by issuing an XOFF or ~CTS beforehand and releasing it afterwards.
                                 ;     381  */
                                 ;     382 
                                 ;     383 stat_t cm_deferred_write_callback()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",383
00000403 7100D4                  		ADD #0FFFFFFD4H, R0
                                 ;     384 {
                                 ;     385 	if ((cm.cycle_state == CYCLE_OFF) && (cm.deferred_write_flag == true)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",385
00000406 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000040C 5AEE1E02                		MOVU.B 021EH[R14], R14
00000410 610E                    		CMP #00H, R14
00000412 3Arrrr               W  		BEQ L129
00000415 38rrrr               W  		BRA L131
00000418                         L119:	; bb4
                                 ;     386 #ifdef __AVR
                                 ;     387 		if (xio_isbusy()) return (STAT_OK);		// don't write back if serial RX is not empty
                                 ;     388 #endif
                                 ;     389 		cm.deferred_write_flag = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",389
00000418 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000041E FAE4460200              		MOV.B #00H, 0246H[R14]
00000423                         L120:	; bb4.split
                                 ;     390 		nvObj_t nv;
                                 ;     391 		for (uint8_t i=1; i<=COORDS; i++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",391
00000423 F9042901                		MOV.B #01H, 29H[R0]
00000427 2Err                 B  		BRA L128
00000429                         L121:	; bb5
                                 ;     392 			for (uint8_t j=0; j<AXES; j++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",392
00000429 F9042A00                		MOV.B #00H, 2AH[R0]
0000042D 2Err                 B  		BRA L126
0000042F                         L122:	; bb6
                                 ;     393 				sprintf((char *)nv.token, "g%2d%c", 53+i, ("xyzabc")[j]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",393
0000042F 59012A                  		MOVU.B 2AH[R0], R1
00000432 FBE2rrrrrrrr            		MOV.L #_L12, R14
00000438 FECE11                  		MOVU.B [R14,R1], R1
0000043B 590229                  		MOVU.B 29H[R0], R2
0000043E 60C0                    		SUB #0CH, R0
00000440 A081                    		MOV.L R1, 08H[R0]
00000442 712235                  		ADD #35H, R2
00000445 A00A                    		MOV.L R2, 04H[R0]
00000447 FBE2rrrrrrrr            		MOV.L #_L11, R14
0000044D E30E                    		MOV.L R14, [R0]
0000044F 710128                  		ADD #28H, R0, R1
00000452 05rrrrrr             A  		BSR _sprintf
00000456 62C0                    		ADD #0CH, R0
00000458                         L123:	; bb6.split
                                 ;     394 				nv.index = nv_get_index((const char_t *)"", nv.token);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",394
00000458 71021C                  		ADD #1CH, R0, R2
0000045B FB12rrrrrrrr            		MOV.L #_L13, R1
00000461 05rrrrrr             A  		BSR _nv_get_index
00000465 9181                    		MOV.W R1, 0CH[R0]
00000467                         L124:	; bb6.split1
                                 ;     395 				nv.value = cm.offset[i][j];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",395
00000467 590129                  		MOVU.B 29H[R0], R1
0000046A 751118                  		MUL #18H, R1
0000046D FB22rrrrrrrr            		MOV.L #_cm, R2
00000473 4B12                    		ADD R1, R2
00000475 59012A                  		MOVU.B 2AH[R0], R1
00000478 6C21                    		SHLL #02H, R1
0000047A 4B12                    		ADD R1, R2
0000047C E5200905                		MOV.L 24H[R2], 14H[R0]
00000480                         L125:	; bb6.split2
00000480 710104                  		ADD #04H, R0, R1
                                 ;     396 				nv_persist(&nv);				// Note: only writes values that have changed
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",396
00000483 05rrrrrr             A  		BSR _nv_persist
00000487 59012A                  		MOVU.B 2AH[R0], R1
0000048A 6211                    		ADD #01H, R1
0000048C C7012A                  		MOV.B R1, 2AH[R0]
0000048F                         L126:	; bb34
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",392
0000048F 59012A                  		MOVU.B 2AH[R0], R1
00000492 6161                    		CMP #06H, R1
00000494 29rr                    		BLT L122
00000496                         L127:	; bb39
00000496 590129                  		MOVU.B 29H[R0], R1
00000499 6211                    		ADD #01H, R1
0000049B C70129                  		MOV.B R1, 29H[R0]
0000049E                         L128:	; bb42
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",391
0000049E 590129                  		MOVU.B 29H[R0], R1
000004A1 6171                    		CMP #07H, R1
000004A3 29rr                    		BLT L121
000004A5 2Err                 B  		BRA L133
000004A7                         L129:	; bb53
000004A7 FBE2rrrrrrrr            		MOV.L #_cm, R14
000004AD 5AEE4602                		MOVU.B 0246H[R14], R14
000004B1 611E                    		CMP #01H, R14
000004B3 18                   S  		BNE L131
000004B4                         L130:	; bb58
000004B4 F80601                  		MOV.L #00000001H, [R0]
000004B7 08                   S  		BRA L132
000004B8                         L131:	; bb59
000004B8 F80600                  		MOV.L #00000000H, [R0]
000004BB                         L132:	; bb60
000004BB EC01                    		MOV.L [R0], R1
000004BD 6101                    		CMP #00H, R1
000004BF 3Brrrr               W  		BNE L119
000004C2                         L133:	; bb65
                                 ;     397 			}
                                 ;     398 		}
                                 ;     399 	}
                                 ;     400 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",400
000004C2 F9042B00                		MOV.B #00H, 2BH[R0]
000004C6 59012B                  		MOVU.B 2BH[R0], R1
000004C9                         L134:	; bb65.split
                                 ;     401 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",401
000004C9 5B11                    		MOVU.B R1, R1
000004CB 670B                    		RTSD #2CH
000004CD                         __$_calc_ABC:
                                 		.STACK	__$_calc_ABC=32
                                 ;     402 
                                 ;     403 /*
                                 ;     404  * cm_set_model_target() - set target vector in GM model
                                 ;     405  *
                                 ;     406  * This is a core routine. It handles:
                                 ;     407  *	- conversion of linear units to internal canonical form (mm)
                                 ;     408  *	- conversion of relative mode to absolute (internal canonical form)
                                 ;     409  *	- translation of work coordinates to machine coordinates (internal canonical form)
                                 ;     410  *	- computation and application of axis modes as so:
                                 ;     411  *
                                 ;     412  *	DISABLED  - Incoming value is ignored. Target value is not changed
                                 ;     413  *	ENABLED	  - Convert axis values to canonical format and store as target
                                 ;     414  *	INHIBITED - Same processing as ENABLED, but axis will not actually be run
                                 ;     415  * 	RADIUS	  - ABC axis value is provided in Gcode block in linear units
                                 ;     416  *			  - Target is set to degrees based on axis' Radius value
                                 ;     417  *			  - Radius mode is only processed for ABC axes. Application to XYZ is ignored.
                                 ;     418  *
                                 ;     419  *	Target coordinates are provided in target[]
                                 ;     420  *	Axes that need processing are signaled in flag[]
                                 ;     421  */
                                 ;     422 
                                 ;     423 // ESTEE: _calc_ABC is a fix to workaround a gcc compiler bug wherein it runs out of spill
                                 ;     424 //        registers we moved this block into its own function so that we get a fresh stack push
                                 ;     425 // ALDEN: This shows up in avr-gcc 4.7.0 and avr-libc 1.8.0
                                 ;     426 
                                 ;     427 static float _calc_ABC(uint8_t axis, float target[], float flag[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",427
000004CD 7100E4                  		ADD #0FFFFFFE4H, R0
000004D0 8689                    		MOV.B R1, 1BH[R0]
000004D2 A10A                    		MOV.L R2, 14H[R0]
000004D4 A103                    		MOV.L R3, 10H[R0]
                                 ;     428 {
                                 ;     429 	if ((cm.a[axis].axis_mode == AXIS_STANDARD) || (cm.a[axis].axis_mode == AXIS_INHIBITED)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",429
000004D6 B689                    		MOVU.B 1BH[R0], R1
000004D8 751138                  		MUL #38H, R1
000004DB FBE2rrrrrrrr            		MOV.L #_cm, R14
000004E1 4B1E                    		ADD R1, R14
000004E3 59EECC                  		MOVU.B 0CCH[R14], R14
000004E6 611E                    		CMP #01H, R14
000004E8 20rr                    		BEQ L138
000004EA 2Err                 B  		BRA L137
000004EC                         L136:	; bb4
                                 ;     430 		return(target[axis]);	// no mm conversion - it's in degrees
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",430
000004EC A909                    		MOV.L 14H[R0], R1
000004EE B68A                    		MOVU.B 1BH[R0], R2
000004F0 FE6211                  		MOV.L [R2,R1], R1
000004F3 A081                    		MOV.L R1, 08H[R0]
000004F5 2Err                 B  		BRA L145
000004F7                         L137:	; bb19
000004F7 B689                    		MOVU.B 1BH[R0], R1
000004F9 751138                  		MUL #38H, R1
000004FC FBE2rrrrrrrr            		MOV.L #_cm, R14
00000502 4B1E                    		ADD R1, R14
00000504 59EECC                  		MOVU.B 0CCH[R14], R14
00000507 612E                    		CMP #02H, R14
00000509 18                   S  		BNE L139
0000050A                         L138:	; bb28
0000050A 3E0101                  		MOV.L #00000001H, 04H[R0]
0000050D 08                   S  		BRA L140
0000050E                         L139:	; bb29
0000050E 3E0100                  		MOV.L #00000000H, 04H[R0]
00000511                         L140:	; bb30
00000511 A809                    		MOV.L 04H[R0], R1
00000513 6101                    		CMP #00H, R1
00000515 21rr                    		BNE L136
00000517                         L141:	; bb34
                                 ;     431 	}
                                 ;     432 	return(_to_millimeters(target[axis]) * 360 / (2 * M_PI * cm.a[axis].radius));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",432
00000517 A909                    		MOV.L 14H[R0], R1
00000519 B68A                    		MOVU.B 1BH[R0], R2
0000051B FE6211                  		MOV.L [R2,R1], R1
0000051E FBE2rrrrrrrr            		MOV.L #_cm, R14
00000524 5AEEA202                		MOVU.B 02A2H[R14], R14
00000528 610E                    		CMP #00H, R14
0000052A 21rr                    		BNE L143
0000052C                         L142:	; bb39
0000052C FD72313333CB41          		FMUL #41CB3333H, R1
00000533 E301                    		MOV.L R1, [R0]
00000535 08                   S  		BRA L144
00000536                         L143:	; bb46
00000536 E301                    		MOV.L R1, [R0]
00000538                         L144:	; bb53
00000538 B689                    		MOVU.B 1BH[R0], R1
0000053A 751138                  		MUL #38H, R1
0000053D FBE2rrrrrrrr            		MOV.L #_cm, R14
00000543 4B1E                    		ADD R1, R14
00000545 EDEE3C                  		MOV.L 0F0H[R14], R14
00000548 FD723EDB0FC940          		FMUL #40C90FDBH, R14
0000054F EC01                    		MOV.L [R0], R1
00000551 FD72310000B443          		FMUL #43B40000H, R1
00000558 FC93E1                  		FDIV R14, R1
0000055B A081                    		MOV.L R1, 08H[R0]
0000055D                         L145:	; bb65
0000055D A881                    		MOV.L 08H[R0], R1
0000055F A089                    		MOV.L R1, 0CH[R0]
                                 ;     433 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",433
00000561 6707                    		RTSD #1CH
00000563                         _cm_set_model_target:
                                 		.STACK	_cm_set_model_target=36
                                 ;     434 
                                 ;     435 void cm_set_model_target(float target[], float flag[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",435
00000563 6E67                    		PUSHM R6-R7
00000565 7100E8                  		ADD #0FFFFFFE8H, R0
00000568 A109                    		MOV.L R1, 14H[R0]
0000056A A102                    		MOV.L R2, 10H[R0]
                                 ;     436 {
                                 ;     437 	uint8_t axis;
                                 ;     438 	float tmp = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",438
0000056C 3E0300                  		MOV.L #00000000H, 0CH[R0]
0000056F                         L147:	; entry.split
                                 ;     439 
                                 ;     440 	// process XYZABC for lower modes
                                 ;     441 	for (axis=AXIS_X; axis<=AXIS_Z; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",441
0000056F 3C0B00                  		MOV.B #00H, 0BH[R0]
00000572 38rrrr               W  		BRA L168
00000575                         L148:	; bb5
                                 ;     442 		if ((fp_FALSE(flag[axis])) || (cm.a[axis].axis_mode == AXIS_DISABLED)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",442
00000575 A901                    		MOV.L 10H[R0], R1
00000577 B28A                    		MOVU.B 0BH[R0], R2
00000579 FE621E                  		MOV.L [R2,R1], R14
0000057C FD721EBD378635          		FCMP #358637BDH, R14
00000583 26rr                  * 		BN L164
         38rrrr                  
00000588 38rrrr               W  		BRA L163
0000058B                         L149:	; bb9
                                 ;     443 			continue;		// skip axis if not flagged for update or its disabled
                                 ;     444 		} else if ((cm.a[axis].axis_mode == AXIS_STANDARD) || (cm.a[axis].axis_mode == AXIS_INHIBITED)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",444
0000058B B289                    		MOVU.B 0BH[R0], R1
0000058D 751138                  		MUL #38H, R1
00000590 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000596 4B1E                    		ADD R1, R14
00000598 59EECC                  		MOVU.B 0CCH[R14], R14
0000059B 611E                    		CMP #01H, R14
0000059D 3Arrrr               W  		BEQ L160
000005A0 38rrrr               W  		BRA L159
000005A3                         L150:	; bb11
                                 ;     445 			if (cm.gm.distance_mode == ABSOLUTE_MODE) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",445
000005A3 FBE2rrrrrrrr            		MOV.L #_cm, R14
000005A9 5AEEA602                		MOVU.B 02A6H[R14], R14
000005AD 610E                    		CMP #00H, R14
000005AF B28E                    		MOVU.B 0BH[R0], R6
000005B1 21rr                    		BNE L155
000005B3                         L151:	; bb12
                                 ;     446 				cm.gm.target[axis] = cm_get_active_coord_offset(axis) + _to_millimeters(target[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",446
000005B3 B289                    		MOVU.B 0BH[R0], R1
000005B5 39rrrr               W  		BSR _cm_get_active_coord_offset
000005B8 A90A                    		MOV.L 14H[R0], R2
000005BA B28B                    		MOVU.B 0BH[R0], R3
000005BC FE6322                  		MOV.L [R3,R2], R2
000005BF FBE2rrrrrrrr            		MOV.L #_cm, R14
000005C5 5AEEA202                		MOVU.B 02A2H[R14], R14
000005C9 610E                    		CMP #00H, R14
000005CB 21rr                    		BNE L153
000005CD                         L152:	; bb22
000005CD FD72323333CB41          		FMUL #41CB3333H, R2
000005D4 A00A                    		MOV.L R2, 04H[R0]
000005D6 08                   S  		BRA L154
000005D7                         L153:	; bb29
000005D7 A00A                    		MOV.L R2, 04H[R0]
000005D9                         L154:	; bb35
000005D9 6C26                    		SHLL #02H, R6
000005DB FBE2rrrrrrrr            		MOV.L #_cm, R14
000005E1 4B6E                    		ADD R6, R14
000005E3 FC890101                		FADD 04H[R0].L, R1
000005E7 E7E197                  		MOV.L R1, 025CH[R14]
000005EA 38rrrr               W  		BRA L167
000005ED                         L155:	; bb38
                                 ;     447 			} else {
                                 ;     448 				cm.gm.target[axis] += _to_millimeters(target[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",448
000005ED A909                    		MOV.L 14H[R0], R1
000005EF B28A                    		MOVU.B 0BH[R0], R2
000005F1 FE6211                  		MOV.L [R2,R1], R1
000005F4 FBE2rrrrrrrr            		MOV.L #_cm, R14
000005FA 5AEEA202                		MOVU.B 02A2H[R14], R14
000005FE 610E                    		CMP #00H, R14
00000600 21rr                    		BNE L157
00000602                         L156:	; bb46
00000602 FD72313333CB41          		FMUL #41CB3333H, R1
00000609 A009                    		MOV.L R1, 04H[R0]
0000060B 08                   S  		BRA L158
0000060C                         L157:	; bb53
0000060C A009                    		MOV.L R1, 04H[R0]
0000060E                         L158:	; bb59
0000060E 6C26                    		SHLL #02H, R6
00000610 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000616 4B6E                    		ADD R6, R14
00000618 EDEF97                  		MOV.L 025CH[R14], R15
0000061B FC890F01                		FADD 04H[R0].L, R15
0000061F E7EF97                  		MOV.L R15, 025CH[R14]
00000622 2Err                 B  		BRA L167
00000624                         L159:	; bb78
00000624 B289                    		MOVU.B 0BH[R0], R1
00000626 751138                  		MUL #38H, R1
00000629 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000062F 4B1E                    		ADD R1, R14
00000631 59EECC                  		MOVU.B 0CCH[R14], R14
00000634 612E                    		CMP #02H, R14
00000636 18                   S  		BNE L161
00000637                         L160:	; bb87
00000637 F80601                  		MOV.L #00000001H, [R0]
0000063A 08                   S  		BRA L162
0000063B                         L161:	; bb89
0000063B F80600                  		MOV.L #00000000H, [R0]
0000063E                         L162:	; bb90
0000063E EC01                    		MOV.L [R0], R1
00000640 6101                    		CMP #00H, R1
00000642 3Brrrr               W  		BNE L150
00000645 2Err                 B  		BRA L167
00000647                         L163:	; bb103
00000647 B289                    		MOVU.B 0BH[R0], R1
00000649 751138                  		MUL #38H, R1
0000064C FBE2rrrrrrrr            		MOV.L #_cm, R14
00000652 4B1E                    		ADD R1, R14
00000654 59EECC                  		MOVU.B 0CCH[R14], R14
00000657 610E                    		CMP #00H, R14
00000659 18                   S  		BNE L165
0000065A                         L164:	; bb112
0000065A F80601                  		MOV.L #00000001H, [R0]
0000065D 08                   S  		BRA L166
0000065E                         L165:	; bb113
0000065E F80600                  		MOV.L #00000000H, [R0]
00000661                         L166:	; bb114
00000661 EC01                    		MOV.L [R0], R1
00000663 6101                    		CMP #00H, R1
00000665 3Arrrr               W  		BEQ L149
00000668                         L167:	; bb120
00000668 B289                    		MOVU.B 0BH[R0], R1
0000066A 6211                    		ADD #01H, R1
0000066C 8289                    		MOV.B R1, 0BH[R0]
0000066E                         L168:	; bb123
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",441
0000066E B289                    		MOVU.B 0BH[R0], R1
00000670 6131                    		CMP #03H, R1
00000672 28rr                  * 		BLT L148
         38rrrr                  
00000677                         L169:	; bb129
                                 ;     449 			}
                                 ;     450 		}
                                 ;     451 	}
                                 ;     452 	// FYI: The ABC loop below relies on the XYZ loop having been run first
                                 ;     453 	for (axis=AXIS_A; axis<=AXIS_C; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",453
00000677 3C0B03                  		MOV.B #03H, 0BH[R0]
0000067A 38rrrr               W  		BRA L180
0000067D                         L170:	; bb131
                                 ;     454 		if ((fp_FALSE(flag[axis])) || (cm.a[axis].axis_mode == AXIS_DISABLED)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",454
0000067D A901                    		MOV.L 10H[R0], R1
0000067F B28A                    		MOVU.B 0BH[R0], R2
00000681 FE621E                  		MOV.L [R2,R1], R14
00000684 FD721EBD378635          		FCMP #358637BDH, R14
0000068B 27rr                    		BN L174
0000068D 2Err                 B  		BRA L173
0000068F                         L171:	; bb134
                                 ;     455 			continue;		// skip axis if not flagged for update or its disabled
                                 ;     456 		} else {
                                 ;     457 			tmp = _calc_ABC(axis, target, flag);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",457
0000068F A903                    		MOV.L 10H[R0], R3
00000691 A90A                    		MOV.L 14H[R0], R2
00000693 B289                    		MOVU.B 0BH[R0], R1
00000695 39rrrr               W  		BSR __$_calc_ABC
00000698 A089                    		MOV.L R1, 0CH[R0]
0000069A                         L172:	; bb134.split
                                 ;     458 		}
                                 ;     459 		if (cm.gm.distance_mode == ABSOLUTE_MODE) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",459
0000069A FBE2rrrrrrrr            		MOV.L #_cm, R14
000006A0 5AEEA602                		MOVU.B 02A6H[R14], R14
000006A4 610E                    		CMP #00H, R14
000006A6 A88E                    		MOV.L 0CH[R0], R6
000006A8 B28F                    		MOVU.B 0BH[R0], R7
000006AA 20rr                    		BEQ L177
000006AC 2Err                 B  		BRA L178
000006AE                         L173:	; bb146
000006AE B28E                    		MOVU.B 0BH[R0], R6
000006B0 751638                  		MUL #38H, R6
000006B3 FBE2rrrrrrrr            		MOV.L #_cm, R14
000006B9 4B6E                    		ADD R6, R14
000006BB 59EECC                  		MOVU.B 0CCH[R14], R14
000006BE 610E                    		CMP #00H, R14
000006C0 18                   S  		BNE L175
000006C1                         L174:	; bb155
000006C1 F80601                  		MOV.L #00000001H, [R0]
000006C4 08                   S  		BRA L176
000006C5                         L175:	; bb156
000006C5 F80600                  		MOV.L #00000000H, [R0]
000006C8                         L176:	; bb157
000006C8 EC06                    		MOV.L [R0], R6
000006CA 6106                    		CMP #00H, R6
000006CC 21rr                    		BNE L179
000006CE 2Err                 B  		BRA L171
000006D0                         L177:	; bb164
                                 ;     460 			cm.gm.target[axis] = tmp + cm_get_active_coord_offset(axis); // sacidu93's fix to Issue #22
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",460
000006D0 B289                    		MOVU.B 0BH[R0], R1
000006D2 39rrrr               W  		BSR _cm_get_active_coord_offset
000006D5 6C27                    		SHLL #02H, R7
000006D7 FBE2rrrrrrrr            		MOV.L #_cm, R14
000006DD 4B7E                    		ADD R7, R14
000006DF FC8B16                  		FADD R1, R6
000006E2 E7E697                  		MOV.L R6, 025CH[R14]
000006E5 2Err                 B  		BRA L179
000006E7                         L178:	; bb172
                                 ;     461 		} else {
                                 ;     462 			cm.gm.target[axis] += tmp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",462
000006E7 6C27                    		SHLL #02H, R7
000006E9 FBE2rrrrrrrr            		MOV.L #_cm, R14
000006EF 4B7E                    		ADD R7, R14
000006F1 FC89E697                		FADD 025CH[R14].L, R6
000006F5 E7E697                  		MOV.L R6, 025CH[R14]
000006F8                         L179:	; bb185
000006F8 B289                    		MOVU.B 0BH[R0], R1
000006FA 6211                    		ADD #01H, R1
000006FC 8289                    		MOV.B R1, 0BH[R0]
000006FE                         L180:	; bb188
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",453
000006FE B289                    		MOVU.B 0BH[R0], R1
00000700 6161                    		CMP #06H, R1
00000702 28rr                  * 		BLT L170
         38rrrr                  
00000707                         L181:	; return
                                 ;     463 		}
                                 ;     464 	}
                                 ;     465 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",465
00000707 3F6708                  		RTSD #20H, R6-R7
0000070A                         _cm_test_soft_limits:
                                 		.STACK	_cm_test_soft_limits=16
                                 ;     466 
                                 ;     467 /*
                                 ;     468  * cm_test_soft_limits() - return error code if soft limit is exceeded
                                 ;     469  *
                                 ;     470  *	Must be called with target properly set in GM struct. Best done after cm_set_model_target().
                                 ;     471  *
                                 ;     472  *	Tests for soft limit for any homed axis if min and max are different values. You can set min
                                 ;     473  *	and max to 0,0 to disable soft limits for an axis. Also will not test a min or a max if the
                                 ;     474  *	value is < -1000000 (negative one million). This allows a single end to be tested w/the other
                                 ;     475  *	disabled, should that requirement ever arise.
                                 ;     476  */
                                 ;     477 stat_t cm_test_soft_limits(float target[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",477
0000070A 60C0                    		SUB #0CH, R0
0000070C A081                    		MOV.L R1, 08H[R0]
                                 ;     478 {
                                 ;     479 	if (cm.soft_limit_enable == true) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",479
0000070E FB12rrrrrrrr            		MOV.L #_cm, R1
00000714 B311                    		MOVU.B 0CH[R1], R1
00000716 6111                    		CMP #01H, R1
00000718 3Brrrr               W  		BNE L200
0000071B                         L183:	; bb3
                                 ;     480 		for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",480
0000071B 3C0600                  		MOV.B #00H, 06H[R0]
0000071E 38rrrr               W  		BRA L199
00000721                         L184:	; bb5
                                 ;     481 			if (cm.homed[axis] != true) continue;		// don't test axes that are not homed
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",481
00000721 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000727 490E06                  		ADD 06H[R0].UB, R14
0000072A 5AEE2202                		MOVU.B 0222H[R14], R14
0000072E 611E                    		CMP #01H, R14
00000730 3Brrrr               W  		BNE L198
00000733                         L185:	; bb16
                                 ;     482 
                                 ;     483 			if (fp_EQ(cm.a[axis].travel_min, cm.a[axis].travel_max)) continue;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",483
00000733 B181                    		MOVU.B 06H[R0], R1
00000735 751138                  		MUL #38H, R1
00000738 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000073E 4B1E                    		ADD R1, R14
00000740 EDEF37                  		MOV.L 0DCH[R14], R15
00000743 FC81EF36                		FSUB 0D8H[R14].L, R15
00000747 7BFF                    		BCLR #1FH, R15
00000749 FD721FBD378635          		FCMP #358637BDH, R15
00000750 26rr                  * 		BN L198
         38rrrr                  
00000755                         L186:	; bb35
                                 ;     484 
                                 ;     485 			if ((cm.a[axis].travel_min > DISABLE_SOFT_LIMIT) && (target[axis] < cm.a[axis].travel_min)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",485
00000755 B181                    		MOVU.B 06H[R0], R1
00000757 751138                  		MUL #38H, R1
0000075A FBE2rrrrrrrr            		MOV.L #_cm, R14
00000760 4B1E                    		ADD R1, R14
00000762 FBF2002474C9            		MOV.L #0C9742400H, R15
00000768 FC85EF37                		FCMP 0DCH[R14].L, R15
0000076C 27rr                    		BN L188
0000076E 2Err                 B  		BRA L190
00000770                         L187:	; bb36
                                 ;     486 				return (STAT_SOFT_LIMIT_EXCEEDED);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",486
00000770 3C05DC                  		MOV.B #0DCH, 05H[R0]
00000773 38rrrr               W  		BRA L201
00000776                         L188:	; bb45
00000776 B181                    		MOVU.B 06H[R0], R1
00000778 A882                    		MOV.L 08H[R0], R2
0000077A FE612E                  		MOV.L [R1,R2], R14
0000077D 751138                  		MUL #38H, R1
00000780 FBF2rrrrrrrr            		MOV.L #_cm, R15
00000786 4B1F                    		ADD R1, R15
00000788 FC85FE37                		FCMP 0DCH[R15].L, R14
0000078C 26rr                    		BPZ L190
0000078E                         L189:	; bb58
0000078E F80601                  		MOV.L #00000001H, [R0]
00000791 08                   S  		BRA L191
00000792                         L190:	; bb59
00000792 F80600                  		MOV.L #00000000H, [R0]
00000795                         L191:	; bb60
00000795 EC01                    		MOV.L [R0], R1
00000797 6101                    		CMP #00H, R1
00000799 21rr                    		BNE L187
0000079B                         L192:	; bb66
                                 ;     487 			}
                                 ;     488 
                                 ;     489 			if ((cm.a[axis].travel_max > DISABLE_SOFT_LIMIT) && (target[axis] > cm.a[axis].travel_max)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",489
0000079B B181                    		MOVU.B 06H[R0], R1
0000079D 751138                  		MUL #38H, R1
000007A0 FBE2rrrrrrrr            		MOV.L #_cm, R14
000007A6 4B1E                    		ADD R1, R14
000007A8 FBF2002474C9            		MOV.L #0C9742400H, R15
000007AE FC85EF36                		FCMP 0D8H[R14].L, R15
000007B2 27rr                    		BN L194
000007B4 2Err                 B  		BRA L196
000007B6                         L193:	; bb67
                                 ;     490 				return (STAT_SOFT_LIMIT_EXCEEDED);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",490
000007B6 3C05DC                  		MOV.B #0DCH, 05H[R0]
000007B9 2Err                 B  		BRA L201
000007BB                         L194:	; bb76
000007BB B181                    		MOVU.B 06H[R0], R1
000007BD A882                    		MOV.L 08H[R0], R2
000007BF FE612E                  		MOV.L [R1,R2], R14
000007C2 751138                  		MUL #38H, R1
000007C5 FBF2rrrrrrrr            		MOV.L #_cm, R15
000007CB 4B1F                    		ADD R1, R15
000007CD EDFF36                  		MOV.L 0D8H[R15], R15
000007D0 FC87EF                  		FCMP R14, R15
000007D3 26rr                    		BPZ L196
000007D5                         L195:	; bb89
000007D5 F80601                  		MOV.L #00000001H, [R0]
000007D8 08                   S  		BRA L197
000007D9                         L196:	; bb90
000007D9 F80600                  		MOV.L #00000000H, [R0]
000007DC                         L197:	; bb91
000007DC EC01                    		MOV.L [R0], R1
000007DE 6101                    		CMP #00H, R1
000007E0 21rr                    		BNE L193
000007E2                         L198:	; bb97
000007E2 B181                    		MOVU.B 06H[R0], R1
000007E4 6211                    		ADD #01H, R1
000007E6 8181                    		MOV.B R1, 06H[R0]
000007E8                         L199:	; bb100
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",480
000007E8 B181                    		MOVU.B 06H[R0], R1
000007EA 6161                    		CMP #06H, R1
000007EC 28rr                  * 		BLT L184
         38rrrr                  
000007F1                         L200:	; bb112
                                 ;     491 			}
                                 ;     492 		}
                                 ;     493 	}
                                 ;     494 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",494
000007F1 3C0500                  		MOV.B #00H, 05H[R0]
000007F4                         L201:	; bb114
000007F4 C5000507                		MOV.B 05H[R0], 07H[R0]
                                 ;     495 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",495
000007F8 B189                    		MOVU.B 07H[R0], R1
000007FA 6703                    		RTSD #0CH
000007FC                         _canonical_machine_init:
                                 		.STACK	_canonical_machine_init=4
                                 ;     496 
                                 ;     497 /*************************************************************************
                                 ;     498  * CANONICAL MACHINING FUNCTIONS
                                 ;     499  *	Values are passed in pre-unit_converted state (from gn structure)
                                 ;     500  *	All operations occur on gm (current model state)
                                 ;     501  *
                                 ;     502  * These are organized by section number (x.x.x) in the order they are
                                 ;     503  * found in NIST RS274 NGCv3
                                 ;     504  ************************************************************************/
                                 ;     505 
                                 ;     506 /******************************************
                                 ;     507  * Initialization and Termination (4.3.2) *
                                 ;     508  ******************************************/
                                 ;     509 /*
                                 ;     510  * canonical_machine_init() - Config init cfg_init() must have been run beforehand
                                 ;     511  */
                                 ;     512 
                                 ;     513 void canonical_machine_init()
                                 ;     514 {
                                 ;     515 // If you can assume all memory has been zeroed by a hard reset you don't need this code:
                                 ;     516 //	memset(&cm, 0, sizeof(cm));					// do not reset canonicalMachineSingleton once it's been initialized
                                 ;     517 	memset(&cm.gm, 0, sizeof(GCodeState_t));	// clear all values, pointers and status
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",517
000007FC FB12rrrrrrrr            		MOV.L #_cm, R1
00000802 72115402                		ADD #0254H, R1
00000806 75435C                  		MOV.L #0000005CH, R3
00000809 6602                    		MOV.L #00000000H, R2
0000080B 7F88                    		SSTR.B
0000080D                         L203:	; entry.split
                                 ;     518 	memset(&cm.gn, 0, sizeof(GCodeInput_t));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",518
0000080D FB12rrrrrrrr            		MOV.L #_cm, R1
00000813 72112C03                		ADD #032CH, R1
00000817 754360                  		MOV.L #00000060H, R3
0000081A 6602                    		MOV.L #00000000H, R2
0000081C 7F88                    		SSTR.B
0000081E                         L204:	; entry.split1
                                 ;     519 	memset(&cm.gf, 0, sizeof(GCodeInput_t));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",519
0000081E FB12rrrrrrrr            		MOV.L #_cm, R1
00000824 72118C03                		ADD #038CH, R1
00000828 754360                  		MOV.L #00000060H, R3
0000082B 6602                    		MOV.L #00000000H, R2
0000082D 7F88                    		SSTR.B
0000082F                         L205:	; entry.split2
                                 ;     520 
                                 ;     521 	canonical_machine_init_assertions();		// establish assertions
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",521
0000082F 39rrrr               W  		BSR _canonical_machine_init_assertions
00000832                         L206:	; entry.split3
                                 ;     522 	ACTIVE_MODEL = MODEL;						// setup initial Gcode model pointer
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",522
00000832 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000838 72EF5402                		ADD #0254H, R14, R15
0000083C E7EF94                  		MOV.L R15, 0250H[R14]
0000083F                         L207:	; entry.split4
                                 ;     523 
                                 ;     524 	// set gcode defaults
                                 ;     525 	cm_set_units_mode(cm.units_mode);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",525
0000083F FB12rrrrrrrr            		MOV.L #_cm, R1
00000845 B791                    		MOVU.B 1EH[R1], R1
00000847 39rrrr               W  		BSR _cm_set_units_mode
0000084A                         L208:	; entry.split5
                                 ;     526 	cm_set_coord_system(cm.coord_system);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",526
0000084A FB12rrrrrrrr            		MOV.L #_cm, R1
00000850 B711                    		MOVU.B 1CH[R1], R1
00000852 39rrrr               W  		BSR _cm_set_coord_system
00000855                         L209:	; entry.split6
                                 ;     527 	cm_select_plane(cm.select_plane);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",527
00000855 FB12rrrrrrrr            		MOV.L #_cm, R1
0000085B B719                    		MOVU.B 1DH[R1], R1
0000085D 39rrrr               W  		BSR _cm_select_plane
00000860                         L210:	; entry.split7
                                 ;     528 	cm_set_path_control(cm.path_control);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",528
00000860 FB12rrrrrrrr            		MOV.L #_cm, R1
00000866 B799                    		MOVU.B 1FH[R1], R1
00000868 39rrrr               W  		BSR _cm_set_path_control
0000086B                         L211:	; entry.split8
                                 ;     529 	cm_set_distance_mode(cm.distance_mode);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",529
0000086B FBE2rrrrrrrr            		MOV.L #_cm, R14
00000871 59E120                  		MOVU.B 20H[R14], R1
00000874 39rrrr               W  		BSR _cm_set_distance_mode
00000877                         L212:	; entry.split9
00000877 6611                    		MOV.L #00000001H, R1
                                 ;     530 	cm_set_feed_rate_mode(UNITS_PER_MINUTE_MODE);// always the default
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",530
00000879 39rrrr               W  		BSR _cm_set_feed_rate_mode
0000087C                         L213:	; entry.split10
                                 ;     531 
                                 ;     532 	cm.gmx.block_delete_switch = true;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",532
0000087C FBE2rrrrrrrr            		MOV.L #_cm, R14
00000882 FAE4200301              		MOV.B #01H, 0320H[R14]
00000887                         L214:	; entry.split11
                                 ;     533 
                                 ;     534 	// never start a machine in a motion mode
                                 ;     535 	cm.gm.motion_mode = MOTION_MODE_CANCEL_MOTION_MODE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",535
00000887 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000088D FAE4580204              		MOV.B #04H, 0258H[R14]
00000892                         L215:	; entry.split12
                                 ;     536 
                                 ;     537 	// reset request flags
                                 ;     538 	cm.feedhold_requested = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",538
00000892 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000898 FAE4470200              		MOV.B #00H, 0247H[R14]
0000089D                         L216:	; entry.split13
                                 ;     539 	cm.queue_flush_requested = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",539
0000089D FBE2rrrrrrrr            		MOV.L #_cm, R14
000008A3 FAE4480200              		MOV.B #00H, 0248H[R14]
000008A8                         L217:	; entry.split14
                                 ;     540 	cm.cycle_start_requested = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",540
000008A8 FBE2rrrrrrrr            		MOV.L #_cm, R14
000008AE FAE4490200              		MOV.B #00H, 0249H[R14]
000008B3                         L218:	; entry.split15
                                 ;     541 
                                 ;     542 	// signal that the machine is ready for action
                                 ;     543 	cm.machine_state = MACHINE_READY;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",543
000008B3 FBE2rrrrrrrr            		MOV.L #_cm, R14
000008B9 FAE41D0201              		MOV.B #01H, 021DH[R14]
000008BE                         L219:	; entry.split16
                                 ;     544 	cm.combined_state = COMBINED_READY;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",544
000008BE FBE2rrrrrrrr            		MOV.L #_cm, R14
000008C4 FAE41C0201              		MOV.B #01H, 021CH[R14]
000008C9                         L220:	; entry.split17
                                 ;     545 
                                 ;     546 	// sub-system inits
                                 ;     547 	cm_spindle_init();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",547
000008C9 05rrrrrr             A  		BSR _cm_spindle_init
000008CD                         L221:	; entry.split18
                                 ;     548 	cm_arc_init();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",548
000008CD 05rrrrrr             A  		BSR _cm_arc_init
000008D1 02                      		RTS
000008D2                         _canonical_machine_init_assertions:
                                 		.STACK	_canonical_machine_init_assertions=4
                                 ;     549 }
                                 ;     550 
                                 ;     551 /*
                                 ;     552  * canonical_machine_init_assertions()
                                 ;     553  * canonical_machine_test_assertions() - test assertions, return error code if violation exists
                                 ;     554  */
                                 ;     555 
                                 ;     556 void canonical_machine_init_assertions(void)
                                 ;     557 {
                                 ;     558 	cm.magic_start = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",558
000008D2 FBE2rrrrrrrr            		MOV.L #_cm, R14
000008D8 F8E9EF12                		MOV.W #12EFH, [R14]
000008DC                         L223:	; entry.split
                                 ;     559 	cm.magic_end = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",559
000008DC FBE2rrrrrrrr            		MOV.L #_cm, R14
000008E2 FAE9F601EF12            		MOV.W #12EFH, 03ECH[R14]
000008E8                         L224:	; entry.split1
                                 ;     560 	cm.gmx.magic_start = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",560
000008E8 FBE2rrrrrrrr            		MOV.L #_cm, R14
000008EE FAE95801EF12            		MOV.W #12EFH, 02B0H[R14]
000008F4                         L225:	; entry.split2
                                 ;     561 	cm.gmx.magic_end = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",561
000008F4 FBE2rrrrrrrr            		MOV.L #_cm, R14
000008FA FAE99501EF12            		MOV.W #12EFH, 032AH[R14]
00000900                         L226:	; entry.split3
                                 ;     562 	arc.magic_start = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",562
00000900 FBE2rrrrrrrr            		MOV.L #_arc, R14
00000906 F8E9EF12                		MOV.W #12EFH, [R14]
0000090A                         L227:	; entry.split4
                                 ;     563 	arc.magic_end = MAGICNUM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",563
0000090A FBE2rrrrrrrr            		MOV.L #_arc, R14
00000910 F9E964EF12              		MOV.W #12EFH, 0C8H[R14]
00000915 02                      		RTS
00000916                         _canonical_machine_test_assertions:
                                 		.STACK	_canonical_machine_test_assertions=12
                                 ;     564 }
                                 ;     565 
                                 ;     566 stat_t canonical_machine_test_assertions(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",566
00000916 6080                    		SUB #08H, R0
                                 ;     567 {
                                 ;     568 	if ((cm.magic_start 	!= MAGICNUM) || (cm.magic_end 	  != MAGICNUM)) return (STAT_CANONICAL_MACHINE_ASSERTION_FAILURE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",568
00000918 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000091E 5CEE                    		MOVU.W [R14], R14
00000920 760EEF12                		CMP #12EFH, R14
00000924 21rr                    		BNE L231
00000926 08                   S  		BRA L230
00000927                         L229:	; bb1
00000927 3C065F                  		MOV.B #5FH, 06H[R0]
0000092A 38rrrr               W  		BRA L247
0000092D                         L230:	; bb7
0000092D FBE2rrrrrrrr            		MOV.L #_cm, R14
00000933 5EEEF601                		MOVU.W 03ECH[R14], R14
00000937 760EEF12                		CMP #12EFH, R14
0000093B 10                   S  		BEQ L232
0000093C                         L231:	; bb12
0000093C F80601                  		MOV.L #00000001H, [R0]
0000093F 08                   S  		BRA L233
00000940                         L232:	; bb13
00000940 F80600                  		MOV.L #00000000H, [R0]
00000943                         L233:	; bb14
00000943 EC01                    		MOV.L [R0], R1
00000945 6101                    		CMP #00H, R1
00000947 21rr                    		BNE L229
00000949                         L234:	; bb19
                                 ;     569 	if ((cm.gmx.magic_start != MAGICNUM) || (cm.gmx.magic_end != MAGICNUM)) return (STAT_CANONICAL_MACHINE_ASSERTION_FAILURE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",569
00000949 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000094F 5EEE5801                		MOVU.W 02B0H[R14], R14
00000953 760EEF12                		CMP #12EFH, R14
00000957 21rr                    		BNE L237
00000959 08                   S  		BRA L236
0000095A                         L235:	; bb20
0000095A 3C065F                  		MOV.B #5FH, 06H[R0]
0000095D 2Err                 B  		BRA L247
0000095F                         L236:	; bb26
0000095F FBE2rrrrrrrr            		MOV.L #_cm, R14
00000965 5EEE9501                		MOVU.W 032AH[R14], R14
00000969 760EEF12                		CMP #12EFH, R14
0000096D 10                   S  		BEQ L238
0000096E                         L237:	; bb31
0000096E F80601                  		MOV.L #00000001H, [R0]
00000971 08                   S  		BRA L239
00000972                         L238:	; bb32
00000972 F80600                  		MOV.L #00000000H, [R0]
00000975                         L239:	; bb33
00000975 EC01                    		MOV.L [R0], R1
00000977 6101                    		CMP #00H, R1
00000979 21rr                    		BNE L235
0000097B                         L240:	; bb39
                                 ;     570 	if ((arc.magic_start 	!= MAGICNUM) || (arc.magic_end    != MAGICNUM)) return (STAT_CANONICAL_MACHINE_ASSERTION_FAILURE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",570
0000097B FBE2rrrrrrrr            		MOV.L #_arc, R14
00000981 5CEE                    		MOVU.W [R14], R14
00000983 760EEF12                		CMP #12EFH, R14
00000987 21rr                    		BNE L243
00000989 08                   S  		BRA L242
0000098A                         L241:	; bb40
0000098A 3C065F                  		MOV.B #5FH, 06H[R0]
0000098D 2Err                 B  		BRA L247
0000098F                         L242:	; bb46
0000098F FBE2rrrrrrrr            		MOV.L #_arc, R14
00000995 5DEE64                  		MOVU.W 0C8H[R14], R14
00000998 760EEF12                		CMP #12EFH, R14
0000099C 10                   S  		BEQ L244
0000099D                         L243:	; bb51
0000099D F80601                  		MOV.L #00000001H, [R0]
000009A0 08                   S  		BRA L245
000009A1                         L244:	; bb52
000009A1 F80600                  		MOV.L #00000000H, [R0]
000009A4                         L245:	; bb53
000009A4 EC01                    		MOV.L [R0], R1
000009A6 6101                    		CMP #00H, R1
000009A8 21rr                    		BNE L241
000009AA                         L246:	; bb58
                                 ;     571 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",571
000009AA 3C0600                  		MOV.B #00H, 06H[R0]
000009AD                         L247:	; bb60
000009AD C5000607                		MOV.B 06H[R0], 07H[R0]
                                 ;     572 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",572
000009B1 B189                    		MOVU.B 07H[R0], R1
000009B3 6702                    		RTSD #08H
000009B5                         _cm_soft_alarm:
                                 		.STACK	_cm_soft_alarm=8
                                 ;     573 
                                 ;     574 /*
                                 ;     575  * cm_soft_alarm() - alarm state; send an exception report and stop processing input
                                 ;     576  * cm_clear() 	   - clear soft alarm
                                 ;     577  * cm_hard_alarm() - alarm state; send an exception report and shut down machine
                                 ;     578  */
                                 ;     579 
                                 ;     580 stat_t cm_soft_alarm(stat_t status)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",580
000009B5 6040                    		SUB #04H, R0
000009B7 8089                    		MOV.B R1, 03H[R0]
                                 ;     581 {
                                 ;     582 	rpt_exception(status);					// send alarm message
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",582
000009B9 B089                    		MOVU.B 03H[R0], R1
000009BB 05rrrrrr             A  		BSR _rpt_exception
000009BF                         L249:	; entry.split
                                 ;     583 	cm.machine_state = MACHINE_ALARM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",583
000009BF FBE2rrrrrrrr            		MOV.L #_cm, R14
000009C5 FAE41D0202              		MOV.B #02H, 021DH[R14]
000009CA                         L250:	; entry.split1
                                 ;     584 	return (status);						// NB: More efficient than inlining rpt_exception() call.
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",584
000009CA C5000302                		MOV.B 03H[R0], 02H[R0]
000009CE B081                    		MOVU.B 02H[R0], R1
000009D0                         L251:	; entry.split2
                                 ;     585 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",585
000009D0 5B11                    		MOVU.B R1, R1
000009D2 6701                    		RTSD #04H
000009D4                         _cm_clear:
                                 		.STACK	_cm_clear=12
                                 ;     586 
                                 ;     587 stat_t cm_clear(nvObj_t *nv)				// clear soft alarm
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",587
000009D4 6080                    		SUB #08H, R0
000009D6 A009                    		MOV.L R1, 04H[R0]
                                 ;     588 {
                                 ;     589 	if (cm.cycle_state == CYCLE_OFF) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",589
000009D8 FBE2rrrrrrrr            		MOV.L #_cm, R14
000009DE 5AEE1E02                		MOVU.B 021EH[R14], R14
000009E2 610E                    		CMP #00H, R14
000009E4 21rr                    		BNE L254
000009E6                         L253:	; bb2
                                 ;     590 		cm.machine_state = MACHINE_PROGRAM_STOP;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",590
000009E6 FBE2rrrrrrrr            		MOV.L #_cm, R14
000009EC FAE41D0203              		MOV.B #03H, 021DH[R14]
000009F1 2Err                 B  		BRA L255
000009F3                         L254:	; bb3
                                 ;     591 	} else {
                                 ;     592 		cm.machine_state = MACHINE_CYCLE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",592
000009F3 FBE2rrrrrrrr            		MOV.L #_cm, R14
000009F9 FAE41D0205              		MOV.B #05H, 021DH[R14]
000009FE                         L255:	; bb8
                                 ;     593 	}
                                 ;     594 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",594
000009FE 3C0300                  		MOV.B #00H, 03H[R0]
00000A01 B089                    		MOVU.B 03H[R0], R1
00000A03                         L256:	; bb8.split
                                 ;     595 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",595
00000A03 5B11                    		MOVU.B R1, R1
00000A05 6702                    		RTSD #08H
00000A07                         _cm_hard_alarm:
                                 		.STACK	_cm_hard_alarm=8
                                 ;     596 
                                 ;     597 stat_t cm_hard_alarm(stat_t status)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",597
00000A07 6040                    		SUB #04H, R0
00000A09 8089                    		MOV.B R1, 03H[R0]
                                 ;     598 {
                                 ;     599 	// stop the motors and the spindle
                                 ;     600 	stepper_init();							// hard stop
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",600
00000A0B 05rrrrrr             A  		BSR _stepper_init
00000A0F                         L258:	; entry.split
00000A0F 6601                    		MOV.L #00000000H, R1
                                 ;     601 	cm_spindle_control(SPINDLE_OFF);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",601
00000A11 05rrrrrr             A  		BSR _cm_spindle_control
00000A15                         L259:	; entry.split1
                                 ;     602 
                                 ;     603 	// disable all MCode functions
                                 ;     604 //	gpio_set_bit_off(SPINDLE_BIT);			//++++ this current stuff is temporary
                                 ;     605 //	gpio_set_bit_off(SPINDLE_DIR);
                                 ;     606 //	gpio_set_bit_off(SPINDLE_PWM);
                                 ;     607 //	gpio_set_bit_off(MIST_COOLANT_BIT);		//++++ replace with exec function
                                 ;     608 //	gpio_set_bit_off(FLOOD_COOLANT_BIT);	//++++ replace with exec function
                                 ;     609 
                                 ;     610 	rpt_exception(status);					// send shutdown message
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",610
00000A15 B089                    		MOVU.B 03H[R0], R1
00000A17 05rrrrrr             A  		BSR _rpt_exception
00000A1B                         L260:	; entry.split2
                                 ;     611 	cm.machine_state = MACHINE_SHUTDOWN;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",611
00000A1B FBE2rrrrrrrr            		MOV.L #_cm, R14
00000A21 FAE41D0206              		MOV.B #06H, 021DH[R14]
00000A26                         L261:	; entry.split3
                                 ;     612 	return (status);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",612
00000A26 C5000302                		MOV.B 03H[R0], 02H[R0]
00000A2A B081                    		MOVU.B 02H[R0], R1
00000A2C                         L262:	; entry.split4
                                 ;     613 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",613
00000A2C 5B11                    		MOVU.B R1, R1
00000A2E 6701                    		RTSD #04H
00000A30                         _cm_select_plane:
                                 		.STACK	_cm_select_plane=8
                                 ;     614 
                                 ;     615 /**************************
                                 ;     616  * Representation (4.3.3) *
                                 ;     617  **************************/
                                 ;     618 
                                 ;     619 /**************************************************************************
                                 ;     620  * Representation functions that affect the Gcode model only (asynchronous)
                                 ;     621  *
                                 ;     622  *	cm_select_plane()			- G17,G18,G19 select axis plane
                                 ;     623  *	cm_set_units_mode()			- G20, G21
                                 ;     624  *	cm_set_distance_mode()		- G90, G91
                                 ;     625  *	cm_set_coord_offsets()		- G10 (delayed persistence)
                                 ;     626  *
                                 ;     627  *	These functions assume input validation occurred upstream.
                                 ;     628  */
                                 ;     629 
                                 ;     630 stat_t cm_select_plane(uint8_t plane)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",630
00000A30 6040                    		SUB #04H, R0
00000A32 8089                    		MOV.B R1, 03H[R0]
                                 ;     631 {
                                 ;     632 	cm.gm.select_plane = plane;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",632
00000A34 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000A3A CBE1A102                		MOV.B R1, 02A1H[R14]
00000A3E                         L264:	; entry.split
                                 ;     633 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",633
00000A3E 3C0200                  		MOV.B #00H, 02H[R0]
00000A41 B081                    		MOVU.B 02H[R0], R1
00000A43                         L265:	; entry.split1
                                 ;     634 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",634
00000A43 5B11                    		MOVU.B R1, R1
00000A45 6701                    		RTSD #04H
00000A47                         _cm_set_units_mode:
                                 		.STACK	_cm_set_units_mode=8
                                 ;     635 
                                 ;     636 stat_t cm_set_units_mode(uint8_t mode)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",636
00000A47 6040                    		SUB #04H, R0
00000A49 8089                    		MOV.B R1, 03H[R0]
                                 ;     637 {
                                 ;     638 	cm.gm.units_mode = mode;		// 0 = inches, 1 = mm.
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",638
00000A4B FBE2rrrrrrrr            		MOV.L #_cm, R14
00000A51 CBE1A202                		MOV.B R1, 02A2H[R14]
00000A55                         L267:	; entry.split
                                 ;     639 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",639
00000A55 3C0200                  		MOV.B #00H, 02H[R0]
00000A58 B081                    		MOVU.B 02H[R0], R1
00000A5A                         L268:	; entry.split1
                                 ;     640 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",640
00000A5A 5B11                    		MOVU.B R1, R1
00000A5C 6701                    		RTSD #04H
00000A5E                         _cm_set_distance_mode:
                                 		.STACK	_cm_set_distance_mode=8
                                 ;     641 
                                 ;     642 stat_t cm_set_distance_mode(uint8_t mode)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",642
00000A5E 6040                    		SUB #04H, R0
00000A60 8089                    		MOV.B R1, 03H[R0]
                                 ;     643 {
                                 ;     644 	cm.gm.distance_mode = mode;		// 0 = absolute mode, 1 = incremental
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",644
00000A62 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000A68 CBE1A602                		MOV.B R1, 02A6H[R14]
00000A6C                         L270:	; entry.split
                                 ;     645 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",645
00000A6C 3C0200                  		MOV.B #00H, 02H[R0]
00000A6F B081                    		MOVU.B 02H[R0], R1
00000A71                         L271:	; entry.split1
                                 ;     646 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",646
00000A71 5B11                    		MOVU.B R1, R1
00000A73 6701                    		RTSD #04H
00000A75                         _cm_set_coord_offsets:
                                 		.STACK	_cm_set_coord_offsets=28
                                 ;     647 
                                 ;     648 /*
                                 ;     649  * cm_set_coord_offsets() - G10 L2 Pn (affects MODEL only)
                                 ;     650  *
                                 ;     651  *	This function applies the offset to the GM model but does not persist the offsets
                                 ;     652  *	during the Gcode cycle. The persist flag is used to persist offsets once the cycle
                                 ;     653  *	has ended. You can also use $g54x - $g59c config functions to change offsets.
                                 ;     654  *
                                 ;     655  *	It also does not reset the work_offsets which may be accomplished by calling
                                 ;     656  *	cm_set_work_offsets() immediately afterwards.
                                 ;     657  */
                                 ;     658 
                                 ;     659 stat_t cm_set_coord_offsets(uint8_t coord_system, float offset[], float flag[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",659
00000A75 7100E8                  		ADD #0FFFFFFE8H, R0
00000A78 8589                    		MOV.B R1, 17H[R0]
00000A7A A102                    		MOV.L R2, 10H[R0]
00000A7C A08B                    		MOV.L R3, 0CH[R0]
                                 ;     660 {
                                 ;     661 	if ((coord_system < G54) || (coord_system > COORD_SYSTEM_MAX)) {	// you can't set G53
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",661
00000A7E B589                    		MOVU.B 17H[R0], R1
00000A80 6101                    		CMP #00H, R1
00000A82 2Brr                    		BLE L275
00000A84 08                   S  		BRA L274
00000A85                         L273:	; bb5
                                 ;     662 		return (STAT_INPUT_VALUE_RANGE_ERROR);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",662
00000A85 3C096E                  		MOV.B #6EH, 09H[R0]
00000A88 2Err                 B  		BRA L287
00000A8A                         L274:	; bb11
00000A8A B589                    		MOVU.B 17H[R0], R1
00000A8C 6171                    		CMP #07H, R1
00000A8E 29rr                    		BLT L276
00000A90                         L275:	; bb16
00000A90 3E0101                  		MOV.L #00000001H, 04H[R0]
00000A93 08                   S  		BRA L277
00000A94                         L276:	; bb17
00000A94 3E0100                  		MOV.L #00000000H, 04H[R0]
00000A97                         L277:	; bb18
00000A97 A809                    		MOV.L 04H[R0], R1
00000A99 6101                    		CMP #00H, R1
00000A9B 21rr                    		BNE L273
00000A9D                         L278:	; bb22
                                 ;     663 	}
                                 ;     664 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",664
00000A9D 3C0A00                  		MOV.B #00H, 0AH[R0]
00000AA0 2Err                 B  		BRA L285
00000AA2                         L279:	; bb24
                                 ;     665 		if (fp_TRUE(flag[axis])) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",665
00000AA2 A889                    		MOV.L 0CH[R0], R1
00000AA4 B282                    		MOVU.B 0AH[R0], R2
00000AA6 FE621E                  		MOV.L [R2,R1], R14
00000AA9 FBF2BD378635            		MOV.L #358637BDH, R15
00000AAF FC87EF                  		FCMP R14, R15
00000AB2 26rr                    		BPZ L284
00000AB4                         L280:	; bb25
                                 ;     666 			cm.offset[coord_system][axis] = _to_millimeters(offset[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",666
00000AB4 A901                    		MOV.L 10H[R0], R1
00000AB6 B282                    		MOVU.B 0AH[R0], R2
00000AB8 FE6211                  		MOV.L [R2,R1], R1
00000ABB B58B                    		MOVU.B 17H[R0], R3
00000ABD 751318                  		MUL #18H, R3
00000AC0 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000AC6 4BE3                    		ADD R14, R3
00000AC8 713324                  		ADD #24H, R3
00000ACB 5AEEA202                		MOVU.B 02A2H[R14], R14
00000ACF 610E                    		CMP #00H, R14
00000AD1 21rr                    		BNE L282
00000AD3                         L281:	; bb37
00000AD3 FD72313333CB41          		FMUL #41CB3333H, R1
00000ADA E301                    		MOV.L R1, [R0]
00000ADC 08                   S  		BRA L283
00000ADD                         L282:	; bb44
00000ADD E301                    		MOV.L R1, [R0]
00000ADF                         L283:	; bb51
00000ADF 6C22                    		SHLL #02H, R2
00000AE1 4B32                    		ADD R3, R2
00000AE3 E002                    		MOV.L [R0], [R2]
                                 ;     667 			cm.deferred_write_flag = true;								// persist offsets once machining cycle is over
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",667
00000AE5 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000AEB FAE4460201              		MOV.B #01H, 0246H[R14]
00000AF0                         L284:	; bb62
00000AF0 B281                    		MOVU.B 0AH[R0], R1
00000AF2 6211                    		ADD #01H, R1
00000AF4 8281                    		MOV.B R1, 0AH[R0]
00000AF6                         L285:	; bb65
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",664
00000AF6 B281                    		MOVU.B 0AH[R0], R1
00000AF8 6161                    		CMP #06H, R1
00000AFA 29rr                    		BLT L279
00000AFC                         L286:	; bb71
                                 ;     668 		}
                                 ;     669 	}
                                 ;     670 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",670
00000AFC 3C0900                  		MOV.B #00H, 09H[R0]
00000AFF                         L287:	; bb73
00000AFF C500090B                		MOV.B 09H[R0], 0BH[R0]
                                 ;     671 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",671
00000B03 B289                    		MOVU.B 0BH[R0], R1
00000B05 6706                    		RTSD #18H
00000B07                         _cm_set_coord_system:
                                 		.STACK	_cm_set_coord_system=32
                                 ;     672 
                                 ;     673 /******************************************************************************************
                                 ;     674  * Representation functions that affect gcode model and are queued to planner (synchronous)
                                 ;     675  */
                                 ;     676 /*
                                 ;     677  * cm_set_coord_system() - G54-G59
                                 ;     678  * _exec_offset() - callback from planner
                                 ;     679  */
                                 ;     680 stat_t cm_set_coord_system(uint8_t coord_system)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",680
00000B07 7100E4                  		ADD #0FFFFFFE4H, R0
00000B0A 8689                    		MOV.B R1, 1BH[R0]
                                 ;     681 {
                                 ;     682 	cm.gm.coord_system = coord_system;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",682
00000B0C FBE2rrrrrrrr            		MOV.L #_cm, R14
00000B12 CBE1A302                		MOV.B R1, 02A3H[R14]
00000B16                         L289:	; entry.split
                                 ;     683 
                                 ;     684 	float value[AXES] = { (float)coord_system,0,0,0,0,0 };	// pass coordinate system in value[0] element
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",684
00000B16 FBE2rrrrrrrr            		MOV.L #_L14, R14
00000B1C E0E0                    		MOV.L [R14], [R0]
00000B1E E5E00101                		MOV.L 04H[R14], 04H[R0]
00000B22 E5E00202                		MOV.L 08H[R14], 08H[R0]
00000B26 E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00000B2A E5E00404                		MOV.L 10H[R14], 10H[R0]
00000B2E E5E00505                		MOV.L 14H[R14], 14H[R0]
00000B32 FC45011B                		ITOF 1BH[R0].UB, R1
00000B36 E301                    		MOV.L R1, [R0]
00000B38                         L290:	; entry.split1
00000B38 EF02                    		MOV.L R0, R2
                                 ;     685 	mp_queue_command(_exec_offset, value, value);			// second vector (flags) is not used, so fake it
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",685
00000B3A FB12rrrrrrrr            		MOV.L #__$_exec_offset, R1
00000B40 EF23                    		MOV.L R2, R3
00000B42 05rrrrrr             A  		BSR _mp_queue_command
00000B46                         L291:	; entry.split2
                                 ;     686 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",686
00000B46 3C8A00                  		MOV.B #00H, 1AH[R0]
00000B49 B681                    		MOVU.B 1AH[R0], R1
00000B4B                         L292:	; entry.split3
                                 ;     687 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",687
00000B4B 5B11                    		MOVU.B R1, R1
00000B4D 6707                    		RTSD #1CH
00000B4F                         __$_exec_offset:
                                 		.STACK	__$_exec_offset=44
                                 ;     688 
                                 ;     689 static void _exec_offset(float *value, float *flag)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",689
00000B4F 7100D8                  		ADD #0FFFFFFD8H, R0
00000B52 A209                    		MOV.L R1, 24H[R0]
00000B54 A202                    		MOV.L R2, 20H[R0]
                                 ;     690 {
                                 ;     691 	uint8_t coord_system = ((uint8_t)value[0]);				// coordinate system is passed in value[0] element
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",691
00000B56 AA09                    		MOV.L 24H[R0], R1
00000B58 EC1E                    		MOV.L [R1], R14
00000B5A FD721E0000004F          		FCMP #4F000000H, R14
00000B61 29rr                    		BLT L295
00000B63                         L294:	; entry
00000B63 FD722E000080CF          		FADD #0CF800000H, R14
00000B6A                         L295:	; entry
00000B6A FC97E1                  		FTOI R14, R1
00000B6D 8089                    		MOV.B R1, 03H[R0]
00000B6F                         L296:	; entry.split
                                 ;     692 	float offsets[AXES];
                                 ;     693 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",693
00000B6F 3C8F00                  		MOV.B #00H, 1FH[R0]
00000B72 2Err                 B  		BRA L298
00000B74                         L297:	; bb
                                 ;     694 		offsets[axis] = cm.offset[coord_system][axis] + (cm.gmx.origin_offset[axis] * cm.gmx.origin_offset_enable);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",694
00000B74 B789                    		MOVU.B 1FH[R0], R1
00000B76 FDC21E                  		SHLL #02H, R1, R14
00000B79 FBF2rrrrrrrr            		MOV.L #_cm, R15
00000B7F FC46F51F03              		ITOF 031FH[R15].UB, R5
00000B84 FF24EF                  		ADD R14, R15, R4
00000B87 FC8D45B3                		FMUL 02CCH[R4].L, R5
00000B8B B08A                    		MOVU.B 03H[R0], R2
00000B8D 751218                  		MUL #18H, R2
00000B90 4B2F                    		ADD R2, R15
00000B92 4BEF                    		ADD R14, R15
00000B94 FC89F509                		FADD 24H[R15].L, R5
00000B98 710E04                  		ADD #04H, R0, R14
00000B9B FE21E5                  		MOV.L R5, [R1,R14]
00000B9E B789                    		MOVU.B 1FH[R0], R1
00000BA0 6211                    		ADD #01H, R1
00000BA2 8789                    		MOV.B R1, 1FH[R0]
00000BA4                         L298:	; bb31
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",693
00000BA4 B789                    		MOVU.B 1FH[R0], R1
00000BA6 6161                    		CMP #06H, R1
00000BA8 29rr                    		BLT L297
00000BAA                         L299:	; bb36
00000BAA 710104                  		ADD #04H, R0, R1
                                 ;     695 	}
                                 ;     696 	mp_set_runtime_work_offset(offsets);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",696
00000BAD 05rrrrrr             A  		BSR _mp_set_runtime_work_offset
00000BB1                         L300:	; bb36.split
                                 ;     697 	cm_set_work_offsets(MODEL);								// set work offsets in the Gcode model
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",697
00000BB1 FB12rrrrrrrr            		MOV.L #_cm, R1
00000BB7 72115402                		ADD #0254H, R1
00000BBB 39rrrr               W  		BSR _cm_set_work_offsets
00000BBE 670A                    		RTSD #28H
00000BC0                         _cm_set_position:
                                 		.STACK	_cm_set_position=12
                                 ;     698 }
                                 ;     699 
                                 ;     700 /*
                                 ;     701  * cm_set_position() - set the position of a single axis in the model, planner and runtime
                                 ;     702  *
                                 ;     703  *	This command sets an axis/axes to a position provided as an argument.
                                 ;     704  *	This is useful for setting origins for homing, probing, and other operations.
                                 ;     705  *
                                 ;     706  *  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                 ;     707  *	!!!!! DO NOT CALL THIS FUNCTION WHILE IN A MACHINING CYCLE !!!!!
                                 ;     708  *  !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
                                 ;     709  *
                                 ;     710  *	More specifically, do not call this function if there are any moves in the planner or
                                 ;     711  *	if the runtime is moving. The system must be quiescent or you will introduce positional
                                 ;     712  *	errors. This is true because the planned / running moves have a different reference frame
                                 ;     713  *	than the one you are now going to set. These functions should only be called during
                                 ;     714  *	initialization sequences and during cycles (such as homing cycles) when you know there
                                 ;     715  *	are no more moves in the planner and that all motion has stopped.
                                 ;     716  *	Use cm_get_runtime_busy() to be sure the system is quiescent.
                                 ;     717  */
                                 ;     718 
                                 ;     719 void cm_set_position(uint8_t axis, float position)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",719
00000BC0 6080                    		SUB #08H, R0
00000BC2 8189                    		MOV.B R1, 07H[R0]
00000BC4 E302                    		MOV.L R2, [R0]
                                 ;     720 {
                                 ;     721 	// TODO: Interlock involving runtime_busy test
                                 ;     722 	cm.gmx.position[axis] = position;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",722
00000BC6 B189                    		MOVU.B 07H[R0], R1
00000BC8 6C21                    		SHLL #02H, R1
00000BCA FBE2rrrrrrrr            		MOV.L #_cm, R14
00000BD0 4B1E                    		ADD R1, R14
00000BD2 E7E2AD                  		MOV.L R2, 02B4H[R14]
00000BD5                         L302:	; entry.split
                                 ;     723 	cm.gm.target[axis] = position;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",723
00000BD5 B189                    		MOVU.B 07H[R0], R1
00000BD7 6C21                    		SHLL #02H, R1
00000BD9 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000BDF 4B1E                    		ADD R1, R14
00000BE1 E40E97                  		MOV.L [R0], 025CH[R14]
00000BE4                         L303:	; entry.split1
                                 ;     724 	mp_set_planner_position(axis, position);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",724
00000BE4 EC02                    		MOV.L [R0], R2
00000BE6 B189                    		MOVU.B 07H[R0], R1
00000BE8 05rrrrrr             A  		BSR _mp_set_planner_position
00000BEC                         L304:	; entry.split2
                                 ;     725 	mp_set_runtime_position(axis, position);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",725
00000BEC EC02                    		MOV.L [R0], R2
00000BEE B189                    		MOVU.B 07H[R0], R1
00000BF0 05rrrrrr             A  		BSR _mp_set_runtime_position
00000BF4                         L305:	; entry.split3
                                 ;     726 	mp_set_steps_to_runtime_position();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",726
00000BF4 05rrrrrr             A  		BSR _mp_set_steps_to_runtime_position
00000BF8 6702                    		RTSD #08H
00000BFA                         _cm_set_absolute_origin:
                                 		.STACK	_cm_set_absolute_origin=44
                                 ;     727 }
                                 ;     728 
                                 ;     729 /*** G28.3 functions and support ***
                                 ;     730  *
                                 ;     731  * cm_set_absolute_origin() - G28.3 - model, planner and queue to runtime
                                 ;     732  * _exec_absolute_origin()  - callback from planner
                                 ;     733  *
                                 ;     734  *	cm_set_absolute_origin() takes a vector of origins (presumably 0's, but not necessarily)
                                 ;     735  *	and applies them to all axes where the corresponding position in the flag vector is true (1).
                                 ;     736  *
                                 ;     737  *	This is a 2 step process. The model and planner contexts are set immediately, the runtime
                                 ;     738  *	command is queued and synchronized with the planner queue. This includes the runtime position
                                 ;     739  *	and the step recording done by the encoders. At that point any axis that is set is also marked
                                 ;     740  *	as homed.
                                 ;     741  */
                                 ;     742 
                                 ;     743 stat_t cm_set_absolute_origin(float origin[], float flag[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",743
00000BFA 7100D8                  		ADD #0FFFFFFD8H, R0
00000BFD A209                    		MOV.L R1, 24H[R0]
00000BFF A202                    		MOV.L R2, 20H[R0]
                                 ;     744 {
                                 ;     745 	float value[AXES];
                                 ;     746 
                                 ;     747 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",747
00000C01 3C8E00                  		MOV.B #00H, 1EH[R0]
00000C04 2Err                 B  		BRA L315
00000C06                         L307:	; bb5
                                 ;     748 		if (fp_TRUE(flag[axis])) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",748
00000C06 AA01                    		MOV.L 20H[R0], R1
00000C08 B782                    		MOVU.B 1EH[R0], R2
00000C0A FE621E                  		MOV.L [R2,R1], R14
00000C0D FBF2BD378635            		MOV.L #358637BDH, R15
00000C13 FC87EF                  		FCMP R14, R15
00000C16 26rr                    		BPZ L314
00000C18                         L308:	; bb6
                                 ;     749 			value[axis] = _to_millimeters(origin[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",749
00000C18 AA09                    		MOV.L 24H[R0], R1
00000C1A B782                    		MOVU.B 1EH[R0], R2
00000C1C FE6211                  		MOV.L [R2,R1], R1
00000C1F FBE2rrrrrrrr            		MOV.L #_cm, R14
00000C25 5AEEA202                		MOVU.B 02A2H[R14], R14
00000C29 610E                    		CMP #00H, R14
00000C2B 21rr                    		BNE L310
00000C2D                         L309:	; bb15
00000C2D FD72313333CB41          		FMUL #41CB3333H, R1
00000C34 E301                    		MOV.L R1, [R0]
00000C36 08                   S  		BRA L311
00000C37                         L310:	; bb22
00000C37 E301                    		MOV.L R1, [R0]
00000C39                         L311:	; bb28
00000C39 6C22                    		SHLL #02H, R2
00000C3B 710E04                  		ADD #04H, R0, R14
00000C3E 4BE2                    		ADD R14, R2
00000C40 E002                    		MOV.L [R0], [R2]
                                 ;     750 			cm.gmx.position[axis] = value[axis];		// set model position
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",750
00000C42 B781                    		MOVU.B 1EH[R0], R1
00000C44 FE61EE                  		MOV.L [R1,R14], R14
00000C47 6C21                    		SHLL #02H, R1
00000C49 FBF2rrrrrrrr            		MOV.L #_cm, R15
00000C4F 4B1F                    		ADD R1, R15
00000C51 E7FEAD                  		MOV.L R14, 02B4H[R15]
00000C54                         L312:	; bb28.split
                                 ;     751 			cm.gm.target[axis] = value[axis];			// reset model target
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",751
00000C54 B781                    		MOVU.B 1EH[R0], R1
00000C56 710E04                  		ADD #04H, R0, R14
00000C59 FE61EE                  		MOV.L [R1,R14], R14
00000C5C 6C21                    		SHLL #02H, R1
00000C5E FBF2rrrrrrrr            		MOV.L #_cm, R15
00000C64 4B1F                    		ADD R1, R15
00000C66 E7FE97                  		MOV.L R14, 025CH[R15]
00000C69                         L313:	; bb28.split1
                                 ;     752 			mp_set_planner_position(axis, value[axis]);	// set mm position
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",752
00000C69 B781                    		MOVU.B 1EH[R0], R1
00000C6B 710E04                  		ADD #04H, R0, R14
00000C6E FE61E2                  		MOV.L [R1,R14], R2
00000C71 05rrrrrr             A  		BSR _mp_set_planner_position
00000C75                         L314:	; bb60
00000C75 B781                    		MOVU.B 1EH[R0], R1
00000C77 6211                    		ADD #01H, R1
00000C79 8781                    		MOV.B R1, 1EH[R0]
00000C7B                         L315:	; bb63
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",747
00000C7B B781                    		MOVU.B 1EH[R0], R1
00000C7D 6161                    		CMP #06H, R1
00000C7F 29rr                    		BLT L307
00000C81                         L316:	; bb69
                                 ;     753 		}
                                 ;     754 	}
                                 ;     755 	mp_queue_command(_exec_absolute_origin, value, flag);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",755
00000C81 AA03                    		MOV.L 20H[R0], R3
00000C83 710204                  		ADD #04H, R0, R2
00000C86 FB12rrrrrrrr            		MOV.L #__$_exec_absolute_origin, R1
00000C8C 05rrrrrr             A  		BSR _mp_queue_command
00000C90                         L317:	; bb69.split
                                 ;     756 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",756
00000C90 3C8F00                  		MOV.B #00H, 1FH[R0]
00000C93 B789                    		MOVU.B 1FH[R0], R1
00000C95                         L318:	; bb69.split2
                                 ;     757 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",757
00000C95 5B11                    		MOVU.B R1, R1
00000C97 670A                    		RTSD #28H
00000C99                         __$_exec_absolute_origin:
                                 		.STACK	__$_exec_absolute_origin=16
                                 ;     758 
                                 ;     759 static void _exec_absolute_origin(float *value, float *flag)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",759
00000C99 60C0                    		SUB #0CH, R0
00000C9B A081                    		MOV.L R1, 08H[R0]
00000C9D A00A                    		MOV.L R2, 04H[R0]
                                 ;     760 {
                                 ;     761 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",761
00000C9F 3C0300                  		MOV.B #00H, 03H[R0]
00000CA2 2Err                 B  		BRA L324
00000CA4                         L320:	; bb4
                                 ;     762 		if (fp_TRUE(flag[axis])) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",762
00000CA4 A809                    		MOV.L 04H[R0], R1
00000CA6 B08A                    		MOVU.B 03H[R0], R2
00000CA8 FE621E                  		MOV.L [R2,R1], R14
00000CAB FBF2BD378635            		MOV.L #358637BDH, R15
00000CB1 FC87EF                  		FCMP R14, R15
00000CB4 26rr                    		BPZ L323
00000CB6                         L321:	; bb5
                                 ;     763 			mp_set_runtime_position(axis, value[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",763
00000CB6 B089                    		MOVU.B 03H[R0], R1
00000CB8 A882                    		MOV.L 08H[R0], R2
00000CBA FE6122                  		MOV.L [R1,R2], R2
00000CBD 05rrrrrr             A  		BSR _mp_set_runtime_position
00000CC1                         L322:	; bb5.split
                                 ;     764 			cm.homed[axis] = true;	// G28.3 is not considered homed until you get here
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",764
00000CC1 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000CC7 490E03                  		ADD 03H[R0].UB, R14
00000CCA FAE4220201              		MOV.B #01H, 0222H[R14]
00000CCF                         L323:	; bb21
00000CCF B089                    		MOVU.B 03H[R0], R1
00000CD1 6211                    		ADD #01H, R1
00000CD3 8089                    		MOV.B R1, 03H[R0]
00000CD5                         L324:	; bb24
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",761
00000CD5 B089                    		MOVU.B 03H[R0], R1
00000CD7 6161                    		CMP #06H, R1
00000CD9 29rr                    		BLT L320
00000CDB                         L325:	; bb30
                                 ;     765 		}
                                 ;     766 	}
                                 ;     767 	mp_set_steps_to_runtime_position();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",767
00000CDB 05rrrrrr             A  		BSR _mp_set_steps_to_runtime_position
00000CDF 6703                    		RTSD #0CH
00000CE1                         _cm_set_origin_offsets:
                                 		.STACK	_cm_set_origin_offsets=44
                                 ;     768 }
                                 ;     769 
                                 ;     770 /*
                                 ;     771  * cm_set_origin_offsets() 		- G92
                                 ;     772  * cm_reset_origin_offsets() 	- G92.1
                                 ;     773  * cm_suspend_origin_offsets() 	- G92.2
                                 ;     774  * cm_resume_origin_offsets() 	- G92.3
                                 ;     775  *
                                 ;     776  * G92's behave according to NIST 3.5.18 & LinuxCNC G92
                                 ;     777  * http://linuxcnc.org/docs/html/gcode/gcode.html#sec:G92-G92.1-G92.2-G92.3
                                 ;     778  */
                                 ;     779 stat_t cm_set_origin_offsets(float offset[], float flag[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",779
00000CE1 7100D8                  		ADD #0FFFFFFD8H, R0
00000CE4 A209                    		MOV.L R1, 24H[R0]
00000CE6 A202                    		MOV.L R2, 20H[R0]
                                 ;     780 {
                                 ;     781 	// set offsets in the Gcode model extended context
                                 ;     782 	cm.gmx.origin_offset_enable = 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",782
00000CE8 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000CEE FAE41F0301              		MOV.B #01H, 031FH[R14]
00000CF3                         L327:	; entry.split
                                 ;     783 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",783
00000CF3 3C8E00                  		MOV.B #00H, 1EH[R0]
00000CF6 2Err                 B  		BRA L334
00000CF8                         L328:	; bb5
                                 ;     784 		if (fp_TRUE(flag[axis])) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",784
00000CF8 AA01                    		MOV.L 20H[R0], R1
00000CFA B782                    		MOVU.B 1EH[R0], R2
00000CFC FE621E                  		MOV.L [R2,R1], R14
00000CFF FBF2BD378635            		MOV.L #358637BDH, R15
00000D05 FC87EF                  		FCMP R14, R15
00000D08 26rr                    		BPZ L333
00000D0A                         L329:	; bb6
                                 ;     785 			cm.gmx.origin_offset[axis] = cm.gmx.position[axis] -
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",785
00000D0A FBE2rrrrrrrr            		MOV.L #_cm, R14
00000D10 5AEFA302                		MOVU.B 02A3H[R14], R15
00000D14 751F18                  		MUL #18H, R15
00000D17 4BEF                    		ADD R14, R15
00000D19 B781                    		MOVU.B 1EH[R0], R1
00000D1B FDC215                  		SHLL #02H, R1, R5
00000D1E 4B5F                    		ADD R5, R15
00000D20 4BE5                    		ADD R14, R5
00000D22 ED55AD                  		MOV.L 02B4H[R5], R5
00000D25 FC81F509                		FSUB 24H[R15].L, R5
00000D29 AA0A                    		MOV.L 24H[R0], R2
00000D2B FE6122                  		MOV.L [R1,R2], R2
00000D2E 5AEEA202                		MOVU.B 02A2H[R14], R14
00000D32 610E                    		CMP #00H, R14
00000D34 21rr                    		BNE L331
00000D36                         L330:	; bb27
00000D36 FD72323333CB41          		FMUL #41CB3333H, R2
00000D3D E302                    		MOV.L R2, [R0]
00000D3F 08                   S  		BRA L332
00000D40                         L331:	; bb34
00000D40 E302                    		MOV.L R2, [R0]
00000D42                         L332:	; bb40
00000D42 6C21                    		SHLL #02H, R1
00000D44 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000D4A 4B1E                    		ADD R1, R14
00000D4C FC8005                  		FSUB [R0].L, R5
00000D4F E7E5B3                  		MOV.L R5, 02CCH[R14]
00000D52                         L333:	; bb51
00000D52 B781                    		MOVU.B 1EH[R0], R1
00000D54 6211                    		ADD #01H, R1
00000D56 8781                    		MOV.B R1, 1EH[R0]
00000D58                         L334:	; bb54
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",783
00000D58 B781                    		MOVU.B 1EH[R0], R1
00000D5A 6161                    		CMP #06H, R1
00000D5C 29rr                    		BLT L328
00000D5E                         L335:	; bb60
                                 ;     786 									  cm.offset[cm.gm.coord_system][axis] - _to_millimeters(offset[axis]);
                                 ;     787 		}
                                 ;     788 	}
                                 ;     789 	// now pass the offset to the callback - setting the coordinate system also applies the offsets
                                 ;     790 	float value[AXES] = { (float)cm.gm.coord_system,0,0,0,0,0 }; // pass coordinate system in value[0] element
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",790
00000D5E FBE2rrrrrrrr            		MOV.L #_L15, R14
00000D64 E4E001                  		MOV.L [R14], 04H[R0]
00000D67 E5E00102                		MOV.L 04H[R14], 08H[R0]
00000D6B E5E00203                		MOV.L 08H[R14], 0CH[R0]
00000D6F E5E00304                		MOV.L 0CH[R14], 10H[R0]
00000D73 E5E00405                		MOV.L 10H[R14], 14H[R0]
00000D77 E5E00506                		MOV.L 14H[R14], 18H[R0]
00000D7B FBE2rrrrrrrr            		MOV.L #_cm, R14
00000D81 FC46E1A302              		ITOF 02A3H[R14].UB, R1
00000D86 A009                    		MOV.L R1, 04H[R0]
00000D88                         L336:	; bb60.split
00000D88 710204                  		ADD #04H, R0, R2
                                 ;     791 	mp_queue_command(_exec_offset, value, value);				  // second vector is not used
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",791
00000D8B FB12rrrrrrrr            		MOV.L #__$_exec_offset, R1
00000D91 EF23                    		MOV.L R2, R3
00000D93 05rrrrrr             A  		BSR _mp_queue_command
00000D97                         L337:	; bb60.split1
                                 ;     792 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",792
00000D97 3C8F00                  		MOV.B #00H, 1FH[R0]
00000D9A B789                    		MOVU.B 1FH[R0], R1
00000D9C                         L338:	; bb60.split2
                                 ;     793 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",793
00000D9C 5B11                    		MOVU.B R1, R1
00000D9E 670A                    		RTSD #28H
00000DA0                         _cm_reset_origin_offsets:
                                 		.STACK	_cm_reset_origin_offsets=32
                                 ;     794 
                                 ;     795 stat_t cm_reset_origin_offsets()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",795
00000DA0 7100E4                  		ADD #0FFFFFFE4H, R0
                                 ;     796 {
                                 ;     797 	cm.gmx.origin_offset_enable = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",797
00000DA3 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000DA9 FAE41F0300              		MOV.B #00H, 031FH[R14]
00000DAE                         L340:	; entry.split
                                 ;     798 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",798
00000DAE 3C8A00                  		MOV.B #00H, 1AH[R0]
00000DB1 2Err                 B  		BRA L342
00000DB3                         L341:	; bb
                                 ;     799 		cm.gmx.origin_offset[axis] = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",799
00000DB3 B681                    		MOVU.B 1AH[R0], R1
00000DB5 6C21                    		SHLL #02H, R1
00000DB7 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000DBD 4B1E                    		ADD R1, R14
00000DBF F9E6B300                		MOV.L #00000000H, 02CCH[R14]
00000DC3 B681                    		MOVU.B 1AH[R0], R1
00000DC5 6211                    		ADD #01H, R1
00000DC7 8681                    		MOV.B R1, 1AH[R0]
00000DC9                         L342:	; bb8
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",798
00000DC9 B681                    		MOVU.B 1AH[R0], R1
00000DCB 6161                    		CMP #06H, R1
00000DCD 29rr                    		BLT L341
00000DCF                         L343:	; bb13
                                 ;     800 	}
                                 ;     801 	float value[AXES] = { (float)cm.gm.coord_system,0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",801
00000DCF FBE2rrrrrrrr            		MOV.L #_L16, R14
00000DD5 E0E0                    		MOV.L [R14], [R0]
00000DD7 E5E00101                		MOV.L 04H[R14], 04H[R0]
00000DDB E5E00202                		MOV.L 08H[R14], 08H[R0]
00000DDF E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00000DE3 E5E00404                		MOV.L 10H[R14], 10H[R0]
00000DE7 E5E00505                		MOV.L 14H[R14], 14H[R0]
00000DEB FBE2rrrrrrrr            		MOV.L #_cm, R14
00000DF1 FC46E1A302              		ITOF 02A3H[R14].UB, R1
00000DF6 E301                    		MOV.L R1, [R0]
00000DF8                         L344:	; bb13.split
00000DF8 EF02                    		MOV.L R0, R2
                                 ;     802 	mp_queue_command(_exec_offset, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",802
00000DFA FB12rrrrrrrr            		MOV.L #__$_exec_offset, R1
00000E00 EF23                    		MOV.L R2, R3
00000E02 05rrrrrr             A  		BSR _mp_queue_command
00000E06                         L345:	; bb13.split1
                                 ;     803 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",803
00000E06 3C8B00                  		MOV.B #00H, 1BH[R0]
00000E09 B689                    		MOVU.B 1BH[R0], R1
00000E0B                         L346:	; bb13.split2
                                 ;     804 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",804
00000E0B 5B11                    		MOVU.B R1, R1
00000E0D 6707                    		RTSD #1CH
00000E0F                         _cm_suspend_origin_offsets:
                                 		.STACK	_cm_suspend_origin_offsets=32
                                 ;     805 
                                 ;     806 stat_t cm_suspend_origin_offsets()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",806
00000E0F 7100E4                  		ADD #0FFFFFFE4H, R0
                                 ;     807 {
                                 ;     808 	cm.gmx.origin_offset_enable = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",808
00000E12 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000E18 FAE41F0300              		MOV.B #00H, 031FH[R14]
00000E1D                         L348:	; entry.split
                                 ;     809 	float value[AXES] = { (float)cm.gm.coord_system,0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",809
00000E1D FBE2rrrrrrrr            		MOV.L #_L17, R14
00000E23 E0E0                    		MOV.L [R14], [R0]
00000E25 E5E00101                		MOV.L 04H[R14], 04H[R0]
00000E29 E5E00202                		MOV.L 08H[R14], 08H[R0]
00000E2D E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00000E31 E5E00404                		MOV.L 10H[R14], 10H[R0]
00000E35 E5E00505                		MOV.L 14H[R14], 14H[R0]
00000E39 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000E3F FC46E1A302              		ITOF 02A3H[R14].UB, R1
00000E44 E301                    		MOV.L R1, [R0]
00000E46                         L349:	; entry.split1
00000E46 EF02                    		MOV.L R0, R2
                                 ;     810 	mp_queue_command(_exec_offset, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",810
00000E48 FB12rrrrrrrr            		MOV.L #__$_exec_offset, R1
00000E4E EF23                    		MOV.L R2, R3
00000E50 05rrrrrr             A  		BSR _mp_queue_command
00000E54                         L350:	; entry.split2
                                 ;     811 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",811
00000E54 3C8B00                  		MOV.B #00H, 1BH[R0]
00000E57 B689                    		MOVU.B 1BH[R0], R1
00000E59                         L351:	; entry.split3
                                 ;     812 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",812
00000E59 5B11                    		MOVU.B R1, R1
00000E5B 6707                    		RTSD #1CH
00000E5D                         _cm_resume_origin_offsets:
                                 		.STACK	_cm_resume_origin_offsets=32
                                 ;     813 
                                 ;     814 stat_t cm_resume_origin_offsets()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",814
00000E5D 7100E4                  		ADD #0FFFFFFE4H, R0
                                 ;     815 {
                                 ;     816 	cm.gmx.origin_offset_enable = 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",816
00000E60 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000E66 FAE41F0301              		MOV.B #01H, 031FH[R14]
00000E6B                         L353:	; entry.split
                                 ;     817 	float value[AXES] = { (float)cm.gm.coord_system,0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",817
00000E6B FBE2rrrrrrrr            		MOV.L #_L18, R14
00000E71 E0E0                    		MOV.L [R14], [R0]
00000E73 E5E00101                		MOV.L 04H[R14], 04H[R0]
00000E77 E5E00202                		MOV.L 08H[R14], 08H[R0]
00000E7B E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00000E7F E5E00404                		MOV.L 10H[R14], 10H[R0]
00000E83 E5E00505                		MOV.L 14H[R14], 14H[R0]
00000E87 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000E8D FC46E1A302              		ITOF 02A3H[R14].UB, R1
00000E92 E301                    		MOV.L R1, [R0]
00000E94                         L354:	; entry.split1
00000E94 EF02                    		MOV.L R0, R2
                                 ;     818 	mp_queue_command(_exec_offset, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",818
00000E96 FB12rrrrrrrr            		MOV.L #__$_exec_offset, R1
00000E9C EF23                    		MOV.L R2, R3
00000E9E 05rrrrrr             A  		BSR _mp_queue_command
00000EA2                         L355:	; entry.split2
                                 ;     819 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",819
00000EA2 3C8B00                  		MOV.B #00H, 1BH[R0]
00000EA5 B689                    		MOVU.B 1BH[R0], R1
00000EA7                         L356:	; entry.split3
                                 ;     820 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",820
00000EA7 5B11                    		MOVU.B R1, R1
00000EA9 6707                    		RTSD #1CH
00000EAB                         _cm_straight_traverse:
                                 		.STACK	_cm_straight_traverse=16
                                 ;     821 
                                 ;     822 /*****************************
                                 ;     823  * Free Space Motion (4.3.4) *
                                 ;     824  *****************************/
                                 ;     825 /*
                                 ;     826  * cm_straight_traverse() - G0 linear rapid
                                 ;     827  */
                                 ;     828 
                                 ;     829 stat_t cm_straight_traverse(float target[], float flags[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",829
00000EAB 60C0                    		SUB #0CH, R0
00000EAD A081                    		MOV.L R1, 08H[R0]
00000EAF A00A                    		MOV.L R2, 04H[R0]
                                 ;     830 {
                                 ;     831 	cm.gm.motion_mode = MOTION_MODE_STRAIGHT_TRAVERSE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",831
00000EB1 FBE2rrrrrrrr            		MOV.L #_cm, R14
00000EB7 FAE4580200              		MOV.B #00H, 0258H[R14]
00000EBC                         L358:	; entry.split
                                 ;     832 	cm_set_model_target(target, flags);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",832
00000EBC A80A                    		MOV.L 04H[R0], R2
00000EBE A881                    		MOV.L 08H[R0], R1
00000EC0 39rrrr               W  		BSR _cm_set_model_target
00000EC3                         L359:	; entry.split1
                                 ;     833 
                                 ;     834 	// test soft limits
                                 ;     835 	stat_t status = cm_test_soft_limits(cm.gm.target);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",835
00000EC3 FB12rrrrrrrr            		MOV.L #_cm, R1
00000EC9 72115C02                		ADD #025CH, R1
00000ECD 39rrrr               W  		BSR _cm_test_soft_limits
00000ED0 8081                    		MOV.B R1, 02H[R0]
00000ED2                         L360:	; entry.split2
                                 ;     836 	if (status != STAT_OK) return (cm_soft_alarm(status));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",836
00000ED2 B081                    		MOVU.B 02H[R0], R1
00000ED4 6101                    		CMP #00H, R1
00000ED6 10                   S  		BEQ L362
00000ED7                         L361:	; bb7
00000ED7 B081                    		MOVU.B 02H[R0], R1
00000ED9 39rrrr               W  		BSR _cm_soft_alarm
00000EDC 8009                    		MOV.B R1, 01H[R0]
00000EDE 2Err                 B  		BRA L367
00000EE0                         L362:	; bb15
                                 ;     837 
                                 ;     838 	// prep and plan the move
                                 ;     839 	cm_set_work_offsets(&cm.gm);				// capture the fully resolved offsets to the state
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",839
00000EE0 FB12rrrrrrrr            		MOV.L #_cm, R1
00000EE6 72115402                		ADD #0254H, R1
00000EEA 39rrrr               W  		BSR _cm_set_work_offsets
00000EED                         L363:	; bb15.split
                                 ;     840 	cm_cycle_start();							// required for homing & other cycles
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",840
00000EED 39rrrr               W  		BSR _cm_cycle_start
00000EF0                         L364:	; bb15.split3
                                 ;     841 	mp_aline(&cm.gm);							// send the move to the planner
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",841
00000EF0 FB12rrrrrrrr            		MOV.L #_cm, R1
00000EF6 72115402                		ADD #0254H, R1
00000EFA 05rrrrrr             A  		BSR _mp_aline
00000EFE                         L365:	; bb15.split4
                                 ;     842 	cm_finalize_move();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",842
00000EFE 39rrrr               W  		BSR _cm_finalize_move
00000F01                         L366:	; bb15.split5
                                 ;     843 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",843
00000F01 3C0100                  		MOV.B #00H, 01H[R0]
00000F04                         L367:	; bb18
00000F04 C5000103                		MOV.B 01H[R0], 03H[R0]
                                 ;     844 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",844
00000F08 B089                    		MOVU.B 03H[R0], R1
00000F0A 6703                    		RTSD #0CH
00000F0C                         _cm_set_g28_position:
                                 		.STACK	_cm_set_g28_position=8
                                 ;     845 
                                 ;     846 /*
                                 ;     847  * cm_set_g28_position()  - G28.1
                                 ;     848  * cm_goto_g28_position() - G28
                                 ;     849  * cm_set_g30_position()  - G30.1
                                 ;     850  * cm_goto_g30_position() - G30
                                 ;     851  */
                                 ;     852 
                                 ;     853 stat_t cm_set_g28_position(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",853
00000F0C 6040                    		SUB #04H, R0
                                 ;     854 {
                                 ;     855 	copy_vector(cm.gmx.g28_position, cm.gmx.position);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",855
00000F0E FB12rrrrrrrr            		MOV.L #_cm, R1
00000F14 7212B402                		ADD #02B4H, R1, R2
00000F18 7211E402                		ADD #02E4H, R1
00000F1C 754318                  		MOV.L #00000018H, R3
00000F1F 7F8F                    		SMOVF
00000F21                         L369:	; entry.split
                                 ;     856 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",856
00000F21 3C0300                  		MOV.B #00H, 03H[R0]
00000F24 B089                    		MOVU.B 03H[R0], R1
00000F26                         L370:	; entry.split1
                                 ;     857 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",857
00000F26 5B11                    		MOVU.B R1, R1
00000F28 6701                    		RTSD #04H
00000F2A                         _cm_goto_g28_position:
                                 		.STACK	_cm_goto_g28_position=40
                                 ;     858 
                                 ;     859 stat_t cm_goto_g28_position(float target[], float flags[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",859
00000F2A 7100DC                  		ADD #0FFFFFFDCH, R0
00000F2D A201                    		MOV.L R1, 20H[R0]
00000F2F A18A                    		MOV.L R2, 1CH[R0]
                                 ;     860 {
                                 ;     861 	cm_set_absolute_override(MODEL, true);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",861
00000F31 FB12rrrrrrrr            		MOV.L #_cm, R1
00000F37 72115402                		ADD #0254H, R1
00000F3B 6612                    		MOV.L #00000001H, R2
00000F3D 39rrrr               W  		BSR _cm_set_absolute_override
00000F40                         L372:	; entry.split
                                 ;     862 	cm_straight_traverse(target, flags);			 // move through intermediate point, or skip
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",862
00000F40 A98A                    		MOV.L 1CH[R0], R2
00000F42 AA01                    		MOV.L 20H[R0], R1
00000F44 39rrrr               W  		BSR _cm_straight_traverse
00000F47                         L373:	; bb7
                                 ;     863 	while (mp_get_planner_buffers_available() == 0); // make sure you have an available buffer
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",863
00000F47 05rrrrrr             A  		BSR _mp_get_planner_buffers_available
00000F4B 6101                    		CMP #00H, R1
00000F4D 20rr                    		BEQ L373
00000F4F                         L374:	; bb12
                                 ;     864 	float f[] = {1,1,1,1,1,1};
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",864
00000F4F FBE2rrrrrrrr            		MOV.L #_L19, R14
00000F55 E0E0                    		MOV.L [R14], [R0]
00000F57 E5E00101                		MOV.L 04H[R14], 04H[R0]
00000F5B E5E00202                		MOV.L 08H[R14], 08H[R0]
00000F5F E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00000F63 E5E00404                		MOV.L 10H[R14], 10H[R0]
00000F67 E5E00505                		MOV.L 14H[R14], 14H[R0]
00000F6B                         L375:	; bb12.split
                                 ;     865 	return(cm_straight_traverse(cm.gmx.g28_position, f));// execute actual stored move
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",865
00000F6B FB12rrrrrrrr            		MOV.L #_cm, R1
00000F71 7211E402                		ADD #02E4H, R1
00000F75 EF02                    		MOV.L R0, R2
00000F77 39rrrr               W  		BSR _cm_straight_traverse
00000F7A 8689                    		MOV.B R1, 1BH[R0]
00000F7C B689                    		MOVU.B 1BH[R0], R1
00000F7E                         L376:	; bb12.split1
                                 ;     866 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",866
00000F7E 5B11                    		MOVU.B R1, R1
00000F80 6709                    		RTSD #24H
00000F82                         _cm_set_g30_position:
                                 		.STACK	_cm_set_g30_position=8
                                 ;     867 
                                 ;     868 stat_t cm_set_g30_position(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",868
00000F82 6040                    		SUB #04H, R0
                                 ;     869 {
                                 ;     870 	copy_vector(cm.gmx.g30_position, cm.gmx.position);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",870
00000F84 FB12rrrrrrrr            		MOV.L #_cm, R1
00000F8A 7212B402                		ADD #02B4H, R1, R2
00000F8E 7211FC02                		ADD #02FCH, R1
00000F92 754318                  		MOV.L #00000018H, R3
00000F95 7F8F                    		SMOVF
00000F97                         L378:	; entry.split
                                 ;     871 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",871
00000F97 3C0300                  		MOV.B #00H, 03H[R0]
00000F9A B089                    		MOVU.B 03H[R0], R1
00000F9C                         L379:	; entry.split1
                                 ;     872 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",872
00000F9C 5B11                    		MOVU.B R1, R1
00000F9E 6701                    		RTSD #04H
00000FA0                         _cm_goto_g30_position:
                                 		.STACK	_cm_goto_g30_position=40
                                 ;     873 
                                 ;     874 stat_t cm_goto_g30_position(float target[], float flags[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",874
00000FA0 7100DC                  		ADD #0FFFFFFDCH, R0
00000FA3 A201                    		MOV.L R1, 20H[R0]
00000FA5 A18A                    		MOV.L R2, 1CH[R0]
                                 ;     875 {
                                 ;     876 	cm_set_absolute_override(MODEL, true);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",876
00000FA7 FB12rrrrrrrr            		MOV.L #_cm, R1
00000FAD 72115402                		ADD #0254H, R1
00000FB1 6612                    		MOV.L #00000001H, R2
00000FB3 39rrrr               W  		BSR _cm_set_absolute_override
00000FB6                         L381:	; entry.split
                                 ;     877 	cm_straight_traverse(target, flags);			 // move through intermediate point, or skip
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",877
00000FB6 A98A                    		MOV.L 1CH[R0], R2
00000FB8 AA01                    		MOV.L 20H[R0], R1
00000FBA 39rrrr               W  		BSR _cm_straight_traverse
00000FBD                         L382:	; bb7
                                 ;     878 	while (mp_get_planner_buffers_available() == 0); // make sure you have an available buffer
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",878
00000FBD 05rrrrrr             A  		BSR _mp_get_planner_buffers_available
00000FC1 6101                    		CMP #00H, R1
00000FC3 20rr                    		BEQ L382
00000FC5                         L383:	; bb12
                                 ;     879 	float f[] = {1,1,1,1,1,1};
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",879
00000FC5 FBE2rrrrrrrr            		MOV.L #_L20, R14
00000FCB E0E0                    		MOV.L [R14], [R0]
00000FCD E5E00101                		MOV.L 04H[R14], 04H[R0]
00000FD1 E5E00202                		MOV.L 08H[R14], 08H[R0]
00000FD5 E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00000FD9 E5E00404                		MOV.L 10H[R14], 10H[R0]
00000FDD E5E00505                		MOV.L 14H[R14], 14H[R0]
00000FE1                         L384:	; bb12.split
                                 ;     880 	return(cm_straight_traverse(cm.gmx.g30_position, f));// execute actual stored move
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",880
00000FE1 FB12rrrrrrrr            		MOV.L #_cm, R1
00000FE7 7211FC02                		ADD #02FCH, R1
00000FEB EF02                    		MOV.L R0, R2
00000FED 39rrrr               W  		BSR _cm_straight_traverse
00000FF0 8689                    		MOV.B R1, 1BH[R0]
00000FF2 B689                    		MOVU.B 1BH[R0], R1
00000FF4                         L385:	; bb12.split1
                                 ;     881 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",881
00000FF4 5B11                    		MOVU.B R1, R1
00000FF6 6709                    		RTSD #24H
00000FF8                         _cm_set_feed_rate:
                                 		.STACK	_cm_set_feed_rate=16
                                 ;     882 
                                 ;     883 /********************************
                                 ;     884  * Machining Attributes (4.3.5) *
                                 ;     885  ********************************/
                                 ;     886 /*
                                 ;     887  * cm_set_feed_rate() - F parameter (affects MODEL only)
                                 ;     888  *
                                 ;     889  * Normalize feed rate to mm/min or to minutes if in inverse time mode
                                 ;     890  */
                                 ;     891 
                                 ;     892 stat_t cm_set_feed_rate(float feed_rate)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",892
00000FF8 60C0                    		SUB #0CH, R0
00000FFA A081                    		MOV.L R1, 08H[R0]
                                 ;     893 {
                                 ;     894 	if (cm.gm.feed_rate_mode == INVERSE_TIME_MODE) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",894
00000FFC FBE2rrrrrrrr            		MOV.L #_cm, R14
00001002 5AEEA002                		MOVU.B 02A0H[R14], R14
00001006 610E                    		CMP #00H, R14
00001008 21rr                    		BNE L388
0000100A                         L387:	; bb2
0000100A FBE20000803F            		MOV.L #3F800000H, R14
                                 ;     895 		cm.gm.feed_rate = 1 / feed_rate;	// normalize to minutes (NB: active for this gcode block only)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",895
00001010 FC910E02                		FDIV 08H[R0].L, R14
00001014 FBF2rrrrrrrr            		MOV.L #_cm, R15
0000101A E7FEA5                  		MOV.L R14, 0294H[R15]
0000101D 2Err                 B  		BRA L392
0000101F                         L388:	; bb5
                                 ;     896 	} else {
                                 ;     897 		cm.gm.feed_rate = _to_millimeters(feed_rate);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",897
0000101F FBE2rrrrrrrr            		MOV.L #_cm, R14
00001025 5AEEA202                		MOVU.B 02A2H[R14], R14
00001029 610E                    		CMP #00H, R14
0000102B A881                    		MOV.L 08H[R0], R1
0000102D 21rr                    		BNE L390
0000102F                         L389:	; bb10
0000102F FD72313333CB41          		FMUL #41CB3333H, R1
00001036 E301                    		MOV.L R1, [R0]
00001038 08                   S  		BRA L391
00001039                         L390:	; bb13
00001039 E301                    		MOV.L R1, [R0]
0000103B                         L391:	; bb15
0000103B FBE2rrrrrrrr            		MOV.L #_cm, R14
00001041 E40EA5                  		MOV.L [R0], 0294H[R14]
00001044                         L392:	; bb22
                                 ;     898 	}
                                 ;     899 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",899
00001044 3C0700                  		MOV.B #00H, 07H[R0]
00001047 B189                    		MOVU.B 07H[R0], R1
00001049                         L393:	; bb22.split
                                 ;     900 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",900
00001049 5B11                    		MOVU.B R1, R1
0000104B 6703                    		RTSD #0CH
0000104D                         _cm_set_feed_rate_mode:
                                 		.STACK	_cm_set_feed_rate_mode=8
                                 ;     901 
                                 ;     902 /*
                                 ;     903  * cm_set_feed_rate_mode() - G93, G94 (affects MODEL only)
                                 ;     904  *
                                 ;     905  *	INVERSE_TIME_MODE = 0,			// G93
                                 ;     906  *	UNITS_PER_MINUTE_MODE,			// G94
                                 ;     907  *	UNITS_PER_REVOLUTION_MODE		// G95 (unimplemented)
                                 ;     908  */
                                 ;     909 
                                 ;     910 stat_t cm_set_feed_rate_mode(uint8_t mode)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",910
0000104D 6040                    		SUB #04H, R0
0000104F 8089                    		MOV.B R1, 03H[R0]
                                 ;     911 {
                                 ;     912 	cm.gm.feed_rate_mode = mode;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",912
00001051 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001057 CBE1A002                		MOV.B R1, 02A0H[R14]
0000105B                         L395:	; entry.split
                                 ;     913 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",913
0000105B 3C0200                  		MOV.B #00H, 02H[R0]
0000105E B081                    		MOVU.B 02H[R0], R1
00001060                         L396:	; entry.split1
                                 ;     914 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",914
00001060 5B11                    		MOVU.B R1, R1
00001062 6701                    		RTSD #04H
00001064                         _cm_set_path_control:
                                 		.STACK	_cm_set_path_control=8
                                 ;     915 
                                 ;     916 /*
                                 ;     917  * cm_set_path_control() - G61, G61.1, G64 (affects MODEL only)
                                 ;     918  */
                                 ;     919 
                                 ;     920 stat_t cm_set_path_control(uint8_t mode)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",920
00001064 6040                    		SUB #04H, R0
00001066 8089                    		MOV.B R1, 03H[R0]
                                 ;     921 {
                                 ;     922 	cm.gm.path_control = mode;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",922
00001068 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000106E CBE1A502                		MOV.B R1, 02A5H[R14]
00001072                         L398:	; entry.split
                                 ;     923 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",923
00001072 3C0200                  		MOV.B #00H, 02H[R0]
00001075 B081                    		MOVU.B 02H[R0], R1
00001077                         L399:	; entry.split1
                                 ;     924 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",924
00001077 5B11                    		MOVU.B R1, R1
00001079 6701                    		RTSD #04H
0000107B                         _cm_dwell:
                                 		.STACK	_cm_dwell=12
                                 ;     925 
                                 ;     926 /*******************************
                                 ;     927  * Machining Functions (4.3.6) *
                                 ;     928  *******************************/
                                 ;     929 /*
                                 ;     930  * cm_arc_feed() - SEE plan_arc.c(pp)
                                 ;     931  */
                                 ;     932 
                                 ;     933 /*
                                 ;     934  * cm_dwell() - G4, P parameter (seconds)
                                 ;     935  */
                                 ;     936 stat_t cm_dwell(float seconds)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",936
0000107B 6080                    		SUB #08H, R0
0000107D A009                    		MOV.L R1, 04H[R0]
                                 ;     937 {
                                 ;     938 	cm.gm.parameter = seconds;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",938
0000107F FBE2rrrrrrrr            		MOV.L #_cm, R14
00001085 E7E1A7                  		MOV.L R1, 029CH[R14]
00001088                         L401:	; entry.split
                                 ;     939 	mp_dwell(seconds);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",939
00001088 A809                    		MOV.L 04H[R0], R1
0000108A 05rrrrrr             A  		BSR _mp_dwell
0000108E                         L402:	; entry.split1
                                 ;     940 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",940
0000108E 3C0300                  		MOV.B #00H, 03H[R0]
00001091 B089                    		MOVU.B 03H[R0], R1
00001093                         L403:	; entry.split2
                                 ;     941 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",941
00001093 5B11                    		MOVU.B R1, R1
00001095 6702                    		RTSD #08H
00001097                         _cm_straight_feed:
                                 		.STACK	_cm_straight_feed=20
                                 ;     942 
                                 ;     943 /*
                                 ;     944  * cm_straight_feed() - G1
                                 ;     945  */
                                 ;     946 stat_t cm_straight_feed(float target[], float flags[])
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",946
00001097 7100F0                  		ADD #0FFFFFFF0H, R0
0000109A A089                    		MOV.L R1, 0CH[R0]
0000109C A082                    		MOV.L R2, 08H[R0]
                                 ;     947 {
                                 ;     948 	// trap zero feed rate condition
                                 ;     949 	if ((cm.gm.feed_rate_mode != INVERSE_TIME_MODE) && (fp_ZERO(cm.gm.feed_rate))) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",949
0000109E FBE2rrrrrrrr            		MOV.L #_cm, R14
000010A4 5AEEA002                		MOVU.B 02A0H[R14], R14
000010A8 610E                    		CMP #00H, R14
000010AA 18                   S  		BNE L406
000010AB 2Err                 B  		BRA L408
000010AD                         L405:	; bb4
                                 ;     950 		return (STAT_GCODE_FEEDRATE_NOT_SPECIFIED);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",950
000010AD 3C058E                  		MOV.B #8EH, 05H[R0]
000010B0 2Err                 B  		BRA L420
000010B2                         L406:	; bb10
000010B2 FBE2rrrrrrrr            		MOV.L #_cm, R14
000010B8 EDEEA5                  		MOV.L 0294H[R14], R14
000010BB 7BFE                    		BCLR #1FH, R14
000010BD FD721EBD378635          		FCMP #358637BDH, R14
000010C4 26rr                    		BPZ L408
000010C6                         L407:	; bb15
000010C6 F80601                  		MOV.L #00000001H, [R0]
000010C9 08                   S  		BRA L409
000010CA                         L408:	; bb16
000010CA F80600                  		MOV.L #00000000H, [R0]
000010CD                         L409:	; bb17
000010CD EC01                    		MOV.L [R0], R1
000010CF 6101                    		CMP #00H, R1
000010D1 21rr                    		BNE L405
000010D3                         L410:	; bb21
                                 ;     951 	}
                                 ;     952 	cm.gm.motion_mode = MOTION_MODE_STRAIGHT_FEED;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",952
000010D3 FBE2rrrrrrrr            		MOV.L #_cm, R14
000010D9 FAE4580201              		MOV.B #01H, 0258H[R14]
000010DE                         L411:	; bb21.split
                                 ;     953 	cm_set_model_target(target, flags);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",953
000010DE A882                    		MOV.L 08H[R0], R2
000010E0 A889                    		MOV.L 0CH[R0], R1
000010E2 39rrrr               W  		BSR _cm_set_model_target
000010E5                         L412:	; bb21.split1
                                 ;     954 
                                 ;     955 	// test soft limits
                                 ;     956 	stat_t status = cm_test_soft_limits(cm.gm.target);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",956
000010E5 FB12rrrrrrrr            		MOV.L #_cm, R1
000010EB 72115C02                		ADD #025CH, R1
000010EF 39rrrr               W  		BSR _cm_test_soft_limits
000010F2 8181                    		MOV.B R1, 06H[R0]
000010F4                         L413:	; bb21.split2
                                 ;     957 	if (status != STAT_OK) return (cm_soft_alarm(status));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",957
000010F4 B181                    		MOVU.B 06H[R0], R1
000010F6 6101                    		CMP #00H, R1
000010F8 10                   S  		BEQ L415
000010F9                         L414:	; bb26
000010F9 B181                    		MOVU.B 06H[R0], R1
000010FB 39rrrr               W  		BSR _cm_soft_alarm
000010FE 8109                    		MOV.B R1, 05H[R0]
00001100 2Err                 B  		BRA L420
00001102                         L415:	; bb35
                                 ;     958 
                                 ;     959 	// prep and plan the move
                                 ;     960 	cm_set_work_offsets(&cm.gm);				// capture the fully resolved offsets to the state
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",960
00001102 FB12rrrrrrrr            		MOV.L #_cm, R1
00001108 72115402                		ADD #0254H, R1
0000110C 39rrrr               W  		BSR _cm_set_work_offsets
0000110F                         L416:	; bb35.split
                                 ;     961 	cm_cycle_start();							// required for homing & other cycles
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",961
0000110F 39rrrr               W  		BSR _cm_cycle_start
00001112                         L417:	; bb35.split3
                                 ;     962 	status = mp_aline(&cm.gm);					// send the move to the planner
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",962
00001112 FB12rrrrrrrr            		MOV.L #_cm, R1
00001118 72115402                		ADD #0254H, R1
0000111C 05rrrrrr             A  		BSR _mp_aline
00001120 8181                    		MOV.B R1, 06H[R0]
00001122                         L418:	; bb35.split4
                                 ;     963 	cm_finalize_move();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",963
00001122 39rrrr               W  		BSR _cm_finalize_move
00001125                         L419:	; bb35.split5
                                 ;     964 	return (status);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",964
00001125 C5000605                		MOV.B 06H[R0], 05H[R0]
00001129                         L420:	; bb39
00001129 C5000507                		MOV.B 05H[R0], 07H[R0]
                                 ;     965 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",965
0000112D B189                    		MOVU.B 07H[R0], R1
0000112F 6704                    		RTSD #10H
00001131                         _cm_select_tool:
                                 		.STACK	_cm_select_tool=32
                                 ;     966 
                                 ;     967 /*****************************
                                 ;     968  * Spindle Functions (4.3.7) *
                                 ;     969  *****************************/
                                 ;     970 // see spindle.c, spindle.h
                                 ;     971 
                                 ;     972 /**************************
                                 ;     973  * Tool Functions (4.3.8) *
                                 ;     974  **************************/
                                 ;     975 /*
                                 ;     976  * cm_select_tool()		- T parameter
                                 ;     977  * _exec_select_tool()	- execution callback
                                 ;     978  *
                                 ;     979  * cm_change_tool()		- M6 (This might become a complete tool change cycle)
                                 ;     980  * _exec_change_tool()	- execution callback
                                 ;     981  *
                                 ;     982  * Note: These functions don't actually do anything for now, and there's a bug
                                 ;     983  *		 where T and M in different blocks don;t work correctly
                                 ;     984  */
                                 ;     985 stat_t cm_select_tool(uint8_t tool_select)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",985
00001131 7100E4                  		ADD #0FFFFFFE4H, R0
00001134 8689                    		MOV.B R1, 1BH[R0]
                                 ;     986 {
                                 ;     987 	float value[AXES] = { (float)tool_select,0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",987
00001136 FBE2rrrrrrrr            		MOV.L #_L21, R14
0000113C E0E0                    		MOV.L [R14], [R0]
0000113E E5E00101                		MOV.L 04H[R14], 04H[R0]
00001142 E5E00202                		MOV.L 08H[R14], 08H[R0]
00001146 E5E00303                		MOV.L 0CH[R14], 0CH[R0]
0000114A E5E00404                		MOV.L 10H[R14], 10H[R0]
0000114E E5E00505                		MOV.L 14H[R14], 14H[R0]
00001152 FC45011B                		ITOF 1BH[R0].UB, R1
00001156 E301                    		MOV.L R1, [R0]
00001158                         L422:	; entry.split
00001158 EF02                    		MOV.L R0, R2
                                 ;     988 	mp_queue_command(_exec_select_tool, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",988
0000115A FB12rrrrrrrr            		MOV.L #__$_exec_select_tool, R1
00001160 EF23                    		MOV.L R2, R3
00001162 05rrrrrr             A  		BSR _mp_queue_command
00001166                         L423:	; entry.split1
                                 ;     989 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",989
00001166 3C8A00                  		MOV.B #00H, 1AH[R0]
00001169 B681                    		MOVU.B 1AH[R0], R1
0000116B                         L424:	; entry.split2
                                 ;     990 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",990
0000116B 5B11                    		MOVU.B R1, R1
0000116D 6707                    		RTSD #1CH
0000116F                         __$_exec_select_tool:
                                 		.STACK	__$_exec_select_tool=12
                                 ;     991 
                                 ;     992 static void _exec_select_tool(float *value, float *flag)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",992
0000116F 6080                    		SUB #08H, R0
00001171 A009                    		MOV.L R1, 04H[R0]
00001173 E302                    		MOV.L R2, [R0]
                                 ;     993 {
                                 ;     994 	cm.gm.tool_select = (uint8_t)value[0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",994
00001175 A809                    		MOV.L 04H[R0], R1
00001177 EC1E                    		MOV.L [R1], R14
00001179 FD721E0000004F          		FCMP #4F000000H, R14
00001180 29rr                    		BLT L427
00001182                         L426:	; entry
00001182 FD722E000080CF          		FADD #0CF800000H, R14
00001189                         L427:	; entry
00001189 FC97EE                  		FTOI R14, R14
0000118C FBF2rrrrrrrr            		MOV.L #_cm, R15
00001192 CBFEA902                		MOV.B R14, 02A9H[R15]
00001196 6702                    		RTSD #08H
00001198                         _cm_change_tool:
                                 		.STACK	_cm_change_tool=32
                                 ;     995 }
                                 ;     996 
                                 ;     997 stat_t cm_change_tool(uint8_t tool_change)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",997
00001198 7100E4                  		ADD #0FFFFFFE4H, R0
0000119B 8689                    		MOV.B R1, 1BH[R0]
                                 ;     998 {
                                 ;     999 	float value[AXES] = { (float)cm.gm.tool_select,0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",999
0000119D FBE2rrrrrrrr            		MOV.L #_L22, R14
000011A3 E0E0                    		MOV.L [R14], [R0]
000011A5 E5E00101                		MOV.L 04H[R14], 04H[R0]
000011A9 E5E00202                		MOV.L 08H[R14], 08H[R0]
000011AD E5E00303                		MOV.L 0CH[R14], 0CH[R0]
000011B1 E5E00404                		MOV.L 10H[R14], 10H[R0]
000011B5 E5E00505                		MOV.L 14H[R14], 14H[R0]
000011B9 FBE2rrrrrrrr            		MOV.L #_cm, R14
000011BF FC46E1A902              		ITOF 02A9H[R14].UB, R1
000011C4 E301                    		MOV.L R1, [R0]
000011C6                         L429:	; entry.split
000011C6 EF02                    		MOV.L R0, R2
                                 ;    1000 	mp_queue_command(_exec_change_tool, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1000
000011C8 FB12rrrrrrrr            		MOV.L #__$_exec_change_tool, R1
000011CE EF23                    		MOV.L R2, R3
000011D0 05rrrrrr             A  		BSR _mp_queue_command
000011D4                         L430:	; entry.split1
                                 ;    1001 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1001
000011D4 3C8A00                  		MOV.B #00H, 1AH[R0]
000011D7 B681                    		MOVU.B 1AH[R0], R1
000011D9                         L431:	; entry.split2
                                 ;    1002 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1002
000011D9 5B11                    		MOVU.B R1, R1
000011DB 6707                    		RTSD #1CH
000011DD                         __$_exec_change_tool:
                                 		.STACK	__$_exec_change_tool=12
                                 ;    1003 
                                 ;    1004 static void _exec_change_tool(float *value, float *flag)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1004
000011DD 6080                    		SUB #08H, R0
000011DF A009                    		MOV.L R1, 04H[R0]
000011E1 E302                    		MOV.L R2, [R0]
                                 ;    1005 {
                                 ;    1006 	cm.gm.tool = (uint8_t)value[0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1006
000011E3 A809                    		MOV.L 04H[R0], R1
000011E5 EC1E                    		MOV.L [R1], R14
000011E7 FD721E0000004F          		FCMP #4F000000H, R14
000011EE 29rr                    		BLT L434
000011F0                         L433:	; entry
000011F0 FD722E000080CF          		FADD #0CF800000H, R14
000011F7                         L434:	; entry
000011F7 FC97EE                  		FTOI R14, R14
000011FA FBF2rrrrrrrr            		MOV.L #_cm, R15
00001200 CBFEA802                		MOV.B R14, 02A8H[R15]
00001204 6702                    		RTSD #08H
00001206                         _cm_mist_coolant_control:
                                 		.STACK	_cm_mist_coolant_control=32
                                 ;    1007 }
                                 ;    1008 
                                 ;    1009 /***********************************
                                 ;    1010  * Miscellaneous Functions (4.3.9) *
                                 ;    1011  ***********************************/
                                 ;    1012 /*
                                 ;    1013  * cm_mist_coolant_control() - M7
                                 ;    1014  * cm_flood_coolant_control() - M8, M9
                                 ;    1015  */
                                 ;    1016 
                                 ;    1017 stat_t cm_mist_coolant_control(uint8_t mist_coolant)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1017
00001206 7100E4                  		ADD #0FFFFFFE4H, R0
00001209 8689                    		MOV.B R1, 1BH[R0]
                                 ;    1018 {
                                 ;    1019 	float value[AXES] = { (float)mist_coolant,0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1019
0000120B FBE2rrrrrrrr            		MOV.L #_L23, R14
00001211 E0E0                    		MOV.L [R14], [R0]
00001213 E5E00101                		MOV.L 04H[R14], 04H[R0]
00001217 E5E00202                		MOV.L 08H[R14], 08H[R0]
0000121B E5E00303                		MOV.L 0CH[R14], 0CH[R0]
0000121F E5E00404                		MOV.L 10H[R14], 10H[R0]
00001223 E5E00505                		MOV.L 14H[R14], 14H[R0]
00001227 FC45011B                		ITOF 1BH[R0].UB, R1
0000122B E301                    		MOV.L R1, [R0]
0000122D                         L436:	; entry.split
0000122D EF02                    		MOV.L R0, R2
                                 ;    1020 	mp_queue_command(_exec_mist_coolant_control, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1020
0000122F FB12rrrrrrrr            		MOV.L #__$_exec_mist_coolant_control, R1
00001235 EF23                    		MOV.L R2, R3
00001237 05rrrrrr             A  		BSR _mp_queue_command
0000123B                         L437:	; entry.split1
                                 ;    1021 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1021
0000123B 3C8A00                  		MOV.B #00H, 1AH[R0]
0000123E B681                    		MOVU.B 1AH[R0], R1
00001240                         L438:	; entry.split2
                                 ;    1022 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1022
00001240 5B11                    		MOVU.B R1, R1
00001242 6707                    		RTSD #1CH
00001244                         __$_exec_mist_coolant_control:
                                 		.STACK	__$_exec_mist_coolant_control=12
                                 ;    1023 static void _exec_mist_coolant_control(float *value, float *flag)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1023
00001244 6080                    		SUB #08H, R0
00001246 A009                    		MOV.L R1, 04H[R0]
00001248 E302                    		MOV.L R2, [R0]
                                 ;    1024 {
                                 ;    1025 	cm.gm.mist_coolant = (uint8_t)value[0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1025
0000124A A809                    		MOV.L 04H[R0], R1
0000124C EC1E                    		MOV.L [R1], R14
0000124E FD721E0000004F          		FCMP #4F000000H, R14
00001255 29rr                    		BLT L441
00001257                         L440:	; entry
00001257 FD722E000080CF          		FADD #0CF800000H, R14
0000125E                         L441:	; entry
0000125E FC97EE                  		FTOI R14, R14
00001261 FBF2rrrrrrrr            		MOV.L #_cm, R15
00001267 CBFEAA02                		MOV.B R14, 02AAH[R15]
0000126B 6702                    		RTSD #08H
0000126D                         _cm_flood_coolant_control:
                                 		.STACK	_cm_flood_coolant_control=32
                                 ;    1026 
                                 ;    1027 #ifdef __AVR
                                 ;    1028 	if (cm.gm.mist_coolant == true)
                                 ;    1029 		gpio_set_bit_on(MIST_COOLANT_BIT);	// if
                                 ;    1030 	gpio_set_bit_off(MIST_COOLANT_BIT);		// else
                                 ;    1031 #endif // __AVR
                                 ;    1032 
                                 ;    1033 #ifdef __ARM
                                 ;    1034 	if (cm.gm.mist_coolant == true)
                                 ;    1035 		coolant_enable_pin.set();	// if
                                 ;    1036 	coolant_enable_pin.clear();		// else
                                 ;    1037 #endif // __ARM
                                 ;    1038 }
                                 ;    1039 
                                 ;    1040 stat_t cm_flood_coolant_control(uint8_t flood_coolant)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1040
0000126D 7100E4                  		ADD #0FFFFFFE4H, R0
00001270 8689                    		MOV.B R1, 1BH[R0]
                                 ;    1041 {
                                 ;    1042 	float value[AXES] = { (float)flood_coolant,0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1042
00001272 FBE2rrrrrrrr            		MOV.L #_L24, R14
00001278 E0E0                    		MOV.L [R14], [R0]
0000127A E5E00101                		MOV.L 04H[R14], 04H[R0]
0000127E E5E00202                		MOV.L 08H[R14], 08H[R0]
00001282 E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00001286 E5E00404                		MOV.L 10H[R14], 10H[R0]
0000128A E5E00505                		MOV.L 14H[R14], 14H[R0]
0000128E FC45011B                		ITOF 1BH[R0].UB, R1
00001292 E301                    		MOV.L R1, [R0]
00001294                         L443:	; entry.split
00001294 EF02                    		MOV.L R0, R2
                                 ;    1043 	mp_queue_command(_exec_flood_coolant_control, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1043
00001296 FB12rrrrrrrr            		MOV.L #__$_exec_flood_coolant_control, R1
0000129C EF23                    		MOV.L R2, R3
0000129E 05rrrrrr             A  		BSR _mp_queue_command
000012A2                         L444:	; entry.split1
                                 ;    1044 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1044
000012A2 3C8A00                  		MOV.B #00H, 1AH[R0]
000012A5 B681                    		MOVU.B 1AH[R0], R1
000012A7                         L445:	; entry.split2
                                 ;    1045 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1045
000012A7 5B11                    		MOVU.B R1, R1
000012A9 6707                    		RTSD #1CH
000012AB                         __$_exec_flood_coolant_control:
                                 		.STACK	__$_exec_flood_coolant_control=12
                                 ;    1046 static void _exec_flood_coolant_control(float *value, float *flag)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1046
000012AB 6080                    		SUB #08H, R0
000012AD A009                    		MOV.L R1, 04H[R0]
000012AF E302                    		MOV.L R2, [R0]
                                 ;    1047 {
                                 ;    1048 	cm.gm.flood_coolant = (uint8_t)value[0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1048
000012B1 A809                    		MOV.L 04H[R0], R1
000012B3 EC1E                    		MOV.L [R1], R14
000012B5 FD721E0000004F          		FCMP #4F000000H, R14
000012BC 29rr                    		BLT L448
000012BE                         L447:	; entry
000012BE FD722E000080CF          		FADD #0CF800000H, R14
000012C5                         L448:	; entry
000012C5 FC97EE                  		FTOI R14, R14
000012C8 FBF2rrrrrrrr            		MOV.L #_cm, R15
000012CE CBFEAB02                		MOV.B R14, 02ABH[R15]
000012D2 6702                    		RTSD #08H
000012D4                         _cm_override_enables:
                                 		.STACK	_cm_override_enables=8
                                 ;    1049 
                                 ;    1050 #ifdef __AVR
                                 ;    1051 	if (cm.gm.flood_coolant == true) {
                                 ;    1052 		gpio_set_bit_on(FLOOD_COOLANT_BIT);
                                 ;    1053 	} else {
                                 ;    1054 		gpio_set_bit_off(FLOOD_COOLANT_BIT);
                                 ;    1055 		float vect[] = { 0,0,0,0,0,0 };				// turn off mist coolant
                                 ;    1056 		_exec_mist_coolant_control(vect, vect);		// M9 special function
                                 ;    1057 	}
                                 ;    1058 #endif // __AVR
                                 ;    1059 
                                 ;    1060 #ifdef __ARM
                                 ;    1061 	if (cm.gm.flood_coolant == true) {
                                 ;    1062 		coolant_enable_pin.set();
                                 ;    1063 	} else {
                                 ;    1064 		coolant_enable_pin.clear();
                                 ;    1065 		float vect[] = { 0,0,0,0,0,0 };				// turn off mist coolant
                                 ;    1066 		_exec_mist_coolant_control(vect, vect);		// M9 special function
                                 ;    1067 	}
                                 ;    1068 #endif // __ARM
                                 ;    1069 }
                                 ;    1070 
                                 ;    1071 /*
                                 ;    1072  * cm_override_enables() - M48, M49
                                 ;    1073  * cm_feed_rate_override_enable() - M50
                                 ;    1074  * cm_feed_rate_override_factor() - M50.1
                                 ;    1075  * cm_traverse_override_enable() - M50.2
                                 ;    1076  * cm_traverse_override_factor() - M50.3
                                 ;    1077  * cm_spindle_override_enable() - M51
                                 ;    1078  * cm_spindle_override_factor() - M51.1
                                 ;    1079  *
                                 ;    1080  *	Override enables are kind of a mess in Gcode. This is an attempt to sort them out.
                                 ;    1081  *	See http://www.linuxcnc.org/docs/2.4/html/gcode_main.html#sec:M50:-Feed-Override
                                 ;    1082  */
                                 ;    1083 
                                 ;    1084 stat_t cm_override_enables(uint8_t flag)			// M48, M49
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1084
000012D4 6040                    		SUB #04H, R0
000012D6 8089                    		MOV.B R1, 03H[R0]
                                 ;    1085 {
                                 ;    1086 	cm.gmx.feed_rate_override_enable = flag;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1086
000012D8 FBE2rrrrrrrr            		MOV.L #_cm, R14
000012DE CBE11C03                		MOV.B R1, 031CH[R14]
000012E2                         L450:	; entry.split
                                 ;    1087 	cm.gmx.traverse_override_enable = flag;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1087
000012E2 FBE2rrrrrrrr            		MOV.L #_cm, R14
000012E8 C90E031D03              		MOV.B 03H[R0], 031DH[R14]
000012ED                         L451:	; entry.split1
                                 ;    1088 	cm.gmx.spindle_override_enable = flag;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1088
000012ED FBE2rrrrrrrr            		MOV.L #_cm, R14
000012F3 C90E032803              		MOV.B 03H[R0], 0328H[R14]
000012F8                         L452:	; entry.split2
                                 ;    1089 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1089
000012F8 3C0200                  		MOV.B #00H, 02H[R0]
000012FB B081                    		MOVU.B 02H[R0], R1
000012FD                         L453:	; entry.split3
                                 ;    1090 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1090
000012FD 5B11                    		MOVU.B R1, R1
000012FF 6701                    		RTSD #04H
00001301                         _cm_feed_rate_override_enable:
                                 		.STACK	_cm_feed_rate_override_enable=12
                                 ;    1091 
                                 ;    1092 stat_t cm_feed_rate_override_enable(uint8_t flag)	// M50
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1092
00001301 6080                    		SUB #08H, R0
00001303 8189                    		MOV.B R1, 07H[R0]
                                 ;    1093 {
                                 ;    1094 	if (fp_TRUE(cm.gf.parameter) && fp_ZERO(cm.gn.parameter)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1094
00001305 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000130B FBF2BD378635            		MOV.L #358637BDH, R15
00001311 FC85EFF6                		FCMP 03D8H[R14].L, R15
00001315 27rr                    		BN L457
00001317 2Err                 B  		BRA L459
00001319                         L455:	; bb2
                                 ;    1095 		cm.gmx.feed_rate_override_enable = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1095
00001319 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000131F FAE41C0300              		MOV.B #00H, 031CH[R14]
00001324 2Err                 B  		BRA L461
00001326                         L456:	; bb3
                                 ;    1096 	} else {
                                 ;    1097 		cm.gmx.feed_rate_override_enable = true;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1097
00001326 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000132C FAE41C0301              		MOV.B #01H, 031CH[R14]
00001331 2Err                 B  		BRA L461
00001333                         L457:	; bb7
00001333 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001339 EDEEDE                  		MOV.L 0378H[R14], R14
0000133C 7BFE                    		BCLR #1FH, R14
0000133E FD721EBD378635          		FCMP #358637BDH, R14
00001345 26rr                    		BPZ L459
00001347                         L458:	; bb12
00001347 F80601                  		MOV.L #00000001H, [R0]
0000134A 08                   S  		BRA L460
0000134B                         L459:	; bb13
0000134B F80600                  		MOV.L #00000000H, [R0]
0000134E                         L460:	; bb14
0000134E EC01                    		MOV.L [R0], R1
00001350 6101                    		CMP #00H, R1
00001352 21rr                    		BNE L455
00001354 2Err                 B  		BRA L456
00001356                         L461:	; bb18
                                 ;    1098 	}
                                 ;    1099 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1099
00001356 3C0600                  		MOV.B #00H, 06H[R0]
00001359 B181                    		MOVU.B 06H[R0], R1
0000135B                         L462:	; bb18.split
                                 ;    1100 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1100
0000135B 5B11                    		MOVU.B R1, R1
0000135D 6702                    		RTSD #08H
0000135F                         _cm_feed_rate_override_factor:
                                 		.STACK	_cm_feed_rate_override_factor=8
                                 ;    1101 
                                 ;    1102 stat_t cm_feed_rate_override_factor(uint8_t flag)	// M50.1
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1102
0000135F 6040                    		SUB #04H, R0
00001361 8089                    		MOV.B R1, 03H[R0]
                                 ;    1103 {
                                 ;    1104 	cm.gmx.feed_rate_override_enable = flag;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1104
00001363 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001369 CBE11C03                		MOV.B R1, 031CH[R14]
0000136D                         L464:	; entry.split
                                 ;    1105 	cm.gmx.feed_rate_override_factor = cm.gn.parameter;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1105
0000136D FBE2rrrrrrrr            		MOV.L #_cm, R14
00001373 E5EEDEC5                		MOV.L 0378H[R14], 0314H[R14]
00001377                         L465:	; entry.split1
                                 ;    1106 //	mp_feed_rate_override(flag, cm.gn.parameter);	// replan the queue for new feed rate
                                 ;    1107 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1107
00001377 3C0200                  		MOV.B #00H, 02H[R0]
0000137A B081                    		MOVU.B 02H[R0], R1
0000137C                         L466:	; entry.split2
                                 ;    1108 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1108
0000137C 5B11                    		MOVU.B R1, R1
0000137E 6701                    		RTSD #04H
00001380                         _cm_traverse_override_enable:
                                 		.STACK	_cm_traverse_override_enable=12
                                 ;    1109 
                                 ;    1110 stat_t cm_traverse_override_enable(uint8_t flag)	// M50.2
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1110
00001380 6080                    		SUB #08H, R0
00001382 8189                    		MOV.B R1, 07H[R0]
                                 ;    1111 {
                                 ;    1112 	if (fp_TRUE(cm.gf.parameter) && fp_ZERO(cm.gn.parameter)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1112
00001384 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000138A FBF2BD378635            		MOV.L #358637BDH, R15
00001390 FC85EFF6                		FCMP 03D8H[R14].L, R15
00001394 27rr                    		BN L470
00001396 2Err                 B  		BRA L472
00001398                         L468:	; bb2
                                 ;    1113 		cm.gmx.traverse_override_enable = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1113
00001398 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000139E FAE41D0300              		MOV.B #00H, 031DH[R14]
000013A3 2Err                 B  		BRA L474
000013A5                         L469:	; bb3
                                 ;    1114 	} else {
                                 ;    1115 		cm.gmx.traverse_override_enable = true;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1115
000013A5 FBE2rrrrrrrr            		MOV.L #_cm, R14
000013AB FAE41D0301              		MOV.B #01H, 031DH[R14]
000013B0 2Err                 B  		BRA L474
000013B2                         L470:	; bb7
000013B2 FBE2rrrrrrrr            		MOV.L #_cm, R14
000013B8 EDEEDE                  		MOV.L 0378H[R14], R14
000013BB 7BFE                    		BCLR #1FH, R14
000013BD FD721EBD378635          		FCMP #358637BDH, R14
000013C4 26rr                    		BPZ L472
000013C6                         L471:	; bb12
000013C6 F80601                  		MOV.L #00000001H, [R0]
000013C9 08                   S  		BRA L473
000013CA                         L472:	; bb13
000013CA F80600                  		MOV.L #00000000H, [R0]
000013CD                         L473:	; bb14
000013CD EC01                    		MOV.L [R0], R1
000013CF 6101                    		CMP #00H, R1
000013D1 21rr                    		BNE L468
000013D3 2Err                 B  		BRA L469
000013D5                         L474:	; bb18
                                 ;    1116 	}
                                 ;    1117 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1117
000013D5 3C0600                  		MOV.B #00H, 06H[R0]
000013D8 B181                    		MOVU.B 06H[R0], R1
000013DA                         L475:	; bb18.split
                                 ;    1118 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1118
000013DA 5B11                    		MOVU.B R1, R1
000013DC 6702                    		RTSD #08H
000013DE                         _cm_traverse_override_factor:
                                 		.STACK	_cm_traverse_override_factor=8
                                 ;    1119 
                                 ;    1120 stat_t cm_traverse_override_factor(uint8_t flag)	// M51
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1120
000013DE 6040                    		SUB #04H, R0
000013E0 8089                    		MOV.B R1, 03H[R0]
                                 ;    1121 {
                                 ;    1122 	cm.gmx.traverse_override_enable = flag;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1122
000013E2 FBE2rrrrrrrr            		MOV.L #_cm, R14
000013E8 CBE11D03                		MOV.B R1, 031DH[R14]
000013EC                         L477:	; entry.split
                                 ;    1123 	cm.gmx.traverse_override_factor = cm.gn.parameter;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1123
000013EC FBE2rrrrrrrr            		MOV.L #_cm, R14
000013F2 E5EEDEC6                		MOV.L 0378H[R14], 0318H[R14]
000013F6                         L478:	; entry.split1
                                 ;    1124 //	mp_feed_rate_override(flag, cm.gn.parameter);	// replan the queue for new feed rate
                                 ;    1125 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1125
000013F6 3C0200                  		MOV.B #00H, 02H[R0]
000013F9 B081                    		MOVU.B 02H[R0], R1
000013FB                         L479:	; entry.split2
                                 ;    1126 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1126
000013FB 5B11                    		MOVU.B R1, R1
000013FD 6701                    		RTSD #04H
000013FF                         _cm_spindle_override_enable:
                                 		.STACK	_cm_spindle_override_enable=12
                                 ;    1127 
                                 ;    1128 stat_t cm_spindle_override_enable(uint8_t flag)		// M51.1
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1128
000013FF 6080                    		SUB #08H, R0
00001401 8189                    		MOV.B R1, 07H[R0]
                                 ;    1129 {
                                 ;    1130 	if (fp_TRUE(cm.gf.parameter) && fp_ZERO(cm.gn.parameter)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1130
00001403 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001409 FBF2BD378635            		MOV.L #358637BDH, R15
0000140F FC85EFF6                		FCMP 03D8H[R14].L, R15
00001413 27rr                    		BN L483
00001415 2Err                 B  		BRA L485
00001417                         L481:	; bb2
                                 ;    1131 		cm.gmx.spindle_override_enable = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1131
00001417 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000141D FAE4280300              		MOV.B #00H, 0328H[R14]
00001422 2Err                 B  		BRA L487
00001424                         L482:	; bb3
                                 ;    1132 	} else {
                                 ;    1133 		cm.gmx.spindle_override_enable = true;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1133
00001424 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000142A FAE4280301              		MOV.B #01H, 0328H[R14]
0000142F 2Err                 B  		BRA L487
00001431                         L483:	; bb7
00001431 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001437 EDEEDE                  		MOV.L 0378H[R14], R14
0000143A 7BFE                    		BCLR #1FH, R14
0000143C FD721EBD378635          		FCMP #358637BDH, R14
00001443 26rr                    		BPZ L485
00001445                         L484:	; bb12
00001445 F80601                  		MOV.L #00000001H, [R0]
00001448 08                   S  		BRA L486
00001449                         L485:	; bb13
00001449 F80600                  		MOV.L #00000000H, [R0]
0000144C                         L486:	; bb14
0000144C EC01                    		MOV.L [R0], R1
0000144E 6101                    		CMP #00H, R1
00001450 21rr                    		BNE L481
00001452 2Err                 B  		BRA L482
00001454                         L487:	; bb18
                                 ;    1134 	}
                                 ;    1135 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1135
00001454 3C0600                  		MOV.B #00H, 06H[R0]
00001457 B181                    		MOVU.B 06H[R0], R1
00001459                         L488:	; bb18.split
                                 ;    1136 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1136
00001459 5B11                    		MOVU.B R1, R1
0000145B 6702                    		RTSD #08H
0000145D                         _cm_spindle_override_factor:
                                 		.STACK	_cm_spindle_override_factor=8
                                 ;    1137 
                                 ;    1138 stat_t cm_spindle_override_factor(uint8_t flag)		// M50.1
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1138
0000145D 6040                    		SUB #04H, R0
0000145F 8089                    		MOV.B R1, 03H[R0]
                                 ;    1139 {
                                 ;    1140 	cm.gmx.spindle_override_enable = flag;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1140
00001461 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001467 CBE12803                		MOV.B R1, 0328H[R14]
0000146B                         L490:	; entry.split
                                 ;    1141 	cm.gmx.spindle_override_factor = cm.gn.parameter;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1141
0000146B FBE2rrrrrrrr            		MOV.L #_cm, R14
00001471 E5EEDEC9                		MOV.L 0378H[R14], 0324H[R14]
00001475                         L491:	; entry.split1
                                 ;    1142 //	change spindle speed
                                 ;    1143 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1143
00001475 3C0200                  		MOV.B #00H, 02H[R0]
00001478 B081                    		MOVU.B 02H[R0], R1
0000147A                         L492:	; entry.split2
                                 ;    1144 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1144
0000147A 5B11                    		MOVU.B R1, R1
0000147C 6701                    		RTSD #04H
0000147E                         _cm_message:
                                 		.STACK	_cm_message=8
                                 ;    1145 
                                 ;    1146 /*
                                 ;    1147  * cm_message() - queue a RAM string as a message in the response (unconditionally)
                                 ;    1148  *
                                 ;    1149  *	Note: If you need to post a FLASH string use pstr2str to convert it to a RAM string
                                 ;    1150  */
                                 ;    1151 
                                 ;    1152 void cm_message(char_t *message)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1152
0000147E 6040                    		SUB #04H, R0
00001480 EF12                    		MOV.L R1, R2
00001482 E302                    		MOV.L R2, [R0]
                                 ;    1153 {
                                 ;    1154 	nv_add_string((const char_t *)"msg", message);	// add message to the response object
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1154
00001484 FB12rrrrrrrr            		MOV.L #_L25, R1
0000148A 05rrrrrr             A  		BSR _nv_add_string
0000148E 6701                    		RTSD #04H
00001490                         _cm_request_feedhold:
                                 		.STACK	_cm_request_feedhold=4
                                 ;    1155 }
                                 ;    1156 
                                 ;    1157 /******************************
                                 ;    1158  * Program Functions (4.3.10) *
                                 ;    1159  ******************************/
                                 ;    1160 /*
                                 ;    1161  * This group implements stop, start, end, and hold.
                                 ;    1162  * It is extended beyond the NIST spec to handle various situations.
                                 ;    1163  *
                                 ;    1164  *	_exec_program_finalize()
                                 ;    1165  *	cm_cycle_start()			(no Gcode)  Do a cycle start right now
                                 ;    1166  *	cm_cycle_end()				(no Gcode)	Do a cycle end right now
                                 ;    1167  *	cm_feedhold()				(no Gcode)	Initiate a feedhold right now
                                 ;    1168  *	cm_program_stop()			(M0, M60)	Queue a program stop
                                 ;    1169  *	cm_optional_program_stop()	(M1)
                                 ;    1170  *	cm_program_end()			(M2, M30)
                                 ;    1171  *	cm_machine_ready()			puts machine into a READY state
                                 ;    1172  *
                                 ;    1173  * cm_program_stop and cm_optional_program_stop are synchronous Gcode
                                 ;    1174  * commands that are received through the interpreter. They cause all motion
                                 ;    1175  * to stop at the end of the current command, including spindle motion.
                                 ;    1176  *
                                 ;    1177  * Note that the stop occurs at the end of the immediately preceding command
                                 ;    1178  * (i.e. the stop is queued behind the last command).
                                 ;    1179  *
                                 ;    1180  * cm_program_end is a stop that also resets the machine to initial state
                                 ;    1181  */
                                 ;    1182 
                                 ;    1183 /*
                                 ;    1184  * cm_request_feedhold()
                                 ;    1185  * cm_request_queue_flush()
                                 ;    1186  * cm_request_cycle_start()
                                 ;    1187  * cm_feedhold_sequencing_callback() - process feedholds, cycle starts & queue flushes
                                 ;    1188  * cm_flush_planner() - Flush planner queue and correct model positions
                                 ;    1189  *
                                 ;    1190  * Feedholds, queue flushes and cycles starts are all related. The request functions set
                                 ;    1191  *	flags for these. The sequencing callback interprets the flags according to the
                                 ;    1192  *	following rules:
                                 ;    1193  *
                                 ;    1194  *	A feedhold request received during motion should be honored
                                 ;    1195  *	A feedhold request received during a feedhold should be ignored and reset
                                 ;    1196  *	A feedhold request received during a motion stop should be ignored and reset
                                 ;    1197  *
                                 ;    1198  *	A queue flush request received during motion should be ignored but not reset
                                 ;    1199  *	A queue flush request received during a feedhold should be deferred until
                                 ;    1200  *		the feedhold enters a HOLD state (i.e. until deceleration is complete)
                                 ;    1201  *	A queue flush request received during a motion stop should be honored
                                 ;    1202  *
                                 ;    1203  *	A cycle start request received during motion should be ignored and reset
                                 ;    1204  *	A cycle start request received during a feedhold should be deferred until
                                 ;    1205  *		the feedhold enters a HOLD state (i.e. until deceleration is complete)
                                 ;    1206  *		If a queue flush request is also present the queue flush should be done first
                                 ;    1207  *	A cycle start request received during a motion stop should be honored and
                                 ;    1208  *		should start to run anything in the planner queue
                                 ;    1209  */
                                 ;    1210 
                                 ;    1211 void cm_request_feedhold(void) { cm.feedhold_requested = true; }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1211
00001490 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001496 FAE4470201              		MOV.B #01H, 0247H[R14]
0000149B 02                      		RTS
0000149C                         _cm_request_queue_flush:
                                 		.STACK	_cm_request_queue_flush=4
                                 ;    1212 void cm_request_queue_flush(void) { cm.queue_flush_requested = true; }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1212
0000149C FBE2rrrrrrrr            		MOV.L #_cm, R14
000014A2 FAE4480201              		MOV.B #01H, 0248H[R14]
000014A7 02                      		RTS
000014A8                         _cm_request_cycle_start:
                                 		.STACK	_cm_request_cycle_start=4
                                 ;    1213 void cm_request_cycle_start(void) { cm.cycle_start_requested = true; }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1213
000014A8 FBE2rrrrrrrr            		MOV.L #_cm, R14
000014AE FAE4490201              		MOV.B #01H, 0249H[R14]
000014B3 02                      		RTS
000014B4                         _cm_feedhold_sequencing_callback:
                                 		.STACK	_cm_feedhold_sequencing_callback=12
                                 ;    1214 
                                 ;    1215 stat_t cm_feedhold_sequencing_callback()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1215
000014B4 6080                    		SUB #08H, R0
                                 ;    1216 {
                                 ;    1217 	if (cm.feedhold_requested == true) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1217
000014B6 FBE2rrrrrrrr            		MOV.L #_cm, R14
000014BC 5AEE4702                		MOVU.B 0247H[R14], R14
000014C0 611E                    		CMP #01H, R14
000014C2 21rr                    		BNE L506
000014C4                         L498:	; bb3
                                 ;    1218 		if ((cm.motion_state == MOTION_RUN) && (cm.hold_state == FEEDHOLD_OFF)) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1218
000014C4 FBE2rrrrrrrr            		MOV.L #_cm, R14
000014CA 5AEE1F02                		MOVU.B 021FH[R14], R14
000014CE 611E                    		CMP #01H, R14
000014D0 20rr                    		BEQ L501
000014D2 2Err                 B  		BRA L503
000014D4                         L499:	; bb4
000014D4 6621                    		MOV.L #00000002H, R1
                                 ;    1219 			cm_set_motion_state(MOTION_HOLD);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1219
000014D6 39rrrr               W  		BSR _cm_set_motion_state
000014D9                         L500:	; bb4.split
                                 ;    1220 			cm.hold_state = FEEDHOLD_SYNC;	// invokes hold from aline execution
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1220
000014D9 FBE2rrrrrrrr            		MOV.L #_cm, R14
000014DF FAE4200201              		MOV.B #01H, 0220H[R14]
000014E4 2Err                 B  		BRA L505
000014E6                         L501:	; bb9
000014E6 FBE2rrrrrrrr            		MOV.L #_cm, R14
000014EC 5AEE2002                		MOVU.B 0220H[R14], R14
000014F0 610E                    		CMP #00H, R14
000014F2 18                   S  		BNE L503
000014F3                         L502:	; bb14
000014F3 F80601                  		MOV.L #00000001H, [R0]
000014F6 08                   S  		BRA L504
000014F7                         L503:	; bb15
000014F7 F80600                  		MOV.L #00000000H, [R0]
000014FA                         L504:	; bb16
000014FA EC01                    		MOV.L [R0], R1
000014FC 6101                    		CMP #00H, R1
000014FE 21rr                    		BNE L499
00001500                         L505:	; bb20
                                 ;    1221 		}
                                 ;    1222 		cm.feedhold_requested = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1222
00001500 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001506 FAE4470200              		MOV.B #00H, 0247H[R14]
0000150B                         L506:	; bb27
                                 ;    1223 	}
                                 ;    1224 	if (cm.queue_flush_requested == true) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1224
0000150B FBE2rrrrrrrr            		MOV.L #_cm, R14
00001511 5AEE4802                		MOVU.B 0248H[R14], R14
00001515 611E                    		CMP #01H, R14
00001517 21rr                    		BNE L525
00001519                         L507:	; bb29
                                 ;    1225 		if (((cm.motion_state == MOTION_STOP) ||
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1225
00001519 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000151F 5AEE1F02                		MOVU.B 021FH[R14], R14
00001523 610E                    		CMP #00H, R14
00001525 20rr                    		BEQ L515
00001527 2Err                 B  		BRA L510
00001529                         L508:	; bb30
                                 ;    1226 			((cm.motion_state == MOTION_HOLD) && (cm.hold_state == FEEDHOLD_HOLD))) &&
                                 ;    1227 			!cm_get_runtime_busy()) {
                                 ;    1228 			cm.queue_flush_requested = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1228
00001529 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000152F FAE4480200              		MOV.B #00H, 0248H[R14]
00001534                         L509:	; bb30.split
                                 ;    1229 			cm_queue_flush();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1229
00001534 39rrrr               W  		BSR _cm_queue_flush
00001537 2Err                 B  		BRA L525
00001539                         L510:	; bb36
00001539 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000153F 5AEE1F02                		MOVU.B 021FH[R14], R14
00001543 612E                    		CMP #02H, R14
00001545 21rr                    		BNE L513
00001547                         L511:	; bb41
00001547 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000154D 5AEE2002                		MOVU.B 0220H[R14], R14
00001551 614E                    		CMP #04H, R14
00001553 18                   S  		BNE L513
00001554                         L512:	; bb46
00001554 F80601                  		MOV.L #00000001H, [R0]
00001557 08                   S  		BRA L514
00001558                         L513:	; bb47
00001558 F80600                  		MOV.L #00000000H, [R0]
0000155B                         L514:	; bb48
0000155B EC01                    		MOV.L [R0], R1
0000155D 6101                    		CMP #00H, R1
0000155F 10                   S  		BEQ L516
00001560                         L515:	; bb52
00001560 F80601                  		MOV.L #00000001H, [R0]
00001563 08                   S  		BRA L517
00001564                         L516:	; bb53
00001564 F80600                  		MOV.L #00000000H, [R0]
00001567                         L517:	; bb54
00001567 EC01                    		MOV.L [R0], R1
00001569 6101                    		CMP #00H, R1
0000156B 20rr                    		BEQ L523
0000156D                         L518:	; bb58
0000156D 39rrrr               W  		BSR _cm_get_runtime_busy
00001570 6101                    		CMP #00H, R1
00001572 10                   S  		BEQ L520
00001573                         L519:	; bb63
00001573 F80600                  		MOV.L #00000000H, [R0]
00001576 08                   S  		BRA L521
00001577                         L520:	; bb64
00001577 F80601                  		MOV.L #00000001H, [R0]
0000157A                         L521:	; bb65
0000157A EC01                    		MOV.L [R0], R1
0000157C 6101                    		CMP #00H, R1
0000157E 10                   S  		BEQ L523
0000157F                         L522:	; bb68
0000157F F80601                  		MOV.L #00000001H, [R0]
00001582 08                   S  		BRA L524
00001583                         L523:	; bb69
00001583 F80600                  		MOV.L #00000000H, [R0]
00001586                         L524:	; bb70
00001586 EC01                    		MOV.L [R0], R1
00001588 6101                    		CMP #00H, R1
0000158A 21rr                    		BNE L508
0000158C                         L525:	; bb81
                                 ;    1230 		}
                                 ;    1231 	}
                                 ;    1232 	bool feedhold_processing =				// added feedhold processing lockout from omco fork
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1232
0000158C FBE2rrrrrrrr            		MOV.L #_cm, R14
00001592 5AEE2002                		MOVU.B 0220H[R14], R14
00001596 611E                    		CMP #01H, R14
00001598 20rr                    		BEQ L527
0000159A                         L526:	; bb86
0000159A FBE2rrrrrrrr            		MOV.L #_cm, R14
000015A0 5AEE2002                		MOVU.B 0220H[R14], R14
000015A4 612E                    		CMP #02H, R14
000015A6 18                   S  		BNE L528
000015A7                         L527:	; bb91
000015A7 F80601                  		MOV.L #00000001H, [R0]
000015AA 08                   S  		BRA L529
000015AB                         L528:	; bb92
000015AB F80600                  		MOV.L #00000000H, [R0]
000015AE                         L529:	; bb93
000015AE EC01                    		MOV.L [R0], R1
000015B0 6101                    		CMP #00H, R1
000015B2 21rr                    		BNE L531
000015B4                         L530:	; bb97
000015B4 FBE2rrrrrrrr            		MOV.L #_cm, R14
000015BA 5AEE2002                		MOVU.B 0220H[R14], R14
000015BE 613E                    		CMP #03H, R14
000015C0 18                   S  		BNE L532
000015C1                         L531:	; bb102
000015C1 F80601                  		MOV.L #00000001H, [R0]
000015C4 08                   S  		BRA L533
000015C5                         L532:	; bb103
000015C5 F80600                  		MOV.L #00000000H, [R0]
000015C8                         L533:	; bb104
000015C8 EC01                    		MOV.L [R0], R1
000015CA 6101                    		CMP #00H, R1
000015CC FCD10106                		SCNE.B 06H[R0]
                                 ;    1233 		cm.hold_state == FEEDHOLD_SYNC ||
                                 ;    1234 		cm.hold_state == FEEDHOLD_PLAN ||
                                 ;    1235 		cm.hold_state == FEEDHOLD_DECEL;
                                 ;    1236 	if ((cm.cycle_start_requested == true) && (cm.queue_flush_requested == false) && !feedhold_processing) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1236
000015D0 FBE2rrrrrrrr            		MOV.L #_cm, R14
000015D6 5AEE4902                		MOVU.B 0249H[R14], R14
000015DA 611E                    		CMP #01H, R14
000015DC 20rr                    		BEQ L538
000015DE 2Err                 B  		BRA L540
000015E0                         L534:	; bb112
                                 ;    1237 		cm.cycle_start_requested = false;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1237
000015E0 FBE2rrrrrrrr            		MOV.L #_cm, R14
000015E6 FAE4490200              		MOV.B #00H, 0249H[R14]
000015EB                         L535:	; bb112.split
                                 ;    1238 		cm.hold_state = FEEDHOLD_END_HOLD;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1238
000015EB FBE2rrrrrrrr            		MOV.L #_cm, R14
000015F1 FAE4200205              		MOV.B #05H, 0220H[R14]
000015F6                         L536:	; bb112.split1
                                 ;    1239 		cm_cycle_start();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1239
000015F6 39rrrr               W  		BSR _cm_cycle_start
000015F9                         L537:	; bb112.split2
                                 ;    1240 		mp_end_hold();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1240
000015F9 05rrrrrr             A  		BSR _mp_end_hold
000015FD 2Err                 B  		BRA L549
000015FF                         L538:	; bb118
000015FF FBE2rrrrrrrr            		MOV.L #_cm, R14
00001605 5AEE4802                		MOVU.B 0248H[R14], R14
00001609 610E                    		CMP #00H, R14
0000160B 18                   S  		BNE L540
0000160C                         L539:	; bb123
0000160C F80601                  		MOV.L #00000001H, [R0]
0000160F 08                   S  		BRA L541
00001610                         L540:	; bb124
00001610 F80600                  		MOV.L #00000000H, [R0]
00001613                         L541:	; bb125
00001613 EC01                    		MOV.L [R0], R1
00001615 6101                    		CMP #00H, R1
00001617 20rr                    		BEQ L547
00001619                         L542:	; bb129
00001619 B181                    		MOVU.B 06H[R0], R1
0000161B 6101                    		CMP #00H, R1
0000161D 10                   S  		BEQ L544
0000161E                         L543:	; bb134
0000161E F80600                  		MOV.L #00000000H, [R0]
00001621 08                   S  		BRA L545
00001622                         L544:	; bb135
00001622 F80601                  		MOV.L #00000001H, [R0]
00001625                         L545:	; bb136
00001625 EC01                    		MOV.L [R0], R1
00001627 6101                    		CMP #00H, R1
00001629 10                   S  		BEQ L547
0000162A                         L546:	; bb139
0000162A F80601                  		MOV.L #00000001H, [R0]
0000162D 08                   S  		BRA L548
0000162E                         L547:	; bb140
0000162E F80600                  		MOV.L #00000000H, [R0]
00001631                         L548:	; bb141
00001631 EC01                    		MOV.L [R0], R1
00001633 6101                    		CMP #00H, R1
00001635 21rr                    		BNE L534
00001637                         L549:	; bb146
                                 ;    1241 	}
                                 ;    1242 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1242
00001637 3C0700                  		MOV.B #00H, 07H[R0]
0000163A B189                    		MOVU.B 07H[R0], R1
0000163C                         L550:	; bb146.split
                                 ;    1243 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1243
0000163C 5B11                    		MOVU.B R1, R1
0000163E 6702                    		RTSD #08H
00001640                         _cm_queue_flush:
                                 		.STACK	_cm_queue_flush=40
                                 ;    1244 
                                 ;    1245 stat_t cm_queue_flush()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1245
00001640 7EA6                    		PUSH.L R6
00001642 7100E0                  		ADD #0FFFFFFE0H, R0
                                 ;    1246 {
                                 ;    1247 	if (cm_get_runtime_busy() == true)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1247
00001645 39rrrr               W  		BSR _cm_get_runtime_busy
00001648 6111                    		CMP #01H, R1
0000164A 18                   S  		BNE L553
0000164B                         L552:	; bb3
                                 ;    1248         return (STAT_COMMAND_NOT_ACCEPTED);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1248
0000164B 3C036A                  		MOV.B #6AH, 03H[R0]
0000164E 2Err                 B  		BRA L562
00001650                         L553:	; bb9
                                 ;    1249 
                                 ;    1250 #ifdef __AVR
                                 ;    1251 	xio_reset_usb_rx_buffers();				// flush serial queues
                                 ;    1252 #endif
                                 ;    1253 	mp_flush_planner();						// flush planner queue
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1253
00001650 05rrrrrr             A  		BSR _mp_flush_planner
00001654                         L554:	; bb9.split
00001654 6601                    		MOV.L #00000000H, R1
                                 ;    1254 	qr_request_queue_report(0);				// request a queue report, since we've changed the number of buffers available
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1254
00001656 05rrrrrr             A  		BSR _qr_request_queue_report
0000165A                         L555:	; bb9.split1
                                 ;    1255 	rx_request_rx_report();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1255
0000165A 05rrrrrr             A  		BSR _rx_request_rx_report
0000165E                         L556:	; bb9.split2
                                 ;    1256 
                                 ;    1257 	// Note: The following uses low-level mp calls for absolute position.
                                 ;    1258 	//		 It could also use cm_get_absolute_position(RUNTIME, axis);
                                 ;    1259 	for (uint8_t axis = AXIS_X; axis < AXES; axis++) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1259
0000165E 3C8E00                  		MOV.B #00H, 1EH[R0]
00001661 2Err                 B  		BRA L558
00001663                         L557:	; bb10
                                 ;    1260 		cm_set_position(axis, mp_get_runtime_absolute_position(axis)); // set mm from mr
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1260
00001663 B786                    		MOVU.B 1EH[R0], R6
00001665 EF61                    		MOV.L R6, R1
00001667 05rrrrrr             A  		BSR _mp_get_runtime_absolute_position
0000166B EF12                    		MOV.L R1, R2
0000166D EF61                    		MOV.L R6, R1
0000166F 39rrrr               W  		BSR _cm_set_position
00001672 B781                    		MOVU.B 1EH[R0], R1
00001674 6211                    		ADD #01H, R1
00001676 8781                    		MOV.B R1, 1EH[R0]
00001678                         L558:	; bb16
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1259
00001678 B781                    		MOVU.B 1EH[R0], R1
0000167A 6161                    		CMP #06H, R1
0000167C 29rr                    		BLT L557
0000167E                         L559:	; bb22
                                 ;    1261 	}
                                 ;    1262 	float value[AXES] = { (float)MACHINE_PROGRAM_STOP, 0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1262
0000167E FBE2rrrrrrrr            		MOV.L #_L26, R14
00001684 E4E001                  		MOV.L [R14], 04H[R0]
00001687 E5E00102                		MOV.L 04H[R14], 08H[R0]
0000168B E5E00203                		MOV.L 08H[R14], 0CH[R0]
0000168F E5E00304                		MOV.L 0CH[R14], 10H[R0]
00001693 E5E00405                		MOV.L 10H[R14], 14H[R0]
00001697 E5E00506                		MOV.L 14H[R14], 18H[R0]
0000169B                         L560:	; bb22.split
0000169B 710104                  		ADD #04H, R0, R1
                                 ;    1263 	_exec_program_finalize(value, value);	// finalize now, not later
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1263
0000169E EF12                    		MOV.L R1, R2
000016A0 39rrrr               W  		BSR __$_exec_program_finalize
000016A3                         L561:	; bb22.split3
                                 ;    1264 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1264
000016A3 3C0300                  		MOV.B #00H, 03H[R0]
000016A6                         L562:	; bb38
000016A6 C500031F                		MOV.B 03H[R0], 1FH[R0]
                                 ;    1265 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1265
000016AA B789                    		MOVU.B 1FH[R0], R1
000016AC 3F6609                  		RTSD #24H, R6-R6
000016AF                         __$_exec_program_finalize:
                                 		.STACK	__$_exec_program_finalize=12
                                 ;    1266 
                                 ;    1267 /*
                                 ;    1268  * Program and cycle state functions
                                 ;    1269  *
                                 ;    1270  * _exec_program_finalize() 	- helper
                                 ;    1271  * cm_cycle_start()
                                 ;    1272  * cm_cycle_end()
                                 ;    1273  * cm_program_stop()			- M0
                                 ;    1274  * cm_optional_program_stop()	- M1
                                 ;    1275  * cm_program_end()				- M2, M30
                                 ;    1276  *
                                 ;    1277  * cm_program_end() implements M2 and M30
                                 ;    1278  * The END behaviors are defined by NIST 3.6.1 are:
                                 ;    1279  *	1. Axis offsets are set to zero (like G92.2) and origin offsets are set to the default (like G54)
                                 ;    1280  *	2. Selected plane is set to CANON_PLANE_XY (like G17)
                                 ;    1281  *	3. Distance mode is set to MODE_ABSOLUTE (like G90)
                                 ;    1282  *	4. Feed rate mode is set to UNITS_PER_MINUTE (like G94)
                                 ;    1283  *	5. Feed and speed overrides are set to ON (like M48)
                                 ;    1284  *	6. Cutter compensation is turned off (like G40)
                                 ;    1285  *	7. The spindle is stopped (like M5)
                                 ;    1286  *	8. The current motion mode is set to G_1 (like G1)
                                 ;    1287  *	9. Coolant is turned off (like M9)
                                 ;    1288  *
                                 ;    1289  * cm_program_end() implments things slightly differently:
                                 ;    1290  *	1. Axis offsets are set to G92.1 CANCEL offsets (instead of using G92.2 SUSPEND Offsets)
                                 ;    1291  *	   Set default coordinate system (uses $gco, not G54)
                                 ;    1292  *	2. Selected plane is set to default plane ($gpl) (instead of setting it to G54)
                                 ;    1293  *	3. Distance mode is set to MODE_ABSOLUTE (like G90)
                                 ;    1294  *	4. Feed rate mode is set to UNITS_PER_MINUTE (like G94)
                                 ;    1295  * 	5. Not implemented
                                 ;    1296  *	6. Not implemented
                                 ;    1297  *	7. The spindle is stopped (like M5)
                                 ;    1298  *	8. Motion mode is canceled like G80 (not set to G1)
                                 ;    1299  *	9. Coolant is turned off (like M9)
                                 ;    1300  *	+  Default INCHES or MM units mode is restored ($gun)
                                 ;    1301  */
                                 ;    1302 
                                 ;    1303 static void _exec_program_finalize(float *value, float *flag)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1303
000016AF 6080                    		SUB #08H, R0
000016B1 A009                    		MOV.L R1, 04H[R0]
000016B3 E302                    		MOV.L R2, [R0]
                                 ;    1304 {
                                 ;    1305 	cm.machine_state = (uint8_t)value[0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1305
000016B5 A809                    		MOV.L 04H[R0], R1
000016B7 EC1E                    		MOV.L [R1], R14
000016B9 FD721E0000004F          		FCMP #4F000000H, R14
000016C0 29rr                    		BLT L565
000016C2                         L564:	; entry
000016C2 FD722E000080CF          		FADD #0CF800000H, R14
000016C9                         L565:	; entry
000016C9 FC97EE                  		FTOI R14, R14
000016CC FBF2rrrrrrrr            		MOV.L #_cm, R15
000016D2 CBFE1D02                		MOV.B R14, 021DH[R15]
000016D6                         L566:	; entry.split
000016D6 6601                    		MOV.L #00000000H, R1
                                 ;    1306 	cm_set_motion_state(MOTION_STOP);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1306
000016D8 39rrrr               W  		BSR _cm_set_motion_state
000016DB                         L567:	; entry.split1
                                 ;    1307 	if (cm.cycle_state == CYCLE_MACHINING) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1307
000016DB FBE2rrrrrrrr            		MOV.L #_cm, R14
000016E1 5AEE1E02                		MOVU.B 021EH[R14], R14
000016E5 611E                    		CMP #01H, R14
000016E7 21rr                    		BNE L569
000016E9                         L568:	; bb6
                                 ;    1308 		cm.cycle_state = CYCLE_OFF;						// don't end cycle if homing, probing, etc.
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1308
000016E9 FBE2rrrrrrrr            		MOV.L #_cm, R14
000016EF FAE41E0200              		MOV.B #00H, 021EH[R14]
000016F4                         L569:	; bb11
                                 ;    1309 	}
                                 ;    1310 	cm.hold_state = FEEDHOLD_OFF;						// end feedhold (if in feed hold)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1310
000016F4 FBE2rrrrrrrr            		MOV.L #_cm, R14
000016FA FAE4200200              		MOV.B #00H, 0220H[R14]
000016FF                         L570:	; bb11.split
                                 ;    1311 	cm.cycle_start_requested = false;					// cancel any pending cycle start request
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1311
000016FF FBE2rrrrrrrr            		MOV.L #_cm, R14
00001705 FAE4490200              		MOV.B #00H, 0249H[R14]
0000170A                         L571:	; bb11.split2
                                 ;    1312 	mp_zero_segment_velocity();							// for reporting purposes
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1312
0000170A 05rrrrrr             A  		BSR _mp_zero_segment_velocity
0000170E                         L572:	; bb11.split3
                                 ;    1313 
                                 ;    1314 	// perform the following resets if it's a program END
                                 ;    1315 	if (cm.machine_state == MACHINE_PROGRAM_END) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1315
0000170E FBE2rrrrrrrr            		MOV.L #_cm, R14
00001714 5AEE1D02                		MOVU.B 021DH[R14], R14
00001718 614E                    		CMP #04H, R14
0000171A 21rr                    		BNE L582
0000171C                         L573:	; bb13
                                 ;    1316 		cm_reset_origin_offsets();						// G92.1 - we do G91.1 instead of G92.2
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1316
0000171C 39rrrr               W  		BSR _cm_reset_origin_offsets
0000171F                         L574:	; bb13.split
                                 ;    1317 	//	cm_suspend_origin_offsets();					// G92.2 - as per Kramer
                                 ;    1318 		cm_set_coord_system(cm.coord_system);			// reset to default coordinate system
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1318
0000171F FB12rrrrrrrr            		MOV.L #_cm, R1
00001725 B711                    		MOVU.B 1CH[R1], R1
00001727 39rrrr               W  		BSR _cm_set_coord_system
0000172A                         L575:	; bb13.split4
                                 ;    1319 		cm_select_plane(cm.select_plane);				// reset to default arc plane
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1319
0000172A FB12rrrrrrrr            		MOV.L #_cm, R1
00001730 B719                    		MOVU.B 1DH[R1], R1
00001732 39rrrr               W  		BSR _cm_select_plane
00001735                         L576:	; bb13.split5
                                 ;    1320 		cm_set_distance_mode(cm.distance_mode);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1320
00001735 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000173B 59E120                  		MOVU.B 20H[R14], R1
0000173E 39rrrr               W  		BSR _cm_set_distance_mode
00001741                         L577:	; bb13.split6
00001741 6601                    		MOV.L #00000000H, R1
                                 ;    1321 //++++	cm_set_units_mode(cm.units_mode);				// reset to default units mode +++ REMOVED +++
                                 ;    1322 		cm_spindle_control(SPINDLE_OFF);				// M5
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1322
00001743 05rrrrrr             A  		BSR _cm_spindle_control
00001747                         L578:	; bb13.split7
00001747 6601                    		MOV.L #00000000H, R1
                                 ;    1323 		cm_flood_coolant_control(false);				// M9
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1323
00001749 39rrrr               W  		BSR _cm_flood_coolant_control
0000174C                         L579:	; bb13.split8
0000174C 6611                    		MOV.L #00000001H, R1
                                 ;    1324 		cm_set_feed_rate_mode(UNITS_PER_MINUTE_MODE);	// G94
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1324
0000174E 39rrrr               W  		BSR _cm_set_feed_rate_mode
00001751                         L580:	; bb13.split9
                                 ;    1325 	//	cm_set_motion_mode(MOTION_MODE_STRAIGHT_FEED);	// NIST specifies G1, but we cancel motion mode. Safer.
                                 ;    1326 		cm_set_motion_mode(MODEL, MOTION_MODE_CANCEL_MOTION_MODE);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1326
00001751 FB12rrrrrrrr            		MOV.L #_cm, R1
00001757 72115402                		ADD #0254H, R1
0000175B 6642                    		MOV.L #00000004H, R2
0000175D 39rrrr               W  		BSR _cm_set_motion_mode
00001760                         L581:	; bb13.split10
                                 ;    1327 		iif_func_cycleStop();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1327
00001760 FBE2rrrrrrrr            		MOV.L #_iif_func_cycleStop, R14
00001766 ECEE                    		MOV.L [R14], R14
00001768 7F1E                    		JSR R14
0000176A                         L582:	; bb30
0000176A 6611                    		MOV.L #00000001H, R1
                                 ;    1328 	}
                                 ;    1329 //	if (cm.machine_state == MACHINE_PROGRAM_STOP) {
                                 ;    1330 //		iif_func_cycleStop();
                                 ;    1331 //	}
                                 ;    1332 	sr_request_status_report(SR_IMMEDIATE_REQUEST);		// request a final status report (not unfiltered)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1332
0000176C 05rrrrrr             A  		BSR _sr_request_status_report
00001770 6702                    		RTSD #08H
00001772                         _cm_cycle_start:
                                 		.STACK	_cm_cycle_start=4
                                 ;    1333 }
                                 ;    1334 
                                 ;    1335 void cm_cycle_start()
                                 ;    1336 {
                                 ;    1337 	cm.machine_state = MACHINE_CYCLE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1337
00001772 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001778 FAE41D0205              		MOV.B #05H, 021DH[R14]
0000177D                         L584:	; entry.split
                                 ;    1338 	if (cm.cycle_state == CYCLE_OFF) {					// don't (re)start homing, probe or other canned cycles
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1338
0000177D FBE2rrrrrrrr            		MOV.L #_cm, R14
00001783 5AEE1E02                		MOVU.B 021EH[R14], R14
00001787 610E                    		CMP #00H, R14
00001789 21rr                    		BNE L587
0000178B                         L585:	; bb1
                                 ;    1339 		cm.cycle_state = CYCLE_MACHINING;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1339
0000178B FBE2rrrrrrrr            		MOV.L #_cm, R14
00001791 FAE41E0201              		MOV.B #01H, 021EH[R14]
00001796                         L586:	; bb1.split
                                 ;    1340 		qr_init_queue_report();							// clear queue reporting buffer counts
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1340
00001796 05rrrrrr             A  		BSR _qr_init_queue_report
0000179A 02                      		RTS
0000179B                         L587:	; return
                                 ;    1341 	}
                                 ;    1342 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1342
0000179B 02                      		RTS
0000179C                         _cm_cycle_end:
                                 		.STACK	_cm_cycle_end=28
                                 ;    1343 
                                 ;    1344 void cm_cycle_end()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1344
0000179C 7100E8                  		ADD #0FFFFFFE8H, R0
                                 ;    1345 {
                                 ;    1346 	if (cm.cycle_state != CYCLE_OFF) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1346
0000179F FBE2rrrrrrrr            		MOV.L #_cm, R14
000017A5 5AEE1E02                		MOVU.B 021EH[R14], R14
000017A9 610E                    		CMP #00H, R14
000017AB 20rr                    		BEQ L591
000017AD                         L589:	; bb2
                                 ;    1347 		float value[AXES] = { (float)MACHINE_PROGRAM_STOP, 0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1347
000017AD FBE2rrrrrrrr            		MOV.L #_L27, R14
000017B3 E0E0                    		MOV.L [R14], [R0]
000017B5 E5E00101                		MOV.L 04H[R14], 04H[R0]
000017B9 E5E00202                		MOV.L 08H[R14], 08H[R0]
000017BD E5E00303                		MOV.L 0CH[R14], 0CH[R0]
000017C1 E5E00404                		MOV.L 10H[R14], 10H[R0]
000017C5 E5E00505                		MOV.L 14H[R14], 14H[R0]
000017C9                         L590:	; bb2.split
000017C9 EF01                    		MOV.L R0, R1
                                 ;    1348 		_exec_program_finalize(value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1348
000017CB EF12                    		MOV.L R1, R2
000017CD 39rrrr               W  		BSR __$_exec_program_finalize
000017D0 6706                    		RTSD #18H
000017D2                         L591:	; return
                                 ;    1349 	}
                                 ;    1350 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1350
000017D2 6706                    		RTSD #18H
000017D4                         _cm_program_stop:
                                 		.STACK	_cm_program_stop=28
                                 ;    1351 
                                 ;    1352 void cm_program_stop()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1352
000017D4 7100E8                  		ADD #0FFFFFFE8H, R0
                                 ;    1353 {
                                 ;    1354 	float value[AXES] = { (float)MACHINE_PROGRAM_STOP, 0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1354
000017D7 FBE2rrrrrrrr            		MOV.L #_L28, R14
000017DD E0E0                    		MOV.L [R14], [R0]
000017DF E5E00101                		MOV.L 04H[R14], 04H[R0]
000017E3 E5E00202                		MOV.L 08H[R14], 08H[R0]
000017E7 E5E00303                		MOV.L 0CH[R14], 0CH[R0]
000017EB E5E00404                		MOV.L 10H[R14], 10H[R0]
000017EF E5E00505                		MOV.L 14H[R14], 14H[R0]
000017F3                         L593:	; entry.split
000017F3 EF02                    		MOV.L R0, R2
                                 ;    1355 	mp_queue_command(_exec_program_finalize, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1355
000017F5 FB12rrrrrrrr            		MOV.L #__$_exec_program_finalize, R1
000017FB EF23                    		MOV.L R2, R3
000017FD 05rrrrrr             A  		BSR _mp_queue_command
00001801 6706                    		RTSD #18H
00001803                         _cm_optional_program_stop:
                                 		.STACK	_cm_optional_program_stop=28
                                 ;    1356 }
                                 ;    1357 
                                 ;    1358 void cm_optional_program_stop()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1358
00001803 7100E8                  		ADD #0FFFFFFE8H, R0
                                 ;    1359 {
                                 ;    1360 	float value[AXES] = { (float)MACHINE_PROGRAM_STOP, 0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1360
00001806 FBE2rrrrrrrr            		MOV.L #_L29, R14
0000180C E0E0                    		MOV.L [R14], [R0]
0000180E E5E00101                		MOV.L 04H[R14], 04H[R0]
00001812 E5E00202                		MOV.L 08H[R14], 08H[R0]
00001816 E5E00303                		MOV.L 0CH[R14], 0CH[R0]
0000181A E5E00404                		MOV.L 10H[R14], 10H[R0]
0000181E E5E00505                		MOV.L 14H[R14], 14H[R0]
00001822                         L595:	; entry.split
00001822 EF02                    		MOV.L R0, R2
                                 ;    1361 	mp_queue_command(_exec_program_finalize, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1361
00001824 FB12rrrrrrrr            		MOV.L #__$_exec_program_finalize, R1
0000182A EF23                    		MOV.L R2, R3
0000182C 05rrrrrr             A  		BSR _mp_queue_command
00001830 6706                    		RTSD #18H
00001832                         _cm_program_end:
                                 		.STACK	_cm_program_end=28
                                 ;    1362 }
                                 ;    1363 
                                 ;    1364 void cm_program_end()
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1364
00001832 7100E8                  		ADD #0FFFFFFE8H, R0
                                 ;    1365 {
                                 ;    1366 	float value[AXES] = { (float)MACHINE_PROGRAM_END, 0,0,0,0,0 };
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1366
00001835 FBE2rrrrrrrr            		MOV.L #_L30, R14
0000183B E0E0                    		MOV.L [R14], [R0]
0000183D E5E00101                		MOV.L 04H[R14], 04H[R0]
00001841 E5E00202                		MOV.L 08H[R14], 08H[R0]
00001845 E5E00303                		MOV.L 0CH[R14], 0CH[R0]
00001849 E5E00404                		MOV.L 10H[R14], 10H[R0]
0000184D E5E00505                		MOV.L 14H[R14], 14H[R0]
00001851                         L597:	; entry.split
00001851 EF02                    		MOV.L R0, R2
                                 ;    1367 	mp_queue_command(_exec_program_finalize, value, value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1367
00001853 FB12rrrrrrrr            		MOV.L #__$_exec_program_finalize, R1
00001859 EF23                    		MOV.L R2, R3
0000185B 05rrrrrr             A  		BSR _mp_queue_command
0000185F 6706                    		RTSD #18H
00001861                         _cm_get_axis_char:
                                 		.STACK	_cm_get_axis_char=20
                                 ;    1368 }
                                 ;    1369 
                                 ;    1370 /**************************************
                                 ;    1371  * END OF CANONICAL MACHINE FUNCTIONS *
                                 ;    1372  **************************************/
                                 ;    1373 
                                 ;    1374 /***********************************************************************************
                                 ;    1375  * CONFIGURATION AND INTERFACE FUNCTIONS
                                 ;    1376  * Functions to get and set variables from the cfgArray table
                                 ;    1377  * These functions are not part of the NIST defined functions
                                 ;    1378  ***********************************************************************************/
                                 ;    1379 
                                 ;    1380 // Strings for writing settings as nvObj string values
                                 ;    1381 // Ref: http://www.avrfreaks.net/index.php?name=PNphpBB2&file=printview&t=120881&start=0
                                 ;    1382 
                                 ;    1383 #ifdef __TEXT_MODE
                                 ;    1384 
                                 ;    1385 static const char msg_units0[] PROGMEM = " in";	// used by generic print functions
                                 ;    1386 static const char msg_units1[] PROGMEM = " mm";
                                 ;    1387 static const char msg_units2[] PROGMEM = " deg";
                                 ;    1388 static const char *const msg_units[] PROGMEM = { msg_units0, msg_units1, msg_units2 };
                                 ;    1389 #define DEGREE_INDEX 2
                                 ;    1390 
                                 ;    1391 static const char msg_am00[] PROGMEM = "[disabled]";
                                 ;    1392 static const char msg_am01[] PROGMEM = "[standard]";
                                 ;    1393 static const char msg_am02[] PROGMEM = "[inhibited]";
                                 ;    1394 static const char msg_am03[] PROGMEM = "[radius]";
                                 ;    1395 static const char *const msg_am[] PROGMEM = { msg_am00, msg_am01, msg_am02, msg_am03};
                                 ;    1396 
                                 ;    1397 static const char msg_g20[] PROGMEM = "G20 - inches mode";
                                 ;    1398 static const char msg_g21[] PROGMEM = "G21 - millimeter mode";
                                 ;    1399 static const char *const msg_unit[] PROGMEM = { msg_g20, msg_g21 };
                                 ;    1400 
                                 ;    1401 static const char msg_stat0[] PROGMEM = "Initializing";	// combined state (stat) uses this array
                                 ;    1402 static const char msg_stat1[] PROGMEM = "Ready";
                                 ;    1403 static const char msg_stat2[] PROGMEM = "Alarm";
                                 ;    1404 static const char msg_stat3[] PROGMEM = "Stop";
                                 ;    1405 static const char msg_stat4[] PROGMEM = "End";
                                 ;    1406 static const char msg_stat5[] PROGMEM = "Run";
                                 ;    1407 static const char msg_stat6[] PROGMEM = "Hold";
                                 ;    1408 static const char msg_stat7[] PROGMEM = "Probe";
                                 ;    1409 static const char msg_stat8[] PROGMEM = "Cycle";
                                 ;    1410 static const char msg_stat9[] PROGMEM = "Homing";
                                 ;    1411 static const char msg_stat10[] PROGMEM = "Jog";
                                 ;    1412 static const char msg_stat11[] PROGMEM = "Shutdown";
                                 ;    1413 static const char *const msg_stat[] PROGMEM = { msg_stat0, msg_stat1, msg_stat2, msg_stat3,
                                 ;    1414 												msg_stat4, msg_stat5, msg_stat6, msg_stat7,
                                 ;    1415 												msg_stat8, msg_stat9, msg_stat10, msg_stat11 };
                                 ;    1416 
                                 ;    1417 static const char msg_macs0[] PROGMEM = "Initializing";
                                 ;    1418 static const char msg_macs1[] PROGMEM = "Ready";
                                 ;    1419 static const char msg_macs2[] PROGMEM = "Alarm";
                                 ;    1420 static const char msg_macs3[] PROGMEM = "Stop";
                                 ;    1421 static const char msg_macs4[] PROGMEM = "End";
                                 ;    1422 static const char msg_macs5[] PROGMEM = "Cycle";
                                 ;    1423 static const char msg_macs6[] PROGMEM = "Shutdown";
                                 ;    1424 static const char *const msg_macs[] PROGMEM = { msg_macs0, msg_macs1, msg_macs2, msg_macs3,
                                 ;    1425 												msg_macs4, msg_macs5, msg_macs6 };
                                 ;    1426 
                                 ;    1427 static const char msg_cycs0[] PROGMEM = "Off";
                                 ;    1428 static const char msg_cycs1[] PROGMEM = "Machining";
                                 ;    1429 static const char msg_cycs2[] PROGMEM = "Probe";
                                 ;    1430 static const char msg_cycs3[] PROGMEM = "Homing";
                                 ;    1431 static const char msg_cycs4[] PROGMEM = "Jog";
                                 ;    1432 static const char *const msg_cycs[] PROGMEM = { msg_cycs0, msg_cycs1, msg_cycs2, msg_cycs3,  msg_cycs4 };
                                 ;    1433 
                                 ;    1434 static const char msg_mots0[] PROGMEM = "Stop";
                                 ;    1435 static const char msg_mots1[] PROGMEM = "Run";
                                 ;    1436 static const char msg_mots2[] PROGMEM = "Hold";
                                 ;    1437 static const char *const msg_mots[] PROGMEM = { msg_mots0, msg_mots1, msg_mots2 };
                                 ;    1438 
                                 ;    1439 static const char msg_hold0[] PROGMEM = "Off";
                                 ;    1440 static const char msg_hold1[] PROGMEM = "Sync";
                                 ;    1441 static const char msg_hold2[] PROGMEM = "Plan";
                                 ;    1442 static const char msg_hold3[] PROGMEM = "Decel";
                                 ;    1443 static const char msg_hold4[] PROGMEM = "Hold";
                                 ;    1444 static const char msg_hold5[] PROGMEM = "End Hold";
                                 ;    1445 static const char *const msg_hold[] PROGMEM = { msg_hold0, msg_hold1, msg_hold2, msg_hold3,
                                 ;    1446 												msg_hold4,  msg_hold5 };
                                 ;    1447 
                                 ;    1448 static const char msg_home0[] PROGMEM = "Not Homed";
                                 ;    1449 static const char msg_home1[] PROGMEM = "Homed";
                                 ;    1450 static const char msg_home2[] PROGMEM = "Homing";
                                 ;    1451 static const char *const msg_home[] PROGMEM = { msg_home0, msg_home1, msg_home2 };
                                 ;    1452 
                                 ;    1453 static const char msg_g53[] PROGMEM = "G53 - machine coordinate system";
                                 ;    1454 static const char msg_g54[] PROGMEM = "G54 - coordinate system 1";
                                 ;    1455 static const char msg_g55[] PROGMEM = "G55 - coordinate system 2";
                                 ;    1456 static const char msg_g56[] PROGMEM = "G56 - coordinate system 3";
                                 ;    1457 static const char msg_g57[] PROGMEM = "G57 - coordinate system 4";
                                 ;    1458 static const char msg_g58[] PROGMEM = "G58 - coordinate system 5";
                                 ;    1459 static const char msg_g59[] PROGMEM = "G59 - coordinate system 6";
                                 ;    1460 static const char *const msg_coor[] PROGMEM = { msg_g53, msg_g54, msg_g55, msg_g56, msg_g57, msg_g58, msg_g59 };
                                 ;    1461 
                                 ;    1462 static const char msg_g00[] PROGMEM = "G0  - linear traverse (seek)";
                                 ;    1463 static const char msg_g01[] PROGMEM = "G1  - linear feed";
                                 ;    1464 static const char msg_g02[] PROGMEM = "G2  - clockwise arc feed";
                                 ;    1465 static const char msg_g03[] PROGMEM = "G3  - counter clockwise arc feed";
                                 ;    1466 static const char msg_g80[] PROGMEM = "G80 - cancel motion mode (none active)";
                                 ;    1467 static const char *const msg_momo[] PROGMEM = { msg_g00, msg_g01, msg_g02, msg_g03, msg_g80 };
                                 ;    1468 
                                 ;    1469 static const char msg_g17[] PROGMEM = "G17 - XY plane";
                                 ;    1470 static const char msg_g18[] PROGMEM = "G18 - XZ plane";
                                 ;    1471 static const char msg_g19[] PROGMEM = "G19 - YZ plane";
                                 ;    1472 static const char *const msg_plan[] PROGMEM = { msg_g17, msg_g18, msg_g19 };
                                 ;    1473 
                                 ;    1474 static const char msg_g61[] PROGMEM = "G61 - exact path mode";
                                 ;    1475 static const char msg_g6a[] PROGMEM = "G61.1 - exact stop mode";
                                 ;    1476 static const char msg_g64[] PROGMEM = "G64 - continuous mode";
                                 ;    1477 static const char *const msg_path[] PROGMEM = { msg_g61, msg_g6a, msg_g64 };
                                 ;    1478 
                                 ;    1479 static const char msg_g90[] PROGMEM = "G90 - absolute distance mode";
                                 ;    1480 static const char msg_g91[] PROGMEM = "G91 - incremental distance mode";
                                 ;    1481 static const char *const msg_dist[] PROGMEM = { msg_g90, msg_g91 };
                                 ;    1482 
                                 ;    1483 static const char msg_g93[] PROGMEM = "G93 - inverse time mode";
                                 ;    1484 static const char msg_g94[] PROGMEM = "G94 - units-per-minute mode (i.e. feedrate mode)";
                                 ;    1485 static const char msg_g95[] PROGMEM = "G95 - units-per-revolution mode";
                                 ;    1486 static const char *const msg_frmo[] PROGMEM = { msg_g93, msg_g94, msg_g95 };
                                 ;    1487 
                                 ;    1488 #else
                                 ;    1489 
                                 ;    1490 #define msg_units NULL
                                 ;    1491 #define msg_unit NULL
                                 ;    1492 #define msg_stat NULL
                                 ;    1493 #define msg_macs NULL
                                 ;    1494 #define msg_cycs NULL
                                 ;    1495 #define msg_mots NULL
                                 ;    1496 #define msg_hold NULL
                                 ;    1497 #define msg_home NULL
                                 ;    1498 #define msg_coor NULL
                                 ;    1499 #define msg_momo NULL
                                 ;    1500 #define msg_plan NULL
                                 ;    1501 #define msg_path NULL
                                 ;    1502 #define msg_dist NULL
                                 ;    1503 #define msg_frmo NULL
                                 ;    1504 #define msg_am NULL
                                 ;    1505 
                                 ;    1506 #endif // __TEXT_MODE
                                 ;    1507 
                                 ;    1508 /***** AXIS HELPERS *****************************************************************
                                 ;    1509  * cm_get_axis_char() - return ASCII char for axis given the axis number
                                 ;    1510  * _get_axis()		  - return axis number or -1 if NA
                                 ;    1511  * _get_axis_type()	  - return 0 -f axis is linear, 1 if rotary, -1 if NA
                                 ;    1512  */
                                 ;    1513 
                                 ;    1514 char_t cm_get_axis_char(const int8_t axis)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1514
00001861 7100F0                  		ADD #0FFFFFFF0H, R0
00001864 8389                    		MOV.B R1, 0FH[R0]
                                 ;    1515 {
                                 ;    1516 	char_t axis_char[] = "XYZABC";
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1516
00001866 FBE2rrrrrrrr            		MOV.L #_L31, R14
0000186C C4E007                  		MOV.B [R14], 07H[R0]
0000186F C5E00108                		MOV.B 01H[R14], 08H[R0]
00001873 C5E00209                		MOV.B 02H[R14], 09H[R0]
00001877 C5E0030A                		MOV.B 03H[R14], 0AH[R0]
0000187B C5E0040B                		MOV.B 04H[R14], 0BH[R0]
0000187F C5E0050C                		MOV.B 05H[R14], 0CH[R0]
00001883 C5E0060D                		MOV.B 06H[R14], 0DH[R0]
00001887                         L599:	; entry.split
                                 ;    1517 	if ((axis < 0) || (axis > AXES)) return (' ');
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1517
00001887 8B89                    		MOV.B 0FH[R0], R1
00001889 6101                    		CMP #00H, R1
0000188B 29rr                    		BLT L602
0000188D 08                   S  		BRA L601
0000188E                         L600:	; bb17
0000188E 3C0620                  		MOV.B #20H, 06H[R0]
00001891 2Err                 B  		BRA L606
00001893                         L601:	; bb23
00001893 8B89                    		MOV.B 0FH[R0], R1
00001895 6171                    		CMP #07H, R1
00001897 29rr                    		BLT L603
00001899                         L602:	; bb28
00001899 F80601                  		MOV.L #00000001H, [R0]
0000189C 08                   S  		BRA L604
0000189D                         L603:	; bb29
0000189D F80600                  		MOV.L #00000000H, [R0]
000018A0                         L604:	; bb30
000018A0 EC01                    		MOV.L [R0], R1
000018A2 6101                    		CMP #00H, R1
000018A4 21rr                    		BNE L600
000018A6                         L605:	; bb34
                                 ;    1518 	return (axis_char[axis]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1518
000018A6 8B89                    		MOV.B 0FH[R0], R1
000018A8 710E07                  		ADD #07H, R0, R14
000018AB FECE11                  		MOVU.B [R14,R1], R1
000018AE 8181                    		MOV.B R1, 06H[R0]
000018B0                         L606:	; bb41
000018B0 C500060E                		MOV.B 06H[R0], 0EH[R0]
                                 ;    1519 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1519
000018B4 B381                    		MOVU.B 0EH[R0], R1
000018B6 6704                    		RTSD #10H
000018B8                         __$_get_axis:
                                 		.STACK	__$_get_axis=28
                                 ;    1520 
                                 ;    1521 static int8_t _get_axis(const index_t index)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1521
000018B8 7100E8                  		ADD #0FFFFFFE8H, R0
000018BB 9289                    		MOV.W R1, 16H[R0]
                                 ;    1522 {
                                 ;    1523 	char_t *ptr;
                                 ;    1524 	char_t tmp[TOKEN_LEN+1];
                                 ;    1525 	char_t axes[] = {"xyzabc"};
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1525
000018BD FBE2rrrrrrrr            		MOV.L #_L32, R14
000018C3 C4E00E                  		MOV.B [R14], 0EH[R0]
000018C6 C5E0010F                		MOV.B 01H[R14], 0FH[R0]
000018CA C5E00210                		MOV.B 02H[R14], 10H[R0]
000018CE C5E00311                		MOV.B 03H[R14], 11H[R0]
000018D2 C5E00412                		MOV.B 04H[R14], 12H[R0]
000018D6 C5E00513                		MOV.B 05H[R14], 13H[R0]
000018DA C5E00614                		MOV.B 06H[R14], 14H[R0]
000018DE                         L608:	; entry.split
                                 ;    1526 
                                 ;    1527 	strncpy_P(tmp, cfgArray[index].token, TOKEN_LEN);	// kind of a hack. Looks for an axis
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1527
000018DE BA89                    		MOVU.W 16H[R0], R1
000018E0 6C51                    		SHLL #05H, R1
000018E2 FB22rrrrrrrr            		MOV.L #_cfgArray, R2
000018E8 4B12                    		ADD R1, R2
000018EA 6242                    		ADD #04H, R2
000018EC 6653                    		MOV.L #00000005H, R3
000018EE 710108                  		ADD #08H, R0, R1
000018F1 7F87                    		SMOVU
000018F3 71010D                  		ADD #0DH, R0, R1
000018F6 4331                    		SUB R3, R1
000018F8 6602                    		MOV.L #00000000H, R2
000018FA 7F88                    		SSTR.B
000018FC                         L609:	; entry.split1
                                 ;    1528 	if ((ptr = strchr(axes, tmp[0])) == NULL) {			// character in the 0 and 3 positions
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1528
000018FC B202                    		MOVU.B 08H[R0], R2
000018FE 71010E                  		ADD #0EH, R0, R1
00001901 05rrrrrr             A  		BSR _strchr
00001905 A009                    		MOV.L R1, 04H[R0]
00001907 6101                    		CMP #00H, R1
00001909 21rr                    		BNE L612
0000190B                         L610:	; bb27
                                 ;    1529 		if ((ptr = strchr(axes, tmp[3])) == NULL) {		// to accommodate 'xam' and 'g54x' styles
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1529
0000190B B28A                    		MOVU.B 0BH[R0], R2
0000190D 71010E                  		ADD #0EH, R0, R1
00001910 05rrrrrr             A  		BSR _strchr
00001914 A009                    		MOV.L R1, 04H[R0]
00001916 6101                    		CMP #00H, R1
00001918 18                   S  		BNE L612
00001919                         L611:	; bb28
                                 ;    1530 			return (-1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1530
00001919 3C03FF                  		MOV.B #0FFH, 03H[R0]
0000191C 08                   S  		BRA L613
0000191D                         L612:	; bb50
                                 ;    1531 		}
                                 ;    1532 	}
                                 ;    1533 	return (ptr - axes);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1533
0000191D A809                    		MOV.L 04H[R0], R1
0000191F 710E0E                  		ADD #0EH, R0, R14
00001922 43E1                    		SUB R14, R1
00001924 8089                    		MOV.B R1, 03H[R0]
00001926                         L613:	; bb58
00001926 C5000315                		MOV.B 03H[R0], 15H[R0]
                                 ;    1534 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1534
0000192A 8D09                    		MOV.B 15H[R0], R1
0000192C 6706                    		RTSD #18H
0000192E                         __$_get_axis_type:
                                 		.STACK	__$_get_axis_type=12
                                 ;    1535 
                                 ;    1536 static int8_t _get_axis_type(const index_t index)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1536
0000192E 6080                    		SUB #08H, R0
00001930 9089                    		MOV.W R1, 06H[R0]
                                 ;    1537 {
                                 ;    1538 	int8_t axis = _get_axis(index);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1538
00001932 B889                    		MOVU.W 06H[R0], R1
00001934 39rrrr               W  		BSR __$_get_axis
00001937 8101                    		MOV.B R1, 04H[R0]
00001939                         L615:	; entry.split
                                 ;    1539 	if (axis >= AXIS_A) return (1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1539
00001939 8901                    		MOV.B 04H[R0], R1
0000193B 6131                    		CMP #03H, R1
0000193D 29rr                    		BLT L617
0000193F                         L616:	; bb5
0000193F 3C0301                  		MOV.B #01H, 03H[R0]
00001942 2Err                 B  		BRA L620
00001944                         L617:	; bb12
                                 ;    1540 	if (axis == -1) return (-1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1540
00001944 8901                    		MOV.B 04H[R0], R1
00001946 7501FF                  		CMP #0FFFFFFFFH, R1
00001949 18                   S  		BNE L619
0000194A                         L618:	; bb13
0000194A 3C03FF                  		MOV.B #0FFH, 03H[R0]
0000194D 08                   S  		BRA L620
0000194E                         L619:	; bb20
                                 ;    1541 	return (0);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1541
0000194E 3C0300                  		MOV.B #00H, 03H[R0]
00001951                         L620:	; bb22
00001951 C5000305                		MOV.B 03H[R0], 05H[R0]
                                 ;    1542 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1542
00001955 8909                    		MOV.B 05H[R0], R1
00001957 6702                    		RTSD #08H
00001959                         __get_msg_helper:
                                 		.STACK	__get_msg_helper=16
                                 ;    1543 
                                 ;    1544 /**** Functions called directly from cfgArray table - mostly wrappers ****
                                 ;    1545  * _get_msg_helper() - helper to get string values
                                 ;    1546  *
                                 ;    1547  * cm_get_stat() - get combined machine state as value and string
                                 ;    1548  * cm_get_macs() - get raw machine state as value and string
                                 ;    1549  * cm_get_cycs() - get raw cycle state as value and string
                                 ;    1550  * cm_get_mots() - get raw motion state as value and string
                                 ;    1551  * cm_get_hold() - get raw hold state as value and string
                                 ;    1552  * cm_get_home() - get raw homing state as value and string
                                 ;    1553  *
                                 ;    1554  * cm_get_unit() - get units mode as integer and display string
                                 ;    1555  * cm_get_coor() - get goodinate system
                                 ;    1556  * cm_get_momo() - get runtime motion mode
                                 ;    1557  * cm_get_plan() - get model gcode plane select
                                 ;    1558  * cm_get_path() - get model gcode path control mode
                                 ;    1559  * cm_get_dist() - get model gcode distance mode
                                 ;    1560  * cm_get_frmo() - get model gcode feed rate mode
                                 ;    1561  * cm_get_tool() - get tool
                                 ;    1562  * cm_get_feed() - get feed rate
                                 ;    1563  * cm_get_mline()- get model line number for status reports
                                 ;    1564  * cm_get_line() - get active (model or runtime) line number for status reports
                                 ;    1565  * cm_get_vel()  - get runtime velocity
                                 ;    1566  * cm_get_ofs()  - get current work offset (runtime)
                                 ;    1567  * cm_get_pos()  - get current work position (runtime)
                                 ;    1568  * cm_get_mpos() - get current machine position (runtime)
                                 ;    1569  *
                                 ;    1570  * cm_print_pos()- print work position (with proper units)
                                 ;    1571  * cm_print_mpos()- print machine position (always mm units)
                                 ;    1572  * cm_print_coor()- print coordinate offsets with linear units
                                 ;    1573  * cm_print_corr()- print coordinate offsets with rotary units
                                 ;    1574  */
                                 ;    1575 
                                 ;    1576 stat_t _get_msg_helper(nvObj_t *nv, const char *const msg_array[], uint8_t value)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1576
00001959 60C0                    		SUB #0CH, R0
0000195B A081                    		MOV.L R1, 08H[R0]
0000195D A00A                    		MOV.L R2, 04H[R0]
0000195F 808B                    		MOV.B R3, 03H[R0]
                                 ;    1577 {
                                 ;    1578 	nv->value = (float)value;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1578
00001961 FC4731                  		ITOF R3, R1
00001964 A882                    		MOV.L 08H[R0], R2
00001966 A121                    		MOV.L R1, 10H[R2]
00001968                         L622:	; entry.split
                                 ;    1579 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1579
00001968 A881                    		MOV.L 08H[R0], R1
0000196A 3C1B02                  		MOV.B #02H, 0BH[R1]
0000196D                         L623:	; entry.split1
                                 ;    1580 	return(nv_copy_string(nv, (const char_t *)GET_TEXT_ITEM(msg_array, value)));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1580
0000196D A809                    		MOV.L 04H[R0], R1
0000196F B08A                    		MOVU.B 03H[R0], R2
00001971 FE6212                  		MOV.L [R2,R1], R2
00001974 A881                    		MOV.L 08H[R0], R1
00001976 05rrrrrr             A  		BSR _nv_copy_string
0000197A 8081                    		MOV.B R1, 02H[R0]
0000197C B081                    		MOVU.B 02H[R0], R1
0000197E                         L624:	; entry.split2
                                 ;    1581 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1581
0000197E 5B11                    		MOVU.B R1, R1
00001980 6703                    		RTSD #0CH
00001982                         _cm_get_stat:
                                 		.STACK	_cm_get_stat=16
                                 ;    1582 
                                 ;    1583 stat_t cm_get_stat(nvObj_t *nv) { return(_get_msg_helper(nv, msg_stat, cm_get_combined_state()));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1583
00001982 7EA6                    		PUSH.L R6
00001984 6080                    		SUB #08H, R0
00001986 EF16                    		MOV.L R1, R6
00001988 A00E                    		MOV.L R6, 04H[R0]
0000198A 39rrrr               W  		BSR _cm_get_combined_state
0000198D EF13                    		MOV.L R1, R3
0000198F FB22rrrrrrrr            		MOV.L #__$msg_stat, R2
00001995 EF61                    		MOV.L R6, R1
00001997 39rrrr               W  		BSR __get_msg_helper
0000199A 8089                    		MOV.B R1, 03H[R0]
0000199C B089                    		MOVU.B 03H[R0], R1
0000199E 3F6603                  		RTSD #0CH, R6-R6
000019A1                         _cm_get_macs:
                                 		.STACK	_cm_get_macs=16
                                 ;    1584 stat_t cm_get_macs(nvObj_t *nv) { return(_get_msg_helper(nv, msg_macs, cm_get_machine_state()));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1584
000019A1 7EA6                    		PUSH.L R6
000019A3 6080                    		SUB #08H, R0
000019A5 EF16                    		MOV.L R1, R6
000019A7 A00E                    		MOV.L R6, 04H[R0]
000019A9 39rrrr               W  		BSR _cm_get_machine_state
000019AC EF13                    		MOV.L R1, R3
000019AE FB22rrrrrrrr            		MOV.L #__$msg_macs, R2
000019B4 EF61                    		MOV.L R6, R1
000019B6 39rrrr               W  		BSR __get_msg_helper
000019B9 8089                    		MOV.B R1, 03H[R0]
000019BB B089                    		MOVU.B 03H[R0], R1
000019BD 3F6603                  		RTSD #0CH, R6-R6
000019C0                         _cm_get_cycs:
                                 		.STACK	_cm_get_cycs=16
                                 ;    1585 stat_t cm_get_cycs(nvObj_t *nv) { return(_get_msg_helper(nv, msg_cycs, cm_get_cycle_state()));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1585
000019C0 7EA6                    		PUSH.L R6
000019C2 6080                    		SUB #08H, R0
000019C4 EF16                    		MOV.L R1, R6
000019C6 A00E                    		MOV.L R6, 04H[R0]
000019C8 39rrrr               W  		BSR _cm_get_cycle_state
000019CB EF13                    		MOV.L R1, R3
000019CD FB22rrrrrrrr            		MOV.L #__$msg_cycs, R2
000019D3 EF61                    		MOV.L R6, R1
000019D5 39rrrr               W  		BSR __get_msg_helper
000019D8 8089                    		MOV.B R1, 03H[R0]
000019DA B089                    		MOVU.B 03H[R0], R1
000019DC 3F6603                  		RTSD #0CH, R6-R6
000019DF                         _cm_get_mots:
                                 		.STACK	_cm_get_mots=16
                                 ;    1586 stat_t cm_get_mots(nvObj_t *nv) { return(_get_msg_helper(nv, msg_mots, cm_get_motion_state()));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1586
000019DF 7EA6                    		PUSH.L R6
000019E1 6080                    		SUB #08H, R0
000019E3 EF16                    		MOV.L R1, R6
000019E5 A00E                    		MOV.L R6, 04H[R0]
000019E7 39rrrr               W  		BSR _cm_get_motion_state
000019EA EF13                    		MOV.L R1, R3
000019EC FB22rrrrrrrr            		MOV.L #__$msg_mots, R2
000019F2 EF61                    		MOV.L R6, R1
000019F4 39rrrr               W  		BSR __get_msg_helper
000019F7 8089                    		MOV.B R1, 03H[R0]
000019F9 B089                    		MOVU.B 03H[R0], R1
000019FB 3F6603                  		RTSD #0CH, R6-R6
000019FE                         _cm_get_hold:
                                 		.STACK	_cm_get_hold=16
                                 ;    1587 stat_t cm_get_hold(nvObj_t *nv) { return(_get_msg_helper(nv, msg_hold, cm_get_hold_state()));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1587
000019FE 7EA6                    		PUSH.L R6
00001A00 6080                    		SUB #08H, R0
00001A02 EF16                    		MOV.L R1, R6
00001A04 A00E                    		MOV.L R6, 04H[R0]
00001A06 39rrrr               W  		BSR _cm_get_hold_state
00001A09 EF13                    		MOV.L R1, R3
00001A0B FB22rrrrrrrr            		MOV.L #__$msg_hold, R2
00001A11 EF61                    		MOV.L R6, R1
00001A13 39rrrr               W  		BSR __get_msg_helper
00001A16 8089                    		MOV.B R1, 03H[R0]
00001A18 B089                    		MOVU.B 03H[R0], R1
00001A1A 3F6603                  		RTSD #0CH, R6-R6
00001A1D                         _cm_get_home:
                                 		.STACK	_cm_get_home=16
                                 ;    1588 stat_t cm_get_home(nvObj_t *nv) { return(_get_msg_helper(nv, msg_home, cm_get_homing_state()));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1588
00001A1D 7EA6                    		PUSH.L R6
00001A1F 6080                    		SUB #08H, R0
00001A21 EF16                    		MOV.L R1, R6
00001A23 A00E                    		MOV.L R6, 04H[R0]
00001A25 39rrrr               W  		BSR _cm_get_homing_state
00001A28 EF13                    		MOV.L R1, R3
00001A2A FB22rrrrrrrr            		MOV.L #__$msg_home, R2
00001A30 EF61                    		MOV.L R6, R1
00001A32 39rrrr               W  		BSR __get_msg_helper
00001A35 8089                    		MOV.B R1, 03H[R0]
00001A37 B089                    		MOVU.B 03H[R0], R1
00001A39 3F6603                  		RTSD #0CH, R6-R6
00001A3C                         _cm_get_unit:
                                 		.STACK	_cm_get_unit=16
                                 ;    1589 
                                 ;    1590 stat_t cm_get_unit(nvObj_t *nv) { return(_get_msg_helper(nv, msg_unit, cm_get_units_mode(ACTIVE_MODEL)));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1590
00001A3C 7EA6                    		PUSH.L R6
00001A3E 6080                    		SUB #08H, R0
00001A40 EF16                    		MOV.L R1, R6
00001A42 A00E                    		MOV.L R6, 04H[R0]
00001A44 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001A4A EDE194                  		MOV.L 0250H[R14], R1
00001A4D 39rrrr               W  		BSR _cm_get_units_mode
00001A50 EF13                    		MOV.L R1, R3
00001A52 FB22rrrrrrrr            		MOV.L #__$msg_unit, R2
00001A58 EF61                    		MOV.L R6, R1
00001A5A 39rrrr               W  		BSR __get_msg_helper
00001A5D 8089                    		MOV.B R1, 03H[R0]
00001A5F B089                    		MOVU.B 03H[R0], R1
00001A61 3F6603                  		RTSD #0CH, R6-R6
00001A64                         _cm_get_coor:
                                 		.STACK	_cm_get_coor=16
                                 ;    1591 stat_t cm_get_coor(nvObj_t *nv) { return(_get_msg_helper(nv, msg_coor, cm_get_coord_system(ACTIVE_MODEL)));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1591
00001A64 7EA6                    		PUSH.L R6
00001A66 6080                    		SUB #08H, R0
00001A68 EF16                    		MOV.L R1, R6
00001A6A A00E                    		MOV.L R6, 04H[R0]
00001A6C FBE2rrrrrrrr            		MOV.L #_cm, R14
00001A72 EDE194                  		MOV.L 0250H[R14], R1
00001A75 39rrrr               W  		BSR _cm_get_coord_system
00001A78 EF13                    		MOV.L R1, R3
00001A7A FB22rrrrrrrr            		MOV.L #__$msg_coor, R2
00001A80 EF61                    		MOV.L R6, R1
00001A82 39rrrr               W  		BSR __get_msg_helper
00001A85 8089                    		MOV.B R1, 03H[R0]
00001A87 B089                    		MOVU.B 03H[R0], R1
00001A89 3F6603                  		RTSD #0CH, R6-R6
00001A8C                         _cm_get_momo:
                                 		.STACK	_cm_get_momo=16
                                 ;    1592 stat_t cm_get_momo(nvObj_t *nv) { return(_get_msg_helper(nv, msg_momo, cm_get_motion_mode(ACTIVE_MODEL)));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1592
00001A8C 7EA6                    		PUSH.L R6
00001A8E 6080                    		SUB #08H, R0
00001A90 EF16                    		MOV.L R1, R6
00001A92 A00E                    		MOV.L R6, 04H[R0]
00001A94 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001A9A EDE194                  		MOV.L 0250H[R14], R1
00001A9D 39rrrr               W  		BSR _cm_get_motion_mode
00001AA0 EF13                    		MOV.L R1, R3
00001AA2 FB22rrrrrrrr            		MOV.L #__$msg_momo, R2
00001AA8 EF61                    		MOV.L R6, R1
00001AAA 39rrrr               W  		BSR __get_msg_helper
00001AAD 8089                    		MOV.B R1, 03H[R0]
00001AAF B089                    		MOVU.B 03H[R0], R1
00001AB1 3F6603                  		RTSD #0CH, R6-R6
00001AB4                         _cm_get_plan:
                                 		.STACK	_cm_get_plan=16
                                 ;    1593 stat_t cm_get_plan(nvObj_t *nv) { return(_get_msg_helper(nv, msg_plan, cm_get_select_plane(ACTIVE_MODEL)));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1593
00001AB4 7EA6                    		PUSH.L R6
00001AB6 6080                    		SUB #08H, R0
00001AB8 EF16                    		MOV.L R1, R6
00001ABA A00E                    		MOV.L R6, 04H[R0]
00001ABC FBE2rrrrrrrr            		MOV.L #_cm, R14
00001AC2 EDE194                  		MOV.L 0250H[R14], R1
00001AC5 39rrrr               W  		BSR _cm_get_select_plane
00001AC8 EF13                    		MOV.L R1, R3
00001ACA FB22rrrrrrrr            		MOV.L #__$msg_plan, R2
00001AD0 EF61                    		MOV.L R6, R1
00001AD2 39rrrr               W  		BSR __get_msg_helper
00001AD5 8089                    		MOV.B R1, 03H[R0]
00001AD7 B089                    		MOVU.B 03H[R0], R1
00001AD9 3F6603                  		RTSD #0CH, R6-R6
00001ADC                         _cm_get_path:
                                 		.STACK	_cm_get_path=16
                                 ;    1594 stat_t cm_get_path(nvObj_t *nv) { return(_get_msg_helper(nv, msg_path, cm_get_path_control(ACTIVE_MODEL)));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1594
00001ADC 7EA6                    		PUSH.L R6
00001ADE 6080                    		SUB #08H, R0
00001AE0 EF16                    		MOV.L R1, R6
00001AE2 A00E                    		MOV.L R6, 04H[R0]
00001AE4 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001AEA EDE194                  		MOV.L 0250H[R14], R1
00001AED 39rrrr               W  		BSR _cm_get_path_control
00001AF0 EF13                    		MOV.L R1, R3
00001AF2 FB22rrrrrrrr            		MOV.L #__$msg_path, R2
00001AF8 EF61                    		MOV.L R6, R1
00001AFA 39rrrr               W  		BSR __get_msg_helper
00001AFD 8089                    		MOV.B R1, 03H[R0]
00001AFF B089                    		MOVU.B 03H[R0], R1
00001B01 3F6603                  		RTSD #0CH, R6-R6
00001B04                         _cm_get_dist:
                                 		.STACK	_cm_get_dist=16
                                 ;    1595 stat_t cm_get_dist(nvObj_t *nv) { return(_get_msg_helper(nv, msg_dist, cm_get_distance_mode(ACTIVE_MODEL)));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1595
00001B04 7EA6                    		PUSH.L R6
00001B06 6080                    		SUB #08H, R0
00001B08 EF16                    		MOV.L R1, R6
00001B0A A00E                    		MOV.L R6, 04H[R0]
00001B0C FBE2rrrrrrrr            		MOV.L #_cm, R14
00001B12 EDE194                  		MOV.L 0250H[R14], R1
00001B15 39rrrr               W  		BSR _cm_get_distance_mode
00001B18 EF13                    		MOV.L R1, R3
00001B1A FB22rrrrrrrr            		MOV.L #__$msg_dist, R2
00001B20 EF61                    		MOV.L R6, R1
00001B22 39rrrr               W  		BSR __get_msg_helper
00001B25 8089                    		MOV.B R1, 03H[R0]
00001B27 B089                    		MOVU.B 03H[R0], R1
00001B29 3F6603                  		RTSD #0CH, R6-R6
00001B2C                         _cm_get_frmo:
                                 		.STACK	_cm_get_frmo=16
                                 ;    1596 stat_t cm_get_frmo(nvObj_t *nv) { return(_get_msg_helper(nv, msg_frmo, cm_get_feed_rate_mode(ACTIVE_MODEL)));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1596
00001B2C 7EA6                    		PUSH.L R6
00001B2E 6080                    		SUB #08H, R0
00001B30 EF16                    		MOV.L R1, R6
00001B32 A00E                    		MOV.L R6, 04H[R0]
00001B34 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001B3A EDE194                  		MOV.L 0250H[R14], R1
00001B3D 39rrrr               W  		BSR _cm_get_feed_rate_mode
00001B40 EF13                    		MOV.L R1, R3
00001B42 FB22rrrrrrrr            		MOV.L #__$msg_frmo, R2
00001B48 EF61                    		MOV.L R6, R1
00001B4A 39rrrr               W  		BSR __get_msg_helper
00001B4D 8089                    		MOV.B R1, 03H[R0]
00001B4F B089                    		MOVU.B 03H[R0], R1
00001B51 3F6603                  		RTSD #0CH, R6-R6
00001B54                         _cm_get_toolv:
                                 		.STACK	_cm_get_toolv=16
                                 ;    1597 
                                 ;    1598 stat_t cm_get_toolv(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1598
00001B54 7EA6                    		PUSH.L R6
00001B56 6080                    		SUB #08H, R0
00001B58 EF16                    		MOV.L R1, R6
00001B5A A00E                    		MOV.L R6, 04H[R0]
                                 ;    1599 {
                                 ;    1600 	nv->value = (float)cm_get_tool(ACTIVE_MODEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1600
00001B5C FBE2rrrrrrrr            		MOV.L #_cm, R14
00001B62 EDE194                  		MOV.L 0250H[R14], R1
00001B65 39rrrr               W  		BSR _cm_get_tool
00001B68 FC4711                  		ITOF R1, R1
00001B6B A161                    		MOV.L R1, 10H[R6]
00001B6D                         L639:	; entry.split
                                 ;    1601 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1601
00001B6D A809                    		MOV.L 04H[R0], R1
00001B6F 3C1B02                  		MOV.B #02H, 0BH[R1]
00001B72                         L640:	; entry.split1
                                 ;    1602 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1602
00001B72 3C0300                  		MOV.B #00H, 03H[R0]
00001B75 B089                    		MOVU.B 03H[R0], R1
00001B77                         L641:	; entry.split2
                                 ;    1603 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1603
00001B77 5B11                    		MOVU.B R1, R1
00001B79 3F6603                  		RTSD #0CH, R6-R6
00001B7C                         _cm_get_mline:
                                 		.STACK	_cm_get_mline=16
                                 ;    1604 
                                 ;    1605 stat_t cm_get_mline(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1605
00001B7C 7EA6                    		PUSH.L R6
00001B7E 6080                    		SUB #08H, R0
00001B80 EF16                    		MOV.L R1, R6
00001B82 A00E                    		MOV.L R6, 04H[R0]
                                 ;    1606 {
                                 ;    1607 	nv->value = (float)cm_get_linenum(MODEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1607
00001B84 FB12rrrrrrrr            		MOV.L #_cm, R1
00001B8A 72115402                		ADD #0254H, R1
00001B8E 39rrrr               W  		BSR _cm_get_linenum
00001B91 7DF1                    		BTST #1FH, R1
00001B93 20rr                    		BEQ L644
00001B95                         L643:	; entry
00001B95 FD811E                  		SHLR #01H, R1, R14
00001B98 6411                    		AND #01H, R1
00001B9A 57E1                    		OR R14, R1
00001B9C FC4711                  		ITOF R1, R1
00001B9F FC8B11                  		FADD R1, R1
00001BA2 08                   S  		BRA L645
00001BA3                         L644:	; entry
00001BA3 FC4711                  		ITOF R1, R1
00001BA6                         L645:	; entry
00001BA6 A161                    		MOV.L R1, 10H[R6]
00001BA8                         L646:	; entry.split
                                 ;    1608 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1608
00001BA8 A809                    		MOV.L 04H[R0], R1
00001BAA 3C1B02                  		MOV.B #02H, 0BH[R1]
00001BAD                         L647:	; entry.split1
                                 ;    1609 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1609
00001BAD 3C0300                  		MOV.B #00H, 03H[R0]
00001BB0 B089                    		MOVU.B 03H[R0], R1
00001BB2                         L648:	; entry.split2
                                 ;    1610 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1610
00001BB2 5B11                    		MOVU.B R1, R1
00001BB4 3F6603                  		RTSD #0CH, R6-R6
00001BB7                         _cm_get_line:
                                 		.STACK	_cm_get_line=16
                                 ;    1611 
                                 ;    1612 stat_t cm_get_line(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1612
00001BB7 7EA6                    		PUSH.L R6
00001BB9 6080                    		SUB #08H, R0
00001BBB EF16                    		MOV.L R1, R6
00001BBD A00E                    		MOV.L R6, 04H[R0]
                                 ;    1613 {
                                 ;    1614 	nv->value = (float)cm_get_linenum(ACTIVE_MODEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1614
00001BBF FBE2rrrrrrrr            		MOV.L #_cm, R14
00001BC5 EDE194                  		MOV.L 0250H[R14], R1
00001BC8 39rrrr               W  		BSR _cm_get_linenum
00001BCB 7DF1                    		BTST #1FH, R1
00001BCD 20rr                    		BEQ L651
00001BCF                         L650:	; entry
00001BCF FD811E                  		SHLR #01H, R1, R14
00001BD2 6411                    		AND #01H, R1
00001BD4 57E1                    		OR R14, R1
00001BD6 FC4711                  		ITOF R1, R1
00001BD9 FC8B11                  		FADD R1, R1
00001BDC 08                   S  		BRA L652
00001BDD                         L651:	; entry
00001BDD FC4711                  		ITOF R1, R1
00001BE0                         L652:	; entry
00001BE0 A161                    		MOV.L R1, 10H[R6]
00001BE2                         L653:	; entry.split
                                 ;    1615 	nv->valuetype = TYPE_INTEGER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1615
00001BE2 A809                    		MOV.L 04H[R0], R1
00001BE4 3C1B02                  		MOV.B #02H, 0BH[R1]
00001BE7                         L654:	; entry.split1
                                 ;    1616 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1616
00001BE7 3C0300                  		MOV.B #00H, 03H[R0]
00001BEA B089                    		MOVU.B 03H[R0], R1
00001BEC                         L655:	; entry.split2
                                 ;    1617 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1617
00001BEC 5B11                    		MOVU.B R1, R1
00001BEE 3F6603                  		RTSD #0CH, R6-R6
00001BF1                         _cm_get_vel:
                                 		.STACK	_cm_get_vel=16
                                 ;    1618 
                                 ;    1619 stat_t cm_get_vel(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1619
00001BF1 7EA6                    		PUSH.L R6
00001BF3 6080                    		SUB #08H, R0
00001BF5 A009                    		MOV.L R1, 04H[R0]
                                 ;    1620 {
                                 ;    1621 	if (cm_get_motion_state() == MOTION_STOP) {
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1621
00001BF7 39rrrr               W  		BSR _cm_get_motion_state
00001BFA 6101                    		CMP #00H, R1
00001BFC A80E                    		MOV.L 04H[R0], R6
00001BFE 18                   S  		BNE L658
00001BFF                         L657:	; bb2
                                 ;    1622 		nv->value = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1622
00001BFF 3E6400                  		MOV.L #00000000H, 10H[R6]
00001C02 2Err                 B  		BRA L661
00001C04                         L658:	; bb5
                                 ;    1623 	} else {
                                 ;    1624 		nv->value = mp_get_runtime_velocity();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1624
00001C04 05rrrrrr             A  		BSR _mp_get_runtime_velocity
00001C08 A161                    		MOV.L R1, 10H[R6]
00001C0A                         L659:	; bb5.split
                                 ;    1625 		if (cm_get_units_mode(RUNTIME) == INCHES) nv->value *= INCHES_PER_MM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1625
00001C0A FB12rrrrrrrr            		MOV.L #_mr, R1
00001C10 72114001                		ADD #0140H, R1
00001C14 39rrrr               W  		BSR _cm_get_units_mode
00001C17 6101                    		CMP #00H, R1
00001C19 21rr                    		BNE L661
00001C1B                         L660:	; bb10
00001C1B A809                    		MOV.L 04H[R0], R1
00001C1D A912                    		MOV.L 10H[R1], R2
00001C1F FD72328542213D          		FMUL #3D214285H, R2
00001C26 A112                    		MOV.L R2, 10H[R1]
00001C28                         L661:	; bb25
                                 ;    1626 	}
                                 ;    1627 	nv->precision = GET_TABLE_WORD(precision);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1627
00001C28 A809                    		MOV.L 04H[R0], R1
00001C2A B912                    		MOVU.W 08H[R1], R2
00001C2C 6C52                    		SHLL #05H, R2
00001C2E FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00001C34 4B2E                    		ADD R2, R14
00001C36 C5E10B0C                		MOV.B 0BH[R14], 0CH[R1]
00001C3A                         L662:	; bb25.split
                                 ;    1628 	nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1628
00001C3A A809                    		MOV.L 04H[R0], R1
00001C3C 3C1B04                  		MOV.B #04H, 0BH[R1]
00001C3F                         L663:	; bb25.split1
                                 ;    1629 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1629
00001C3F 3C0300                  		MOV.B #00H, 03H[R0]
00001C42 B089                    		MOVU.B 03H[R0], R1
00001C44                         L664:	; bb25.split2
                                 ;    1630 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1630
00001C44 5B11                    		MOVU.B R1, R1
00001C46 3F6603                  		RTSD #0CH, R6-R6
00001C49                         _cm_get_feed:
                                 		.STACK	_cm_get_feed=16
                                 ;    1631 
                                 ;    1632 stat_t cm_get_feed(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1632
00001C49 7EA6                    		PUSH.L R6
00001C4B 6080                    		SUB #08H, R0
00001C4D EF16                    		MOV.L R1, R6
00001C4F A00E                    		MOV.L R6, 04H[R0]
                                 ;    1633 {
                                 ;    1634 	nv->value = cm_get_feed_rate(ACTIVE_MODEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1634
00001C51 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001C57 EDE194                  		MOV.L 0250H[R14], R1
00001C5A 39rrrr               W  		BSR _cm_get_feed_rate
00001C5D A161                    		MOV.L R1, 10H[R6]
00001C5F                         L666:	; entry.split
                                 ;    1635 	if (cm_get_units_mode(ACTIVE_MODEL) == INCHES) nv->value *= INCHES_PER_MM;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1635
00001C5F FBE2rrrrrrrr            		MOV.L #_cm, R14
00001C65 EDE194                  		MOV.L 0250H[R14], R1
00001C68 39rrrr               W  		BSR _cm_get_units_mode
00001C6B 6101                    		CMP #00H, R1
00001C6D 21rr                    		BNE L668
00001C6F                         L667:	; bb6
00001C6F A809                    		MOV.L 04H[R0], R1
00001C71 A912                    		MOV.L 10H[R1], R2
00001C73 FD72328542213D          		FMUL #3D214285H, R2
00001C7A A112                    		MOV.L R2, 10H[R1]
00001C7C                         L668:	; bb16
                                 ;    1636 	nv->precision = GET_TABLE_WORD(precision);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1636
00001C7C A809                    		MOV.L 04H[R0], R1
00001C7E B912                    		MOVU.W 08H[R1], R2
00001C80 6C52                    		SHLL #05H, R2
00001C82 FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00001C88 4B2E                    		ADD R2, R14
00001C8A C5E10B0C                		MOV.B 0BH[R14], 0CH[R1]
00001C8E                         L669:	; bb16.split
                                 ;    1637 	nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1637
00001C8E A809                    		MOV.L 04H[R0], R1
00001C90 3C1B04                  		MOV.B #04H, 0BH[R1]
00001C93                         L670:	; bb16.split1
                                 ;    1638 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1638
00001C93 3C0300                  		MOV.B #00H, 03H[R0]
00001C96 B089                    		MOVU.B 03H[R0], R1
00001C98                         L671:	; bb16.split2
                                 ;    1639 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1639
00001C98 5B11                    		MOVU.B R1, R1
00001C9A 3F6603                  		RTSD #0CH, R6-R6
00001C9D                         _cm_get_pos:
                                 		.STACK	_cm_get_pos=20
                                 ;    1640 
                                 ;    1641 stat_t cm_get_pos(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1641
00001C9D 6E67                    		PUSHM R6-R7
00001C9F 6080                    		SUB #08H, R0
00001CA1 EF16                    		MOV.L R1, R6
00001CA3 A00E                    		MOV.L R6, 04H[R0]
                                 ;    1642 {
                                 ;    1643 	nv->value = cm_get_work_position(ACTIVE_MODEL, _get_axis(nv->index));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1643
00001CA5 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001CAB EDE794                  		MOV.L 0250H[R14], R7
00001CAE B961                    		MOVU.W 08H[R6], R1
00001CB0 39rrrr               W  		BSR __$_get_axis
00001CB3 5B12                    		MOVU.B R1, R2
00001CB5 EF71                    		MOV.L R7, R1
00001CB7 39rrrr               W  		BSR _cm_get_work_position
00001CBA A161                    		MOV.L R1, 10H[R6]
00001CBC                         L673:	; entry.split
                                 ;    1644 	nv->precision = GET_TABLE_WORD(precision);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1644
00001CBC A809                    		MOV.L 04H[R0], R1
00001CBE B912                    		MOVU.W 08H[R1], R2
00001CC0 6C52                    		SHLL #05H, R2
00001CC2 FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00001CC8 4B2E                    		ADD R2, R14
00001CCA C5E10B0C                		MOV.B 0BH[R14], 0CH[R1]
00001CCE                         L674:	; entry.split1
                                 ;    1645 	nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1645
00001CCE A809                    		MOV.L 04H[R0], R1
00001CD0 3C1B04                  		MOV.B #04H, 0BH[R1]
00001CD3                         L675:	; entry.split2
                                 ;    1646 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1646
00001CD3 3C0300                  		MOV.B #00H, 03H[R0]
00001CD6 B089                    		MOVU.B 03H[R0], R1
00001CD8                         L676:	; entry.split3
                                 ;    1647 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1647
00001CD8 5B11                    		MOVU.B R1, R1
00001CDA 3F6704                  		RTSD #10H, R6-R7
00001CDD                         _cm_get_mpo:
                                 		.STACK	_cm_get_mpo=20
                                 ;    1648 
                                 ;    1649 stat_t cm_get_mpo(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1649
00001CDD 6E67                    		PUSHM R6-R7
00001CDF 6080                    		SUB #08H, R0
00001CE1 EF16                    		MOV.L R1, R6
00001CE3 A00E                    		MOV.L R6, 04H[R0]
                                 ;    1650 {
                                 ;    1651 	nv->value = cm_get_absolute_position(ACTIVE_MODEL, _get_axis(nv->index));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1651
00001CE5 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001CEB EDE794                  		MOV.L 0250H[R14], R7
00001CEE B961                    		MOVU.W 08H[R6], R1
00001CF0 39rrrr               W  		BSR __$_get_axis
00001CF3 5B12                    		MOVU.B R1, R2
00001CF5 EF71                    		MOV.L R7, R1
00001CF7 39rrrr               W  		BSR _cm_get_absolute_position
00001CFA A161                    		MOV.L R1, 10H[R6]
00001CFC                         L678:	; entry.split
                                 ;    1652 	nv->precision = GET_TABLE_WORD(precision);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1652
00001CFC A809                    		MOV.L 04H[R0], R1
00001CFE B912                    		MOVU.W 08H[R1], R2
00001D00 6C52                    		SHLL #05H, R2
00001D02 FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00001D08 4B2E                    		ADD R2, R14
00001D0A C5E10B0C                		MOV.B 0BH[R14], 0CH[R1]
00001D0E                         L679:	; entry.split1
                                 ;    1653 	nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1653
00001D0E A809                    		MOV.L 04H[R0], R1
00001D10 3C1B04                  		MOV.B #04H, 0BH[R1]
00001D13                         L680:	; entry.split2
                                 ;    1654 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1654
00001D13 3C0300                  		MOV.B #00H, 03H[R0]
00001D16 B089                    		MOVU.B 03H[R0], R1
00001D18                         L681:	; entry.split3
                                 ;    1655 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1655
00001D18 5B11                    		MOVU.B R1, R1
00001D1A 3F6704                  		RTSD #10H, R6-R7
00001D1D                         _cm_get_ofs:
                                 		.STACK	_cm_get_ofs=20
                                 ;    1656 
                                 ;    1657 stat_t cm_get_ofs(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1657
00001D1D 6E67                    		PUSHM R6-R7
00001D1F 6080                    		SUB #08H, R0
00001D21 EF16                    		MOV.L R1, R6
00001D23 A00E                    		MOV.L R6, 04H[R0]
                                 ;    1658 {
                                 ;    1659 	nv->value = cm_get_work_offset(ACTIVE_MODEL, _get_axis(nv->index));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1659
00001D25 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001D2B EDE794                  		MOV.L 0250H[R14], R7
00001D2E B961                    		MOVU.W 08H[R6], R1
00001D30 39rrrr               W  		BSR __$_get_axis
00001D33 5B12                    		MOVU.B R1, R2
00001D35 EF71                    		MOV.L R7, R1
00001D37 39rrrr               W  		BSR _cm_get_work_offset
00001D3A A161                    		MOV.L R1, 10H[R6]
00001D3C                         L683:	; entry.split
                                 ;    1660 	nv->precision = GET_TABLE_WORD(precision);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1660
00001D3C A809                    		MOV.L 04H[R0], R1
00001D3E B912                    		MOVU.W 08H[R1], R2
00001D40 6C52                    		SHLL #05H, R2
00001D42 FBE2rrrrrrrr            		MOV.L #_cfgArray, R14
00001D48 4B2E                    		ADD R2, R14
00001D4A C5E10B0C                		MOV.B 0BH[R14], 0CH[R1]
00001D4E                         L684:	; entry.split1
                                 ;    1661 	nv->valuetype = TYPE_FLOAT;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1661
00001D4E A809                    		MOV.L 04H[R0], R1
00001D50 3C1B04                  		MOV.B #04H, 0BH[R1]
00001D53                         L685:	; entry.split2
                                 ;    1662 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1662
00001D53 3C0300                  		MOV.B #00H, 03H[R0]
00001D56 B089                    		MOVU.B 03H[R0], R1
00001D58                         L686:	; entry.split3
                                 ;    1663 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1663
00001D58 5B11                    		MOVU.B R1, R1
00001D5A 3F6704                  		RTSD #10H, R6-R7
00001D5D                         _cm_get_am:
                                 		.STACK	_cm_get_am=12
                                 ;    1664 
                                 ;    1665 /*
                                 ;    1666  * AXIS GET AND SET FUNCTIONS
                                 ;    1667  *
                                 ;    1668  * cm_get_am()	- get axis mode w/enumeration string
                                 ;    1669  * cm_set_am()	- set axis mode w/exception handling for axis type
                                 ;    1670  * cm_set_sw()	- run this any time you change a switch setting
                                 ;    1671  */
                                 ;    1672 
                                 ;    1673 stat_t cm_get_am(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1673
00001D5D 6080                    		SUB #08H, R0
00001D5F A009                    		MOV.L R1, 04H[R0]
                                 ;    1674 {
                                 ;    1675 	get_ui8(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1675
00001D61 05rrrrrr             A  		BSR _get_ui8
00001D65                         L688:	; entry.split
                                 ;    1676 	return(_get_msg_helper(nv, msg_am, nv->value));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1676
00001D65 A809                    		MOV.L 04H[R0], R1
00001D67 A912                    		MOV.L 10H[R1], R2
00001D69 FD72120000004F          		FCMP #4F000000H, R2
00001D70 29rr                    		BLT L690
00001D72                         L689:	; entry.split
00001D72 FD7222000080CF          		FADD #0CF800000H, R2
00001D79                         L690:	; entry.split
00001D79 FC972E                  		FTOI R2, R14
00001D7C 5BE3                    		MOVU.B R14, R3
00001D7E FB22rrrrrrrr            		MOV.L #__$msg_am, R2
00001D84 39rrrr               W  		BSR __get_msg_helper
00001D87 8089                    		MOV.B R1, 03H[R0]
00001D89 B089                    		MOVU.B 03H[R0], R1
00001D8B                         L691:	; entry.split1
                                 ;    1677 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1677
00001D8B 5B11                    		MOVU.B R1, R1
00001D8D 6702                    		RTSD #08H
00001D8F                         _cm_set_am:
                                 		.STACK	_cm_set_am=12
                                 ;    1678 
                                 ;    1679 stat_t cm_set_am(nvObj_t *nv)		// axis mode
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1679
00001D8F 6080                    		SUB #08H, R0
00001D91 A009                    		MOV.L R1, 04H[R0]
                                 ;    1680 {
                                 ;    1681 	if (_get_axis_type(nv->index) == 0) {	// linear
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1681
00001D93 B911                    		MOVU.W 08H[R1], R1
00001D95 39rrrr               W  		BSR __$_get_axis_type
00001D98 6101                    		CMP #00H, R1
00001D9A A809                    		MOV.L 04H[R0], R1
00001D9C A911                    		MOV.L 10H[R1], R1
00001D9E 21rr                    		BNE L695
00001DA0                         L693:	; bb3
00001DA0 FBE200000040            		MOV.L #40000000H, R14
                                 ;    1682 		if (nv->value > AXIS_MODE_MAX_LINEAR) { return (STAT_INPUT_EXCEEDS_MAX_VALUE);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1682
00001DA6 FC871E                  		FCMP R1, R14
00001DA9 26rr                    		BPZ L697
00001DAB                         L694:	; bb4
00001DAB 3C026D                  		MOV.B #6DH, 02H[R0]
00001DAE 2Err                 B  		BRA L699
00001DB0                         L695:	; bb13
00001DB0 FBE200004040            		MOV.L #40400000H, R14
                                 ;    1683 	} else {
                                 ;    1684 		if (nv->value > AXIS_MODE_MAX_ROTARY) { return (STAT_INPUT_EXCEEDS_MAX_VALUE);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1684
00001DB6 FC871E                  		FCMP R1, R14
00001DB9 26rr                    		BPZ L697
00001DBB                         L696:	; bb14
00001DBB 3C026D                  		MOV.B #6DH, 02H[R0]
00001DBE 08                   S  		BRA L699
00001DBF                         L697:	; bb31
                                 ;    1685 	}
                                 ;    1686 	set_ui8(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1686
00001DBF A809                    		MOV.L 04H[R0], R1
00001DC1 05rrrrrr             A  		BSR _set_ui8
00001DC5                         L698:	; bb31.split
                                 ;    1687 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1687
00001DC5 3C0200                  		MOV.B #00H, 02H[R0]
00001DC8                         L699:	; bb35
00001DC8 C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;    1688 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1688
00001DCC B089                    		MOVU.B 03H[R0], R1
00001DCE 6702                    		RTSD #08H
00001DD0                         _cm_get_axis_jerk:
                                 		.STACK	_cm_get_axis_jerk=12
                                 ;    1689 
                                 ;    1690 /**** Jerk functions
                                 ;    1691  * cm_get_axis_jerk() - returns jerk for an axis
                                 ;    1692  * cm_set_axis_jerk() - sets the jerk for an axis, including recirpcal and cached values
                                 ;    1693  *
                                 ;    1694  * cm_set_xjm()		  - set jerk max value
                                 ;    1695  * cm_set_xjh()		  - set jerk halt value (used by homing and other stops)
                                 ;    1696  *
                                 ;    1697  *	Jerk values can be rather large, often in the billions. This makes for some pretty big
                                 ;    1698  *	numbers for people to deal with. Jerk values are stored in the system in truncated format;
                                 ;    1699  *	values are divided by 1,000,000 then reconstituted before use.
                                 ;    1700  *
                                 ;    1701  *	The set_xjm() nad set_xjh() functions will accept either truncated or untruncated jerk
                                 ;    1702  *	numbers as input. If the number is > 1,000,000 it is divided by 1,000,000 before storing.
                                 ;    1703  *	Numbers are accepted in either millimeter or inch mode and converted to millimeter mode.
                                 ;    1704  *
                                 ;    1705  *	The axis_jerk() functions expect the jerk in divided-by 1,000,000 form
                                 ;    1706  */
                                 ;    1707 float cm_get_axis_jerk(uint8_t axis)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1707
00001DD0 6080                    		SUB #08H, R0
00001DD2 8189                    		MOV.B R1, 07H[R0]
                                 ;    1708 {
                                 ;    1709 	return (cm.a[axis].jerk_max);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1709
00001DD4 B189                    		MOVU.B 07H[R0], R1
00001DD6 751138                  		MUL #38H, R1
00001DD9 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001DDF 4B1E                    		ADD R1, R14
00001DE1 EDE138                  		MOV.L 0E0H[R14], R1
00001DE4 E301                    		MOV.L R1, [R0]
00001DE6                         L701:	; entry.split
                                 ;    1710 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1710
00001DE6 6702                    		RTSD #08H
00001DE8                         _cm_set_axis_jerk:
                                 		.STACK	_cm_set_axis_jerk=12
                                 ;    1711 
                                 ;    1712 void cm_set_axis_jerk(uint8_t axis, float jerk)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1712
00001DE8 6080                    		SUB #08H, R0
00001DEA 8189                    		MOV.B R1, 07H[R0]
00001DEC E302                    		MOV.L R2, [R0]
                                 ;    1713 {
                                 ;    1714 	cm.a[axis].jerk_max = jerk;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1714
00001DEE B189                    		MOVU.B 07H[R0], R1
00001DF0 751138                  		MUL #38H, R1
00001DF3 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001DF9 4B1E                    		ADD R1, R14
00001DFB E7E238                  		MOV.L R2, 0E0H[R14]
00001DFE                         L703:	; entry.split
                                 ;    1715 	cm.a[axis].recip_jerk = 1/(jerk * JERK_MULTIPLIER);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1715
00001DFE B189                    		MOVU.B 07H[R0], R1
00001E00 751138                  		MUL #38H, R1
00001E03 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001E09 4B1E                    		ADD R1, R14
00001E0B EC01                    		MOV.L [R0], R1
00001E0D FD723100247449          		FMUL #49742400H, R1
00001E14 FBF20000803F            		MOV.L #3F800000H, R15
00001E1A FC931F                  		FDIV R1, R15
00001E1D E7EF3A                  		MOV.L R15, 0E8H[R14]
00001E20 6702                    		RTSD #08H
00001E22                         _cm_set_xjm:
                                 		.STACK	_cm_set_xjm=12
                                 ;    1716 }
                                 ;    1717 
                                 ;    1718 stat_t cm_set_xjm(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1718
00001E22 6080                    		SUB #08H, R0
00001E24 A009                    		MOV.L R1, 04H[R0]
00001E26 FBE200247449            		MOV.L #49742400H, R14
                                 ;    1719 {
                                 ;    1720 	if (nv->value > JERK_MULTIPLIER) nv->value /= JERK_MULTIPLIER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1720
00001E2C FC851E04                		FCMP 10H[R1].L, R14
00001E30 26rr                    		BPZ L706
00001E32                         L705:	; bb2
00001E32 A809                    		MOV.L 04H[R0], R1
00001E34 A912                    		MOV.L 10H[R1], R2
00001E36 FD724200247449          		FDIV #49742400H, R2
00001E3D A112                    		MOV.L R2, 10H[R1]
00001E3F                         L706:	; bb12
                                 ;    1721 	set_flu(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1721
00001E3F A809                    		MOV.L 04H[R0], R1
00001E41 05rrrrrr             A  		BSR _set_flu
00001E45                         L707:	; bb12.split
                                 ;    1722 	cm_set_axis_jerk(_get_axis(nv->index), nv->value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1722
00001E45 A809                    		MOV.L 04H[R0], R1
00001E47 B911                    		MOVU.W 08H[R1], R1
00001E49 39rrrr               W  		BSR __$_get_axis
00001E4C A80A                    		MOV.L 04H[R0], R2
00001E4E A922                    		MOV.L 10H[R2], R2
00001E50 5B11                    		MOVU.B R1, R1
00001E52 39rrrr               W  		BSR _cm_set_axis_jerk
00001E55                         L708:	; bb12.split1
                                 ;    1723 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1723
00001E55 3C0300                  		MOV.B #00H, 03H[R0]
00001E58 B089                    		MOVU.B 03H[R0], R1
00001E5A                         L709:	; bb12.split2
                                 ;    1724 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1724
00001E5A 5B11                    		MOVU.B R1, R1
00001E5C 6702                    		RTSD #08H
00001E5E                         _cm_set_xjh:
                                 		.STACK	_cm_set_xjh=12
                                 ;    1725 
                                 ;    1726 stat_t cm_set_xjh(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1726
00001E5E 6080                    		SUB #08H, R0
00001E60 A009                    		MOV.L R1, 04H[R0]
00001E62 FBE200247449            		MOV.L #49742400H, R14
                                 ;    1727 {
                                 ;    1728 	if (nv->value > JERK_MULTIPLIER) nv->value /= JERK_MULTIPLIER;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1728
00001E68 FC851E04                		FCMP 10H[R1].L, R14
00001E6C 26rr                    		BPZ L712
00001E6E                         L711:	; bb2
00001E6E A809                    		MOV.L 04H[R0], R1
00001E70 A912                    		MOV.L 10H[R1], R2
00001E72 FD724200247449          		FDIV #49742400H, R2
00001E79 A112                    		MOV.L R2, 10H[R1]
00001E7B                         L712:	; bb12
                                 ;    1729 	set_flu(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1729
00001E7B A809                    		MOV.L 04H[R0], R1
00001E7D 05rrrrrr             A  		BSR _set_flu
00001E81                         L713:	; bb12.split
                                 ;    1730 	return(STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1730
00001E81 3C0300                  		MOV.B #00H, 03H[R0]
00001E84 B089                    		MOVU.B 03H[R0], R1
00001E86                         L714:	; bb12.split1
                                 ;    1731 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1731
00001E86 5B11                    		MOVU.B R1, R1
00001E88 6702                    		RTSD #08H
00001E8A                         _cm_run_qf:
                                 		.STACK	_cm_run_qf=12
                                 ;    1732 
                                 ;    1733 /*
                                 ;    1734  * Commands
                                 ;    1735  *
                                 ;    1736  * cm_run_qf() - flush planner queue
                                 ;    1737  * cm_run_home() - run homing sequence
                                 ;    1738  */
                                 ;    1739 
                                 ;    1740 stat_t cm_run_qf(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1740
00001E8A 6080                    		SUB #08H, R0
00001E8C A009                    		MOV.L R1, 04H[R0]
                                 ;    1741 {
                                 ;    1742 	cm_request_queue_flush();
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1742
00001E8E 39rrrr               W  		BSR _cm_request_queue_flush
00001E91                         L716:	; entry.split
                                 ;    1743 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1743
00001E91 3C0300                  		MOV.B #00H, 03H[R0]
00001E94 B089                    		MOVU.B 03H[R0], R1
00001E96                         L717:	; entry.split1
                                 ;    1744 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1744
00001E96 5B11                    		MOVU.B R1, R1
00001E98 6702                    		RTSD #08H
00001E9A                         _cm_run_home:
                                 		.STACK	_cm_run_home=12
                                 ;    1745 
                                 ;    1746 stat_t cm_run_home(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1746
00001E9A 6080                    		SUB #08H, R0
00001E9C A009                    		MOV.L R1, 04H[R0]
00001E9E FBE2BD378635            		MOV.L #358637BDH, R14
                                 ;    1747 {
                                 ;    1748 	if (fp_TRUE(nv->value)) { cm_homing_cycle_start();}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1748
00001EA4 FC851E04                		FCMP 10H[R1].L, R14
00001EA8 26rr                    		BPZ L720
00001EAA                         L719:	; bb2
00001EAA 05rrrrrr             A  		BSR _cm_homing_cycle_start
00001EAE                         L720:	; bb9
                                 ;    1749 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1749
00001EAE 3C0300                  		MOV.B #00H, 03H[R0]
00001EB1 B089                    		MOVU.B 03H[R0], R1
00001EB3                         L721:	; bb9.split
                                 ;    1750 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1750
00001EB3 5B11                    		MOVU.B R1, R1
00001EB5 6702                    		RTSD #08H
00001EB7                         _cm_dam:
                                 		.STACK	_cm_dam=16
                                 ;    1751 
                                 ;    1752 /*
                                 ;    1753  * Debugging Commands
                                 ;    1754  *
                                 ;    1755  * cm_dam() - dump active model
                                 ;    1756  */
                                 ;    1757 
                                 ;    1758 stat_t cm_dam(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1758
00001EB7 6080                    		SUB #08H, R0
00001EB9 A009                    		MOV.L R1, 04H[R0]
00001EBB 6040                    		SUB #04H, R0
                                 ;    1759 {
                                 ;    1760 	printf("Active model:\n");
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1760
00001EBD FBE2rrrrrrrr            		MOV.L #_L33, R14
00001EC3 E30E                    		MOV.L R14, [R0]
00001EC5 05rrrrrr             A  		BSR _printf
00001EC9 6240                    		ADD #04H, R0
00001ECB                         L723:	; entry.split
                                 ;    1761 	cm_print_vel(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1761
00001ECB A809                    		MOV.L 04H[R0], R1
00001ECD 39rrrr               W  		BSR _cm_print_vel
00001ED0                         L724:	; entry.split1
                                 ;    1762 	cm_print_feed(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1762
00001ED0 A809                    		MOV.L 04H[R0], R1
00001ED2 39rrrr               W  		BSR _cm_print_feed
00001ED5                         L725:	; entry.split2
                                 ;    1763 	cm_print_line(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1763
00001ED5 A809                    		MOV.L 04H[R0], R1
00001ED7 39rrrr               W  		BSR _cm_print_line
00001EDA                         L726:	; entry.split3
                                 ;    1764 	cm_print_stat(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1764
00001EDA A809                    		MOV.L 04H[R0], R1
00001EDC 39rrrr               W  		BSR _cm_print_stat
00001EDF                         L727:	; entry.split4
                                 ;    1765 	cm_print_macs(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1765
00001EDF A809                    		MOV.L 04H[R0], R1
00001EE1 39rrrr               W  		BSR _cm_print_macs
00001EE4                         L728:	; entry.split5
                                 ;    1766 	cm_print_cycs(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1766
00001EE4 A809                    		MOV.L 04H[R0], R1
00001EE6 39rrrr               W  		BSR _cm_print_cycs
00001EE9                         L729:	; entry.split6
                                 ;    1767 	cm_print_mots(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1767
00001EE9 A809                    		MOV.L 04H[R0], R1
00001EEB 39rrrr               W  		BSR _cm_print_mots
00001EEE                         L730:	; entry.split7
                                 ;    1768 	cm_print_hold(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1768
00001EEE A809                    		MOV.L 04H[R0], R1
00001EF0 39rrrr               W  		BSR _cm_print_hold
00001EF3                         L731:	; entry.split8
                                 ;    1769 	cm_print_home(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1769
00001EF3 A809                    		MOV.L 04H[R0], R1
00001EF5 39rrrr               W  		BSR _cm_print_home
00001EF8                         L732:	; entry.split9
                                 ;    1770 	cm_print_unit(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1770
00001EF8 A809                    		MOV.L 04H[R0], R1
00001EFA 39rrrr               W  		BSR _cm_print_unit
00001EFD                         L733:	; entry.split10
                                 ;    1771 	cm_print_coor(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1771
00001EFD A809                    		MOV.L 04H[R0], R1
00001EFF 39rrrr               W  		BSR _cm_print_coor
00001F02                         L734:	; entry.split11
                                 ;    1772 	cm_print_momo(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1772
00001F02 A809                    		MOV.L 04H[R0], R1
00001F04 39rrrr               W  		BSR _cm_print_momo
00001F07                         L735:	; entry.split12
                                 ;    1773 	cm_print_plan(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1773
00001F07 A809                    		MOV.L 04H[R0], R1
00001F09 39rrrr               W  		BSR _cm_print_plan
00001F0C                         L736:	; entry.split13
                                 ;    1774 	cm_print_path(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1774
00001F0C A809                    		MOV.L 04H[R0], R1
00001F0E 39rrrr               W  		BSR _cm_print_path
00001F11                         L737:	; entry.split14
                                 ;    1775 	cm_print_dist(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1775
00001F11 A809                    		MOV.L 04H[R0], R1
00001F13 39rrrr               W  		BSR _cm_print_dist
00001F16                         L738:	; entry.split15
                                 ;    1776 	cm_print_frmo(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1776
00001F16 A809                    		MOV.L 04H[R0], R1
00001F18 39rrrr               W  		BSR _cm_print_frmo
00001F1B                         L739:	; entry.split16
                                 ;    1777 	cm_print_tool(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1777
00001F1B A809                    		MOV.L 04H[R0], R1
00001F1D 39rrrr               W  		BSR _cm_print_tool
00001F20                         L740:	; entry.split17
                                 ;    1778 
                                 ;    1779 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1779
00001F20 3C0300                  		MOV.B #00H, 03H[R0]
00001F23 B089                    		MOVU.B 03H[R0], R1
00001F25                         L741:	; entry.split18
                                 ;    1780 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1780
00001F25 5B11                    		MOVU.B R1, R1
00001F27 6702                    		RTSD #08H
00001F29                         _cm_get_jogging_dest:
                                 		.STACK	_cm_get_jogging_dest=8
                                 ;    1781 
                                 ;    1782 /***********************************************************************************
                                 ;    1783  * AXIS JOGGING
                                 ;    1784  ***********************************************************************************/
                                 ;    1785 
                                 ;    1786 float cm_get_jogging_dest(void)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1786
00001F29 6040                    		SUB #04H, R0
                                 ;    1787 {
                                 ;    1788 	return cm.jogging_dest;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1788
00001F2B FBE2rrrrrrrr            		MOV.L #_cm, R14
00001F31 EDE193                  		MOV.L 024CH[R14], R1
00001F34 E301                    		MOV.L R1, [R0]
00001F36                         L743:	; entry.split
                                 ;    1789 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1789
00001F36 6701                    		RTSD #04H
00001F38                         _cm_run_jogx:
                                 		.STACK	_cm_run_jogx=12
                                 ;    1790 
                                 ;    1791 stat_t cm_run_jogx(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1791
00001F38 6080                    		SUB #08H, R0
00001F3A A009                    		MOV.L R1, 04H[R0]
                                 ;    1792 {
                                 ;    1793 	set_flt(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1793
00001F3C 05rrrrrr             A  		BSR _set_flt
00001F40                         L745:	; entry.split
00001F40 6601                    		MOV.L #00000000H, R1
                                 ;    1794 	cm_jogging_cycle_start(AXIS_X);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1794
00001F42 05rrrrrr             A  		BSR _cm_jogging_cycle_start
00001F46                         L746:	; entry.split1
                                 ;    1795 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1795
00001F46 3C0300                  		MOV.B #00H, 03H[R0]
00001F49 B089                    		MOVU.B 03H[R0], R1
00001F4B                         L747:	; entry.split2
                                 ;    1796 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1796
00001F4B 5B11                    		MOVU.B R1, R1
00001F4D 6702                    		RTSD #08H
00001F4F                         _cm_run_jogy:
                                 		.STACK	_cm_run_jogy=12
                                 ;    1797 
                                 ;    1798 stat_t cm_run_jogy(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1798
00001F4F 6080                    		SUB #08H, R0
00001F51 A009                    		MOV.L R1, 04H[R0]
                                 ;    1799 {
                                 ;    1800 	set_flt(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1800
00001F53 05rrrrrr             A  		BSR _set_flt
00001F57                         L749:	; entry.split
00001F57 6611                    		MOV.L #00000001H, R1
                                 ;    1801 	cm_jogging_cycle_start(AXIS_Y);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1801
00001F59 05rrrrrr             A  		BSR _cm_jogging_cycle_start
00001F5D                         L750:	; entry.split1
                                 ;    1802 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1802
00001F5D 3C0300                  		MOV.B #00H, 03H[R0]
00001F60 B089                    		MOVU.B 03H[R0], R1
00001F62                         L751:	; entry.split2
                                 ;    1803 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1803
00001F62 5B11                    		MOVU.B R1, R1
00001F64 6702                    		RTSD #08H
00001F66                         _cm_run_jogz:
                                 		.STACK	_cm_run_jogz=12
                                 ;    1804 
                                 ;    1805 stat_t cm_run_jogz(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1805
00001F66 6080                    		SUB #08H, R0
00001F68 A009                    		MOV.L R1, 04H[R0]
                                 ;    1806 {
                                 ;    1807 	set_flt(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1807
00001F6A 05rrrrrr             A  		BSR _set_flt
00001F6E                         L753:	; entry.split
00001F6E 6621                    		MOV.L #00000002H, R1
                                 ;    1808 	cm_jogging_cycle_start(AXIS_Z);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1808
00001F70 05rrrrrr             A  		BSR _cm_jogging_cycle_start
00001F74                         L754:	; entry.split1
                                 ;    1809 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1809
00001F74 3C0300                  		MOV.B #00H, 03H[R0]
00001F77 B089                    		MOVU.B 03H[R0], R1
00001F79                         L755:	; entry.split2
                                 ;    1810 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1810
00001F79 5B11                    		MOVU.B R1, R1
00001F7B 6702                    		RTSD #08H
00001F7D                         _cm_run_joga:
                                 		.STACK	_cm_run_joga=12
                                 ;    1811 
                                 ;    1812 stat_t cm_run_joga(nvObj_t *nv)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1812
00001F7D 6080                    		SUB #08H, R0
00001F7F A009                    		MOV.L R1, 04H[R0]
                                 ;    1813 {
                                 ;    1814 	set_flt(nv);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1814
00001F81 05rrrrrr             A  		BSR _set_flt
00001F85                         L757:	; entry.split
00001F85 6631                    		MOV.L #00000003H, R1
                                 ;    1815 	cm_jogging_cycle_start(AXIS_A);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1815
00001F87 05rrrrrr             A  		BSR _cm_jogging_cycle_start
00001F8B                         L758:	; entry.split1
                                 ;    1816 	return (STAT_OK);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1816
00001F8B 3C0300                  		MOV.B #00H, 03H[R0]
00001F8E B089                    		MOVU.B 03H[R0], R1
00001F90                         L759:	; entry.split2
                                 ;    1817 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1817
00001F90 5B11                    		MOVU.B R1, R1
00001F92 6702                    		RTSD #08H
00001F94                         _cm_print_vel:
                                 		.STACK	_cm_print_vel=12
                                 ;    1818 
                                 ;    1819 /***********************************************************************************
                                 ;    1820  * TEXT MODE SUPPORT
                                 ;    1821  * Functions to print variables from the cfgArray table
                                 ;    1822  ***********************************************************************************/
                                 ;    1823 
                                 ;    1824 #ifdef __TEXT_MODE
                                 ;    1825 
                                 ;    1826 /* model state print functions */
                                 ;    1827 
                                 ;    1828 const char fmt_vel[]  PROGMEM = "Velocity:%17.3f%s/min\n";
                                 ;    1829 const char fmt_feed[] PROGMEM = "Feed rate:%16.3f%s/min\n";
                                 ;    1830 const char fmt_line[] PROGMEM = "Line number:%10.0f\n";
                                 ;    1831 const char fmt_stat[] PROGMEM = "Machine state:       %s\n"; // combined machine state
                                 ;    1832 const char fmt_macs[] PROGMEM = "Raw machine state:   %s\n"; // raw machine state
                                 ;    1833 const char fmt_cycs[] PROGMEM = "Cycle state:         %s\n";
                                 ;    1834 const char fmt_mots[] PROGMEM = "Motion state:        %s\n";
                                 ;    1835 const char fmt_hold[] PROGMEM = "Feedhold state:      %s\n";
                                 ;    1836 const char fmt_home[] PROGMEM = "Homing state:        %s\n";
                                 ;    1837 const char fmt_unit[] PROGMEM = "Units:               %s\n"; // units mode as ASCII string
                                 ;    1838 const char fmt_coor[] PROGMEM = "Coordinate system:   %s\n";
                                 ;    1839 const char fmt_momo[] PROGMEM = "Motion mode:         %s\n";
                                 ;    1840 const char fmt_plan[] PROGMEM = "Plane:               %s\n";
                                 ;    1841 const char fmt_path[] PROGMEM = "Path Mode:           %s\n";
                                 ;    1842 const char fmt_dist[] PROGMEM = "Distance mode:       %s\n";
                                 ;    1843 const char fmt_frmo[] PROGMEM = "Feed rate mode:      %s\n";
                                 ;    1844 const char fmt_tool[] PROGMEM = "Tool number          %d\n";
                                 ;    1845 
                                 ;    1846 const char fmt_pos[] PROGMEM = "%c position:%15.3f%s\n";
                                 ;    1847 const char fmt_mpo[] PROGMEM = "%c machine posn:%11.3f%s\n";
                                 ;    1848 const char fmt_ofs[] PROGMEM = "%c work offset:%12.3f%s\n";
                                 ;    1849 const char fmt_hom[] PROGMEM = "%c axis homing state:%2.0f\n";
                                 ;    1850 
                                 ;    1851 const char fmt_gpl[] PROGMEM = "[gpl] default gcode plane%10d [0=G17,1=G18,2=G19]\n";
                                 ;    1852 const char fmt_gun[] PROGMEM = "[gun] default gcode units mode%5d [0=G20,1=G21]\n";
                                 ;    1853 const char fmt_gco[] PROGMEM = "[gco] default gcode coord system%3d [1-6 (G54-G59)]\n";
                                 ;    1854 const char fmt_gpa[] PROGMEM = "[gpa] default gcode path control%3d [0=G61,1=G61.1,2=G64]\n";
                                 ;    1855 const char fmt_gdi[] PROGMEM = "[gdi] default gcode distance mode%2d [0=G90,1=G91]\n";
                                 ;    1856 
                                 ;    1857 void cm_print_vel(nvObj_t *nv) { text_print_flt_units(nv, fmt_vel, GET_UNITS(ACTIVE_MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1857
00001F94 7EA6                    		PUSH.L R6
00001F96 6040                    		SUB #04H, R0
00001F98 EF16                    		MOV.L R1, R6
00001F9A E306                    		MOV.L R6, [R0]
00001F9C FBE2rrrrrrrr            		MOV.L #_cm, R14
00001FA2 EDE194                  		MOV.L 0250H[R14], R1
00001FA5 39rrrr               W  		BSR _cm_get_units_mode
00001FA8 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
00001FAE FE61E3                  		MOV.L [R1,R14], R3
00001FB1 FB22rrrrrrrr            		MOV.L #_fmt_vel, R2
00001FB7 EF61                    		MOV.L R6, R1
00001FB9 05rrrrrr             A  		BSR _text_print_flt_units
00001FBD 3F6602                  		RTSD #08H, R6-R6
00001FC0                         _cm_print_feed:
                                 		.STACK	_cm_print_feed=12
                                 ;    1858 void cm_print_feed(nvObj_t *nv) { text_print_flt_units(nv, fmt_feed, GET_UNITS(ACTIVE_MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1858
00001FC0 7EA6                    		PUSH.L R6
00001FC2 6040                    		SUB #04H, R0
00001FC4 EF16                    		MOV.L R1, R6
00001FC6 E306                    		MOV.L R6, [R0]
00001FC8 FBE2rrrrrrrr            		MOV.L #_cm, R14
00001FCE EDE194                  		MOV.L 0250H[R14], R1
00001FD1 39rrrr               W  		BSR _cm_get_units_mode
00001FD4 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
00001FDA FE61E3                  		MOV.L [R1,R14], R3
00001FDD FB22rrrrrrrr            		MOV.L #_fmt_feed, R2
00001FE3 EF61                    		MOV.L R6, R1
00001FE5 05rrrrrr             A  		BSR _text_print_flt_units
00001FE9 3F6602                  		RTSD #08H, R6-R6
00001FEC                         _cm_print_line:
                                 		.STACK	_cm_print_line=8
                                 ;    1859 void cm_print_line(nvObj_t *nv) { text_print_int(nv, fmt_line);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1859
00001FEC 6040                    		SUB #04H, R0
00001FEE E301                    		MOV.L R1, [R0]
00001FF0 FB22rrrrrrrr            		MOV.L #_fmt_line, R2
00001FF6 05rrrrrr             A  		BSR _text_print_int
00001FFA 6701                    		RTSD #04H
00001FFC                         _cm_print_stat:
                                 		.STACK	_cm_print_stat=8
                                 ;    1860 void cm_print_stat(nvObj_t *nv) { text_print_str(nv, fmt_stat);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1860
00001FFC 6040                    		SUB #04H, R0
00001FFE E301                    		MOV.L R1, [R0]
00002000 FB22rrrrrrrr            		MOV.L #_fmt_stat, R2
00002006 05rrrrrr             A  		BSR _text_print_str
0000200A 6701                    		RTSD #04H
0000200C                         _cm_print_macs:
                                 		.STACK	_cm_print_macs=8
                                 ;    1861 void cm_print_macs(nvObj_t *nv) { text_print_str(nv, fmt_macs);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1861
0000200C 6040                    		SUB #04H, R0
0000200E E301                    		MOV.L R1, [R0]
00002010 FB22rrrrrrrr            		MOV.L #_fmt_macs, R2
00002016 05rrrrrr             A  		BSR _text_print_str
0000201A 6701                    		RTSD #04H
0000201C                         _cm_print_cycs:
                                 		.STACK	_cm_print_cycs=8
                                 ;    1862 void cm_print_cycs(nvObj_t *nv) { text_print_str(nv, fmt_cycs);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1862
0000201C 6040                    		SUB #04H, R0
0000201E E301                    		MOV.L R1, [R0]
00002020 FB22rrrrrrrr            		MOV.L #_fmt_cycs, R2
00002026 05rrrrrr             A  		BSR _text_print_str
0000202A 6701                    		RTSD #04H
0000202C                         _cm_print_mots:
                                 		.STACK	_cm_print_mots=8
                                 ;    1863 void cm_print_mots(nvObj_t *nv) { text_print_str(nv, fmt_mots);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1863
0000202C 6040                    		SUB #04H, R0
0000202E E301                    		MOV.L R1, [R0]
00002030 FB22rrrrrrrr            		MOV.L #_fmt_mots, R2
00002036 05rrrrrr             A  		BSR _text_print_str
0000203A 6701                    		RTSD #04H
0000203C                         _cm_print_hold:
                                 		.STACK	_cm_print_hold=8
                                 ;    1864 void cm_print_hold(nvObj_t *nv) { text_print_str(nv, fmt_hold);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1864
0000203C 6040                    		SUB #04H, R0
0000203E E301                    		MOV.L R1, [R0]
00002040 FB22rrrrrrrr            		MOV.L #_fmt_hold, R2
00002046 05rrrrrr             A  		BSR _text_print_str
0000204A 6701                    		RTSD #04H
0000204C                         _cm_print_home:
                                 		.STACK	_cm_print_home=8
                                 ;    1865 void cm_print_home(nvObj_t *nv) { text_print_str(nv, fmt_home);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1865
0000204C 6040                    		SUB #04H, R0
0000204E E301                    		MOV.L R1, [R0]
00002050 FB22rrrrrrrr            		MOV.L #_fmt_home, R2
00002056 05rrrrrr             A  		BSR _text_print_str
0000205A 6701                    		RTSD #04H
0000205C                         _cm_print_unit:
                                 		.STACK	_cm_print_unit=8
                                 ;    1866 void cm_print_unit(nvObj_t *nv) { text_print_str(nv, fmt_unit);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1866
0000205C 6040                    		SUB #04H, R0
0000205E E301                    		MOV.L R1, [R0]
00002060 FB22rrrrrrrr            		MOV.L #_fmt_unit, R2
00002066 05rrrrrr             A  		BSR _text_print_str
0000206A 6701                    		RTSD #04H
0000206C                         _cm_print_coor:
                                 		.STACK	_cm_print_coor=8
                                 ;    1867 void cm_print_coor(nvObj_t *nv) { text_print_str(nv, fmt_coor);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1867
0000206C 6040                    		SUB #04H, R0
0000206E E301                    		MOV.L R1, [R0]
00002070 FB22rrrrrrrr            		MOV.L #_fmt_coor, R2
00002076 05rrrrrr             A  		BSR _text_print_str
0000207A 6701                    		RTSD #04H
0000207C                         _cm_print_momo:
                                 		.STACK	_cm_print_momo=8
                                 ;    1868 void cm_print_momo(nvObj_t *nv) { text_print_str(nv, fmt_momo);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1868
0000207C 6040                    		SUB #04H, R0
0000207E E301                    		MOV.L R1, [R0]
00002080 FB22rrrrrrrr            		MOV.L #_fmt_momo, R2
00002086 05rrrrrr             A  		BSR _text_print_str
0000208A 6701                    		RTSD #04H
0000208C                         _cm_print_plan:
                                 		.STACK	_cm_print_plan=8
                                 ;    1869 void cm_print_plan(nvObj_t *nv) { text_print_str(nv, fmt_plan);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1869
0000208C 6040                    		SUB #04H, R0
0000208E E301                    		MOV.L R1, [R0]
00002090 FB22rrrrrrrr            		MOV.L #_fmt_plan, R2
00002096 05rrrrrr             A  		BSR _text_print_str
0000209A 6701                    		RTSD #04H
0000209C                         _cm_print_path:
                                 		.STACK	_cm_print_path=8
                                 ;    1870 void cm_print_path(nvObj_t *nv) { text_print_str(nv, fmt_path);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1870
0000209C 6040                    		SUB #04H, R0
0000209E E301                    		MOV.L R1, [R0]
000020A0 FB22rrrrrrrr            		MOV.L #_fmt_path, R2
000020A6 05rrrrrr             A  		BSR _text_print_str
000020AA 6701                    		RTSD #04H
000020AC                         _cm_print_dist:
                                 		.STACK	_cm_print_dist=8
                                 ;    1871 void cm_print_dist(nvObj_t *nv) { text_print_str(nv, fmt_dist);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1871
000020AC 6040                    		SUB #04H, R0
000020AE E301                    		MOV.L R1, [R0]
000020B0 FB22rrrrrrrr            		MOV.L #_fmt_dist, R2
000020B6 05rrrrrr             A  		BSR _text_print_str
000020BA 6701                    		RTSD #04H
000020BC                         _cm_print_frmo:
                                 		.STACK	_cm_print_frmo=8
                                 ;    1872 void cm_print_frmo(nvObj_t *nv) { text_print_str(nv, fmt_frmo);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1872
000020BC 6040                    		SUB #04H, R0
000020BE E301                    		MOV.L R1, [R0]
000020C0 FB22rrrrrrrr            		MOV.L #_fmt_frmo, R2
000020C6 05rrrrrr             A  		BSR _text_print_str
000020CA 6701                    		RTSD #04H
000020CC                         _cm_print_tool:
                                 		.STACK	_cm_print_tool=8
                                 ;    1873 void cm_print_tool(nvObj_t *nv) { text_print_int(nv, fmt_tool);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1873
000020CC 6040                    		SUB #04H, R0
000020CE E301                    		MOV.L R1, [R0]
000020D0 FB22rrrrrrrr            		MOV.L #_fmt_tool, R2
000020D6 05rrrrrr             A  		BSR _text_print_int
000020DA 6701                    		RTSD #04H
000020DC                         _cm_print_gpl:
                                 		.STACK	_cm_print_gpl=8
                                 ;    1874 
                                 ;    1875 void cm_print_gpl(nvObj_t *nv) { text_print_int(nv, fmt_gpl);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1875
000020DC 6040                    		SUB #04H, R0
000020DE E301                    		MOV.L R1, [R0]
000020E0 FB22rrrrrrrr            		MOV.L #_fmt_gpl, R2
000020E6 05rrrrrr             A  		BSR _text_print_int
000020EA 6701                    		RTSD #04H
000020EC                         _cm_print_gun:
                                 		.STACK	_cm_print_gun=8
                                 ;    1876 void cm_print_gun(nvObj_t *nv) { text_print_int(nv, fmt_gun);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1876
000020EC 6040                    		SUB #04H, R0
000020EE E301                    		MOV.L R1, [R0]
000020F0 FB22rrrrrrrr            		MOV.L #_fmt_gun, R2
000020F6 05rrrrrr             A  		BSR _text_print_int
000020FA 6701                    		RTSD #04H
000020FC                         _cm_print_gco:
                                 		.STACK	_cm_print_gco=8
                                 ;    1877 void cm_print_gco(nvObj_t *nv) { text_print_int(nv, fmt_gco);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1877
000020FC 6040                    		SUB #04H, R0
000020FE E301                    		MOV.L R1, [R0]
00002100 FB22rrrrrrrr            		MOV.L #_fmt_gco, R2
00002106 05rrrrrr             A  		BSR _text_print_int
0000210A 6701                    		RTSD #04H
0000210C                         _cm_print_gpa:
                                 		.STACK	_cm_print_gpa=8
                                 ;    1878 void cm_print_gpa(nvObj_t *nv) { text_print_int(nv, fmt_gpa);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1878
0000210C 6040                    		SUB #04H, R0
0000210E E301                    		MOV.L R1, [R0]
00002110 FB22rrrrrrrr            		MOV.L #_fmt_gpa, R2
00002116 05rrrrrr             A  		BSR _text_print_int
0000211A 6701                    		RTSD #04H
0000211C                         _cm_print_gdi:
                                 		.STACK	_cm_print_gdi=8
                                 ;    1879 void cm_print_gdi(nvObj_t *nv) { text_print_int(nv, fmt_gdi);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1879
0000211C 6040                    		SUB #04H, R0
0000211E E301                    		MOV.L R1, [R0]
00002120 FB22rrrrrrrr            		MOV.L #_fmt_gdi, R2
00002126 05rrrrrr             A  		BSR _text_print_int
0000212A 6701                    		RTSD #04H
0000212C                         _cm_print_ja:
                                 		.STACK	_cm_print_ja=12
                                 ;    1880 
                                 ;    1881 /* system state print functions */
                                 ;    1882 
                                 ;    1883 const char fmt_ja[] PROGMEM = "[ja]  junction acceleration%8.0f%s\n";
                                 ;    1884 const char fmt_ct[] PROGMEM = "[ct]  chordal tolerance%17.4f%s\n";
                                 ;    1885 const char fmt_sl[] PROGMEM = "[sl]  soft limit enable%12d\n";
                                 ;    1886 const char fmt_ml[] PROGMEM = "[ml]  min line segment%17.3f%s\n";
                                 ;    1887 const char fmt_ma[] PROGMEM = "[ma]  min arc segment%18.3f%s\n";
                                 ;    1888 const char fmt_ms[] PROGMEM = "[ms]  min segment time%13.0f uSec\n";
                                 ;    1889 
                                 ;    1890 void cm_print_ja(nvObj_t *nv) { text_print_flt_units(nv, fmt_ja, GET_UNITS(ACTIVE_MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1890
0000212C 7EA6                    		PUSH.L R6
0000212E 6040                    		SUB #04H, R0
00002130 EF16                    		MOV.L R1, R6
00002132 E306                    		MOV.L R6, [R0]
00002134 FBE2rrrrrrrr            		MOV.L #_cm, R14
0000213A EDE194                  		MOV.L 0250H[R14], R1
0000213D 39rrrr               W  		BSR _cm_get_units_mode
00002140 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
00002146 FE61E3                  		MOV.L [R1,R14], R3
00002149 FB22rrrrrrrr            		MOV.L #_fmt_ja, R2
0000214F EF61                    		MOV.L R6, R1
00002151 05rrrrrr             A  		BSR _text_print_flt_units
00002155 3F6602                  		RTSD #08H, R6-R6
00002158                         _cm_print_ct:
                                 		.STACK	_cm_print_ct=12
                                 ;    1891 void cm_print_ct(nvObj_t *nv) { text_print_flt_units(nv, fmt_ct, GET_UNITS(ACTIVE_MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1891
00002158 7EA6                    		PUSH.L R6
0000215A 6040                    		SUB #04H, R0
0000215C EF16                    		MOV.L R1, R6
0000215E E306                    		MOV.L R6, [R0]
00002160 FBE2rrrrrrrr            		MOV.L #_cm, R14
00002166 EDE194                  		MOV.L 0250H[R14], R1
00002169 39rrrr               W  		BSR _cm_get_units_mode
0000216C FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
00002172 FE61E3                  		MOV.L [R1,R14], R3
00002175 FB22rrrrrrrr            		MOV.L #_fmt_ct, R2
0000217B EF61                    		MOV.L R6, R1
0000217D 05rrrrrr             A  		BSR _text_print_flt_units
00002181 3F6602                  		RTSD #08H, R6-R6
00002184                         _cm_print_sl:
                                 		.STACK	_cm_print_sl=8
                                 ;    1892 void cm_print_sl(nvObj_t *nv) { text_print_ui8(nv, fmt_sl);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1892
00002184 6040                    		SUB #04H, R0
00002186 E301                    		MOV.L R1, [R0]
00002188 FB22rrrrrrrr            		MOV.L #_fmt_sl, R2
0000218E 05rrrrrr             A  		BSR _text_print_ui8
00002192 6701                    		RTSD #04H
00002194                         _cm_print_ml:
                                 		.STACK	_cm_print_ml=12
                                 ;    1893 void cm_print_ml(nvObj_t *nv) { text_print_flt_units(nv, fmt_ml, GET_UNITS(ACTIVE_MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1893
00002194 7EA6                    		PUSH.L R6
00002196 6040                    		SUB #04H, R0
00002198 EF16                    		MOV.L R1, R6
0000219A E306                    		MOV.L R6, [R0]
0000219C FBE2rrrrrrrr            		MOV.L #_cm, R14
000021A2 EDE194                  		MOV.L 0250H[R14], R1
000021A5 39rrrr               W  		BSR _cm_get_units_mode
000021A8 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
000021AE FE61E3                  		MOV.L [R1,R14], R3
000021B1 FB22rrrrrrrr            		MOV.L #_fmt_ml, R2
000021B7 EF61                    		MOV.L R6, R1
000021B9 05rrrrrr             A  		BSR _text_print_flt_units
000021BD 3F6602                  		RTSD #08H, R6-R6
000021C0                         _cm_print_ma:
                                 		.STACK	_cm_print_ma=12
                                 ;    1894 void cm_print_ma(nvObj_t *nv) { text_print_flt_units(nv, fmt_ma, GET_UNITS(ACTIVE_MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1894
000021C0 7EA6                    		PUSH.L R6
000021C2 6040                    		SUB #04H, R0
000021C4 EF16                    		MOV.L R1, R6
000021C6 E306                    		MOV.L R6, [R0]
000021C8 FBE2rrrrrrrr            		MOV.L #_cm, R14
000021CE EDE194                  		MOV.L 0250H[R14], R1
000021D1 39rrrr               W  		BSR _cm_get_units_mode
000021D4 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
000021DA FE61E3                  		MOV.L [R1,R14], R3
000021DD FB22rrrrrrrr            		MOV.L #_fmt_ma, R2
000021E3 EF61                    		MOV.L R6, R1
000021E5 05rrrrrr             A  		BSR _text_print_flt_units
000021E9 3F6602                  		RTSD #08H, R6-R6
000021EC                         _cm_print_ms:
                                 		.STACK	_cm_print_ms=12
                                 ;    1895 void cm_print_ms(nvObj_t *nv) { text_print_flt_units(nv, fmt_ms, GET_UNITS(ACTIVE_MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1895
000021EC 7EA6                    		PUSH.L R6
000021EE 6040                    		SUB #04H, R0
000021F0 EF16                    		MOV.L R1, R6
000021F2 E306                    		MOV.L R6, [R0]
000021F4 FBE2rrrrrrrr            		MOV.L #_cm, R14
000021FA EDE194                  		MOV.L 0250H[R14], R1
000021FD 39rrrr               W  		BSR _cm_get_units_mode
00002200 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
00002206 FE61E3                  		MOV.L [R1,R14], R3
00002209 FB22rrrrrrrr            		MOV.L #_fmt_ms, R2
0000220F EF61                    		MOV.L R6, R1
00002211 05rrrrrr             A  		BSR _text_print_flt_units
00002215 3F6602                  		RTSD #08H, R6-R6
00002218                         __$_print_axis_ui8:
                                 		.STACK	__$_print_axis_ui8=32
                                 ;    1896 
                                 ;    1897 /*
                                 ;    1898  * axis print functions
                                 ;    1899  *
                                 ;    1900  *	_print_axis_ui8() - helper to print an integer value with no units
                                 ;    1901  *	_print_axis_flt() - helper to print a floating point linear value in prevailing units
                                 ;    1902  *	_print_pos_helper()
                                 ;    1903  *
                                 ;    1904  *	cm_print_am()
                                 ;    1905  *	cm_print_fr()
                                 ;    1906  *	cm_print_vm()
                                 ;    1907  *	cm_print_tm()
                                 ;    1908  *	cm_print_tn()
                                 ;    1909  *	cm_print_jm()
                                 ;    1910  *	cm_print_jh()
                                 ;    1911  *	cm_print_jd()
                                 ;    1912  *	cm_print_ra()
                                 ;    1913  *	cm_print_sn()
                                 ;    1914  *	cm_print_sx()
                                 ;    1915  *	cm_print_lv()
                                 ;    1916  *	cm_print_lb()
                                 ;    1917  *	cm_print_zb()
                                 ;    1918  *
                                 ;    1919  *	cm_print_pos() - print position with unit displays for MM or Inches
                                 ;    1920  * 	cm_print_mpo() - print position with fixed unit display - always in Degrees or MM
                                 ;    1921  */
                                 ;    1922 
                                 ;    1923 static const char fmt_Xam[] PROGMEM = "[%s%s] %s axis mode%18d %s\n";
                                 ;    1924 static const char fmt_Xfr[] PROGMEM = "[%s%s] %s feedrate maximum%11.0f%s/min\n";
                                 ;    1925 static const char fmt_Xvm[] PROGMEM = "[%s%s] %s velocity maximum%11.0f%s/min\n";
                                 ;    1926 static const char fmt_Xtm[] PROGMEM = "[%s%s] %s travel maximum%17.3f%s\n";
                                 ;    1927 static const char fmt_Xtn[] PROGMEM = "[%s%s] %s travel minimum%17.3f%s\n";
                                 ;    1928 static const char fmt_Xjm[] PROGMEM = "[%s%s] %s jerk maximum%15.0f%s/min^3 * 1 million\n";
                                 ;    1929 static const char fmt_Xjh[] PROGMEM = "[%s%s] %s jerk homing%16.0f%s/min^3 * 1 million\n";
                                 ;    1930 static const char fmt_Xjd[] PROGMEM = "[%s%s] %s junction deviation%14.4f%s (larger is faster)\n";
                                 ;    1931 static const char fmt_Xra[] PROGMEM = "[%s%s] %s radius value%20.4f%s\n";
                                 ;    1932 static const char fmt_Xsn[] PROGMEM = "[%s%s] %s switch min%17d [0=off,1=homing,2=limit,3=limit+homing]\n";
                                 ;    1933 static const char fmt_Xsx[] PROGMEM = "[%s%s] %s switch max%17d [0=off,1=homing,2=limit,3=limit+homing]\n";
                                 ;    1934 static const char fmt_Xsv[] PROGMEM = "[%s%s] %s search velocity%12.0f%s/min\n";
                                 ;    1935 static const char fmt_Xlv[] PROGMEM = "[%s%s] %s latch velocity%13.0f%s/min\n";
                                 ;    1936 static const char fmt_Xlb[] PROGMEM = "[%s%s] %s latch backoff%18.3f%s\n";
                                 ;    1937 static const char fmt_Xzb[] PROGMEM = "[%s%s] %s zero backoff%19.3f%s\n";
                                 ;    1938 static const char fmt_cofs[] PROGMEM = "[%s%s] %s %s offset%20.3f%s\n";
                                 ;    1939 static const char fmt_cpos[] PROGMEM = "[%s%s] %s %s position%18.3f%s\n";
                                 ;    1940 
                                 ;    1941 static void _print_axis_ui8(nvObj_t *nv, const char *format)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1941
00002218 6080                    		SUB #08H, R0
0000221A A009                    		MOV.L R1, 04H[R0]
0000221C E302                    		MOV.L R2, [R0]
                                 ;    1942 {
                                 ;    1943 	fprintf_P(stderr, format, nv->group, nv->token, nv->group, (uint8_t)nv->value);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1943
0000221E A809                    		MOV.L 04H[R0], R1
00002220 A913                    		MOV.L 10H[R1], R3
00002222 7100EC                  		ADD #0FFFFFFECH, R0
00002225 FD72130000004F          		FCMP #4F000000H, R3
0000222C 29rr                    		BLT L790
0000222E                         L789:	; entry
0000222E FD7223000080CF          		FADD #0CF800000H, R3
00002235                         L790:	; entry
00002235 FC973E                  		FTOI R3, R14
00002238 5BE3                    		MOVU.B R14, R3
0000223A A103                    		MOV.L R3, 10H[R0]
0000223C 711314                  		ADD #14H, R1, R3
0000223F A08B                    		MOV.L R3, 0CH[R0]
00002241 711118                  		ADD #18H, R1
00002244 A081                    		MOV.L R1, 08H[R0]
00002246 A00B                    		MOV.L R3, 04H[R0]
00002248 E302                    		MOV.L R2, [R0]
0000224A FB12rrrrrrrr            		MOV.L #__Stderr, R1
00002250 05rrrrrr             A  		BSR _fprintf
00002254 710014                  		ADD #14H, R0
00002257 6702                    		RTSD #08H
00002259                         __$_print_axis_flt:
                                 		.STACK	__$_print_axis_flt=40
                                 ;    1944 }
                                 ;    1945 
                                 ;    1946 static void _print_axis_flt(nvObj_t *nv, const char *format)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1946
00002259 60C0                    		SUB #0CH, R0
0000225B A081                    		MOV.L R1, 08H[R0]
0000225D A00A                    		MOV.L R2, 04H[R0]
                                 ;    1947 {
                                 ;    1948 	char *units;
                                 ;    1949 	if (_get_axis_type(nv->index) == 0) {	// linear
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1949
0000225F A881                    		MOV.L 08H[R0], R1
00002261 B911                    		MOVU.W 08H[R1], R1
00002263 39rrrr               W  		BSR __$_get_axis_type
00002266 6101                    		CMP #00H, R1
00002268 21rr                    		BNE L793
0000226A                         L792:	; bb4
                                 ;    1950 		units = (char *)GET_UNITS(MODEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1950
0000226A FB12rrrrrrrr            		MOV.L #_cm, R1
00002270 72115402                		ADD #0254H, R1
00002274 39rrrr               W  		BSR _cm_get_units_mode
00002277 6C21                    		SHLL #02H, R1
00002279 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
0000227F 4B1E                    		ADD R1, R14
00002281 E0E0                    		MOV.L [R14], [R0]
00002283 08                   S  		BRA L794
00002284                         L793:	; bb8
                                 ;    1951 	} else {
                                 ;    1952 		units = (char *)GET_TEXT_ITEM(msg_units, DEGREE_INDEX);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1952
00002284 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
0000228A E1E002                  		MOV.L 08H[R14], [R0]
0000228D                         L794:	; bb17
                                 ;    1953 	}
                                 ;    1954 	fprintf_P(stderr, format, nv->group, nv->token, nv->group, nv->value, units);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1954
0000228D A881                    		MOV.L 08H[R0], R1
0000228F A912                    		MOV.L 10H[R1], R2
00002291 EC03                    		MOV.L [R0], R3
00002293 A80C                    		MOV.L 04H[R0], R4
00002295 7100E8                  		ADD #0FFFFFFE8H, R0
00002298 A10B                    		MOV.L R3, 14H[R0]
0000229A A102                    		MOV.L R2, 10H[R0]
0000229C 711214                  		ADD #14H, R1, R2
0000229F A08A                    		MOV.L R2, 0CH[R0]
000022A1 711118                  		ADD #18H, R1
000022A4 A081                    		MOV.L R1, 08H[R0]
000022A6 A00A                    		MOV.L R2, 04H[R0]
000022A8 E304                    		MOV.L R4, [R0]
000022AA FB12rrrrrrrr            		MOV.L #__Stderr, R1
000022B0 05rrrrrr             A  		BSR _fprintf
000022B4 710018                  		ADD #18H, R0
000022B7 6703                    		RTSD #0CH
000022B9                         __$_print_axis_coord_flt:
                                 		.STACK	__$_print_axis_coord_flt=44
                                 ;    1955 }
                                 ;    1956 
                                 ;    1957 static void _print_axis_coord_flt(nvObj_t *nv, const char *format)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1957
000022B9 60C0                    		SUB #0CH, R0
000022BB A081                    		MOV.L R1, 08H[R0]
000022BD A00A                    		MOV.L R2, 04H[R0]
                                 ;    1958 {
                                 ;    1959 	char *units;
                                 ;    1960 	if (_get_axis_type(nv->index) == 0) {	// linear
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1960
000022BF A881                    		MOV.L 08H[R0], R1
000022C1 B911                    		MOVU.W 08H[R1], R1
000022C3 39rrrr               W  		BSR __$_get_axis_type
000022C6 6101                    		CMP #00H, R1
000022C8 21rr                    		BNE L797
000022CA                         L796:	; bb4
                                 ;    1961 		units = (char *)GET_UNITS(MODEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1961
000022CA FB12rrrrrrrr            		MOV.L #_cm, R1
000022D0 72115402                		ADD #0254H, R1
000022D4 39rrrr               W  		BSR _cm_get_units_mode
000022D7 6C21                    		SHLL #02H, R1
000022D9 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
000022DF 4B1E                    		ADD R1, R14
000022E1 E0E0                    		MOV.L [R14], [R0]
000022E3 08                   S  		BRA L798
000022E4                         L797:	; bb8
                                 ;    1962 	} else {
                                 ;    1963 		units = (char *)GET_TEXT_ITEM(msg_units, DEGREE_INDEX);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1963
000022E4 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
000022EA E1E002                  		MOV.L 08H[R14], [R0]
000022ED                         L798:	; bb17
                                 ;    1964 	}
                                 ;    1965 	fprintf_P(stderr, format, nv->group, nv->token, nv->group, nv->token, nv->value, units);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1965
000022ED A881                    		MOV.L 08H[R0], R1
000022EF A912                    		MOV.L 10H[R1], R2
000022F1 EC03                    		MOV.L [R0], R3
000022F3 A80C                    		MOV.L 04H[R0], R4
000022F5 7100E4                  		ADD #0FFFFFFE4H, R0
000022F8 A183                    		MOV.L R3, 18H[R0]
000022FA A10A                    		MOV.L R2, 14H[R0]
000022FC 711218                  		ADD #18H, R1, R2
000022FF A102                    		MOV.L R2, 10H[R0]
00002301 711114                  		ADD #14H, R1
00002304 A089                    		MOV.L R1, 0CH[R0]
00002306 A082                    		MOV.L R2, 08H[R0]
00002308 A009                    		MOV.L R1, 04H[R0]
0000230A E304                    		MOV.L R4, [R0]
0000230C FB12rrrrrrrr            		MOV.L #__Stderr, R1
00002312 05rrrrrr             A  		BSR _fprintf
00002316 71001C                  		ADD #1CH, R0
00002319 6703                    		RTSD #0CH
0000231B                         __$_print_pos:
                                 		.STACK	__$_print_pos=40
                                 ;    1966 }
                                 ;    1967 
                                 ;    1968 static void _print_pos(nvObj_t *nv, const char *format, uint8_t units)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1968
0000231B 7100EC                  		ADD #0FFFFFFECH, R0
0000231E A101                    		MOV.L R1, 10H[R0]
00002320 A08A                    		MOV.L R2, 0CH[R0]
00002322 828B                    		MOV.B R3, 0BH[R0]
                                 ;    1969 {
                                 ;    1970 	char axes[] = {"XYZABC"};
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1970
00002324 FBE2rrrrrrrr            		MOV.L #_L34, R14
0000232A C4E003                  		MOV.B [R14], 03H[R0]
0000232D C5E00104                		MOV.B 01H[R14], 04H[R0]
00002331 C5E00205                		MOV.B 02H[R14], 05H[R0]
00002335 C5E00306                		MOV.B 03H[R14], 06H[R0]
00002339 C5E00407                		MOV.B 04H[R14], 07H[R0]
0000233D C5E00508                		MOV.B 05H[R14], 08H[R0]
00002341 C5E00609                		MOV.B 06H[R14], 09H[R0]
00002345                         L800:	; entry.split
                                 ;    1971 	uint8_t axis = _get_axis(nv->index);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1971
00002345 A901                    		MOV.L 10H[R0], R1
00002347 B911                    		MOVU.W 08H[R1], R1
00002349 39rrrr               W  		BSR __$_get_axis
0000234C 8281                    		MOV.B R1, 0AH[R0]
0000234E                         L801:	; entry.split1
                                 ;    1972 	if (axis >= AXIS_A) { units = DEGREES;}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1972
0000234E B281                    		MOVU.B 0AH[R0], R1
00002350 6131                    		CMP #03H, R1
00002352 29rr                    		BLT L803
00002354                         L802:	; bb23
00002354 3C0B02                  		MOV.B #02H, 0BH[R0]
00002357                         L803:	; bb28
                                 ;    1973 	fprintf_P(stderr, format, axes[axis], nv->value, GET_TEXT_ITEM(msg_units, units));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1973
00002357 FBE2rrrrrrrr            		MOV.L #__$msg_units, R14
0000235D B289                    		MOVU.B 0BH[R0], R1
0000235F FE61E1                  		MOV.L [R1,R14], R1
00002362 B282                    		MOVU.B 0AH[R0], R2
00002364 710E03                  		ADD #03H, R0, R14
00002367 FECE22                  		MOVU.B [R14,R2], R2
0000236A A903                    		MOV.L 10H[R0], R3
0000236C A933                    		MOV.L 10H[R3], R3
0000236E A88C                    		MOV.L 0CH[R0], R4
00002370 7100F0                  		ADD #0FFFFFFF0H, R0
00002373 A089                    		MOV.L R1, 0CH[R0]
00002375 A083                    		MOV.L R3, 08H[R0]
00002377 A00A                    		MOV.L R2, 04H[R0]
00002379 E304                    		MOV.L R4, [R0]
0000237B FB12rrrrrrrr            		MOV.L #__Stderr, R1
00002381 05rrrrrr             A  		BSR _fprintf
00002385 710010                  		ADD #10H, R0
00002388 6705                    		RTSD #14H
0000238A                         _cm_print_am:
                                 		.STACK	_cm_print_am=32
                                 ;    1974 }
                                 ;    1975 
                                 ;    1976 void cm_print_am(nvObj_t *nv)	// print axis mode with enumeration string
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1976
0000238A 6040                    		SUB #04H, R0
0000238C E301                    		MOV.L R1, [R0]
                                 ;    1977 {
                                 ;    1978 	fprintf_P(stderr, fmt_Xam, nv->group, nv->token, nv->group, (uint8_t)nv->value,
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1978
0000238E A912                    		MOV.L 10H[R1], R2
00002390 FD72120000004F          		FCMP #4F000000H, R2
00002397 29rr                    		BLT L806
00002399                         L805:	; entry
00002399 FD7222000080CF          		FADD #0CF800000H, R2
000023A0                         L806:	; entry
000023A0 FC972E                  		FTOI R2, R14
000023A3 5BE2                    		MOVU.B R14, R2
000023A5 FBE2rrrrrrrr            		MOV.L #__$msg_am, R14
000023AB FE62E3                  		MOV.L [R2,R14], R3
000023AE 7100E8                  		ADD #0FFFFFFE8H, R0
000023B1 A10B                    		MOV.L R3, 14H[R0]
000023B3 A102                    		MOV.L R2, 10H[R0]
000023B5 711214                  		ADD #14H, R1, R2
000023B8 A08A                    		MOV.L R2, 0CH[R0]
000023BA 711118                  		ADD #18H, R1
000023BD A081                    		MOV.L R1, 08H[R0]
000023BF A00A                    		MOV.L R2, 04H[R0]
000023C1 FBE2rrrrrrrr            		MOV.L #__$fmt_Xam, R14
000023C7 E30E                    		MOV.L R14, [R0]
000023C9 FB12rrrrrrrr            		MOV.L #__Stderr, R1
000023CF 05rrrrrr             A  		BSR _fprintf
000023D3 710018                  		ADD #18H, R0
000023D6 6701                    		RTSD #04H
000023D8                         _cm_print_fr:
                                 		.STACK	_cm_print_fr=8
                                 ;    1979 	GET_TEXT_ITEM(msg_am, (uint8_t)nv->value));
                                 ;    1980 }
                                 ;    1981 
                                 ;    1982 void cm_print_fr(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xfr);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1982
000023D8 6040                    		SUB #04H, R0
000023DA E301                    		MOV.L R1, [R0]
000023DC FB22rrrrrrrr            		MOV.L #__$fmt_Xfr, R2
000023E2 39rrrr               W  		BSR __$_print_axis_flt
000023E5 6701                    		RTSD #04H
000023E7                         _cm_print_vm:
                                 		.STACK	_cm_print_vm=8
                                 ;    1983 void cm_print_vm(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xvm);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1983
000023E7 6040                    		SUB #04H, R0
000023E9 E301                    		MOV.L R1, [R0]
000023EB FB22rrrrrrrr            		MOV.L #__$fmt_Xvm, R2
000023F1 39rrrr               W  		BSR __$_print_axis_flt
000023F4 6701                    		RTSD #04H
000023F6                         _cm_print_tm:
                                 		.STACK	_cm_print_tm=8
                                 ;    1984 void cm_print_tm(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xtm);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1984
000023F6 6040                    		SUB #04H, R0
000023F8 E301                    		MOV.L R1, [R0]
000023FA FB22rrrrrrrr            		MOV.L #__$fmt_Xtm, R2
00002400 39rrrr               W  		BSR __$_print_axis_flt
00002403 6701                    		RTSD #04H
00002405                         _cm_print_tn:
                                 		.STACK	_cm_print_tn=8
                                 ;    1985 void cm_print_tn(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xtn);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1985
00002405 6040                    		SUB #04H, R0
00002407 E301                    		MOV.L R1, [R0]
00002409 FB22rrrrrrrr            		MOV.L #__$fmt_Xtn, R2
0000240F 39rrrr               W  		BSR __$_print_axis_flt
00002412 6701                    		RTSD #04H
00002414                         _cm_print_jm:
                                 		.STACK	_cm_print_jm=8
                                 ;    1986 void cm_print_jm(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xjm);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1986
00002414 6040                    		SUB #04H, R0
00002416 E301                    		MOV.L R1, [R0]
00002418 FB22rrrrrrrr            		MOV.L #__$fmt_Xjm, R2
0000241E 39rrrr               W  		BSR __$_print_axis_flt
00002421 6701                    		RTSD #04H
00002423                         _cm_print_jh:
                                 		.STACK	_cm_print_jh=8
                                 ;    1987 void cm_print_jh(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xjh);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1987
00002423 6040                    		SUB #04H, R0
00002425 E301                    		MOV.L R1, [R0]
00002427 FB22rrrrrrrr            		MOV.L #__$fmt_Xjh, R2
0000242D 39rrrr               W  		BSR __$_print_axis_flt
00002430 6701                    		RTSD #04H
00002432                         _cm_print_jd:
                                 		.STACK	_cm_print_jd=8
                                 ;    1988 void cm_print_jd(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xjd);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1988
00002432 6040                    		SUB #04H, R0
00002434 E301                    		MOV.L R1, [R0]
00002436 FB22rrrrrrrr            		MOV.L #__$fmt_Xjd, R2
0000243C 39rrrr               W  		BSR __$_print_axis_flt
0000243F 6701                    		RTSD #04H
00002441                         _cm_print_ra:
                                 		.STACK	_cm_print_ra=8
                                 ;    1989 void cm_print_ra(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xra);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1989
00002441 6040                    		SUB #04H, R0
00002443 E301                    		MOV.L R1, [R0]
00002445 FB22rrrrrrrr            		MOV.L #__$fmt_Xra, R2
0000244B 39rrrr               W  		BSR __$_print_axis_flt
0000244E 6701                    		RTSD #04H
00002450                         _cm_print_sn:
                                 		.STACK	_cm_print_sn=8
                                 ;    1990 void cm_print_sn(nvObj_t *nv) { _print_axis_ui8(nv, fmt_Xsn);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1990
00002450 6040                    		SUB #04H, R0
00002452 E301                    		MOV.L R1, [R0]
00002454 FB22rrrrrrrr            		MOV.L #__$fmt_Xsn, R2
0000245A 39rrrr               W  		BSR __$_print_axis_ui8
0000245D 6701                    		RTSD #04H
0000245F                         _cm_print_sx:
                                 		.STACK	_cm_print_sx=8
                                 ;    1991 void cm_print_sx(nvObj_t *nv) { _print_axis_ui8(nv, fmt_Xsx);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1991
0000245F 6040                    		SUB #04H, R0
00002461 E301                    		MOV.L R1, [R0]
00002463 FB22rrrrrrrr            		MOV.L #__$fmt_Xsx, R2
00002469 39rrrr               W  		BSR __$_print_axis_ui8
0000246C 6701                    		RTSD #04H
0000246E                         _cm_print_sv:
                                 		.STACK	_cm_print_sv=8
                                 ;    1992 void cm_print_sv(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xsv);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1992
0000246E 6040                    		SUB #04H, R0
00002470 E301                    		MOV.L R1, [R0]
00002472 FB22rrrrrrrr            		MOV.L #__$fmt_Xsv, R2
00002478 39rrrr               W  		BSR __$_print_axis_flt
0000247B 6701                    		RTSD #04H
0000247D                         _cm_print_lv:
                                 		.STACK	_cm_print_lv=8
                                 ;    1993 void cm_print_lv(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xlv);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1993
0000247D 6040                    		SUB #04H, R0
0000247F E301                    		MOV.L R1, [R0]
00002481 FB22rrrrrrrr            		MOV.L #__$fmt_Xlv, R2
00002487 39rrrr               W  		BSR __$_print_axis_flt
0000248A 6701                    		RTSD #04H
0000248C                         _cm_print_lb:
                                 		.STACK	_cm_print_lb=8
                                 ;    1994 void cm_print_lb(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xlb);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1994
0000248C 6040                    		SUB #04H, R0
0000248E E301                    		MOV.L R1, [R0]
00002490 FB22rrrrrrrr            		MOV.L #__$fmt_Xlb, R2
00002496 39rrrr               W  		BSR __$_print_axis_flt
00002499 6701                    		RTSD #04H
0000249B                         _cm_print_zb:
                                 		.STACK	_cm_print_zb=8
                                 ;    1995 void cm_print_zb(nvObj_t *nv) { _print_axis_flt(nv, fmt_Xzb);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1995
0000249B 6040                    		SUB #04H, R0
0000249D E301                    		MOV.L R1, [R0]
0000249F FB22rrrrrrrr            		MOV.L #__$fmt_Xzb, R2
000024A5 39rrrr               W  		BSR __$_print_axis_flt
000024A8 6701                    		RTSD #04H
000024AA                         _cm_print_cofs:
                                 		.STACK	_cm_print_cofs=8
                                 ;    1996 
                                 ;    1997 void cm_print_cofs(nvObj_t *nv) { _print_axis_coord_flt(nv, fmt_cofs);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1997
000024AA 6040                    		SUB #04H, R0
000024AC E301                    		MOV.L R1, [R0]
000024AE FB22rrrrrrrr            		MOV.L #__$fmt_cofs, R2
000024B4 39rrrr               W  		BSR __$_print_axis_coord_flt
000024B7 6701                    		RTSD #04H
000024B9                         _cm_print_cpos:
                                 		.STACK	_cm_print_cpos=8
                                 ;    1998 void cm_print_cpos(nvObj_t *nv) { _print_axis_coord_flt(nv, fmt_cpos);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",1998
000024B9 6040                    		SUB #04H, R0
000024BB E301                    		MOV.L R1, [R0]
000024BD FB22rrrrrrrr            		MOV.L #__$fmt_cpos, R2
000024C3 39rrrr               W  		BSR __$_print_axis_coord_flt
000024C6 6701                    		RTSD #04H
000024C8                         _cm_print_pos:
                                 		.STACK	_cm_print_pos=12
                                 ;    1999 
                                 ;    2000 void cm_print_pos(nvObj_t *nv) { _print_pos(nv, fmt_pos, cm_get_units_mode(MODEL));}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",2000
000024C8 7EA6                    		PUSH.L R6
000024CA 6040                    		SUB #04H, R0
000024CC EF16                    		MOV.L R1, R6
000024CE E306                    		MOV.L R6, [R0]
000024D0 FB12rrrrrrrr            		MOV.L #_cm, R1
000024D6 72115402                		ADD #0254H, R1
000024DA 39rrrr               W  		BSR _cm_get_units_mode
000024DD EF13                    		MOV.L R1, R3
000024DF FB22rrrrrrrr            		MOV.L #_fmt_pos, R2
000024E5 EF61                    		MOV.L R6, R1
000024E7 39rrrr               W  		BSR __$_print_pos
000024EA 3F6602                  		RTSD #08H, R6-R6
000024ED                         _cm_print_mpo:
                                 		.STACK	_cm_print_mpo=8
                                 ;    2001 void cm_print_mpo(nvObj_t *nv) { _print_pos(nv, fmt_mpo, MILLIMETERS);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",2001
000024ED 6040                    		SUB #04H, R0
000024EF E301                    		MOV.L R1, [R0]
000024F1 6613                    		MOV.L #00000001H, R3
000024F3 FB22rrrrrrrr            		MOV.L #_fmt_mpo, R2
000024F9 39rrrr               W  		BSR __$_print_pos
000024FC 6701                    		RTSD #04H
000024FE                         _cm_print_ofs:
                                 		.STACK	_cm_print_ofs=8
                                 ;    2002 void cm_print_ofs(nvObj_t *nv) { _print_pos(nv, fmt_ofs, MILLIMETERS);}
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\cnc\canonical_machine.c",2002
000024FE 6040                    		SUB #04H, R0
00002500 E301                    		MOV.L R1, [R0]
00002502 6613                    		MOV.L #00000001H, R3
00002504 FB22rrrrrrrr            		MOV.L #_fmt_ofs, R2
0000250A 39rrrr               W  		BSR __$_print_pos
0000250D 6701                    		RTSD #04H
                                 ;    2003 
                                 ;    2004 #endif // __TEXT_MODE
                                 ;    2005 /*
                                 ;    2006 #ifdef __cplusplus
                                 ;    2007 }
                                 ;    2008 #endif
                                 ;    2009 */
                                 		.SECTION	C,ROMDATA,ALIGN=4
00000000                         __$msg_units:
00000000 rrrrrrrr                		.lword	__$msg_units0
00000004 rrrrrrrr                		.lword	__$msg_units1
00000008 rrrrrrrr                		.lword	__$msg_units2
0000000C                         __$msg_am:
0000000C rrrrrrrr                		.lword	__$msg_am00
00000010 rrrrrrrr                		.lword	__$msg_am01
00000014 rrrrrrrr                		.lword	__$msg_am02
00000018 rrrrrrrr                		.lword	__$msg_am03
0000001C                         __$msg_unit:
0000001C rrrrrrrr                		.lword	__$msg_g20
00000020 rrrrrrrr                		.lword	__$msg_g21
00000024                         __$msg_stat:
00000024 rrrrrrrr                		.lword	__$msg_stat0
00000028 rrrrrrrr                		.lword	__$msg_stat1
0000002C rrrrrrrr                		.lword	__$msg_stat2
00000030 rrrrrrrr                		.lword	__$msg_stat3
00000034 rrrrrrrr                		.lword	__$msg_stat4
00000038 rrrrrrrr                		.lword	__$msg_stat5
0000003C rrrrrrrr                		.lword	__$msg_stat6
00000040 rrrrrrrr                		.lword	__$msg_stat7
00000044 rrrrrrrr                		.lword	__$msg_stat8
00000048 rrrrrrrr                		.lword	__$msg_stat9
0000004C rrrrrrrr                		.lword	__$msg_stat10
00000050 rrrrrrrr                		.lword	__$msg_stat11
00000054                         __$msg_macs:
00000054 rrrrrrrr                		.lword	__$msg_macs0
00000058 rrrrrrrr                		.lword	__$msg_macs1
0000005C rrrrrrrr                		.lword	__$msg_macs2
00000060 rrrrrrrr                		.lword	__$msg_macs3
00000064 rrrrrrrr                		.lword	__$msg_macs4
00000068 rrrrrrrr                		.lword	__$msg_macs5
0000006C rrrrrrrr                		.lword	__$msg_macs6
00000070                         __$msg_cycs:
00000070 rrrrrrrr                		.lword	__$msg_cycs0
00000074 rrrrrrrr                		.lword	__$msg_cycs1
00000078 rrrrrrrr                		.lword	__$msg_cycs2
0000007C rrrrrrrr                		.lword	__$msg_cycs3
00000080 rrrrrrrr                		.lword	__$msg_cycs4
00000084                         __$msg_mots:
00000084 rrrrrrrr                		.lword	__$msg_mots0
00000088 rrrrrrrr                		.lword	__$msg_mots1
0000008C rrrrrrrr                		.lword	__$msg_mots2
00000090                         __$msg_hold:
00000090 rrrrrrrr                		.lword	__$msg_hold0
00000094 rrrrrrrr                		.lword	__$msg_hold1
00000098 rrrrrrrr                		.lword	__$msg_hold2
0000009C rrrrrrrr                		.lword	__$msg_hold3
000000A0 rrrrrrrr                		.lword	__$msg_hold4
000000A4 rrrrrrrr                		.lword	__$msg_hold5
000000A8                         __$msg_home:
000000A8 rrrrrrrr                		.lword	__$msg_home0
000000AC rrrrrrrr                		.lword	__$msg_home1
000000B0 rrrrrrrr                		.lword	__$msg_home2
000000B4                         __$msg_coor:
000000B4 rrrrrrrr                		.lword	__$msg_g53
000000B8 rrrrrrrr                		.lword	__$msg_g54
000000BC rrrrrrrr                		.lword	__$msg_g55
000000C0 rrrrrrrr                		.lword	__$msg_g56
000000C4 rrrrrrrr                		.lword	__$msg_g57
000000C8 rrrrrrrr                		.lword	__$msg_g58
000000CC rrrrrrrr                		.lword	__$msg_g59
000000D0                         __$msg_momo:
000000D0 rrrrrrrr                		.lword	__$msg_g00
000000D4 rrrrrrrr                		.lword	__$msg_g01
000000D8 rrrrrrrr                		.lword	__$msg_g02
000000DC rrrrrrrr                		.lword	__$msg_g03
000000E0 rrrrrrrr                		.lword	__$msg_g80
000000E4                         __$msg_plan:
000000E4 rrrrrrrr                		.lword	__$msg_g17
000000E8 rrrrrrrr                		.lword	__$msg_g18
000000EC rrrrrrrr                		.lword	__$msg_g19
000000F0                         __$msg_path:
000000F0 rrrrrrrr                		.lword	__$msg_g61
000000F4 rrrrrrrr                		.lword	__$msg_g6a
000000F8 rrrrrrrr                		.lword	__$msg_g64
000000FC                         __$msg_dist:
000000FC rrrrrrrr                		.lword	__$msg_g90
00000100 rrrrrrrr                		.lword	__$msg_g91
00000104                         __$msg_frmo:
00000104 rrrrrrrr                		.lword	__$msg_g93
00000108 rrrrrrrr                		.lword	__$msg_g94
0000010C rrrrrrrr                		.lword	__$msg_g95
                                 		.SECTION	C_1,ROMDATA
00000000                         __$msg_units0:
00000000 20696E                  		.byte	" in"
00000003 00                      		.byte	00H
00000004                         __$msg_units1:
00000004 206D6D                  		.byte	" mm"
00000007 00                      		.byte	00H
00000008                         __$msg_units2:
00000008 20646567                		.byte	" deg"
0000000C 00                      		.byte	00H
0000000D                         __$msg_am00:
0000000D 5B646973                		.byte	"[disabled]"
         61626C65                
         645D                    
00000017 00                      		.byte	00H
00000018                         __$msg_am01:
00000018 5B737461                		.byte	"[standard]"
         6E646172                
         645D                    
00000022 00                      		.byte	00H
00000023                         __$msg_am02:
00000023 5B696E68                		.byte	"[inhibited]"
         69626974                
         65645D                  
0000002E 00                      		.byte	00H
0000002F                         __$msg_am03:
0000002F 5B726164                		.byte	"[radius]"
         6975735D                
00000037 00                      		.byte	00H
00000038                         __$msg_g20:
00000038 47323020                		.byte	"G20 - inches mode"
         2D20696E                
         63686573                
         206D6F64                
         65                      
00000049 00                      		.byte	00H
0000004A                         __$msg_g21:
0000004A 47323120                		.byte	"G21 - millimeter mode"
         2D206D69                
         6C6C696D                
         65746572                
         206D6F64                
         65                      
0000005F 00                      		.byte	00H
00000060                         __$msg_stat0:
00000060 496E6974                		.byte	"Initializing"
         69616C69                
         7A696E67                
0000006C 00                      		.byte	00H
0000006D                         __$msg_stat1:
0000006D 52656164                		.byte	"Ready"
         79                      
00000072 00                      		.byte	00H
00000073                         __$msg_stat2:
00000073 416C6172                		.byte	"Alarm"
         6D                      
00000078 00                      		.byte	00H
00000079                         __$msg_stat3:
00000079 53746F70                		.byte	"Stop"
0000007D 00                      		.byte	00H
0000007E                         __$msg_stat4:
0000007E 456E64                  		.byte	"End"
00000081 00                      		.byte	00H
00000082                         __$msg_stat5:
00000082 52756E                  		.byte	"Run"
00000085 00                      		.byte	00H
00000086                         __$msg_stat6:
00000086 486F6C64                		.byte	"Hold"
0000008A 00                      		.byte	00H
0000008B                         __$msg_stat7:
0000008B 50726F62                		.byte	"Probe"
         65                      
00000090 00                      		.byte	00H
00000091                         __$msg_stat8:
00000091 4379636C                		.byte	"Cycle"
         65                      
00000096 00                      		.byte	00H
00000097                         __$msg_stat9:
00000097 486F6D69                		.byte	"Homing"
         6E67                    
0000009D 00                      		.byte	00H
0000009E                         __$msg_stat10:
0000009E 4A6F67                  		.byte	"Jog"
000000A1 00                      		.byte	00H
000000A2                         __$msg_stat11:
000000A2 53687574                		.byte	"Shutdown"
         646F776E                
000000AA 00                      		.byte	00H
000000AB                         __$msg_macs0:
000000AB 496E6974                		.byte	"Initializing"
         69616C69                
         7A696E67                
000000B7 00                      		.byte	00H
000000B8                         __$msg_macs1:
000000B8 52656164                		.byte	"Ready"
         79                      
000000BD 00                      		.byte	00H
000000BE                         __$msg_macs2:
000000BE 416C6172                		.byte	"Alarm"
         6D                      
000000C3 00                      		.byte	00H
000000C4                         __$msg_macs3:
000000C4 53746F70                		.byte	"Stop"
000000C8 00                      		.byte	00H
000000C9                         __$msg_macs4:
000000C9 456E64                  		.byte	"End"
000000CC 00                      		.byte	00H
000000CD                         __$msg_macs5:
000000CD 4379636C                		.byte	"Cycle"
         65                      
000000D2 00                      		.byte	00H
000000D3                         __$msg_macs6:
000000D3 53687574                		.byte	"Shutdown"
         646F776E                
000000DB 00                      		.byte	00H
000000DC                         __$msg_cycs0:
000000DC 4F6666                  		.byte	"Off"
000000DF 00                      		.byte	00H
000000E0                         __$msg_cycs1:
000000E0 4D616368                		.byte	"Machining"
         696E696E                
         67                      
000000E9 00                      		.byte	00H
000000EA                         __$msg_cycs2:
000000EA 50726F62                		.byte	"Probe"
         65                      
000000EF 00                      		.byte	00H
000000F0                         __$msg_cycs3:
000000F0 486F6D69                		.byte	"Homing"
         6E67                    
000000F6 00                      		.byte	00H
000000F7                         __$msg_cycs4:
000000F7 4A6F67                  		.byte	"Jog"
000000FA 00                      		.byte	00H
000000FB                         __$msg_mots0:
000000FB 53746F70                		.byte	"Stop"
000000FF 00                      		.byte	00H
00000100                         __$msg_mots1:
00000100 52756E                  		.byte	"Run"
00000103 00                      		.byte	00H
00000104                         __$msg_mots2:
00000104 486F6C64                		.byte	"Hold"
00000108 00                      		.byte	00H
00000109                         __$msg_hold0:
00000109 4F6666                  		.byte	"Off"
0000010C 00                      		.byte	00H
0000010D                         __$msg_hold1:
0000010D 53796E63                		.byte	"Sync"
00000111 00                      		.byte	00H
00000112                         __$msg_hold2:
00000112 506C616E                		.byte	"Plan"
00000116 00                      		.byte	00H
00000117                         __$msg_hold3:
00000117 44656365                		.byte	"Decel"
         6C                      
0000011C 00                      		.byte	00H
0000011D                         __$msg_hold4:
0000011D 486F6C64                		.byte	"Hold"
00000121 00                      		.byte	00H
00000122                         __$msg_hold5:
00000122 456E6420                		.byte	"End Hold"
         486F6C64                
0000012A 00                      		.byte	00H
0000012B                         __$msg_home0:
0000012B 4E6F7420                		.byte	"Not Homed"
         486F6D65                
         64                      
00000134 00                      		.byte	00H
00000135                         __$msg_home1:
00000135 486F6D65                		.byte	"Homed"
         64                      
0000013A 00                      		.byte	00H
0000013B                         __$msg_home2:
0000013B 486F6D69                		.byte	"Homing"
         6E67                    
00000141 00                      		.byte	00H
00000142                         __$msg_g53:
00000142 47353320                		.byte	"G53 - machine coordinate system"
         2D206D61                
         6368696E                
         6520636F                
         6F726469                
         6E617465                
         20737973                
         74656D                  
00000161 00                      		.byte	00H
00000162                         __$msg_g54:
00000162 47353420                		.byte	"G54 - coordinate system 1"
         2D20636F                
         6F726469                
         6E617465                
         20737973                
         74656D20                
         31                      
0000017B 00                      		.byte	00H
0000017C                         __$msg_g55:
0000017C 47353520                		.byte	"G55 - coordinate system 2"
         2D20636F                
         6F726469                
         6E617465                
         20737973                
         74656D20                
         32                      
00000195 00                      		.byte	00H
00000196                         __$msg_g56:
00000196 47353620                		.byte	"G56 - coordinate system 3"
         2D20636F                
         6F726469                
         6E617465                
         20737973                
         74656D20                
         33                      
000001AF 00                      		.byte	00H
000001B0                         __$msg_g57:
000001B0 47353720                		.byte	"G57 - coordinate system 4"
         2D20636F                
         6F726469                
         6E617465                
         20737973                
         74656D20                
         34                      
000001C9 00                      		.byte	00H
000001CA                         __$msg_g58:
000001CA 47353820                		.byte	"G58 - coordinate system 5"
         2D20636F                
         6F726469                
         6E617465                
         20737973                
         74656D20                
         35                      
000001E3 00                      		.byte	00H
000001E4                         __$msg_g59:
000001E4 47353920                		.byte	"G59 - coordinate system 6"
         2D20636F                
         6F726469                
         6E617465                
         20737973                
         74656D20                
         36                      
000001FD 00                      		.byte	00H
000001FE                         __$msg_g00:
000001FE 47302020                		.byte	"G0  - linear traverse (seek)"
         2D206C69                
         6E656172                
         20747261                
         76657273                
         65202873                
         65656B29                
0000021A 00                      		.byte	00H
0000021B                         __$msg_g01:
0000021B 47312020                		.byte	"G1  - linear feed"
         2D206C69                
         6E656172                
         20666565                
         64                      
0000022C 00                      		.byte	00H
0000022D                         __$msg_g02:
0000022D 47322020                		.byte	"G2  - clockwise arc feed"
         2D20636C                
         6F636B77                
         69736520                
         61726320                
         66656564                
00000245 00                      		.byte	00H
00000246                         __$msg_g03:
00000246 47332020                		.byte	"G3  - counter clockwise arc feed"
         2D20636F                
         756E7465                
         7220636C                
         6F636B77                
         69736520                
         61726320                
         66656564                
00000266 00                      		.byte	00H
00000267                         __$msg_g80:
00000267 47383020                		.byte	"G80 - cancel motion mode (none active)"
         2D206361                
         6E63656C                
         206D6F74                
         696F6E20                
         6D6F6465                
         20286E6F                
         6E652061                
         63746976                
         6529                    
0000028D 00                      		.byte	00H
0000028E                         __$msg_g17:
0000028E 47313720                		.byte	"G17 - XY plane"
         2D205859                
         20706C61                
         6E65                    
0000029C 00                      		.byte	00H
0000029D                         __$msg_g18:
0000029D 47313820                		.byte	"G18 - XZ plane"
         2D20585A                
         20706C61                
         6E65                    
000002AB 00                      		.byte	00H
000002AC                         __$msg_g19:
000002AC 47313920                		.byte	"G19 - YZ plane"
         2D20595A                
         20706C61                
         6E65                    
000002BA 00                      		.byte	00H
000002BB                         __$msg_g61:
000002BB 47363120                		.byte	"G61 - exact path mode"
         2D206578                
         61637420                
         70617468                
         206D6F64                
         65                      
000002D0 00                      		.byte	00H
000002D1                         __$msg_g6a:
000002D1 4736312E                		.byte	"G61.1 - exact stop mode"
         31202D20                
         65786163                
         74207374                
         6F70206D                
         6F6465                  
000002E8 00                      		.byte	00H
000002E9                         __$msg_g64:
000002E9 47363420                		.byte	"G64 - continuous mode"
         2D20636F                
         6E74696E                
         756F7573                
         206D6F64                
         65                      
000002FE 00                      		.byte	00H
000002FF                         __$msg_g90:
000002FF 47393020                		.byte	"G90 - absolute distance mode"
         2D206162                
         736F6C75                
         74652064                
         69737461                
         6E636520                
         6D6F6465                
0000031B 00                      		.byte	00H
0000031C                         __$msg_g91:
0000031C 47393120                		.byte	"G91 - incremental distance mode"
         2D20696E                
         6372656D                
         656E7461                
         6C206469                
         7374616E                
         6365206D                
         6F6465                  
0000033B 00                      		.byte	00H
0000033C                         __$msg_g93:
0000033C 47393320                		.byte	"G93 - inverse time mode"
         2D20696E                
         76657273                
         65207469                
         6D65206D                
         6F6465                  
00000353 00                      		.byte	00H
00000354                         __$msg_g94:
00000354 47393420                		.byte	"G94 - units-per-minute mode (i.e. feedrate mode)"
         2D20756E                
         6974732D                
         7065722D                
         6D696E75                
         7465206D                
         6F646520                
         28692E65                
         2E206665                
         65647261                
         7465206D                
         6F646529                
00000384 00                      		.byte	00H
00000385                         __$msg_g95:
00000385 47393520                		.byte	"G95 - units-per-revolution mode"
         2D20756E                
         6974732D                
         7065722D                
         7265766F                
         6C757469                
         6F6E206D                
         6F6465                  
000003A4 00                      		.byte	00H
000003A5                         _fmt_vel:
000003A5 56656C6F                		.byte	"Velocity:%17.3f%s/min"
         63697479                
         3A253137                
         2E336625                
         732F6D69                
         6E                      
000003BA 0A00                    		.byte	0AH,00H
000003BC                         _fmt_feed:
000003BC 46656564                		.byte	"Feed rate:%16.3f%s/min"
         20726174                
         653A2531                
         362E3366                
         25732F6D                
         696E                    
000003D2 0A00                    		.byte	0AH,00H
000003D4                         _fmt_line:
000003D4 4C696E65                		.byte	"Line number:%10.0f"
         206E756D                
         6265723A                
         2531302E                
         3066                    
000003E6 0A00                    		.byte	0AH,00H
000003E8                         _fmt_stat:
000003E8 4D616368                		.byte	"Machine state:       %s"
         696E6520                
         73746174                
         653A2020                
         20202020                
         202573                  
000003FF 0A00                    		.byte	0AH,00H
00000401                         _fmt_macs:
00000401 52617720                		.byte	"Raw machine state:   %s"
         6D616368                
         696E6520                
         73746174                
         653A2020                
         202573                  
00000418 0A00                    		.byte	0AH,00H
0000041A                         _fmt_cycs:
0000041A 4379636C                		.byte	"Cycle state:         %s"
         65207374                
         6174653A                
         20202020                
         20202020                
         202573                  
00000431 0A00                    		.byte	0AH,00H
00000433                         _fmt_mots:
00000433 4D6F7469                		.byte	"Motion state:        %s"
         6F6E2073                
         74617465                
         3A202020                
         20202020                
         202573                  
0000044A 0A00                    		.byte	0AH,00H
0000044C                         _fmt_hold:
0000044C 46656564                		.byte	"Feedhold state:      %s"
         686F6C64                
         20737461                
         74653A20                
         20202020                
         202573                  
00000463 0A00                    		.byte	0AH,00H
00000465                         _fmt_home:
00000465 486F6D69                		.byte	"Homing state:        %s"
         6E672073                
         74617465                
         3A202020                
         20202020                
         202573                  
0000047C 0A00                    		.byte	0AH,00H
0000047E                         _fmt_unit:
0000047E 556E6974                		.byte	"Units:               %s"
         733A2020                
         20202020                
         20202020                
         20202020                
         202573                  
00000495 0A00                    		.byte	0AH,00H
00000497                         _fmt_coor:
00000497 436F6F72                		.byte	"Coordinate system:   %s"
         64696E61                
         74652073                
         79737465                
         6D3A2020                
         202573                  
000004AE 0A00                    		.byte	0AH,00H
000004B0                         _fmt_momo:
000004B0 4D6F7469                		.byte	"Motion mode:         %s"
         6F6E206D                
         6F64653A                
         20202020                
         20202020                
         202573                  
000004C7 0A00                    		.byte	0AH,00H
000004C9                         _fmt_plan:
000004C9 506C616E                		.byte	"Plane:               %s"
         653A2020                
         20202020                
         20202020                
         20202020                
         202573                  
000004E0 0A00                    		.byte	0AH,00H
000004E2                         _fmt_path:
000004E2 50617468                		.byte	"Path Mode:           %s"
         204D6F64                
         653A2020                
         20202020                
         20202020                
         202573                  
000004F9 0A00                    		.byte	0AH,00H
000004FB                         _fmt_dist:
000004FB 44697374                		.byte	"Distance mode:       %s"
         616E6365                
         206D6F64                
         653A2020                
         20202020                
         202573                  
00000512 0A00                    		.byte	0AH,00H
00000514                         _fmt_frmo:
00000514 46656564                		.byte	"Feed rate mode:      %s"
         20726174                
         65206D6F                
         64653A20                
         20202020                
         202573                  
0000052B 0A00                    		.byte	0AH,00H
0000052D                         _fmt_tool:
0000052D 546F6F6C                		.byte	"Tool number          %d"
         206E756D                
         62657220                
         20202020                
         20202020                
         202564                  
00000544 0A00                    		.byte	0AH,00H
00000546                         _fmt_pos:
00000546 25632070                		.byte	"%c position:%15.3f%s"
         6F736974                
         696F6E3A                
         2531352E                
         33662573                
0000055A 0A00                    		.byte	0AH,00H
0000055C                         _fmt_mpo:
0000055C 2563206D                		.byte	"%c machine posn:%11.3f%s"
         61636869                
         6E652070                
         6F736E3A                
         2531312E                
         33662573                
00000574 0A00                    		.byte	0AH,00H
00000576                         _fmt_ofs:
00000576 25632077                		.byte	"%c work offset:%12.3f%s"
         6F726B20                
         6F666673                
         65743A25                
         31322E33                
         662573                  
0000058D 0A00                    		.byte	0AH,00H
0000058F                         _fmt_hom:
0000058F 25632061                		.byte	"%c axis homing state:%2.0f"
         78697320                
         686F6D69                
         6E672073                
         74617465                
         3A25322E                
         3066                    
000005A9 0A00                    		.byte	0AH,00H
000005AB                         _fmt_gpl:
000005AB 5B67706C                		.byte	"[gpl] default gcode plane%10d [0=G17,1=G18,2=G19]"
         5D206465                
         6661756C                
         74206763                
         6F646520                
         706C616E                
         65253130                
         64205B30                
         3D473137                
         2C313D47                
         31382C32                
         3D473139                
         5D                      
000005DC 0A00                    		.byte	0AH,00H
000005DE                         _fmt_gun:
000005DE 5B67756E                		.byte	"[gun] default gcode units mode%5d [0=G20,1=G21]"
         5D206465                
         6661756C                
         74206763                
         6F646520                
         756E6974                
         73206D6F                
         64652535                
         64205B30                
         3D473230                
         2C313D47                
         32315D                  
0000060D 0A00                    		.byte	0AH,00H
0000060F                         _fmt_gco:
0000060F 5B67636F                		.byte	"[gco] default gcode coord system%3d [1-6 (G54-G59)]"
         5D206465                
         6661756C                
         74206763                
         6F646520                
         636F6F72                
         64207379                
         7374656D                
         25336420                
         5B312D36                
         20284735                
         342D4735                
         39295D                  
00000642 0A00                    		.byte	0AH,00H
00000644                         _fmt_gpa:
00000644 5B677061                		.byte	"[gpa] default gcode path control%3d [0=G61,1=G61.1,2=G64]"
         5D206465                
         6661756C                
         74206763                
         6F646520                
         70617468                
         20636F6E                
         74726F6C                
         25336420                
         5B303D47                
         36312C31                
         3D473631                
         2E312C32                
         3D473634                
         5D                      
0000067D 0A00                    		.byte	0AH,00H
0000067F                         _fmt_gdi:
0000067F 5B676469                		.byte	"[gdi] default gcode distance mode%2d [0=G90,1=G91]"
         5D206465                
         6661756C                
         74206763                
         6F646520                
         64697374                
         616E6365                
         206D6F64                
         65253264                
         205B303D                
         4739302C                
         313D4739                
         315D                    
000006B1 0A00                    		.byte	0AH,00H
000006B3                         _fmt_ja:
000006B3 5B6A615D                		.byte	"[ja]  junction acceleration%8.0f%s"
         20206A75                
         6E637469                
         6F6E2061                
         6363656C                
         65726174                
         696F6E25                
         382E3066                
         2573                    
000006D5 0A00                    		.byte	0AH,00H
000006D7                         _fmt_ct:
000006D7 5B63745D                		.byte	"[ct]  chordal tolerance%17.4f%s"
         20206368                
         6F726461                
         6C20746F                
         6C657261                
         6E636525                
         31372E34                
         662573                  
000006F6 0A00                    		.byte	0AH,00H
000006F8                         _fmt_sl:
000006F8 5B736C5D                		.byte	"[sl]  soft limit enable%12d"
         2020736F                
         6674206C                
         696D6974                
         20656E61                
         626C6525                
         313264                  
00000713 0A00                    		.byte	0AH,00H
00000715                         _fmt_ml:
00000715 5B6D6C5D                		.byte	"[ml]  min line segment%17.3f%s"
         20206D69                
         6E206C69                
         6E652073                
         65676D65                
         6E742531                
         372E3366                
         2573                    
00000733 0A00                    		.byte	0AH,00H
00000735                         _fmt_ma:
00000735 5B6D615D                		.byte	"[ma]  min arc segment%18.3f%s"
         20206D69                
         6E206172                
         63207365                
         676D656E                
         74253138                
         2E336625                
         73                      
00000752 0A00                    		.byte	0AH,00H
00000754                         _fmt_ms:
00000754 5B6D735D                		.byte	"[ms]  min segment time%13.0f uSec"
         20206D69                
         6E207365                
         676D656E                
         74207469                
         6D652531                
         332E3066                
         20755365                
         63                      
00000775 0A00                    		.byte	0AH,00H
00000777                         __$fmt_Xam:
00000777 5B257325                		.byte	"[%s%s] %s axis mode%18d %s"
         735D2025                
         73206178                
         6973206D                
         6F646525                
         31386420                
         2573                    
00000791 0A00                    		.byte	0AH,00H
00000793                         __$fmt_Xfr:
00000793 5B257325                		.byte	"[%s%s] %s feedrate maximum%11.0f%s/min"
         735D2025                
         73206665                
         65647261                
         7465206D                
         6178696D                
         756D2531                
         312E3066                
         25732F6D                
         696E                    
000007B9 0A00                    		.byte	0AH,00H
000007BB                         __$fmt_Xvm:
000007BB 5B257325                		.byte	"[%s%s] %s velocity maximum%11.0f%s/min"
         735D2025                
         73207665                
         6C6F6369                
         7479206D                
         6178696D                
         756D2531                
         312E3066                
         25732F6D                
         696E                    
000007E1 0A00                    		.byte	0AH,00H
000007E3                         __$fmt_Xtm:
000007E3 5B257325                		.byte	"[%s%s] %s travel maximum%17.3f%s"
         735D2025                
         73207472                
         6176656C                
         206D6178                
         696D756D                
         2531372E                
         33662573                
00000803 0A00                    		.byte	0AH,00H
00000805                         __$fmt_Xtn:
00000805 5B257325                		.byte	"[%s%s] %s travel minimum%17.3f%s"
         735D2025                
         73207472                
         6176656C                
         206D696E                
         696D756D                
         2531372E                
         33662573                
00000825 0A00                    		.byte	0AH,00H
00000827                         __$fmt_Xjm:
00000827 5B257325                		.byte	"[%s%s] %s jerk maximum%15.0f%s/min^3 * 1 million"
         735D2025                
         73206A65                
         726B206D                
         6178696D                
         756D2531                
         352E3066                
         25732F6D                
         696E5E33                
         202A2031                
         206D696C                
         6C696F6E                
00000857 0A00                    		.byte	0AH,00H
00000859                         __$fmt_Xjh:
00000859 5B257325                		.byte	"[%s%s] %s jerk homing%16.0f%s/min^3 * 1 million"
         735D2025                
         73206A65                
         726B2068                
         6F6D696E                
         67253136                
         2E306625                
         732F6D69                
         6E5E3320                
         2A203120                
         6D696C6C                
         696F6E                  
00000888 0A00                    		.byte	0AH,00H
0000088A                         __$fmt_Xjd:
0000088A 5B257325                		.byte	"[%s%s] %s junction deviation%14.4f%s (larger is faster)"
         735D2025                
         73206A75                
         6E637469                
         6F6E2064                
         65766961                
         74696F6E                
         2531342E                
         34662573                
         20286C61                
         72676572                
         20697320                
         66617374                
         657229                  
000008C1 0A00                    		.byte	0AH,00H
000008C3                         __$fmt_Xra:
000008C3 5B257325                		.byte	"[%s%s] %s radius value%20.4f%s"
         735D2025                
         73207261                
         64697573                
         2076616C                
         75652532                
         302E3466                
         2573                    
000008E1 0A00                    		.byte	0AH,00H
000008E3                         __$fmt_Xsn:
000008E3 5B257325                		.byte	"[%s%s] %s switch min%17d [0=off,1=homing,2=limit,3=limit+homing]"
         735D2025                
         73207377                
         69746368                
         206D696E                
         25313764                
         205B303D                
         6F66662C                
         313D686F                
         6D696E67                
         2C323D6C                
         696D6974                
         2C333D6C                
         696D6974                
         2B686F6D                
         696E675D                
00000923 0A00                    		.byte	0AH,00H
00000925                         __$fmt_Xsx:
00000925 5B257325                		.byte	"[%s%s] %s switch max%17d [0=off,1=homing,2=limit,3=limit+homing]"
         735D2025                
         73207377                
         69746368                
         206D6178                
         25313764                
         205B303D                
         6F66662C                
         313D686F                
         6D696E67                
         2C323D6C                
         696D6974                
         2C333D6C                
         696D6974                
         2B686F6D                
         696E675D                
00000965 0A00                    		.byte	0AH,00H
00000967                         __$fmt_Xsv:
00000967 5B257325                		.byte	"[%s%s] %s search velocity%12.0f%s/min"
         735D2025                
         73207365                
         61726368                
         2076656C                
         6F636974                
         79253132                
         2E306625                
         732F6D69                
         6E                      
0000098C 0A00                    		.byte	0AH,00H
0000098E                         __$fmt_Xlv:
0000098E 5B257325                		.byte	"[%s%s] %s latch velocity%13.0f%s/min"
         735D2025                
         73206C61                
         74636820                
         76656C6F                
         63697479                
         2531332E                
         30662573                
         2F6D696E                
000009B2 0A00                    		.byte	0AH,00H
000009B4                         __$fmt_Xlb:
000009B4 5B257325                		.byte	"[%s%s] %s latch backoff%18.3f%s"
         735D2025                
         73206C61                
         74636820                
         6261636B                
         6F666625                
         31382E33                
         662573                  
000009D3 0A00                    		.byte	0AH,00H
000009D5                         __$fmt_Xzb:
000009D5 5B257325                		.byte	"[%s%s] %s zero backoff%19.3f%s"
         735D2025                
         73207A65                
         726F2062                
         61636B6F                
         66662531                
         392E3366                
         2573                    
000009F3 0A00                    		.byte	0AH,00H
000009F5                         __$fmt_cofs:
000009F5 5B257325                		.byte	"[%s%s] %s %s offset%20.3f%s"
         735D2025                
         73202573                
         206F6666                
         73657425                
         32302E33                
         662573                  
00000A10 0A00                    		.byte	0AH,00H
00000A12                         __$fmt_cpos:
00000A12 5B257325                		.byte	"[%s%s] %s %s position%18.3f%s"
         735D2025                
         73202573                
         20706F73                
         6974696F                
         6E253138                
         2E336625                
         73                      
00000A2F 0A00                    		.byte	0AH,00H
                                 		.SECTION	L,ROMDATA,ALIGN=4
00000000                         _L10:
00000000 6E                      		.byte	"n"
00000001 00                      		.byte	00H
00000002                         _L11:
00000002 67253264                		.byte	"g%2d%c"
         2563                    
00000008 00                      		.byte	00H
00000009                         _L12:
00000009 78797A61                		.byte	"xyzabc"
         6263                    
0000000F 00                      		.byte	00H
00000010                         _L13:
00000010 00                      		.byte	0
00000011 00                      		.byte	00H
00000012 0000                    		.word	0000H
00000014                         _L14:
00000014 00                      		.byte	0
00000015 00                      		.byte	0
00000016 00                      		.byte	0
00000017 00                      		.byte	0
00000018 00                      		.byte	0
00000019 00                      		.byte	0
0000001A 00                      		.byte	0
0000001B 00                      		.byte	0
0000001C 00                      		.byte	0
0000001D 00                      		.byte	0
0000001E 00                      		.byte	0
0000001F 00                      		.byte	0
00000020 00                      		.byte	0
00000021 00                      		.byte	0
00000022 00                      		.byte	0
00000023 00                      		.byte	0
00000024 00                      		.byte	0
00000025 00                      		.byte	0
00000026 00                      		.byte	0
00000027 00                      		.byte	0
00000028 00                      		.byte	0
00000029 00                      		.byte	0
0000002A 00                      		.byte	0
0000002B 00                      		.byte	0
0000002C                         _L15:
0000002C 00                      		.byte	0
0000002D 00                      		.byte	0
0000002E 00                      		.byte	0
0000002F 00                      		.byte	0
00000030 00                      		.byte	0
00000031 00                      		.byte	0
00000032 00                      		.byte	0
00000033 00                      		.byte	0
00000034 00                      		.byte	0
00000035 00                      		.byte	0
00000036 00                      		.byte	0
00000037 00                      		.byte	0
00000038 00                      		.byte	0
00000039 00                      		.byte	0
0000003A 00                      		.byte	0
0000003B 00                      		.byte	0
0000003C 00                      		.byte	0
0000003D 00                      		.byte	0
0000003E 00                      		.byte	0
0000003F 00                      		.byte	0
00000040 00                      		.byte	0
00000041 00                      		.byte	0
00000042 00                      		.byte	0
00000043 00                      		.byte	0
00000044                         _L16:
00000044 00                      		.byte	0
00000045 00                      		.byte	0
00000046 00                      		.byte	0
00000047 00                      		.byte	0
00000048 00                      		.byte	0
00000049 00                      		.byte	0
0000004A 00                      		.byte	0
0000004B 00                      		.byte	0
0000004C 00                      		.byte	0
0000004D 00                      		.byte	0
0000004E 00                      		.byte	0
0000004F 00                      		.byte	0
00000050 00                      		.byte	0
00000051 00                      		.byte	0
00000052 00                      		.byte	0
00000053 00                      		.byte	0
00000054 00                      		.byte	0
00000055 00                      		.byte	0
00000056 00                      		.byte	0
00000057 00                      		.byte	0
00000058 00                      		.byte	0
00000059 00                      		.byte	0
0000005A 00                      		.byte	0
0000005B 00                      		.byte	0
0000005C                         _L17:
0000005C 00                      		.byte	0
0000005D 00                      		.byte	0
0000005E 00                      		.byte	0
0000005F 00                      		.byte	0
00000060 00                      		.byte	0
00000061 00                      		.byte	0
00000062 00                      		.byte	0
00000063 00                      		.byte	0
00000064 00                      		.byte	0
00000065 00                      		.byte	0
00000066 00                      		.byte	0
00000067 00                      		.byte	0
00000068 00                      		.byte	0
00000069 00                      		.byte	0
0000006A 00                      		.byte	0
0000006B 00                      		.byte	0
0000006C 00                      		.byte	0
0000006D 00                      		.byte	0
0000006E 00                      		.byte	0
0000006F 00                      		.byte	0
00000070 00                      		.byte	0
00000071 00                      		.byte	0
00000072 00                      		.byte	0
00000073 00                      		.byte	0
00000074                         _L18:
00000074 00                      		.byte	0
00000075 00                      		.byte	0
00000076 00                      		.byte	0
00000077 00                      		.byte	0
00000078 00                      		.byte	0
00000079 00                      		.byte	0
0000007A 00                      		.byte	0
0000007B 00                      		.byte	0
0000007C 00                      		.byte	0
0000007D 00                      		.byte	0
0000007E 00                      		.byte	0
0000007F 00                      		.byte	0
00000080 00                      		.byte	0
00000081 00                      		.byte	0
00000082 00                      		.byte	0
00000083 00                      		.byte	0
00000084 00                      		.byte	0
00000085 00                      		.byte	0
00000086 00                      		.byte	0
00000087 00                      		.byte	0
00000088 00                      		.byte	0
00000089 00                      		.byte	0
0000008A 00                      		.byte	0
0000008B 00                      		.byte	0
0000008C                         _L19:
0000008C 0000803F                		.lword	3F800000H	; float 1
00000090 0000803F                		.lword	3F800000H	; float 1
00000094 0000803F                		.lword	3F800000H	; float 1
00000098 0000803F                		.lword	3F800000H	; float 1
0000009C 0000803F                		.lword	3F800000H	; float 1
000000A0 0000803F                		.lword	3F800000H	; float 1
000000A4                         _L20:
000000A4 0000803F                		.lword	3F800000H	; float 1
000000A8 0000803F                		.lword	3F800000H	; float 1
000000AC 0000803F                		.lword	3F800000H	; float 1
000000B0 0000803F                		.lword	3F800000H	; float 1
000000B4 0000803F                		.lword	3F800000H	; float 1
000000B8 0000803F                		.lword	3F800000H	; float 1
000000BC                         _L21:
000000BC 00                      		.byte	0
000000BD 00                      		.byte	0
000000BE 00                      		.byte	0
000000BF 00                      		.byte	0
000000C0 00                      		.byte	0
000000C1 00                      		.byte	0
000000C2 00                      		.byte	0
000000C3 00                      		.byte	0
000000C4 00                      		.byte	0
000000C5 00                      		.byte	0
000000C6 00                      		.byte	0
000000C7 00                      		.byte	0
000000C8 00                      		.byte	0
000000C9 00                      		.byte	0
000000CA 00                      		.byte	0
000000CB 00                      		.byte	0
000000CC 00                      		.byte	0
000000CD 00                      		.byte	0
000000CE 00                      		.byte	0
000000CF 00                      		.byte	0
000000D0 00                      		.byte	0
000000D1 00                      		.byte	0
000000D2 00                      		.byte	0
000000D3 00                      		.byte	0
000000D4                         _L22:
000000D4 00                      		.byte	0
000000D5 00                      		.byte	0
000000D6 00                      		.byte	0
000000D7 00                      		.byte	0
000000D8 00                      		.byte	0
000000D9 00                      		.byte	0
000000DA 00                      		.byte	0
000000DB 00                      		.byte	0
000000DC 00                      		.byte	0
000000DD 00                      		.byte	0
000000DE 00                      		.byte	0
000000DF 00                      		.byte	0
000000E0 00                      		.byte	0
000000E1 00                      		.byte	0
000000E2 00                      		.byte	0
000000E3 00                      		.byte	0
000000E4 00                      		.byte	0
000000E5 00                      		.byte	0
000000E6 00                      		.byte	0
000000E7 00                      		.byte	0
000000E8 00                      		.byte	0
000000E9 00                      		.byte	0
000000EA 00                      		.byte	0
000000EB 00                      		.byte	0
000000EC                         _L23:
000000EC 00                      		.byte	0
000000ED 00                      		.byte	0
000000EE 00                      		.byte	0
000000EF 00                      		.byte	0
000000F0 00                      		.byte	0
000000F1 00                      		.byte	0
000000F2 00                      		.byte	0
000000F3 00                      		.byte	0
000000F4 00                      		.byte	0
000000F5 00                      		.byte	0
000000F6 00                      		.byte	0
000000F7 00                      		.byte	0
000000F8 00                      		.byte	0
000000F9 00                      		.byte	0
000000FA 00                      		.byte	0
000000FB 00                      		.byte	0
000000FC 00                      		.byte	0
000000FD 00                      		.byte	0
000000FE 00                      		.byte	0
000000FF 00                      		.byte	0
00000100 00                      		.byte	0
00000101 00                      		.byte	0
00000102 00                      		.byte	0
00000103 00                      		.byte	0
00000104                         _L24:
00000104 00                      		.byte	0
00000105 00                      		.byte	0
00000106 00                      		.byte	0
00000107 00                      		.byte	0
00000108 00                      		.byte	0
00000109 00                      		.byte	0
0000010A 00                      		.byte	0
0000010B 00                      		.byte	0
0000010C 00                      		.byte	0
0000010D 00                      		.byte	0
0000010E 00                      		.byte	0
0000010F 00                      		.byte	0
00000110 00                      		.byte	0
00000111 00                      		.byte	0
00000112 00                      		.byte	0
00000113 00                      		.byte	0
00000114 00                      		.byte	0
00000115 00                      		.byte	0
00000116 00                      		.byte	0
00000117 00                      		.byte	0
00000118 00                      		.byte	0
00000119 00                      		.byte	0
0000011A 00                      		.byte	0
0000011B 00                      		.byte	0
0000011C                         _L25:
0000011C 6D7367                  		.byte	"msg"
0000011F 00                      		.byte	00H
00000120                         _L26:
00000120 00004040                		.lword	40400000H	; float 3
00000124 00000000                		.lword	00000000H
00000128 00000000                		.lword	00000000H
0000012C 00000000                		.lword	00000000H
00000130 00000000                		.lword	00000000H
00000134 00000000                		.lword	00000000H
00000138                         _L27:
00000138 00004040                		.lword	40400000H	; float 3
0000013C 00000000                		.lword	00000000H
00000140 00000000                		.lword	00000000H
00000144 00000000                		.lword	00000000H
00000148 00000000                		.lword	00000000H
0000014C 00000000                		.lword	00000000H
00000150                         _L28:
00000150 00004040                		.lword	40400000H	; float 3
00000154 00000000                		.lword	00000000H
00000158 00000000                		.lword	00000000H
0000015C 00000000                		.lword	00000000H
00000160 00000000                		.lword	00000000H
00000164 00000000                		.lword	00000000H
00000168                         _L29:
00000168 00004040                		.lword	40400000H	; float 3
0000016C 00000000                		.lword	00000000H
00000170 00000000                		.lword	00000000H
00000174 00000000                		.lword	00000000H
00000178 00000000                		.lword	00000000H
0000017C 00000000                		.lword	00000000H
00000180                         _L30:
00000180 00008040                		.lword	40800000H	; float 4
00000184 00000000                		.lword	00000000H
00000188 00000000                		.lword	00000000H
0000018C 00000000                		.lword	00000000H
00000190 00000000                		.lword	00000000H
00000194 00000000                		.lword	00000000H
00000198                         _L31:
00000198 58595A41                		.byte	"XYZABC"
         4243                    
0000019E 00                      		.byte	00H
0000019F                         _L32:
0000019F 78797A61                		.byte	"xyzabc"
         6263                    
000001A5 00                      		.byte	00H
000001A6                         _L33:
000001A6 41637469                		.byte	"Active model:"
         7665206D                
         6F64656C                
         3A                      
000001B3 0A00                    		.byte	0AH,00H
000001B5                         _L34:
000001B5 58595A41                		.byte	"XYZABC"
         4243                    
000001BB 00                      		.byte	00H
                                 		.SECTION	B,DATA,ALIGN=4
00000000                         _cm:
00000000(000003F0H)              		.blkl	252
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     07859   LINES

Section List

Attr         Size               Name
CODE     0000009487(0000250FH)  P
ROMDATA  0000000272(00000110H)  C
ROMDATA  0000002609(00000A31H)  C_1
ROMDATA  0000000444(000001BCH)  L
DATA     0000001008(000003F0H)  B

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx4DB7\$ccrx\canonical_machine.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01_master\MT01_build\canonical_machine.lst
-output=C:\Workspace\e2studio\git\MT01_master\MT01_build\src\cnc\canonical_machine.obj
