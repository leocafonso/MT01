* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Mon Mar 20 17:54:14 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  20-Mar-2017 17:54:14
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=u8g_clip.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx\src,C:/Workspace/e2studio/
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=u8g_clip.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=1,MOBILE=0,FREE_RTOS_PP
                                 ;u8g_clip.c
                                 
                                 		.glb	_u8g_IsBBXIntersection
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         __$u8g_is_intersection_decision_tree:
                                 		.STACK	__$u8g_is_intersection_decision_tree=12
                                 ;       1 /*
                                 ;       2 
                                 ;       3   u8g_clip.c
                                 ;       4   
                                 ;       5   procedures for clipping
                                 ;       6   taken over from procs in u8g_pb.c
                                 ;       7 
                                 ;       8   Universal 8bit Graphics Library
                                 ;       9   
                                 ;      10   Copyright (c) 2012, olikraus@gmail.com
                                 ;      11   All rights reserved.
                                 ;      12 
                                 ;      13   Redistribution and use in source and binary forms, with or without modification, 
                                 ;      14   are permitted provided that the following conditions are met:
                                 ;      15 
                                 ;      16   * Redistributions of source code must retain the above copyright notice, this list 
                                 ;      17     of conditions and the following disclaimer.
                                 ;      18     
                                 ;      19   * Redistributions in binary form must reproduce the above copyright notice, this 
                                 ;      20     list of conditions and the following disclaimer in the documentation and/or other 
                                 ;      21     materials provided with the distribution.
                                 ;      22 
                                 ;      23   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
                                 ;      24   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
                                 ;      25   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
                                 ;      26   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
                                 ;      27   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
                                 ;      28   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
                                 ;      29   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
                                 ;      30   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
                                 ;      31   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
                                 ;      32   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
                                 ;      33   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
                                 ;      34   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
                                 ;      35   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
                                 ;      36   
                                 ;      37   Notes
                                 ;      38   
                                 ;      39   This is one of the most critical parts of u8glib. It must be fast, but still reliable.
                                 ;      40   Based on the intersection program (see tools folder), there is minimized version of
                                 ;      41   the condition for the intersaction test:
                                 ;      42     minimized version
                                 ;      43     ---1----0 1             b1 <= a2 && b1 > b2
                                 ;      44     -----1--0 1             b2 >= a1 && b1 > b2
                                 ;      45     ---1-1--- 1             b1 <= a2 && b2 >= a1
                                 ;      46   It includes the assumption, that a1 <= a2 is always true (correct, because
                                 ;      47   a1, a2 are the page dimensions.
                                 ;      48 
                                 ;      49   The direct implementation of the above result is done in:
                                 ;      50   uint8_t u8g_is_intersection_boolean(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1)
                                 ;      51   However, this is slower than a decision tree version:  
                                 ;      52   static uint8_t u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) 
                                 ;      53   Also suprising is, that the macro implementation is slower than the inlined version.
                                 ;      54   
                                 ;      55   The decision tree is based on the expansion of the truth table.
                                 ;      56   
                                 ;      57 */
                                 ;      58 
                                 ;      59 #include "u8g.h"
                                 ;      60 
                                 ;      61 #ifdef __GNUC__
                                 ;      62 #define U8G_ALWAYS_INLINE __inline__ __attribute__((always_inline))
                                 ;      63 #else
                                 ;      64 #define U8G_ALWAYS_INLINE
                                 ;      65  #endif 
                                 ;      66 
                                 ;      67 /*
                                 ;      68   intersection assumptions:
                                 ;      69     a1 <= a2 is always true    
                                 ;      70     
                                 ;      71     minimized version
                                 ;      72     ---1----0 1             b1 <= a2 && b1 > b2
                                 ;      73     -----1--0 1             b2 >= a1 && b1 > b2
                                 ;      74     ---1-1--- 1             b1 <= a2 && b2 >= a1
                                 ;      75   */
                                 ;      76 
                                 ;      77 #ifdef OLD_CODE_WHICH_IS_TOO_SLOW
                                 ;      78 static uint8_t u8g_is_intersection_boolean(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1)
                                 ;      79 {
                                 ;      80   uint8_t c1, c2, c3, tmp;
                                 ;      81   c1 = v0 <= a1;
                                 ;      82   c2 = v1 >= a0;
                                 ;      83   c3 = v0 > v1;
                                 ;      84   
                                 ;      85   tmp = c1;
                                 ;      86   c1 &= c2;
                                 ;      87   c2 &= c3;
                                 ;      88   c3 &= tmp;
                                 ;      89   c1 |= c2;
                                 ;      90   c1 |= c3;
                                 ;      91   return c1 & 1;
                                 ;      92 }
                                 ;      93 #endif
                                 ;      94 
                                 ;      95 #define U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1) ((uint8_t)( (v0) <= (a1) ) ? ( ( (v1) >= (a0) ) ? ( 1 ) : ( (v0) > (v1) ) ) : ( ( (v1) >= (a0) ) ? ( (v0) > (v
                                 ;      96 
                                 ;      97 //static uint8_t u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) U8G_ALWAYS_INLINE;
                                 ;      98 static uint8_t U8G_ALWAYS_INLINE u8g_is_intersection_decision_tree(u8g_uint_t a0, u8g_uint_t a1, u8g_uint_t v0, u8g_uint_t v1) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",98
00000000 6080                    		SUB #08H, R0
00000002 8189                    		MOV.B R1, 07H[R0]
00000004 8182                    		MOV.B R2, 06H[R0]
00000006 810B                    		MOV.B R3, 05H[R0]
00000008 8104                    		MOV.B R4, 04H[R0]
                                 ;      99 {
                                 ;     100   /* surprisingly the macro leads to larger code */
                                 ;     101   /* return U8G_IS_INTERSECTION_MACRO(a0,a1,v0,v1); */
                                 ;     102   if ( v0 <= a1 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",102
0000000A B101                    		MOVU.B 04H[R0], R1
0000000C 450107                  		CMP 07H[R0].UB, R1
0000000F FCDBE8                  		SCGE.L R14
00000012 B109                    		MOVU.B 05H[R0], R1
00000014 450106                  		CMP 06H[R0].UB, R1
00000017 2Arr                    		BGT L16
00000019                         L11:	; bb6
                                 ;     103   {
                                 ;     104     if ( v1 >= a0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",104
00000019 5BEE                    		MOVU.B R14, R14
0000001B 610E                    		CMP #00H, R14
0000001D 10                   S  		BEQ L13
0000001E                         L12:	; bb7
                                 ;     105     {
                                 ;     106       return 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",106
0000001E 3C0201                  		MOV.B #01H, 02H[R0]
00000021 2Err                 B  		BRA L21
00000023                         L13:	; bb10
                                 ;     107     }
                                 ;     108     else
                                 ;     109     {
                                 ;     110       if ( v0 > v1 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",110
00000023 590E05                  		MOVU.B 05H[R0], R14
00000026 450E04                  		CMP 04H[R0].UB, R14
00000029 2Brr                    		BLE L15
0000002B                         L14:	; bb11
                                 ;     111       {
                                 ;     112 	return 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",112
0000002B 3C0201                  		MOV.B #01H, 02H[R0]
0000002E 2Err                 B  		BRA L21
00000030                         L15:	; bb13
                                 ;     113       }
                                 ;     114       else
                                 ;     115       {
                                 ;     116 	return 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",116
00000030 3C0200                  		MOV.B #00H, 02H[R0]
00000033 2Err                 B  		BRA L21
00000035                         L16:	; bb31
                                 ;     117       }
                                 ;     118     }
                                 ;     119   }
                                 ;     120   else
                                 ;     121   {
                                 ;     122     if ( v1 >= a0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",122
00000035 5BEE                    		MOVU.B R14, R14
00000037 610E                    		CMP #00H, R14
00000039 20rr                    		BEQ L20
0000003B                         L17:	; bb33
                                 ;     123     {
                                 ;     124       if ( v0 > v1 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",124
0000003B B109                    		MOVU.B 05H[R0], R1
0000003D 450104                  		CMP 04H[R0].UB, R1
00000040 2Brr                    		BLE L19
00000042                         L18:	; bb34
                                 ;     125       {
                                 ;     126 	return 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",126
00000042 3C0201                  		MOV.B #01H, 02H[R0]
00000045 08                   S  		BRA L21
00000046                         L19:	; bb36
                                 ;     127       }
                                 ;     128       else
                                 ;     129       {
                                 ;     130 	return 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",130
00000046 3C0200                  		MOV.B #00H, 02H[R0]
00000049 08                   S  		BRA L21
0000004A                         L20:	; bb46
                                 ;     131       }
                                 ;     132     }
                                 ;     133     else
                                 ;     134     {
                                 ;     135       return 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",135
0000004A 3C0200                  		MOV.B #00H, 02H[R0]
0000004D                         L21:	; bb64
0000004D C5000203                		MOV.B 02H[R0], 03H[R0]
                                 ;     136     }
                                 ;     137   }
                                 ;     138 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",138
00000051 B089                    		MOVU.B 03H[R0], R1
00000053 6702                    		RTSD #08H
00000055                         _u8g_IsBBXIntersection:
                                 		.STACK	_u8g_IsBBXIntersection=16
                                 ;     139 
                                 ;     140 
                                 ;     141 uint8_t u8g_IsBBXIntersection(u8g_t *u8g, u8g_uint_t x, u8g_uint_t y, u8g_uint_t w, u8g_uint_t h)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",141
00000055 60C0                    		SUB #0CH, R0
00000057 A081                    		MOV.L R1, 08H[R0]
00000059 818A                    		MOV.B R2, 07H[R0]
0000005B 8183                    		MOV.B R3, 06H[R0]
0000005D 810C                    		MOV.B R4, 05H[R0]
0000005F C5001004                		MOV.B 10H[R0], 04H[R0]
                                 ;     142 {
                                 ;     143   register u8g_uint_t tmp;
                                 ;     144   tmp = y;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",144
00000063 C5000602                		MOV.B 06H[R0], 02H[R0]
00000067                         L23:	; entry.split
                                 ;     145   tmp += h;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",145
00000067 B081                    		MOVU.B 02H[R0], R1
00000069 490104                  		ADD 04H[R0].UB, R1
0000006C 8081                    		MOV.B R1, 02H[R0]
0000006E                         L24:	; entry.split1
                                 ;     146   tmp--;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",146
0000006E B081                    		MOVU.B 02H[R0], R1
00000070 6011                    		SUB #01H, R1
00000072 8081                    		MOV.B R1, 02H[R0]
00000074                         L25:	; entry.split2
                                 ;     147   if ( u8g_is_intersection_decision_tree(u8g->current_page.y0, u8g->current_page.y1, y, tmp) == 0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",147
00000074 A881                    		MOV.L 08H[R0], R1
00000076 59124B                  		MOVU.B 4BH[R1], R2
00000079 591149                  		MOVU.B 49H[R1], R1
0000007C B084                    		MOVU.B 02H[R0], R4
0000007E B183                    		MOVU.B 06H[R0], R3
00000080 39rrrr               W  		BSR __$u8g_is_intersection_decision_tree
00000083 6101                    		CMP #00H, R1
00000085 18                   S  		BNE L27
00000086                         L26:	; bb17
                                 ;     148     return 0; 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",148
00000086 3C0100                  		MOV.B #00H, 01H[R0]
00000089 2Err                 B  		BRA L31
0000008B                         L27:	; bb33
                                 ;     149   
                                 ;     150   tmp = x;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",150
0000008B C5000702                		MOV.B 07H[R0], 02H[R0]
0000008F                         L28:	; bb33.split
                                 ;     151   tmp += w;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",151
0000008F B081                    		MOVU.B 02H[R0], R1
00000091 490105                  		ADD 05H[R0].UB, R1
00000094 8081                    		MOV.B R1, 02H[R0]
00000096                         L29:	; bb33.split3
                                 ;     152   tmp--;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",152
00000096 B081                    		MOVU.B 02H[R0], R1
00000098 6011                    		SUB #01H, R1
0000009A 8081                    		MOV.B R1, 02H[R0]
0000009C                         L30:	; bb33.split4
                                 ;     153   return u8g_is_intersection_decision_tree(u8g->current_page.x0, u8g->current_page.x1, x, tmp);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",153
0000009C A881                    		MOV.L 08H[R0], R1
0000009E 59124A                  		MOVU.B 4AH[R1], R2
000000A1 591148                  		MOVU.B 48H[R1], R1
000000A4 B084                    		MOVU.B 02H[R0], R4
000000A6 B18B                    		MOVU.B 07H[R0], R3
000000A8 39rrrr               W  		BSR __$u8g_is_intersection_decision_tree
000000AB 8009                    		MOV.B R1, 01H[R0]
000000AD                         L31:	; bb55
000000AD C5000103                		MOV.B 01H[R0], 03H[R0]
                                 ;     154 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_clip.c",154
000000B1 B089                    		MOVU.B 03H[R0], R1
000000B3 6703                    		RTSD #0CH
                                 ;     155 
                                 ;     156 
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00309   LINES

Section List

Attr         Size               Name
CODE     0000000181(000000B5H)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx305E\$ccrx\u8g_clip.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01_master\MT01_build\u8g_clip.lst
-output=C:\Workspace\e2studio\git\MT01_master\MT01_build\src\Display\u8g_clip.obj
