* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Mon Mar 20 17:12:07 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  20-Mar-2017 17:12:07
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_clibusbip.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx\src,C:/Workspace/e2studio/
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_clibusbip.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=1,MOBILE=0,FREE_RTOS_PP
                                 ;r_usb_clibusbip.c
                                 
                                 		.glb	_usb_ghstd_DeviceDrv
                                 		.glb	_usb_ghstd_DeviceNum
                                 		.glb	_usb_cstd_NrdyEnable
                                 		.glb	_usb_creg_set_nrdyenb
                                 		.glb	_usb_cstd_BerneEnable
                                 		.glb	_usb_creg_set_intenb
                                 		.glb	_usb_cstd_SwReset
                                 		.glb	_usb_creg_set_usbe
                                 		.glb	_usb_creg_clr_usbe
                                 		.glb	_usb_cstd_GetPid
                                 		.glb	_usb_creg_read_pipectr
                                 		.glb	_usb_cstd_DoSqtgl
                                 		.glb	_usb_creg_set_sqset
                                 		.glb	_usb_creg_set_sqclr
                                 		.glb	_usb_cstd_GetMaxPacketSize
                                 		.glb	_usb_creg_read_dcpmaxp
                                 		.glb	_usb_creg_write_pipesel
                                 		.glb	_usb_creg_read_pipemaxp
                                 		.glb	_usb_cstd_GetDevsel
                                 		.glb	_usb_cstd_GetPipeDir
                                 		.glb	_usb_creg_read_pipecfg
                                 		.glb	_usb_cstd_GetPipeType
                                 		.glb	_usb_cstd_is_host_mode
                                 		.glb	_usb_creg_read_syscfg
                                 		.glb	_usb_cstd_DoAclrm
                                 		.glb	_usb_creg_set_aclrm
                                 		.glb	_usb_creg_clr_aclrm
                                 		.glb	_usb_cstd_SetBuf
                                 		.glb	_usb_creg_set_pid
                                 		.glb	_usb_cstd_ClrStall
                                 		.glb	_usb_cstd_SetNak
                                 		.glb	_usb_creg_clr_pid
                                 		.glb	_usb_cstd_Epadr2Pipe
                                 		.glb	_usb_cstd_Pipe2Epadr
                                 		.glb	_usb_cstd_Pipe2Fport
                                 		.glb	_usb_cstd_GetDeviceAddress
                                 		.glb	_usb_cstd_ClearIntEnb
                                 		.glb	_usb_creg_write_intenb
                                 		.glb	_usb_hreg_write_intenb
                                 		.glb	_usb_cstd_ClearIntSts
                                 		.glb	_usb_creg_write_intsts
                                 		.glb	_usb_hreg_write_intsts
                                 		.glb	_usb_cstd_ClearDline
                                 		.glb	_usb_hreg_clr_drpd
                                 		.glb	_usb_cstd_PortSpeed
                                 		.glb	_usb_creg_read_dvstctr
                                 		.glb	_usb_cstd_HiSpeedEnable
                                 		.glb	_usb_cstd_SetHse
                                 		.glb	_usb_creg_clr_hse
                                 		.glb	_usb_creg_set_hse
                                 		.glb	_usb_cstd_DummyFunction
                                 		.glb	_usb_cstd_DummyTrn
                                 		.glb	_usb_cstd_set_usbip_mode
                                 		.glb	_usb_cstd_InitUsbMessage
                                 		.glb	_usb_cstd_set_usbip_mode_sub
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _usb_cstd_NrdyEnable:
                                 		.STACK	_usb_cstd_NrdyEnable=12
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_clibusbip.c
                                 ;      21 * Description  : USB IP Host and Peripheral low level library
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Added RX71M.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 /******************************************************************************
                                 ;      30 Includes   <System Includes> , "Project Includes"
                                 ;      31 ******************************************************************************/
                                 ;      32 #include "r_usb_basic_if.h"
                                 ;      33 #include "r_usb_reg_access.h"
                                 ;      34 
                                 ;      35 
                                 ;      36 /******************************************************************************
                                 ;      37 Constant macro definitions
                                 ;      38 ******************************************************************************/
                                 ;      39 
                                 ;      40 
                                 ;      41 /******************************************************************************
                                 ;      42 External variables and functions
                                 ;      43 ******************************************************************************/
                                 ;      44 
                                 ;      45 
                                 ;      46 /******************************************************************************
                                 ;      47 Private global variables and functions
                                 ;      48 ******************************************************************************/
                                 ;      49 
                                 ;      50 /******************************************************************************
                                 ;      51 Renesas Abstracted Driver API functions
                                 ;      52 ******************************************************************************/
                                 ;      53 
                                 ;      54 /******************************************************************************
                                 ;      55 Function Name   : usb_cstd_NrdyEnable
                                 ;      56 Description     : Enable NRDY interrupt of the specified pipe.
                                 ;      57 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;      58                 : uint16_t pipe  : Pipe number.
                                 ;      59 Return value    : none
                                 ;      60 ******************************************************************************/
                                 ;      61 void usb_cstd_NrdyEnable(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",61
00000000 6080                    		SUB #08H, R0
00000002 A009                    		MOV.L R1, 04H[R0]
00000004 900A                    		MOV.W R2, 02H[R0]
                                 ;      62 {
                                 ;      63     /* Check current function */
                                 ;      64     if( usb_cstd_is_host_mode(ptr) == USB_NO )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",64
00000006 A809                    		MOV.L 04H[R0], R1
00000008 39rrrr               W  		BSR _usb_cstd_is_host_mode
0000000B 6101                    		CMP #00H, R1
0000000D 20rr                    		BEQ L12
0000000F                         L11:	; bb4
                                 ;      65     {
                                 ;      66         /*  At the peripheral operation, interrupt is disabled, */
                                 ;      67         /*  because handler becomes busy. */
                                 ;      68     }
                                 ;      69     else
                                 ;      70     {
                                 ;      71         /* Enable NRDY */
                                 ;      72         usb_creg_set_nrdyenb( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",72
0000000F B80A                    		MOVU.W 02H[R0], R2
00000011 A809                    		MOV.L 04H[R0], R1
00000013 05rrrrrr             A  		BSR _usb_creg_set_nrdyenb
00000017 6702                    		RTSD #08H
00000019                         L12:	; return
                                 ;      73     }
                                 ;      74 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",74
00000019 6702                    		RTSD #08H
0000001B                         _usb_cstd_BerneEnable:
                                 		.STACK	_usb_cstd_BerneEnable=8
                                 ;      75 /******************************************************************************
                                 ;      76 End of function usb_cstd_NrdyEnable
                                 ;      77 ******************************************************************************/
                                 ;      78 
                                 ;      79 /******************************************************************************
                                 ;      80 Function Name   : usb_cstd_BerneEnable
                                 ;      81 Description     : Enable BRDY/NRDY/BEMP interrupt.
                                 ;      82 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;      83 Return value    : none
                                 ;      84 ******************************************************************************/
                                 ;      85 void usb_cstd_BerneEnable(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",85
0000001B 6040                    		SUB #04H, R0
0000001D E301                    		MOV.L R1, [R0]
0000001F FB2A0007                		MOV.L #00000700H, R2
                                 ;      86 {
                                 ;      87     /* Enable BEMP, NRDY, BRDY */
                                 ;      88     usb_creg_set_intenb( ptr, (USB_BEMPE|USB_NRDYE|USB_BRDYE) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",88
00000023 05rrrrrr             A  		BSR _usb_creg_set_intenb
00000027 6701                    		RTSD #04H
00000029                         _usb_cstd_SwReset:
                                 		.STACK	_usb_cstd_SwReset=8
                                 ;      89 }
                                 ;      90 /******************************************************************************
                                 ;      91 End of function usb_cstd_BerneEnable
                                 ;      92 ******************************************************************************/
                                 ;      93 
                                 ;      94 /******************************************************************************
                                 ;      95 Function Name   : usb_cstd_SwReset
                                 ;      96 Description     : Request USB IP software reset
                                 ;      97 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;      98 Return value    : none
                                 ;      99 ******************************************************************************/
                                 ;     100 void usb_cstd_SwReset(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",100
00000029 6040                    		SUB #04H, R0
0000002B E301                    		MOV.L R1, [R0]
                                 ;     101 {
                                 ;     102     /* USB Enable */
                                 ;     103     usb_creg_set_usbe( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",103
0000002D 05rrrrrr             A  		BSR _usb_creg_set_usbe
00000031                         L15:	; entry.split
                                 ;     104     /* USB Reset */
                                 ;     105     usb_creg_clr_usbe( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",105
00000031 EC01                    		MOV.L [R0], R1
00000033 05rrrrrr             A  		BSR _usb_creg_clr_usbe
00000037                         L16:	; entry.split1
                                 ;     106     /* USB Enable */
                                 ;     107     usb_creg_set_usbe( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",107
00000037 EC01                    		MOV.L [R0], R1
00000039 05rrrrrr             A  		BSR _usb_creg_set_usbe
0000003D 6701                    		RTSD #04H
0000003F                         _usb_cstd_GetPid:
                                 		.STACK	_usb_cstd_GetPid=16
                                 ;     108 }
                                 ;     109 /******************************************************************************
                                 ;     110 End of function usb_cstd_SwReset
                                 ;     111 ******************************************************************************/
                                 ;     112 
                                 ;     113 /******************************************************************************
                                 ;     114 Function Name   : usb_cstd_GetPid
                                 ;     115 Description     : Fetch specified pipe's PID.
                                 ;     116 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     117                 : uint16_t pipe  : Pipe number.
                                 ;     118 Return value    : uint16_t PID-bit status
                                 ;     119 ******************************************************************************/
                                 ;     120 uint16_t usb_cstd_GetPid(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",120
0000003F 60C0                    		SUB #0CH, R0
00000041 A081                    		MOV.L R1, 08H[R0]
00000043 908A                    		MOV.W R2, 06H[R0]
                                 ;     121 {
                                 ;     122     uint16_t    buf;
                                 ;     123 
                                 ;     124     /* PIPE control reg read */
                                 ;     125     buf = usb_creg_read_pipectr( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",125
00000045 B88A                    		MOVU.W 06H[R0], R2
00000047 A881                    		MOV.L 08H[R0], R1
00000049 05rrrrrr             A  		BSR _usb_creg_read_pipectr
0000004D 9009                    		MOV.W R1, 02H[R0]
0000004F                         L18:	; entry.split
                                 ;     126     return (uint16_t)(buf & USB_PID);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",126
0000004F B809                    		MOVU.W 02H[R0], R1
00000051 6431                    		AND #03H, R1
00000053 9081                    		MOV.W R1, 04H[R0]
00000055 9881                    		MOV.W 04H[R0], R1
00000057                         L19:	; entry.split1
                                 ;     127 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",127
00000057 5F11                    		MOVU.W R1, R1
00000059 6703                    		RTSD #0CH
0000005B                         _usb_cstd_DoSqtgl:
                                 		.STACK	_usb_cstd_DoSqtgl=12
                                 ;     128 /******************************************************************************
                                 ;     129 End of function usb_cstd_GetPid
                                 ;     130 ******************************************************************************/
                                 ;     131 
                                 ;     132 /******************************************************************************
                                 ;     133 Function Name   : usb_cstd_DoSqtgl
                                 ;     134 Description     : Toggle setting of the toggle-bit for the specified pipe by 
                                 ;     135                 : argument.
                                 ;     136 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     137                 : uint16_t pipe     : Pipe number.
                                 ;     138                 : uint16_t toggle   : Current toggle status.
                                 ;     139 Return value    : none
                                 ;     140 ******************************************************************************/
                                 ;     141 void usb_cstd_DoSqtgl(USB_UTR_t *ptr, uint16_t pipe, uint16_t toggle)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",141
0000005B 6080                    		SUB #08H, R0
0000005D A009                    		MOV.L R1, 04H[R0]
0000005F 900A                    		MOV.W R2, 02H[R0]
00000061 D303                    		MOV.W R3, [R0]
                                 ;     142 {
                                 ;     143     /* Check toggle */
                                 ;     144     if( (toggle & USB_SQMON) == USB_SQMON )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",144
00000063 5C01                    		MOVU.W [R0], R1
00000065 752140                  		AND #40H, R1
00000068 755140                  		CMP #40H, R1
0000006B 980A                    		MOV.W 02H[R0], R2
0000006D A809                    		MOV.L 04H[R0], R1
0000006F 18                   S  		BNE L22
00000070                         L21:	; bb4
                                 ;     145     {
                                 ;     146         /* Do pipe SQSET */
                                 ;     147         usb_creg_set_sqset(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",147
00000070 5F22                    		MOVU.W R2, R2
00000072 05rrrrrr             A  		BSR _usb_creg_set_sqset
00000076 6702                    		RTSD #08H
00000078                         L22:	; bb6
                                 ;     148     }
                                 ;     149     else
                                 ;     150     {
                                 ;     151         /* Do pipe SQCLR */
                                 ;     152         usb_creg_set_sqclr(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",152
00000078 5F22                    		MOVU.W R2, R2
0000007A 05rrrrrr             A  		BSR _usb_creg_set_sqclr
0000007E 6702                    		RTSD #08H
00000080                         _usb_cstd_GetMaxPacketSize:
                                 		.STACK	_usb_cstd_GetMaxPacketSize=16
                                 ;     153     }
                                 ;     154 }
                                 ;     155 /******************************************************************************
                                 ;     156 End of function usb_cstd_DoSqtgl
                                 ;     157 ******************************************************************************/
                                 ;     158 
                                 ;     159 /******************************************************************************
                                 ;     160 Function Name   : usb_cstd_GetMaxPacketSize
                                 ;     161 Description     : Fetch MaxPacketSize of the specified pipe.
                                 ;     162 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     163                 : uint16_t pipe  : Pipe number.
                                 ;     164 Return value    : uint16_t MaxPacketSize
                                 ;     165 ******************************************************************************/
                                 ;     166 uint16_t usb_cstd_GetMaxPacketSize(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",166
00000080 60C0                    		SUB #0CH, R0
00000082 A081                    		MOV.L R1, 08H[R0]
00000084 908A                    		MOV.W R2, 06H[R0]
                                 ;     167 {
                                 ;     168     uint16_t    size, buffer;
                                 ;     169 
                                 ;     170     if( pipe == USB_PIPE0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",170
00000086 6102                    		CMP #00H, R2
00000088 A881                    		MOV.L 08H[R0], R1
0000008A 18                   S  		BNE L25
0000008B                         L24:	; bb5
                                 ;     171     {
                                 ;     172         buffer = usb_creg_read_dcpmaxp( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",172
0000008B 05rrrrrr             A  		BSR _usb_creg_read_dcpmaxp
0000008F 9009                    		MOV.W R1, 02H[R0]
00000091 2Err                 B  		BRA L27
00000093                         L25:	; bb8
                                 ;     173     }
                                 ;     174     else
                                 ;     175     {
                                 ;     176         /* Pipe select */
                                 ;     177         usb_creg_write_pipesel( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",177
00000093 B88A                    		MOVU.W 06H[R0], R2
00000095 05rrrrrr             A  		BSR _usb_creg_write_pipesel
00000099                         L26:	; bb8.split
                                 ;     178         buffer = usb_creg_read_pipemaxp( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",178
00000099 A881                    		MOV.L 08H[R0], R1
0000009B 05rrrrrr             A  		BSR _usb_creg_read_pipemaxp
0000009F 9009                    		MOV.W R1, 02H[R0]
000000A1                         L27:	; bb17
                                 ;     179     }
                                 ;     180     /* Max Packet Size */
                                 ;     181     size = (uint16_t)(buffer & USB_MXPS);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",181
000000A1 B809                    		MOVU.W 02H[R0], R1
000000A3 7621FF07                		AND #07FFH, R1
000000A7 D301                    		MOV.W R1, [R0]
000000A9                         L28:	; bb17.split
                                 ;     182 
                                 ;     183     return size;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",183
000000A9 D40002                  		MOV.W [R0], 04H[R0]
000000AC 9881                    		MOV.W 04H[R0], R1
000000AE                         L29:	; bb17.split1
                                 ;     184 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",184
000000AE 5F11                    		MOVU.W R1, R1
000000B0 6703                    		RTSD #0CH
000000B2                         _usb_cstd_GetDevsel:
                                 		.STACK	_usb_cstd_GetDevsel=16
                                 ;     185 /******************************************************************************
                                 ;     186 End of function usb_cstd_GetMaxPacketSize
                                 ;     187 ******************************************************************************/
                                 ;     188 
                                 ;     189 /******************************************************************************
                                 ;     190 Function Name   : usb_cstd_GetDevsel
                                 ;     191 Description     : Get device address from pipe number
                                 ;     192 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     193                 : uint16_t pipe  : Pipe number.
                                 ;     194 Return value    : uint16_t DEVSEL-bit status
                                 ;     195 ******************************************************************************/
                                 ;     196 uint16_t usb_cstd_GetDevsel(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",196
000000B2 60C0                    		SUB #0CH, R0
000000B4 A081                    		MOV.L R1, 08H[R0]
000000B6 908A                    		MOV.W R2, 06H[R0]
                                 ;     197 {
                                 ;     198     uint16_t    devsel, buffer;
                                 ;     199 
                                 ;     200     /* Check current function */
                                 ;     201     if( usb_cstd_is_host_mode(ptr) == USB_NO )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",201
000000B8 A881                    		MOV.L 08H[R0], R1
000000BA 39rrrr               W  		BSR _usb_cstd_is_host_mode
000000BD 6101                    		CMP #00H, R1
000000BF 20rr                    		BEQ L36
000000C1                         L31:	; bb7
                                 ;     202     {
                                 ;     203 #if USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP
                                 ;     204         /* Peripheral Function */
                                 ;     205         /* USB address */
                                 ;     206         buffer = usb_creg_read_usbaddr( ptr );
                                 ;     207         /* Device address */
                                 ;     208         devsel = (uint16_t)(buffer & USB_USBADDR_MASK);
                                 ;     209 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP */
                                 ;     210     }
                                 ;     211     else
                                 ;     212     {
                                 ;     213 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     214         if( pipe == USB_PIPE0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",214
000000C1 B889                    		MOVU.W 06H[R0], R1
000000C3 6101                    		CMP #00H, R1
000000C5 A881                    		MOV.L 08H[R0], R1
000000C7 18                   S  		BNE L33
000000C8                         L32:	; bb8
                                 ;     215         {
                                 ;     216             buffer = usb_creg_read_dcpmaxp( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",216
000000C8 05rrrrrr             A  		BSR _usb_creg_read_dcpmaxp
000000CC 9009                    		MOV.W R1, 02H[R0]
000000CE 2Err                 B  		BRA L35
000000D0                         L33:	; bb11
                                 ;     217         }
                                 ;     218         else
                                 ;     219         {
                                 ;     220             /* Pipe select */
                                 ;     221             usb_creg_write_pipesel( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",221
000000D0 B88A                    		MOVU.W 06H[R0], R2
000000D2 05rrrrrr             A  		BSR _usb_creg_write_pipesel
000000D6                         L34:	; bb11.split
                                 ;     222             buffer = usb_creg_read_pipemaxp( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",222
000000D6 A881                    		MOV.L 08H[R0], R1
000000D8 05rrrrrr             A  		BSR _usb_creg_read_pipemaxp
000000DC 9009                    		MOV.W R1, 02H[R0]
000000DE                         L35:	; bb20
                                 ;     223         }
                                 ;     224         /* Device address */
                                 ;     225         devsel = (uint16_t)(buffer & USB_DEVSEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",225
000000DE B809                    		MOVU.W 02H[R0], R1
000000E0 772100F000              		AND #0F000H, R1
000000E5 D301                    		MOV.W R1, [R0]
000000E7                         L36:	; bb31
                                 ;     226 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     227     }
                                 ;     228 
                                 ;     229     return devsel;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",229
000000E7 D40002                  		MOV.W [R0], 04H[R0]
000000EA 9881                    		MOV.W 04H[R0], R1
000000EC                         L37:	; bb31.split
                                 ;     230 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",230
000000EC 5F11                    		MOVU.W R1, R1
000000EE 6703                    		RTSD #0CH
000000F0                         _usb_cstd_GetPipeDir:
                                 		.STACK	_usb_cstd_GetPipeDir=16
                                 ;     231 /******************************************************************************
                                 ;     232 End of function usb_cstd_GetDevsel
                                 ;     233 ******************************************************************************/
                                 ;     234 
                                 ;     235 /******************************************************************************
                                 ;     236 Function Name   : usb_cstd_GetPipeDir
                                 ;     237 Description     : Get PIPE DIR
                                 ;     238 Arguments       : uint16_t pipe  : Pipe number.
                                 ;     239 Return value    : uint16_t Pipe direction.
                                 ;     240 ******************************************************************************/
                                 ;     241 uint16_t usb_cstd_GetPipeDir(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",241
000000F0 60C0                    		SUB #0CH, R0
000000F2 A081                    		MOV.L R1, 08H[R0]
000000F4 908A                    		MOV.W R2, 06H[R0]
                                 ;     242 {
                                 ;     243     uint16_t        buffer;
                                 ;     244 
                                 ;     245     /* Pipe select */
                                 ;     246     usb_creg_write_pipesel( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",246
000000F6 B88A                    		MOVU.W 06H[R0], R2
000000F8 A881                    		MOV.L 08H[R0], R1
000000FA 05rrrrrr             A  		BSR _usb_creg_write_pipesel
000000FE                         L39:	; entry.split
                                 ;     247     /* Read Pipe direction */
                                 ;     248     buffer = usb_creg_read_pipecfg( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",248
000000FE A881                    		MOV.L 08H[R0], R1
00000100 05rrrrrr             A  		BSR _usb_creg_read_pipecfg
00000104 9009                    		MOV.W R1, 02H[R0]
00000106                         L40:	; entry.split1
                                 ;     249     return (uint16_t)(buffer & USB_DIRFIELD);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",249
00000106 B809                    		MOVU.W 02H[R0], R1
00000108 752110                  		AND #10H, R1
0000010B 9081                    		MOV.W R1, 04H[R0]
0000010D 9881                    		MOV.W 04H[R0], R1
0000010F                         L41:	; entry.split2
                                 ;     250 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",250
0000010F 5F11                    		MOVU.W R1, R1
00000111 6703                    		RTSD #0CH
00000113                         _usb_cstd_GetPipeType:
                                 		.STACK	_usb_cstd_GetPipeType=16
                                 ;     251 /******************************************************************************
                                 ;     252 End of function usb_cstd_GetPipeDir
                                 ;     253 ******************************************************************************/
                                 ;     254 
                                 ;     255 
                                 ;     256 /******************************************************************************
                                 ;     257 Function Name   : usb_cstd_GetPipeType
                                 ;     258 Description     : Fetch and return PIPE TYPE.
                                 ;     259 Arguments       : uint16_t pipe            : Pipe number.
                                 ;     260 Return value    : uint16_t Pipe type
                                 ;     261 ******************************************************************************/
                                 ;     262 uint16_t usb_cstd_GetPipeType(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",262
00000113 60C0                    		SUB #0CH, R0
00000115 A081                    		MOV.L R1, 08H[R0]
00000117 908A                    		MOV.W R2, 06H[R0]
                                 ;     263 {
                                 ;     264     uint16_t        buffer;
                                 ;     265 
                                 ;     266     /* Pipe select */
                                 ;     267     usb_creg_write_pipesel( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",267
00000119 B88A                    		MOVU.W 06H[R0], R2
0000011B A881                    		MOV.L 08H[R0], R1
0000011D 05rrrrrr             A  		BSR _usb_creg_write_pipesel
00000121                         L43:	; entry.split
                                 ;     268     /* Read Pipe direction */
                                 ;     269     buffer = usb_creg_read_pipecfg( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",269
00000121 A881                    		MOV.L 08H[R0], R1
00000123 05rrrrrr             A  		BSR _usb_creg_read_pipecfg
00000127 9009                    		MOV.W R1, 02H[R0]
00000129                         L44:	; entry.split1
                                 ;     270     return (uint16_t)(buffer & USB_TYPFIELD);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",270
00000129 B809                    		MOVU.W 02H[R0], R1
0000012B 772100C000              		AND #0C000H, R1
00000130 9081                    		MOV.W R1, 04H[R0]
00000132 9881                    		MOV.W 04H[R0], R1
00000134                         L45:	; entry.split2
                                 ;     271 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",271
00000134 5F11                    		MOVU.W R1, R1
00000136 6703                    		RTSD #0CH
00000138                         _usb_cstd_is_host_mode:
                                 		.STACK	_usb_cstd_is_host_mode=16
                                 ;     272 /******************************************************************************
                                 ;     273 End of function usb_cstd_GetPipeType
                                 ;     274 ******************************************************************************/
                                 ;     275 
                                 ;     276 /******************************************************************************
                                 ;     277 Function Name   : usb_cstd_is_host_mode
                                 ;     278 Description     : Check current function
                                 ;     279 Arguments       : none
                                 ;     280 Return value    : uint16_t    : YES = Host
                                 ;     281                 :             : NO = Peripheral
                                 ;     282 ******************************************************************************/
                                 ;     283 uint16_t usb_cstd_is_host_mode(USB_UTR_t *ptr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",283
00000138 60C0                    		SUB #0CH, R0
0000013A A081                    		MOV.L R1, 08H[R0]
0000013C 6602                    		MOV.L #00000000H, R2
                                 ;     284 {
                                 ;     285     uint16_t    buf;
                                 ;     286     buf = usb_creg_read_syscfg( ptr, USB_PORT0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",286
0000013E 05rrrrrr             A  		BSR _usb_creg_read_syscfg
00000142 9081                    		MOV.W R1, 04H[R0]
00000144                         L47:	; entry.split
                                 ;     287     if( (buf & USB_DCFM) == USB_DCFM )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",287
00000144 B881                    		MOVU.W 04H[R0], R1
00000146 752140                  		AND #40H, R1
00000149 755140                  		CMP #40H, R1
0000014C 18                   S  		BNE L49
0000014D                         L48:	; bb5
                                 ;     288     {
                                 ;     289         /* Host Function mode */
                                 ;     290         return USB_YES;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",290
0000014D 3D0101                  		MOV.W #0001H, 02H[R0]
00000150 08                   S  		BRA L50
00000151                         L49:	; bb7
                                 ;     291     }
                                 ;     292     else
                                 ;     293     {
                                 ;     294         /* Peripheral Function mode */
                                 ;     295         return USB_NO;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",295
00000151 3D0100                  		MOV.W #0000H, 02H[R0]
00000154                         L50:	; bb15
00000154 D5000103                		MOV.W 02H[R0], 06H[R0]
                                 ;     296     }
                                 ;     297 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",297
00000158 B889                    		MOVU.W 06H[R0], R1
0000015A 6703                    		RTSD #0CH
0000015C                         _usb_cstd_DoAclrm:
                                 		.STACK	_usb_cstd_DoAclrm=12
                                 ;     298 /******************************************************************************
                                 ;     299 End of function usb_cstd_is_host_mode
                                 ;     300 ******************************************************************************/
                                 ;     301 
                                 ;     302 /******************************************************************************
                                 ;     303 Function Name   : usb_cstd_DoAclrm
                                 ;     304 Description     : Set the ACLRM-bit (Auto Buffer Clear Mode) of the specified 
                                 ;     305                 : pipe.
                                 ;     306 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     307                 : uint16_t pipe  : Pipe number.
                                 ;     308 Return value    : none
                                 ;     309 ******************************************************************************/
                                 ;     310 void usb_cstd_DoAclrm(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",310
0000015C 6080                    		SUB #08H, R0
0000015E A009                    		MOV.L R1, 04H[R0]
00000160 900A                    		MOV.W R2, 02H[R0]
                                 ;     311 {
                                 ;     312     /* Control ACLRM */
                                 ;     313     usb_creg_set_aclrm( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",313
00000162 B80A                    		MOVU.W 02H[R0], R2
00000164 A809                    		MOV.L 04H[R0], R1
00000166 05rrrrrr             A  		BSR _usb_creg_set_aclrm
0000016A                         L52:	; entry.split
                                 ;     314     usb_creg_clr_aclrm( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",314
0000016A B80A                    		MOVU.W 02H[R0], R2
0000016C A809                    		MOV.L 04H[R0], R1
0000016E 05rrrrrr             A  		BSR _usb_creg_clr_aclrm
00000172 6702                    		RTSD #08H
00000174                         _usb_cstd_SetBuf:
                                 		.STACK	_usb_cstd_SetBuf=12
                                 ;     315 }
                                 ;     316 /******************************************************************************
                                 ;     317 End of function usb_cstd_DoAclrm
                                 ;     318 ******************************************************************************/
                                 ;     319 
                                 ;     320 /******************************************************************************
                                 ;     321 Function Name   : usb_cstd_SetBuf
                                 ;     322 Description     : Set PID (packet ID) of the specified pipe to BUF.
                                 ;     323 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     324                 : uint16_t pipe  : Pipe number.
                                 ;     325 Return value    : none
                                 ;     326 ******************************************************************************/
                                 ;     327 void usb_cstd_SetBuf(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",327
00000174 6080                    		SUB #08H, R0
00000176 A009                    		MOV.L R1, 04H[R0]
00000178 900A                    		MOV.W R2, 02H[R0]
                                 ;     328 {
                                 ;     329     /* PIPE control reg set */
                                 ;     330     usb_creg_set_pid( ptr, pipe, USB_PID_BUF );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",330
0000017A B80A                    		MOVU.W 02H[R0], R2
0000017C A809                    		MOV.L 04H[R0], R1
0000017E 6613                    		MOV.L #00000001H, R3
00000180 05rrrrrr             A  		BSR _usb_creg_set_pid
00000184 6702                    		RTSD #08H
00000186                         _usb_cstd_ClrStall:
                                 		.STACK	_usb_cstd_ClrStall=12
                                 ;     331 }
                                 ;     332 /******************************************************************************
                                 ;     333 End of function usb_cstd_SetBuf
                                 ;     334 ******************************************************************************/
                                 ;     335 
                                 ;     336 /******************************************************************************
                                 ;     337 Function Name   : usb_cstd_ClrStall
                                 ;     338 Description     : Set up to NAK the specified pipe, and clear the STALL-bit set
                                 ;     339                 : to the PID of the specified pipe.
                                 ;     340 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     341                 : uint16_t pipe  : Pipe number.
                                 ;     342 Return value    : none
                                 ;     343 Note            : PID is set to NAK.
                                 ;     344 ******************************************************************************/
                                 ;     345 void usb_cstd_ClrStall(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",345
00000186 6080                    		SUB #08H, R0
00000188 A009                    		MOV.L R1, 04H[R0]
0000018A 900A                    		MOV.W R2, 02H[R0]
                                 ;     346 {
                                 ;     347     /* Set NAK */
                                 ;     348     usb_cstd_SetNak(ptr, pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",348
0000018C B80A                    		MOVU.W 02H[R0], R2
0000018E A809                    		MOV.L 04H[R0], R1
00000190 05rrrrrr             A  		BSR _usb_cstd_SetNak
00000194                         L55:	; entry.split
                                 ;     349     /* Clear STALL */
                                 ;     350     usb_creg_clr_pid( ptr, pipe, USB_PID_STALL );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",350
00000194 B80A                    		MOVU.W 02H[R0], R2
00000196 A809                    		MOV.L 04H[R0], R1
00000198 6623                    		MOV.L #00000002H, R3
0000019A 05rrrrrr             A  		BSR _usb_creg_clr_pid
0000019E 6702                    		RTSD #08H
000001A0                         _usb_cstd_Epadr2Pipe:
                                 		.STACK	_usb_cstd_Epadr2Pipe=36
                                 ;     351 }
                                 ;     352 /******************************************************************************
                                 ;     353 End of function usb_cstd_ClrStall
                                 ;     354 ******************************************************************************/
                                 ;     355 
                                 ;     356 /******************************************************************************
                                 ;     357 Function Name   : usb_cstd_Epadr2Pipe
                                 ;     358 Description     : Get the associated pipe no. of the specified endpoint.
                                 ;     359 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     360                 : uint16_t dir_ep : Direction + endpoint number.
                                 ;     361 Return value    : uint16_t        : OK    : Pipe number.
                                 ;     362                 :                 : ERROR : Error.
                                 ;     363 ******************************************************************************/
                                 ;     364 uint16_t usb_cstd_Epadr2Pipe(USB_UTR_t *ptr, uint16_t dir_ep)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",364
000001A0 7100E0                  		ADD #0FFFFFFE0H, R0
000001A3 A189                    		MOV.L R1, 1CH[R0]
000001A5 930A                    		MOV.W R2, 1AH[R0]
                                 ;     365 {
                                 ;     366     uint16_t        i, direp, tmp, *table;
                                 ;     367 
                                 ;     368     /* Check current function */
                                 ;     369     if( usb_cstd_is_host_mode(ptr) == USB_NO )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",369
000001A7 A989                    		MOV.L 1CH[R0], R1
000001A9 39rrrr               W  		BSR _usb_cstd_is_host_mode
000001AC 6101                    		CMP #00H, R1
000001AE 3Arrrr               W  		BEQ L74
000001B1                         L57:	; bb11
                                 ;     370     {
                                 ;     371 #if USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP
                                 ;     372         uint16_t conf;
                                 ;     373 
                                 ;     374         conf = usb_gpstd_ConfigNum;
                                 ;     375         if( conf < (uint16_t)1 )
                                 ;     376         {
                                 ;     377             /* Address state */
                                 ;     378             conf = (uint16_t)1;
                                 ;     379         }
                                 ;     380 
                                 ;     381         /* Peripheral */
                                 ;     382         /* Get PIPE Number from Endpoint address */
                                 ;     383         table = (uint16_t*)((uint16_t**)(usb_gpstd_Driver.pipetbl[conf - 1]));
                                 ;     384         direp = (uint16_t)(((dir_ep & 0x80) >> 3) | (dir_ep & 0x0F));
                                 ;     385         /* EP table loop */
                                 ;     386         for( i = 0; table[i] != USB_PDTBLEND; i += USB_EPL )
                                 ;     387         {
                                 ;     388             tmp = (uint16_t)(table[i + 1] & (USB_DIRFIELD | USB_EPNUMFIELD));
                                 ;     389             /* EP table endpoint dir check */
                                 ;     390             if( direp == tmp )
                                 ;     391             {
                                 ;     392                 return table[i];
                                 ;     393             }
                                 ;     394         }
                                 ;     395 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP */
                                 ;     396     }
                                 ;     397     else
                                 ;     398     {
                                 ;     399 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     400         uint16_t        md;
                                 ;     401         USB_HCDREG_t    *driver;
                                 ;     402 
                                 ;     403         /* Host */
                                 ;     404         /* Get PIPE Number from Endpoint address */
                                 ;     405         for( md = 0; md < usb_ghstd_DeviceNum[ptr->ip]; md++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",405
000001B1 3D0900                  		MOV.W #0000H, 12H[R0]
000001B4 38rrrr               W  		BRA L73
000001B7                         L58:	; bb13
                                 ;     406         {
                                 ;     407             if( (usb_ghstd_DeviceDrv[ptr->ip][md].ifclass != USB_IFCLS_NOT) &&
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",407
000001B7 A989                    		MOV.L 1CH[R0], R1
000001B9 B991                    		MOVU.W 0CH[R1], R1
000001BB 7611B801                		MUL #01B8H, R1
000001BF FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
000001C5 4B12                    		ADD R1, R2
000001C7 BA09                    		MOVU.W 12H[R0], R1
000001C9 751128                  		MUL #28H, R1
000001CC 4B12                    		ADD R1, R2
000001CE B8A9                    		MOVU.W 06H[R2], R1
000001D0 6101                    		CMP #00H, R1
000001D2 21rr                    		BNE L68
000001D4 38rrrr               W  		BRA L70
000001D7                         L59:	; bb14
                                 ;     408                 (usb_ghstd_DeviceDrv[ptr->ip][md].devaddr != USB_NODEVICE) )
                                 ;     409             {
                                 ;     410                 driver = (USB_HCDREG_t*)&usb_ghstd_DeviceDrv[ptr->ip][md];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",410
000001D7 A989                    		MOV.L 1CH[R0], R1
000001D9 B991                    		MOVU.W 0CH[R1], R1
000001DB 7611B801                		MUL #01B8H, R1
000001DF FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
000001E5 4B12                    		ADD R1, R2
000001E7 BA09                    		MOVU.W 12H[R0], R1
000001E9 751128                  		MUL #28H, R1
000001EC 4B12                    		ADD R1, R2
000001EE A10A                    		MOV.L R2, 14H[R0]
000001F0                         L60:	; bb14.split
                                 ;     411                 table = (uint16_t*)(driver->pipetbl);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",411
000001F0 A909                    		MOV.L 14H[R0], R1
000001F2 E5100303                		MOV.L 0CH[R1], 0CH[R0]
000001F6                         L61:	; bb14.split1
                                 ;     412                 direp = (uint16_t)((((dir_ep & 0x80) ^ 0x80) >> 3) | (dir_ep & 0x0F));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",412
000001F6 BB09                    		MOVU.W 1AH[R0], R1
000001F8 EF1E                    		MOV.L R1, R14
000001FA 64FE                    		AND #0FH, R14
000001FC 76218000                		AND #80H, R1
00000200 FDE7F1                  		BNOT #07H, R1
00000203 6831                    		SHLR #03H, R1
00000205 57E1                    		OR R14, R1
00000207 9101                    		MOV.W R1, 08H[R0]
00000209                         L62:	; bb14.split2
                                 ;     413                 /* EP table loop */
                                 ;     414                 for( i = 0; table[i] != USB_PDTBLEND; i += USB_EPL )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",414
00000209 3D0300                  		MOV.W #0000H, 06H[R0]
0000020C 2Err                 B  		BRA L67
0000020E                         L63:	; bb37
                                 ;     415                 {
                                 ;     416                     tmp = (uint16_t)(table[i + 1] & (USB_DIRFIELD | USB_EPNUMFIELD));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",416
0000020E B889                    		MOVU.W 06H[R0], R1
00000210 6C11                    		SHLL #01H, R1
00000212 06890103                		ADD 0CH[R0].L, R1
00000216 B819                    		MOVU.W 02H[R1], R1
00000218 75211F                  		AND #1FH, R1
0000021B 9109                    		MOV.W R1, 0AH[R0]
0000021D                         L64:	; bb37.split
                                 ;     417                     /* EP table endpoint dir check */
                                 ;     418                     if( direp == tmp )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",418
0000021D B901                    		MOVU.W 08H[R0], R1
0000021F 06C50105                		CMP 0AH[R0].UW, R1
00000223 21rr                    		BNE L66
00000225                         L65:	; bb48
                                 ;     419                     {
                                 ;     420                         return table[i];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",420
00000225 A889                    		MOV.L 0CH[R0], R1
00000227 B88A                    		MOVU.W 06H[R0], R2
00000229 FE5211                  		MOV.W [R2,R1], R1
0000022C 9081                    		MOV.W R1, 04H[R0]
0000022E 2Err                 B  		BRA L75
00000230                         L66:	; bb61
00000230 B889                    		MOVU.W 06H[R0], R1
00000232 6261                    		ADD #06H, R1
00000234 9089                    		MOV.W R1, 06H[R0]
00000236                         L67:	; bb66
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",414
00000236 A889                    		MOV.L 0CH[R0], R1
00000238 B88A                    		MOVU.W 06H[R0], R2
0000023A FED21E                  		MOVU.W [R2,R1], R14
0000023D 770EFFFF00              		CMP #0FFFFH, R14
00000242 21rr                    		BNE L63
00000244 2Err                 B  		BRA L72
00000246                         L68:	; bb91
00000246 A989                    		MOV.L 1CH[R0], R1
00000248 B991                    		MOVU.W 0CH[R1], R1
0000024A 7611B801                		MUL #01B8H, R1
0000024E FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
00000254 4B12                    		ADD R1, R2
00000256 BA09                    		MOVU.W 12H[R0], R1
00000258 751128                  		MUL #28H, R1
0000025B 4B12                    		ADD R1, R2
0000025D B829                    		MOVU.W 02H[R2], R1
0000025F 770100F000              		CMP #0F000H, R1
00000264 10                   S  		BEQ L70
00000265                         L69:	; bb106
00000265 F80601                  		MOV.L #00000001H, [R0]
00000268 08                   S  		BRA L71
00000269                         L70:	; bb107
00000269 F80600                  		MOV.L #00000000H, [R0]
0000026C                         L71:	; bb108
0000026C EC01                    		MOV.L [R0], R1
0000026E 6101                    		CMP #00H, R1
00000270 3Brrrr               W  		BNE L59
00000273                         L72:	; bb113
00000273 9A09                    		MOV.W 12H[R0], R1
00000275 6211                    		ADD #01H, R1
00000277 9209                    		MOV.W R1, 12H[R0]
00000279                         L73:	; bb116
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",405
00000279 A989                    		MOV.L 1CH[R0], R1
0000027B B991                    		MOVU.W 0CH[R1], R1
0000027D FBE2rrrrrrrr            		MOV.L #_usb_ghstd_DeviceNum, R14
00000283 FED1EE                  		MOVU.W [R1,R14], R14
00000286 BA09                    		MOVU.W 12H[R0], R1
00000288 47E1                    		CMP R14, R1
0000028A 28rr                  * 		BLT L58
         38rrrr                  
0000028F                         L74:	; bb136
                                 ;     421                     }
                                 ;     422                 }
                                 ;     423             }
                                 ;     424         }
                                 ;     425 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     426     }
                                 ;     427     return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",427
0000028F F90902FFFF              		MOV.W #0FFFFH, 04H[R0]
00000294                         L75:	; bb138
00000294 D500020C                		MOV.W 04H[R0], 18H[R0]
                                 ;     428 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",428
00000298 BB01                    		MOVU.W 18H[R0], R1
0000029A 6708                    		RTSD #20H
0000029C                         _usb_cstd_Pipe2Epadr:
                                 		.STACK	_usb_cstd_Pipe2Epadr=20
                                 ;     429 /******************************************************************************
                                 ;     430 End of function usb_cstd_Epadr2Pipe
                                 ;     431 ******************************************************************************/
                                 ;     432 
                                 ;     433 
                                 ;     434 /******************************************************************************
                                 ;     435 Function Name   : usb_cstd_Pipe2Epadr
                                 ;     436 Description     : Get the associated endpoint value of the specified pipe.
                                 ;     437 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     438                 : uint16_t pipe  : Pipe number.
                                 ;     439 Return value    : uint8_t        : OK    : Endpoint nr + direction.
                                 ;     440                 :                : ERROR : Error.
                                 ;     441 ******************************************************************************/
                                 ;     442 uint8_t usb_cstd_Pipe2Epadr(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",442
0000029C 7100F0                  		ADD #0FFFFFFF0H, R0
0000029F A089                    		MOV.L R1, 0CH[R0]
000002A1 910A                    		MOV.W R2, 0AH[R0]
                                 ;     443 {
                                 ;     444 
                                 ;     445     /* Check current function */
                                 ;     446     if( usb_cstd_is_host_mode(ptr) == USB_NO )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",446
000002A3 A889                    		MOV.L 0CH[R0], R1
000002A5 39rrrr               W  		BSR _usb_cstd_is_host_mode
000002A8 6101                    		CMP #00H, R1
000002AA 18                   S  		BNE L78
000002AB                         L77:	; bb5
                                 ;     447     {
                                 ;     448         /* Peripheral */
                                 ;     449         USB_PRINTF0("Not support peripheral function\n");
                                 ;     450         return (uint8_t)USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",450
000002AB 3C03FF                  		MOV.B #0FFH, 03H[R0]
000002AE 2Err                 B  		BRA L82
000002B0                         L78:	; bb7
                                 ;     451     }
                                 ;     452     else
                                 ;     453     {
                                 ;     454 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     455         uint16_t        buffer,direp;
                                 ;     456 
                                 ;     457         /* Pipe select */
                                 ;     458         usb_creg_write_pipesel( ptr, pipe );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",458
000002B0 B90A                    		MOVU.W 0AH[R0], R2
000002B2 A889                    		MOV.L 0CH[R0], R1
000002B4 05rrrrrr             A  		BSR _usb_creg_write_pipesel
000002B8                         L79:	; bb7.split
                                 ;     459         /* Read Pipe direction */
                                 ;     460         buffer = usb_creg_read_pipecfg( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",460
000002B8 A889                    		MOV.L 0CH[R0], R1
000002BA 05rrrrrr             A  		BSR _usb_creg_read_pipecfg
000002BE 9081                    		MOV.W R1, 04H[R0]
000002C0                         L80:	; bb7.split1
                                 ;     461         direp = (uint16_t)((((buffer & USB_DIRFIELD) ^ USB_DIRFIELD) << 3) + (buffer & USB_EPNUMFIELD));
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",461
000002C0 B881                    		MOVU.W 04H[R0], R1
000002C2 EF1E                    		MOV.L R1, R14
000002C4 64FE                    		AND #0FH, R14
000002C6 752110                  		AND #10H, R1
000002C9 FDE4F1                  		BNOT #04H, R1
000002CC 6C31                    		SHLL #03H, R1
000002CE 57E1                    		OR R14, R1
000002D0 9089                    		MOV.W R1, 06H[R0]
000002D2                         L81:	; bb7.split2
                                 ;     462         return (uint8_t)(direp);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",462
000002D2 C5000603                		MOV.B 06H[R0], 03H[R0]
000002D6                         L82:	; bb32
000002D6 C5000309                		MOV.B 03H[R0], 09H[R0]
                                 ;     463 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     464     }
                                 ;     465     return (uint8_t)USB_ERROR;
                                 ;     466 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",466
000002DA B209                    		MOVU.B 09H[R0], R1
000002DC 6704                    		RTSD #10H
000002DE                         _usb_cstd_Pipe2Fport:
                                 		.STACK	_usb_cstd_Pipe2Fport=32
                                 ;     467 /******************************************************************************
                                 ;     468 End of function usb_cstd_Pipe2Epadr
                                 ;     469 ******************************************************************************/
                                 ;     470 
                                 ;     471 
                                 ;     472 /******************************************************************************
                                 ;     473 Function Name   : usb_cstd_Pipe2Fport
                                 ;     474 Description     : Get port No. from the specified pipe No. by argument
                                 ;     475 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     476                 : uint16_t pipe  : Pipe number.
                                 ;     477 Return value    : uint16_t       : FIFO port selector.
                                 ;     478 ******************************************************************************/
                                 ;     479 uint16_t usb_cstd_Pipe2Fport(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",479
000002DE 7100E4                  		ADD #0FFFFFFE4H, R0
000002E1 A181                    		MOV.L R1, 18H[R0]
000002E3 928A                    		MOV.W R2, 16H[R0]
                                 ;     480 {
                                 ;     481     uint16_t        i, *table;
                                 ;     482 
                                 ;     483     /* Check current function */
                                 ;     484     if( usb_cstd_is_host_mode(ptr) == USB_NO )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",484
000002E5 A981                    		MOV.L 18H[R0], R1
000002E7 39rrrr               W  		BSR _usb_cstd_is_host_mode
000002EA 6101                    		CMP #00H, R1
000002EC 3Arrrr               W  		BEQ L99
000002EF                         L84:	; bb8
                                 ;     485     {
                                 ;     486 #if USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP
                                 ;     487         uint16_t    conf;
                                 ;     488 
                                 ;     489         conf = usb_gpstd_ConfigNum;
                                 ;     490         if( conf < (uint16_t)1 )
                                 ;     491         {
                                 ;     492             /* Address state */
                                 ;     493             conf = (uint16_t)1;
                                 ;     494         }
                                 ;     495         /* Peripheral */
                                 ;     496         /* Get FIFO port from PIPE number */
                                 ;     497         table = (uint16_t*)((uint16_t**)
                                 ;     498             (usb_gpstd_Driver.pipetbl[conf - 1]));
                                 ;     499         /* EP table loop */
                                 ;     500         for( i = 0; table[i] != USB_PDTBLEND; i += USB_EPL )
                                 ;     501         {
                                 ;     502             if( table[i] == pipe )
                                 ;     503             {
                                 ;     504                 return table[i + 5];
                                 ;     505             }
                                 ;     506         }
                                 ;     507 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP */
                                 ;     508     }
                                 ;     509     else
                                 ;     510     {
                                 ;     511 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     512         uint16_t        md;
                                 ;     513         USB_HCDREG_t    *driver;
                                 ;     514 
                                 ;     515         /* Host */
                                 ;     516         /* Get FIFO port from PIPE number */
                                 ;     517         for( md = 0; md < usb_ghstd_DeviceNum[ptr->ip]; md++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",517
000002EF 3D0700                  		MOV.W #0000H, 0EH[R0]
000002F2 38rrrr               W  		BRA L98
000002F5                         L85:	; bb10
                                 ;     518         {
                                 ;     519             if( (usb_ghstd_DeviceDrv[ptr->ip][md].ifclass != USB_IFCLS_NOT) &&
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",519
000002F5 A981                    		MOV.L 18H[R0], R1
000002F7 B991                    		MOVU.W 0CH[R1], R1
000002F9 7611B801                		MUL #01B8H, R1
000002FD FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
00000303 4B12                    		ADD R1, R2
00000305 B989                    		MOVU.W 0EH[R0], R1
00000307 751128                  		MUL #28H, R1
0000030A 4B12                    		ADD R1, R2
0000030C B8A9                    		MOVU.W 06H[R2], R1
0000030E 6101                    		CMP #00H, R1
00000310 21rr                    		BNE L93
00000312 2Err                 B  		BRA L95
00000314                         L86:	; bb11
                                 ;     520                 (usb_ghstd_DeviceDrv[ptr->ip][md].devaddr != USB_NODEVICE) )
                                 ;     521             {
                                 ;     522                 driver = (USB_HCDREG_t*)&usb_ghstd_DeviceDrv[ptr->ip][md];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",522
00000314 A981                    		MOV.L 18H[R0], R1
00000316 B991                    		MOVU.W 0CH[R1], R1
00000318 7611B801                		MUL #01B8H, R1
0000031C FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
00000322 4B12                    		ADD R1, R2
00000324 B989                    		MOVU.W 0EH[R0], R1
00000326 751128                  		MUL #28H, R1
00000329 4B12                    		ADD R1, R2
0000032B A102                    		MOV.L R2, 10H[R0]
0000032D                         L87:	; bb11.split
                                 ;     523                 table = (uint16_t*)(driver->pipetbl);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",523
0000032D A901                    		MOV.L 10H[R0], R1
0000032F E5100302                		MOV.L 0CH[R1], 08H[R0]
00000333                         L88:	; bb11.split1
                                 ;     524                 /* EP table loop */
                                 ;     525                 for( i = 0; table[i] != USB_PDTBLEND; i += USB_EPL )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",525
00000333 3D0300                  		MOV.W #0000H, 06H[R0]
00000336 2Err                 B  		BRA L92
00000338                         L89:	; bb25
                                 ;     526                 {
                                 ;     527                     if( table[i] == pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",527
00000338 A881                    		MOV.L 08H[R0], R1
0000033A B88A                    		MOVU.W 06H[R0], R2
0000033C FED21E                  		MOVU.W [R2,R1], R14
0000033F 06C50E0B                		CMP 16H[R0].UW, R14
00000343 21rr                    		BNE L91
00000345                         L90:	; bb26
                                 ;     528                     {
                                 ;     529                         return table[i + 5];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",529
00000345 B889                    		MOVU.W 06H[R0], R1
00000347 6C11                    		SHLL #01H, R1
00000349 06890102                		ADD 08H[R0].L, R1
0000034D D5100502                		MOV.W 0AH[R1], 04H[R0]
00000351 2Err                 B  		BRA L100
00000353                         L91:	; bb44
00000353 B889                    		MOVU.W 06H[R0], R1
00000355 6261                    		ADD #06H, R1
00000357 9089                    		MOV.W R1, 06H[R0]
00000359                         L92:	; bb49
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",525
00000359 A881                    		MOV.L 08H[R0], R1
0000035B B88A                    		MOVU.W 06H[R0], R2
0000035D FED21E                  		MOVU.W [R2,R1], R14
00000360 770EFFFF00              		CMP #0FFFFH, R14
00000365 21rr                    		BNE L89
00000367 2Err                 B  		BRA L97
00000369                         L93:	; bb74
00000369 A981                    		MOV.L 18H[R0], R1
0000036B B991                    		MOVU.W 0CH[R1], R1
0000036D 7611B801                		MUL #01B8H, R1
00000371 FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
00000377 4B12                    		ADD R1, R2
00000379 B989                    		MOVU.W 0EH[R0], R1
0000037B 751128                  		MUL #28H, R1
0000037E 4B12                    		ADD R1, R2
00000380 B829                    		MOVU.W 02H[R2], R1
00000382 770100F000              		CMP #0F000H, R1
00000387 10                   S  		BEQ L95
00000388                         L94:	; bb89
00000388 F80601                  		MOV.L #00000001H, [R0]
0000038B 08                   S  		BRA L96
0000038C                         L95:	; bb90
0000038C F80600                  		MOV.L #00000000H, [R0]
0000038F                         L96:	; bb91
0000038F EC01                    		MOV.L [R0], R1
00000391 6101                    		CMP #00H, R1
00000393 3Brrrr               W  		BNE L86
00000396                         L97:	; bb96
00000396 9989                    		MOV.W 0EH[R0], R1
00000398 6211                    		ADD #01H, R1
0000039A 9189                    		MOV.W R1, 0EH[R0]
0000039C                         L98:	; bb99
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",517
0000039C A981                    		MOV.L 18H[R0], R1
0000039E B991                    		MOVU.W 0CH[R1], R1
000003A0 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_DeviceNum, R14
000003A6 FED1EE                  		MOVU.W [R1,R14], R14
000003A9 B989                    		MOVU.W 0EH[R0], R1
000003AB 47E1                    		CMP R14, R1
000003AD 28rr                  * 		BLT L85
         38rrrr                  
000003B2                         L99:	; bb119
                                 ;     530                     }
                                 ;     531                 }
                                 ;     532             }
                                 ;     533         }
                                 ;     534 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     535     }
                                 ;     536 
                                 ;     537     return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",537
000003B2 F90902FFFF              		MOV.W #0FFFFH, 04H[R0]
000003B7                         L100:	; bb121
000003B7 D500020A                		MOV.W 04H[R0], 14H[R0]
                                 ;     538 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",538
000003BB BA81                    		MOVU.W 14H[R0], R1
000003BD 6707                    		RTSD #1CH
000003BF                         _usb_cstd_GetDeviceAddress:
                                 		.STACK	_usb_cstd_GetDeviceAddress=28
                                 ;     539 /******************************************************************************
                                 ;     540 End of function usb_cstd_Pipe2Fport
                                 ;     541 ******************************************************************************/
                                 ;     542 
                                 ;     543 /******************************************************************************
                                 ;     544 Function Name   : usb_cstd_GetDeviceAddress
                                 ;     545 Description     : Get the device address associated with the specified pipe.
                                 ;     546 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     547                 : uint16_t pipe  : Pipe number.
                                 ;     548 Return value    : uint16_t DEVSEL-bit status
                                 ;     549 ******************************************************************************/
                                 ;     550 uint16_t usb_cstd_GetDeviceAddress(USB_UTR_t *ptr, uint16_t pipe)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",550
000003BF 7100E8                  		ADD #0FFFFFFE8H, R0
000003C2 A109                    		MOV.L R1, 14H[R0]
000003C4 920A                    		MOV.W R2, 12H[R0]
                                 ;     551 {
                                 ;     552     uint16_t        buffer;
                                 ;     553 
                                 ;     554     /* Check current function */
                                 ;     555     if( usb_cstd_is_host_mode(ptr) == USB_NO )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",555
000003C6 A909                    		MOV.L 14H[R0], R1
000003C8 39rrrr               W  		BSR _usb_cstd_is_host_mode
000003CB 6101                    		CMP #00H, R1
000003CD 3Arrrr               W  		BEQ L120
000003D0                         L102:	; bb9
                                 ;     556     {
                                 ;     557 #if USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP
                                 ;     558         /* Peripheral */
                                 ;     559         /* USB address */
                                 ;     560         buffer = usb_creg_read_usbaddr( ptr );
                                 ;     561         /* Device address */
                                 ;     562         return (uint16_t)(buffer & USB_USBADDR_MASK);
                                 ;     563 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP */
                                 ;     564     }
                                 ;     565     else
                                 ;     566     {
                                 ;     567 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     568         uint16_t        i, md;
                                 ;     569         USB_HCDREG_t    *driver;
                                 ;     570 
                                 ;     571         /* Host */
                                 ;     572         if( pipe == USB_PIPE0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",572
000003D0 BA09                    		MOVU.W 12H[R0], R1
000003D2 6101                    		CMP #00H, R1
000003D4 21rr                    		BNE L105
000003D6                         L103:	; bb10
                                 ;     573         {
                                 ;     574             buffer = usb_creg_read_dcpmaxp( ptr );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",574
000003D6 A909                    		MOV.L 14H[R0], R1
000003D8 05rrrrrr             A  		BSR _usb_creg_read_dcpmaxp
000003DC 9089                    		MOV.W R1, 06H[R0]
000003DE                         L104:	; bb10.split
                                 ;     575             /* Device address */
                                 ;     576             return (uint16_t)(buffer & USB_DEVSEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",576
000003DE B889                    		MOVU.W 06H[R0], R1
000003E0 772100F000              		AND #0F000H, R1
000003E5 9081                    		MOV.W R1, 04H[R0]
000003E7 38rrrr               W  		BRA L121
000003EA                         L105:	; bb18
                                 ;     577         }
                                 ;     578         else
                                 ;     579         {
                                 ;     580             for( md = 0; md < usb_ghstd_DeviceNum[ptr->ip]; md++ )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",580
000003EA 3D0500                  		MOV.W #0000H, 0AH[R0]
000003ED 38rrrr               W  		BRA L119
000003F0                         L106:	; bb20
                                 ;     581             {
                                 ;     582                 if( (usb_ghstd_DeviceDrv[ptr->ip][md].ifclass != USB_IFCLS_NOT) &&
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",582
000003F0 A909                    		MOV.L 14H[R0], R1
000003F2 B991                    		MOVU.W 0CH[R1], R1
000003F4 7611B801                		MUL #01B8H, R1
000003F8 FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
000003FE 4B12                    		ADD R1, R2
00000400 B909                    		MOVU.W 0AH[R0], R1
00000402 751128                  		MUL #28H, R1
00000405 4B12                    		ADD R1, R2
00000407 B8A9                    		MOVU.W 06H[R2], R1
00000409 6101                    		CMP #00H, R1
0000040B 21rr                    		BNE L114
0000040D 38rrrr               W  		BRA L116
00000410                         L107:	; bb21
                                 ;     583                     (usb_ghstd_DeviceDrv[ptr->ip][md].devaddr != USB_NODEVICE) )
                                 ;     584                 {
                                 ;     585                     driver = (USB_HCDREG_t*)&usb_ghstd_DeviceDrv[ptr->ip][md];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",585
00000410 A909                    		MOV.L 14H[R0], R1
00000412 B991                    		MOVU.W 0CH[R1], R1
00000414 7611B801                		MUL #01B8H, R1
00000418 FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
0000041E 4B12                    		ADD R1, R2
00000420 B909                    		MOVU.W 0AH[R0], R1
00000422 751128                  		MUL #28H, R1
00000425 4B12                    		ADD R1, R2
00000427 A08A                    		MOV.L R2, 0CH[R0]
00000429                         L108:	; bb21.split
                                 ;     586                     /* EP table loop */
                                 ;     587                     for( i = 0; driver->pipetbl[i] != USB_PDTBLEND; i
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",587
00000429 3D0400                  		MOV.W #0000H, 08H[R0]
0000042C 2Err                 B  		BRA L113
0000042E                         L109:	; bb32
                                 ;     588                         += USB_EPL )
                                 ;     589                     {
                                 ;     590                         if( driver->pipetbl[i] == pipe )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",590
0000042E A889                    		MOV.L 0CH[R0], R1
00000430 A899                    		MOV.L 0CH[R1], R1
00000432 B902                    		MOVU.W 08H[R0], R2
00000434 FED21E                  		MOVU.W [R2,R1], R14
00000437 06C50E09                		CMP 12H[R0].UW, R14
0000043B 21rr                    		BNE L112
0000043D                         L110:	; bb33
                                 ;     591                         {
                                 ;     592                             buffer = driver->pipetbl[i + 3];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",592
0000043D B901                    		MOVU.W 08H[R0], R1
0000043F 6C11                    		SHLL #01H, R1
00000441 A88A                    		MOV.L 0CH[R0], R2
00000443 06892103                		ADD 0CH[R2].L, R1
00000447 D5100303                		MOV.W 06H[R1], 06H[R0]
0000044B                         L111:	; bb33.split
                                 ;     593                             /* Device address */
                                 ;     594                             return (uint16_t)(buffer & USB_DEVSEL);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",594
0000044B B889                    		MOVU.W 06H[R0], R1
0000044D 772100F000              		AND #0F000H, R1
00000452 9081                    		MOV.W R1, 04H[R0]
00000454 2Err                 B  		BRA L121
00000456                         L112:	; bb59
00000456 B901                    		MOVU.W 08H[R0], R1
00000458 6261                    		ADD #06H, R1
0000045A 9101                    		MOV.W R1, 08H[R0]
0000045C                         L113:	; bb64
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",587
0000045C A889                    		MOV.L 0CH[R0], R1
0000045E A899                    		MOV.L 0CH[R1], R1
00000460 B902                    		MOVU.W 08H[R0], R2
00000462 FED21E                  		MOVU.W [R2,R1], R14
00000465 770EFFFF00              		CMP #0FFFFH, R14
0000046A 21rr                    		BNE L109
0000046C 2Err                 B  		BRA L118
0000046E                         L114:	; bb91
0000046E A909                    		MOV.L 14H[R0], R1
00000470 B991                    		MOVU.W 0CH[R1], R1
00000472 7611B801                		MUL #01B8H, R1
00000476 FB22rrrrrrrr            		MOV.L #_usb_ghstd_DeviceDrv, R2
0000047C 4B12                    		ADD R1, R2
0000047E B909                    		MOVU.W 0AH[R0], R1
00000480 751128                  		MUL #28H, R1
00000483 4B12                    		ADD R1, R2
00000485 B829                    		MOVU.W 02H[R2], R1
00000487 770100F000              		CMP #0F000H, R1
0000048C 10                   S  		BEQ L116
0000048D                         L115:	; bb106
0000048D F80601                  		MOV.L #00000001H, [R0]
00000490 08                   S  		BRA L117
00000491                         L116:	; bb107
00000491 F80600                  		MOV.L #00000000H, [R0]
00000494                         L117:	; bb108
00000494 EC01                    		MOV.L [R0], R1
00000496 6101                    		CMP #00H, R1
00000498 3Brrrr               W  		BNE L107
0000049B                         L118:	; bb113
0000049B 9909                    		MOV.W 0AH[R0], R1
0000049D 6211                    		ADD #01H, R1
0000049F 9109                    		MOV.W R1, 0AH[R0]
000004A1                         L119:	; bb116
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",580
000004A1 A909                    		MOV.L 14H[R0], R1
000004A3 B991                    		MOVU.W 0CH[R1], R1
000004A5 FBE2rrrrrrrr            		MOV.L #_usb_ghstd_DeviceNum, R14
000004AB FED1EE                  		MOVU.W [R1,R14], R14
000004AE B909                    		MOVU.W 0AH[R0], R1
000004B0 47E1                    		CMP R14, R1
000004B2 28rr                  * 		BLT L106
         38rrrr                  
000004B7                         L120:	; bb142
                                 ;     595                         }
                                 ;     596                     }
                                 ;     597                 }
                                 ;     598             }
                                 ;     599         }
                                 ;     600 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     601     }
                                 ;     602     return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",602
000004B7 F90902FFFF              		MOV.W #0FFFFH, 04H[R0]
000004BC                         L121:	; bb144
000004BC D5000208                		MOV.W 04H[R0], 10H[R0]
                                 ;     603 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",603
000004C0 BA01                    		MOVU.W 10H[R0], R1
000004C2 6706                    		RTSD #18H
000004C4                         _usb_cstd_ClearIntEnb:
                                 		.STACK	_usb_cstd_ClearIntEnb=8
                                 ;     604 /******************************************************************************
                                 ;     605 End of function usb_cstd_GetDeviceAddress
                                 ;     606 ******************************************************************************/
                                 ;     607 
                                 ;     608 /******************************************************************************
                                 ;     609 Function Name   : usb_cstd_ClearIntEnb
                                 ;     610 Description     : Clear teh INTENB register.
                                 ;     611 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     612 Return value    : none
                                 ;     613 ******************************************************************************/
                                 ;     614 void    usb_cstd_ClearIntEnb( USB_UTR_t *ptr )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",614
000004C4 6040                    		SUB #04H, R0
000004C6 E301                    		MOV.L R1, [R0]
000004C8 6602                    		MOV.L #00000000H, R2
                                 ;     615 {
                                 ;     616     usb_creg_write_intenb( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",616
000004CA 05rrrrrr             A  		BSR _usb_creg_write_intenb
000004CE                         L123:	; entry.split
                                 ;     617     /* Conditional compile dep. on difference of USB function */
                                 ;     618 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     619     usb_hreg_write_intenb( ptr, USB_PORT0, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",619
000004CE EC01                    		MOV.L [R0], R1
000004D0 6602                    		MOV.L #00000000H, R2
000004D2 EF23                    		MOV.L R2, R3
000004D4 05rrrrrr             A  		BSR _usb_hreg_write_intenb
000004D8                         L124:	; entry.split1
                                 ;     620     usb_hreg_write_intenb( ptr, USB_PORT1, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",620
000004D8 EC01                    		MOV.L [R0], R1
000004DA 6603                    		MOV.L #00000000H, R3
000004DC 6612                    		MOV.L #00000001H, R2
000004DE 05rrrrrr             A  		BSR _usb_hreg_write_intenb
000004E2 6701                    		RTSD #04H
000004E4                         _usb_cstd_ClearIntSts:
                                 		.STACK	_usb_cstd_ClearIntSts=8
                                 ;     621 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     622 }
                                 ;     623 /******************************************************************************
                                 ;     624 End of function usb_cstd_ClearIntEnb
                                 ;     625 ******************************************************************************/
                                 ;     626 
                                 ;     627 /******************************************************************************
                                 ;     628 Function Name   : usb_cstd_ClearIntSts
                                 ;     629 Description     : Clear the INTSTS register.
                                 ;     630 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     631 Return value    : none
                                 ;     632 ******************************************************************************/
                                 ;     633 void    usb_cstd_ClearIntSts( USB_UTR_t *ptr )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",633
000004E4 6040                    		SUB #04H, R0
000004E6 E301                    		MOV.L R1, [R0]
000004E8 6602                    		MOV.L #00000000H, R2
                                 ;     634 {
                                 ;     635     usb_creg_write_intsts( ptr, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",635
000004EA 05rrrrrr             A  		BSR _usb_creg_write_intsts
000004EE                         L126:	; entry.split
                                 ;     636 /* Conditional compile dep. on difference of USB function */
                                 ;     637 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     638     usb_hreg_write_intsts( ptr, USB_PORT0, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",638
000004EE EC01                    		MOV.L [R0], R1
000004F0 6602                    		MOV.L #00000000H, R2
000004F2 EF23                    		MOV.L R2, R3
000004F4 05rrrrrr             A  		BSR _usb_hreg_write_intsts
000004F8                         L127:	; entry.split1
                                 ;     639     usb_hreg_write_intsts( ptr, USB_PORT1, 0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",639
000004F8 EC01                    		MOV.L [R0], R1
000004FA 6603                    		MOV.L #00000000H, R3
000004FC 6612                    		MOV.L #00000001H, R2
000004FE 05rrrrrr             A  		BSR _usb_hreg_write_intsts
00000502 6701                    		RTSD #04H
00000504                         _usb_cstd_ClearDline:
                                 		.STACK	_usb_cstd_ClearDline=8
                                 ;     640 #endif  /* USB_FUNCSEL_USBIP0_PP != USB_PERI_PP && USB_FUNCSEL_USBIP1_PP != USB_PERI_PP */
                                 ;     641 }
                                 ;     642 /******************************************************************************
                                 ;     643 End of function usb_cstd_ClearIntSts
                                 ;     644 ******************************************************************************/
                                 ;     645 
                                 ;     646 /******************************************************************************
                                 ;     647 Function Name   : usb_cstd_ClearDline
                                 ;     648 Description     : Clear DRPD/DPRPU; host pulldown of resistors for D+ D- lines.
                                 ;     649 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     650 Return value    : none
                                 ;     651 ******************************************************************************/
                                 ;     652 void    usb_cstd_ClearDline( USB_UTR_t *ptr )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",652
00000504 6040                    		SUB #04H, R0
00000506 E301                    		MOV.L R1, [R0]
00000508 6602                    		MOV.L #00000000H, R2
                                 ;     653 {
                                 ;     654 #if defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M)
                                 ;     655     usb_creg_clr_cnen( ptr );
                                 ;     656 #endif /* #if defined(BSP_MCU_RX64M) || defined(BSP_MCU_RX71M) */
                                 ;     657 #if USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP
                                 ;     658     usb_hreg_clr_drpd( ptr, USB_PORT0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",658
0000050A 05rrrrrr             A  		BSR _usb_hreg_clr_drpd
0000050E                         L129:	; entry.split
                                 ;     659     usb_hreg_clr_drpd( ptr, USB_PORT1 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",659
0000050E EC01                    		MOV.L [R0], R1
00000510 6612                    		MOV.L #00000001H, R2
00000512 05rrrrrr             A  		BSR _usb_hreg_clr_drpd
00000516 6701                    		RTSD #04H
00000518                         _usb_cstd_PortSpeed:
                                 		.STACK	_usb_cstd_PortSpeed=16
                                 ;     660 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     661 
                                 ;     662 #if USB_FUNCSEL_USBIP0_PP == USB_PERI_PP || USB_FUNCSEL_USBIP1_PP == USB_PERI_PP
                                 ;     663     usb_preg_clr_dprpu( ptr );
                                 ;     664 #endif  /* USB_FUNCSEL_USBIP0_PP == USB_HOST_PP || USB_FUNCSEL_USBIP1_PP == USB_HOST_PP */
                                 ;     665 }
                                 ;     666 /******************************************************************************
                                 ;     667 End of function usb_cstd_ClearDline
                                 ;     668 ******************************************************************************/
                                 ;     669 
                                 ;     670 /******************************************************************************
                                 ;     671 Function Name   : usb_cstd_PortSpeed
                                 ;     672 Description     : Get USB-speed of the specified port.
                                 ;     673 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.
                                 ;     674                 : uint16_t port  : Root port
                                 ;     675 Return value    : uint16_t       : HSCONNECT : Hi-Speed
                                 ;     676                 :                : FSCONNECT : Full-Speed
                                 ;     677                 :                : LSCONNECT : Low-Speed
                                 ;     678                 :                : NOCONNECT : not connect
                                 ;     679 ******************************************************************************/
                                 ;     680 uint16_t usb_cstd_PortSpeed(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",680
00000518 60C0                    		SUB #0CH, R0
0000051A A081                    		MOV.L R1, 08H[R0]
0000051C 908A                    		MOV.W R2, 06H[R0]
                                 ;     681 {
                                 ;     682     uint16_t    buf, ConnInf;
                                 ;     683 
                                 ;     684     buf = usb_creg_read_dvstctr( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",684
0000051E B88A                    		MOVU.W 06H[R0], R2
00000520 A881                    		MOV.L 08H[R0], R1
00000522 05rrrrrr             A  		BSR _usb_creg_read_dvstctr
00000526 D301                    		MOV.W R1, [R0]
00000528                         L131:	; entry.split
                                 ;     685 
                                 ;     686     /* Reset handshake status get */
                                 ;     687     buf = (uint16_t)(buf & USB_RHST);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",687
00000528 5C01                    		MOVU.W [R0], R1
0000052A 6471                    		AND #07H, R1
0000052C D301                    		MOV.W R1, [R0]
0000052E                         L132:	; entry.split1
                                 ;     688 
                                 ;     689     switch( buf )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",689
0000052E 5C01                    		MOVU.W [R0], R1
00000530 6111                    		CMP #01H, R1
00000532 20rr                    		BEQ L138
00000534                         L133:	; entry.split1
00000534 6121                    		CMP #02H, R1
00000536 20rr                    		BEQ L137
00000538                         L134:	; entry.split1
00000538 6141                    		CMP #04H, R1
0000053A 20rr                    		BEQ L139
0000053C                         L135:	; entry.split1
0000053C 6131                    		CMP #03H, R1
0000053E 21rr                    		BNE L140
00000540                         L136:	; bb
                                 ;     690     {
                                 ;     691     /* Get port speed */
                                 ;     692     case USB_HSMODE:    ConnInf = USB_HSCONNECT;    break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",692
00000540 3D01C0                  		MOV.W #00C0H, 02H[R0]
00000543 2Err                 B  		BRA L141
00000545                         L137:	; bb14
                                 ;     693     case USB_FSMODE:    ConnInf = USB_FSCONNECT;    break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",693
00000545 3D0180                  		MOV.W #0080H, 02H[R0]
00000548 2Err                 B  		BRA L141
0000054A                         L138:	; bb15
                                 ;     694     case USB_LSMODE:    ConnInf = USB_LSCONNECT;    break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",694
0000054A 3D0140                  		MOV.W #0040H, 02H[R0]
0000054D 08                   S  		BRA L141
0000054E                         L139:	; bb16
                                 ;     695     case USB_HSPROC:    ConnInf = USB_NOCONNECT;    break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",695
0000054E 3D0100                  		MOV.W #0000H, 02H[R0]
00000551 08                   S  		BRA L141
00000552                         L140:	; bb17
                                 ;     696     default:        ConnInf = USB_NOCONNECT;    break;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",696
00000552 3D0100                  		MOV.W #0000H, 02H[R0]
00000555                         L141:	; bb18
                                 ;     697     }
                                 ;     698 
                                 ;     699     return (ConnInf);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",699
00000555 D5000102                		MOV.W 02H[R0], 04H[R0]
00000559 9881                    		MOV.W 04H[R0], R1
0000055B                         L142:	; bb18.split
                                 ;     700 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",700
0000055B 5F11                    		MOVU.W R1, R1
0000055D 6703                    		RTSD #0CH
0000055F                         _usb_cstd_HiSpeedEnable:
                                 		.STACK	_usb_cstd_HiSpeedEnable=16
                                 ;     701 /******************************************************************************
                                 ;     702 End of function usb_cstd_PortSpeed
                                 ;     703 ******************************************************************************/
                                 ;     704 
                                 ;     705 /******************************************************************************
                                 ;     706 Function Name   : usb_cstd_HiSpeedEnable
                                 ;     707 Description     : Check if set to Hi-speed.
                                 ;     708 Arguments       : USB_UTR_t *ptr : USB internal structure. Selects e.g. channel.    ;
                                 ;     709                 : uint16_t port  : Root port
                                 ;     710 Return value    : uint16_t       : YES; Hi-Speed enabled.
                                 ;     711                 :                : NO; Hi-Speed disabled.
                                 ;     712 ******************************************************************************/
                                 ;     713 uint16_t usb_cstd_HiSpeedEnable(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",713
0000055F 60C0                    		SUB #0CH, R0
00000561 A081                    		MOV.L R1, 08H[R0]
00000563 908A                    		MOV.W R2, 06H[R0]
                                 ;     714 {
                                 ;     715     uint16_t    buf;
                                 ;     716 
                                 ;     717     buf = usb_creg_read_syscfg( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",717
00000565 B88A                    		MOVU.W 06H[R0], R2
00000567 A881                    		MOV.L 08H[R0], R1
00000569 05rrrrrr             A  		BSR _usb_creg_read_syscfg
0000056D 9009                    		MOV.W R1, 02H[R0]
0000056F                         L144:	; entry.split
                                 ;     718 
                                 ;     719     if( (buf & USB_HSE) == USB_HSE )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",719
0000056F B809                    		MOVU.W 02H[R0], R1
00000571 76218000                		AND #80H, R1
00000575 755180                  		CMP #80H, R1
00000578 18                   S  		BNE L146
00000579                         L145:	; bb7
                                 ;     720     {
                                 ;     721         /* Hi-Speed Enable */
                                 ;     722         return USB_YES;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",722
00000579 F80501                  		MOV.W #0001H, [R0]
0000057C 08                   S  		BRA L147
0000057D                         L146:	; bb9
                                 ;     723     }
                                 ;     724     else
                                 ;     725     {
                                 ;     726         /* Hi-Speed Disable */
                                 ;     727         return USB_NO;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",727
0000057D F80500                  		MOV.W #0000H, [R0]
00000580                         L147:	; bb17
00000580 D40002                  		MOV.W [R0], 04H[R0]
                                 ;     728     }
                                 ;     729 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",729
00000583 B881                    		MOVU.W 04H[R0], R1
00000585 6703                    		RTSD #0CH
00000587                         _usb_cstd_SetHse:
                                 		.STACK	_usb_cstd_SetHse=12
                                 ;     730 /******************************************************************************
                                 ;     731 End of function usb_cstd_HiSpeedEnable
                                 ;     732 ******************************************************************************/
                                 ;     733 
                                 ;     734 /******************************************************************************
                                 ;     735 Function Name   : usb_cstd_SetHse
                                 ;     736 Description     : Set/clear the HSE-bit of the specified port.
                                 ;     737 Arguments       : uint16_t port     : Root port.
                                 ;     738                 : uint16_t speed    : HS_ENABLE/HS_DISABLE.
                                 ;     739 Return value    : none
                                 ;     740 ******************************************************************************/
                                 ;     741 void usb_cstd_SetHse(USB_UTR_t *ptr, uint16_t port, uint16_t speed)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",741
00000587 6080                    		SUB #08H, R0
00000589 A009                    		MOV.L R1, 04H[R0]
0000058B 900A                    		MOV.W R2, 02H[R0]
0000058D D303                    		MOV.W R3, [R0]
                                 ;     742 {
                                 ;     743     if( speed == USB_HS_DISABLE )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",743
0000058F 6103                    		CMP #00H, R3
00000591 980A                    		MOV.W 02H[R0], R2
00000593 A809                    		MOV.L 04H[R0], R1
00000595 18                   S  		BNE L150
00000596                         L149:	; bb4
                                 ;     744     {
                                 ;     745         /* HSE = disable */
                                 ;     746         usb_creg_clr_hse( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",746
00000596 5F22                    		MOVU.W R2, R2
00000598 05rrrrrr             A  		BSR _usb_creg_clr_hse
0000059C 6702                    		RTSD #08H
0000059E                         L150:	; bb6
                                 ;     747     }
                                 ;     748     else
                                 ;     749     {
                                 ;     750         /* HSE = enable */
                                 ;     751         usb_creg_set_hse( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",751
0000059E 5F22                    		MOVU.W R2, R2
000005A0 05rrrrrr             A  		BSR _usb_creg_set_hse
000005A4 6702                    		RTSD #08H
000005A6                         _usb_cstd_DummyFunction:
                                 		.STACK	_usb_cstd_DummyFunction=12
                                 ;     752     }
                                 ;     753 }
                                 ;     754 /******************************************************************************
                                 ;     755 End of function usb_cstd_SetHse
                                 ;     756 ******************************************************************************/
                                 ;     757 
                                 ;     758 /******************************************************************************
                                 ;     759 Function Name   : usb_cstd_DummyFunction
                                 ;     760 Description     : dummy function
                                 ;     761 Arguments       : uint16_t data1    : Not used.
                                 ;     762                 : uint16_t data2    : Not used.
                                 ;     763 Return value    : none
                                 ;     764 ******************************************************************************/
                                 ;     765 void usb_cstd_DummyFunction(USB_UTR_t *ptr, uint16_t data1, uint16_t data2)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",765
000005A6 6080                    		SUB #08H, R0
000005A8 A009                    		MOV.L R1, 04H[R0]
000005AA 900A                    		MOV.W R2, 02H[R0]
000005AC D303                    		MOV.W R3, [R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",767
000005AE 6702                    		RTSD #08H
000005B0                         _usb_cstd_DummyTrn:
                                 		.STACK	_usb_cstd_DummyTrn=16
                                 ;     766 {
                                 ;     767 }
                                 ;     768 /******************************************************************************
                                 ;     769 End of function usb_cstd_DummyFunction
                                 ;     770 ******************************************************************************/
                                 ;     771 
                                 ;     772 /******************************************************************************
                                 ;     773 Function Name   : usb_cstd_DummyTrn
                                 ;     774 Description     : dummy function
                                 ;     775 Arguments       : USB_REQUEST_t *data1  : Not used.
                                 ;     776                 : uint16_t data2        : Not used.
                                 ;     777 Return value    : none
                                 ;     778 ******************************************************************************/
                                 ;     779 void usb_cstd_DummyTrn(USB_UTR_t *ptr, USB_REQUEST_t *data1, uint16_t data2)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",779
000005B0 60C0                    		SUB #0CH, R0
000005B2 A081                    		MOV.L R1, 08H[R0]
000005B4 A00A                    		MOV.L R2, 04H[R0]
000005B6 900B                    		MOV.W R3, 02H[R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",781
000005B8 6703                    		RTSD #0CH
000005BA                         _usb_cstd_set_usbip_mode:
                                 		.STACK	_usb_cstd_set_usbip_mode=12
                                 ;     780 {
                                 ;     781 }
                                 ;     782 /******************************************************************************
                                 ;     783 End of function usb_cstd_DummyTrn
                                 ;     784 ******************************************************************************/
                                 ;     785 
                                 ;     786 /******************************************************************************
                                 ;     787 Function Name   : usb_cstd_set_usbip_mode
                                 ;     788 Description     : Set the Host mode or Peripheral mode to USB H/W
                                 ;     789 Arguments       : USB_UTR_t *ptr : USB system internal structure.
                                 ;     790                 : uint16_t function : Host mode/Peripheral mode
                                 ;     791 Return value    : none
                                 ;     792 ******************************************************************************/
                                 ;     793 void usb_cstd_set_usbip_mode(USB_UTR_t *ptr, uint16_t function)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",793
000005BA 6080                    		SUB #08H, R0
000005BC A009                    		MOV.L R1, 04H[R0]
000005BE 900A                    		MOV.W R2, 02H[R0]
                                 ;     794 {
                                 ;     795     /* USB interrupt message initialize */
                                 ;     796     usb_cstd_InitUsbMessage(ptr, function);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",796
000005C0 B80A                    		MOVU.W 02H[R0], R2
000005C2 A809                    		MOV.L 04H[R0], R1
000005C4 05rrrrrr             A  		BSR _usb_cstd_InitUsbMessage
000005C8                         L154:	; entry.split
                                 ;     797     /* Select HW function */
                                 ;     798     usb_cstd_set_usbip_mode_sub(ptr, function);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_basic\src\driver\comm\r_usb_clibusbip.c",798
000005C8 B80A                    		MOVU.W 02H[R0], R2
000005CA A809                    		MOV.L 04H[R0], R1
000005CC 05rrrrrr             A  		BSR _usb_cstd_set_usbip_mode_sub
000005D0 6702                    		RTSD #08H
                                 ;     799 }/* eof usb_cstd_set_usbip_mode() */
                                 ;     800 
                                 ;     801 
                                 ;     802 #if defined(BSP_MCU_RX64M) || (BSP_MCU_RX71M)
                                 ;     803 /******************************************************************************
                                 ;     804 Function Name   : usb_cstd_set_sofcfg_intl
                                 ;     805 Description     : Set Interrupt sence mode(Level sence) for SOFCFG.
                                 ;     806 Arguments       : USB_UTR_t *ptr    : USB system internal structure.
                                 ;     807 Return value    : none
                                 ;     808 ******************************************************************************/
                                 ;     809 void usb_cstd_set_sofcfg_intl( USB_UTR_t *ptr )
                                 ;     810 {
                                 ;     811     usb_creg_set_sofcfg( ptr, USB_INTL );
                                 ;     812 } /* eof usb_cstd_set_sofcfg_intl() */
                                 ;     813 #endif /* #if defined(BSP_MCU_RX64M) | (BSP_MCU_RX71M) */
                                 ;     814 
                                 ;     815 
                                 ;     816 /******************************************************************************
                                 ;     817 End  Of File
                                 ;     818 ******************************************************************************/
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     01818   LINES

Section List

Attr         Size               Name
CODE     0000001490(000005D2H)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx124\$ccrx\r_usb_clibusbip.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01_master\MT01_build\r_usb_clibusbip.lst
-output=C:\Workspace\e2studio\git\MT01_master\MT01_build\r_usb_basic\src\driver\comm\r_usb_clibusbip.obj
