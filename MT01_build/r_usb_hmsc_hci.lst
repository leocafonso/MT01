* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Tue Mar 14 14:02:58 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  14-Mar-2017 14:02:58
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_hmsc_hci.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx\src,C:/Workspace/e2studio/
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_hmsc_hci.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=1,MOBILE=0,FREE_RTOS_PP
                                 ;r_usb_hmsc_hci.c
                                 
                                 		.glb	_usb_ghmsc_TransData
                                 		.glb	_usb_ghmsc_ReceiveData
                                 		.glb	_usb_ghmsc_Cbw
                                 		.glb	_usb_ghmsc_Csw
                                 		.glb	_usb_ghmsc_DefEpTbl
                                 		.glb	_usb_ghmsc_PipeTable
                                 		.glb	_usb_ghmsc_InPipe
                                 		.glb	_usb_ghmsc_OutPipe
                                 		.glb	_usb_shmsc_StallErrSeq
                                 		.glb	_usb_shmsc_Process
                                 		.glb	_usb_shmsc_MsgNum
                                 		.glb	_usb_ghmsc_Data
                                 		.glb	_usb_ghmsc_ClassData
                                 		.glb	_usb_hmsc_SendCbw
                                 		.glb	_usb_hmsc_SmpDrive2Msgnum
                                 		.glb	_usb_hmsc_CbwTagCount
                                 		.glb	_usb_cstd_DummyFunction
                                 		.glb	_usb_hmsc_SendCbwReq
                                 		.glb	_usb_hmsc_CheckResult
                                 		.glb	_usb_hmsc_SendCbwCheck
                                 		.glb	_R_usb_hmsc_Information
                                 		.glb	_usb_hmsc_SpecifiedPath
                                 		.glb	_R_usb_hstd_TransferEnd
                                 		.glb	_usb_hmsc_GetData
                                 		.glb	_usb_hmsc_GetDataReq
                                 		.glb	_usb_hmsc_GetDataCheck
                                 		.glb	_R_usb_hmsc_ClearStall
                                 		.glb	_usb_hmsc_SendData
                                 		.glb	_usb_hmsc_SendDataReq
                                 		.glb	_usb_hmsc_SendDataCheck
                                 		.glb	_usb_hmsc_GetCsw
                                 		.glb	_usb_hmsc_GetCswReq
                                 		.glb	_usb_hmsc_GetCswCheck
                                 		.glb	_usb_hmsc_CheckCsw
                                 		.glb	_usb_hmsc_GetStringInfoCheck
                                 		.glb	_usb_hmsc_GetMaxUnitCheck
                                 		.glb	_usb_hmsc_MassStorageResetCheck
                                 		.glb	_usb_hmsc_ClearStall
                                 		.glb	_R_usb_hstd_ChangeDeviceState
                                 		.glb	_usb_hmsc_ClearStallCheck
                                 		.glb	_usb_hmsc_ClearStallCheck2
                                 		.glb	_usb_hmsc_Submitutr
                                 		.glb	_usb_hmsc_SubmitutrReq
                                 		.glb	_usb_hmsc_DoSqtgl
                                 		.glb	_usb_hmsc_ControlEnd
                                 		.glb	_usb_hmsc_StdReqCheck
                                 		.glb	_usb_cstd_ClrStall
                                 		.glb	_R_usb_hstd_SetPipeInfo
                                 		.glb	_R_usb_hstd_SetPipeRegistration
                                 		.glb	_R_usb_hstd_TransferStart
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _usb_hmsc_SendCbw:
                                 		.STACK	_usb_hmsc_SendCbw=24
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_hmsc_hci.c
                                 ;      21 * Description  : USB Host MSC BOT driver
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Support Multi device.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 /******************************************************************************
                                 ;      30 Includes   <System Includes> , "Project Includes"
                                 ;      31 ******************************************************************************/
                                 ;      32 #include "r_usb_basic_if.h"
                                 ;      33 #include "r_usb_hatapi_define.h"    /* Peripheral ATAPI Device extern */
                                 ;      34 #include "r_usb_hmsc_define.h"   /* Host Mass Storage Class Driver define */
                                 ;      35 #include "r_usb_hmsc_extern.h"   /* Host MSC grobal define */
                                 ;      36 #include "r_usb_api.h"
                                 ;      37 #include "r_usb_hmsc_api.h"
                                 ;      38 #include "r_usb_hmsc_config.h"
                                 ;      39 
                                 ;      40 /******************************************************************************
                                 ;      41 Renesas Abstracted HMSC Driver functions
                                 ;      42 ******************************************************************************/
                                 ;      43 
                                 ;      44 /******************************************************************************
                                 ;      45 Function Name   : usb_hmsc_SendCbw
                                 ;      46 Description     : Send CBW
                                 ;      47 Arguments       : uint16_t drvnum           : Drive Number
                                 ;      48 Return value    : uint16_t                  : Error Code
                                 ;      49 ******************************************************************************/
                                 ;      50 uint16_t usb_hmsc_SendCbw(USB_UTR_t *ptr, uint16_t drvnum)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",50
00000000 7100EC                  		ADD #0FFFFFFECH, R0
00000003 A101                    		MOV.L R1, 10H[R0]
00000005 918A                    		MOV.W R2, 0EH[R0]
                                 ;      51 {
                                 ;      52     USB_ER_t    err;
                                 ;      53     uint16_t    msgnum;
                                 ;      54 
                                 ;      55     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",55
00000007 B98A                    		MOVU.W 0EH[R0], R2
00000009 A901                    		MOV.L 10H[R0], R1
0000000B 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
0000000F 9109                    		MOV.W R1, 0AH[R0]
00000011                         L11:	; entry.split
                                 ;      56     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",56
00000011 B909                    		MOVU.W 0AH[R0], R1
00000013 7701FFFF00              		CMP #0FFFFH, R1
00000018 18                   S  		BNE L13
00000019                         L12:	; bb8
                                 ;      57     {
                                 ;      58         return USB_HMSC_CBW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",58
00000019 F90901FEFF              		MOV.W #0FFFEH, 02H[R0]
0000001E 38rrrr               W  		BRA L22
00000021                         L13:	; bb14
                                 ;      59     }
                                 ;      60 
                                 ;      61     /* Set CBW TAG */
                                 ;      62     usb_hmsc_CbwTagCount(ptr, msgnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",62
00000021 B90A                    		MOVU.W 0AH[R0], R2
00000023 A901                    		MOV.L 10H[R0], R1
00000025 05rrrrrr             A  		BSR _usb_hmsc_CbwTagCount
00000029                         L14:	; bb14.split
                                 ;      63 
                                 ;      64     /* Request CBW */
                                 ;      65     /* Device number */
                                 ;      66     usb_ghmsc_TransData[ptr->ip][msgnum].keyword     = msgnum;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",66
00000029 A901                    		MOV.L 10H[R0], R1
0000002B B991                    		MOVU.W 0CH[R1], R1
0000002D 76116001                		MUL #0160H, R1
00000031 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
00000037 4B12                    		ADD R1, R2
00000039 B909                    		MOVU.W 0AH[R0], R1
0000003B EF1E                    		MOV.L R1, R14
0000003D 751E2C                  		MUL #2CH, R14
00000040 4BE2                    		ADD R14, R2
00000042 90A9                    		MOV.W R1, 06H[R2]
00000044                         L15:	; bb14.split1
                                 ;      67     /* Transfer data address */
                                 ;      68     usb_ghmsc_TransData[ptr->ip][msgnum].tranadr     = (void*)&usb_ghmsc_Cbw[ptr->ip][msgnum];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",68
00000044 A901                    		MOV.L 10H[R0], R1
00000046 B991                    		MOVU.W 0CH[R1], R1
00000048 EF1E                    		MOV.L R1, R14
0000004A 761E6001                		MUL #0160H, R14
0000004E FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
00000054 4BE2                    		ADD R14, R2
00000056 B90B                    		MOVU.W 0AH[R0], R3
00000058 EF3E                    		MOV.L R3, R14
0000005A 751E2C                  		MUL #2CH, R14
0000005D 4BE2                    		ADD R14, R2
0000005F 6C91                    		SHLL #09H, R1
00000061 FB42rrrrrrrr            		MOV.L #_usb_ghmsc_Cbw, R4
00000067 4B14                    		ADD R1, R4
00000069 6C63                    		SHLL #06H, R3
0000006B 4B34                    		ADD R3, R4
0000006D A12C                    		MOV.L R4, 14H[R2]
0000006F                         L16:	; bb14.split2
                                 ;      69     /* Transfer data length */
                                 ;      70     usb_ghmsc_TransData[ptr->ip][msgnum].tranlen     = (uint32_t)USB_MSC_CBWLENGTH;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",70
0000006F A901                    		MOV.L 10H[R0], R1
00000071 B991                    		MOVU.W 0CH[R1], R1
00000073 76116001                		MUL #0160H, R1
00000077 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
0000007D 4B12                    		ADD R1, R2
0000007F B909                    		MOVU.W 0AH[R0], R1
00000081 75112C                  		MUL #2CH, R1
00000084 4B12                    		ADD R1, R2
00000086 3E261F                  		MOV.L #0000001FH, 18H[R2]
00000089                         L17:	; bb14.split3
                                 ;      71     /* Not control transfer */
                                 ;      72     usb_ghmsc_TransData[ptr->ip][msgnum].setup           = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",72
00000089 A901                    		MOV.L 10H[R0], R1
0000008B B991                    		MOVU.W 0CH[R1], R1
0000008D 76116001                		MUL #0160H, R1
00000091 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
00000097 4B12                    		ADD R1, R2
00000099 B909                    		MOVU.W 0AH[R0], R1
0000009B 75112C                  		MUL #2CH, R1
0000009E 4B12                    		ADD R1, R2
000000A0 3E2700                  		MOV.L #00000000H, 1CH[R2]
000000A3                         L18:	; bb14.split4
                                 ;      73     usb_ghmsc_TransData[ptr->ip][msgnum].segment     = USB_TRAN_END;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",73
000000A3 A901                    		MOV.L 10H[R0], R1
000000A5 B991                    		MOVU.W 0CH[R1], R1
000000A7 76116001                		MUL #0160H, R1
000000AB FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R14
000000B1 4B1E                    		ADD R1, R14
000000B3 B909                    		MOVU.W 0AH[R0], R1
000000B5 75112C                  		MUL #2CH, R1
000000B8 4B1E                    		ADD R1, R14
000000BA F9E42580                		MOV.B #80H, 25H[R14]
000000BE                         L19:	; bb14.split5
                                 ;      74     /* Call Back Function Info */
                                 ;      75     usb_ghmsc_TransData[ptr->ip][msgnum].complete    = (USB_CB_t)&usb_cstd_DummyFunction;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",75
000000BE A901                    		MOV.L 10H[R0], R1
000000C0 B991                    		MOVU.W 0CH[R1], R1
000000C2 76116001                		MUL #0160H, R1
000000C6 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
000000CC 4B12                    		ADD R1, R2
000000CE B909                    		MOVU.W 0AH[R0], R1
000000D0 75112C                  		MUL #2CH, R1
000000D3 4B12                    		ADD R1, R2
000000D5 FB12rrrrrrrr            		MOV.L #_usb_cstd_DummyFunction, R1
000000DB A121                    		MOV.L R1, 10H[R2]
000000DD                         L20:	; bb14.split6
                                 ;      76 
                                 ;      77     err = usb_hmsc_Submitutr(ptr, (uint16_t)USB_DATA_NONE, &usb_ghmsc_TransData[ptr->ip][msgnum]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",77
000000DD A901                    		MOV.L 10H[R0], R1
000000DF B992                    		MOVU.W 0CH[R1], R2
000000E1 B90C                    		MOVU.W 0AH[R0], R4
000000E3 76126001                		MUL #0160H, R2
000000E7 FB32rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R3
000000ED 4B23                    		ADD R2, R3
000000EF 75142C                  		MUL #2CH, R4
000000F2 4B43                    		ADD R4, R3
000000F4 6612                    		MOV.L #00000001H, R2
000000F6 39rrrr               W  		BSR _usb_hmsc_Submitutr
000000F9 A009                    		MOV.L R1, 04H[R0]
000000FB                         L21:	; bb14.split7
                                 ;      78 
                                 ;      79     return (err);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",79
000000FB A809                    		MOV.L 04H[R0], R1
000000FD 9009                    		MOV.W R1, 02H[R0]
000000FF                         L22:	; bb102
000000FF D5000106                		MOV.W 02H[R0], 0CH[R0]
                                 ;      80 }   /* eof usb_hmsc_SendCbw() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",80
00000103 B981                    		MOVU.W 0CH[R0], R1
00000105 6705                    		RTSD #14H
00000107                         _usb_hmsc_SendCbwReq:
                                 		.STACK	_usb_hmsc_SendCbwReq=24
                                 ;      81 
                                 ;      82 /******************************************************************************
                                 ;      83 Function Name   : usb_hmsc_SendCbwReq
                                 ;      84 Description     : Send CBW
                                 ;      85 Arguments       : uint16_t drvnum           : Drive Number
                                 ;      86 Return value    : uint16_t                  : Error Code
                                 ;      87 ******************************************************************************/
                                 ;      88 uint16_t usb_hmsc_SendCbwReq(USB_UTR_t *ptr, uint16_t drvnum)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",88
00000107 7100EC                  		ADD #0FFFFFFECH, R0
0000010A A101                    		MOV.L R1, 10H[R0]
0000010C 918A                    		MOV.W R2, 0EH[R0]
                                 ;      89 {
                                 ;      90     USB_ER_t    err;
                                 ;      91     uint16_t    msgnum;
                                 ;      92 
                                 ;      93     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",93
0000010E B98A                    		MOVU.W 0EH[R0], R2
00000110 A901                    		MOV.L 10H[R0], R1
00000112 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
00000116 9109                    		MOV.W R1, 0AH[R0]
00000118                         L24:	; entry.split
                                 ;      94     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",94
00000118 B909                    		MOVU.W 0AH[R0], R1
0000011A 7701FFFF00              		CMP #0FFFFH, R1
0000011F 18                   S  		BNE L26
00000120                         L25:	; bb8
                                 ;      95     {
                                 ;      96         return USB_HMSC_SUBMIT_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",96
00000120 F90901F9FF              		MOV.W #0FFF9H, 02H[R0]
00000125 2Err                 B  		BRA L31
00000127                         L26:	; bb14
                                 ;      97     }
                                 ;      98     /* Call Back Function Info */
                                 ;      99     usb_ghmsc_TransData[ptr->ip][msgnum].complete    = &usb_hmsc_CheckResult;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",99
00000127 A901                    		MOV.L 10H[R0], R1
00000129 B991                    		MOVU.W 0CH[R1], R1
0000012B 76116001                		MUL #0160H, R1
0000012F FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
00000135 4B12                    		ADD R1, R2
00000137 B909                    		MOVU.W 0AH[R0], R1
00000139 75112C                  		MUL #2CH, R1
0000013C 4B12                    		ADD R1, R2
0000013E FB12rrrrrrrr            		MOV.L #_usb_hmsc_CheckResult, R1
00000144 A121                    		MOV.L R1, 10H[R2]
00000146                         L27:	; bb14.split
                                 ;     100 
                                 ;     101     err = usb_hmsc_SubmitutrReq(ptr, (uint16_t)USB_DATA_NONE, &usb_ghmsc_TransData[ptr->ip][msgnum]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",101
00000146 A901                    		MOV.L 10H[R0], R1
00000148 B992                    		MOVU.W 0CH[R1], R2
0000014A B90C                    		MOVU.W 0AH[R0], R4
0000014C 76126001                		MUL #0160H, R2
00000150 FB32rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R3
00000156 4B23                    		ADD R2, R3
00000158 75142C                  		MUL #2CH, R4
0000015B 4B43                    		ADD R4, R3
0000015D 6612                    		MOV.L #00000001H, R2
0000015F 39rrrr               W  		BSR _usb_hmsc_SubmitutrReq
00000162 A009                    		MOV.L R1, 04H[R0]
00000164                         L28:	; bb14.split1
                                 ;     102     if( err != USB_E_OK ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",102
00000164 A809                    		MOV.L 04H[R0], R1
00000166 6101                    		CMP #00H, R1
00000168 10                   S  		BEQ L30
00000169                         L29:	; bb37
                                 ;     103     {
                                 ;     104         USB_PRINTF1("### Mass Storage Device Class submit error(drive:%d) !\n", drvnum);
                                 ;     105         return USB_HMSC_SUBMIT_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",105
00000169 F90901F9FF              		MOV.W #0FFF9H, 02H[R0]
0000016E 08                   S  		BRA L31
0000016F                         L30:	; bb43
                                 ;     106     }
                                 ;     107     return (err);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",107
0000016F A809                    		MOV.L 04H[R0], R1
00000171 9009                    		MOV.W R1, 02H[R0]
00000173                         L31:	; bb47
00000173 D5000106                		MOV.W 02H[R0], 0CH[R0]
                                 ;     108 }   /* eof usb_hmsc_SendCbwReq() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",108
00000177 B981                    		MOVU.W 0CH[R0], R1
00000179 6705                    		RTSD #14H
0000017B                         _usb_hmsc_SendCbwCheck:
                                 		.STACK	_usb_hmsc_SendCbwCheck=68
                                 ;     109 
                                 ;     110 /******************************************************************************
                                 ;     111 Function Name   : usb_hmsc_SendCbwCheck
                                 ;     112 Description     : Check send CBW 
                                 ;     113 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     114                 : uint16_t hmsc_retval      : Return Value
                                 ;     115 Return value    : uint16_t                  : Error Code
                                 ;     116 ******************************************************************************/
                                 ;     117 uint16_t usb_hmsc_SendCbwCheck(USB_UTR_t *ptr, uint16_t drvnum, uint16_t hmsc_retval)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",117
0000017B 7100C0                  		ADD #0FFFFFFC0H, R0
0000017E A389                    		MOV.L R1, 3CH[R0]
00000180 970A                    		MOV.W R2, 3AH[R0]
00000182 9703                    		MOV.W R3, 38H[R0]
                                 ;     118 {
                                 ;     119     uint16_t    pipeno, msgnum;
                                 ;     120     USB_CLSINFO_t mess;
                                 ;     121 
                                 ;     122     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",122
00000184 BF0A                    		MOVU.W 3AH[R0], R2
00000186 AB89                    		MOV.L 3CH[R0], R1
00000188 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
0000018C 9089                    		MOV.W R1, 06H[R0]
0000018E                         L33:	; entry.split
                                 ;     123     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",123
0000018E B889                    		MOVU.W 06H[R0], R1
00000190 7701FFFF00              		CMP #0FFFFH, R1
00000195 18                   S  		BNE L35
00000196                         L34:	; bb10
                                 ;     124     {
                                 ;     125         return USB_HMSC_CBW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",125
00000196 F90901FEFF              		MOV.W #0FFFEH, 02H[R0]
0000019B 38rrrr               W  		BRA L52
0000019E                         L35:	; bb16
                                 ;     126     }
                                 ;     127     /* NonOS */
                                 ;     128     switch( hmsc_retval ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",128
0000019E BF01                    		MOVU.W 38H[R0], R1
000001A0 6191                    		CMP #09H, R1
000001A2 3Arrrr               W  		BEQ L49
000001A5                         L36:	; bb16
000001A5 6161                    		CMP #06H, R1
000001A7 20rr                    		BEQ L41
000001A9                         L37:	; bb16
000001A9 6111                    		CMP #01H, R1
000001AB 3Brrrr               W  		BNE L51
000001AE                         L38:	; bb19
                                 ;     129     {
                                 ;     130     case USB_DATA_NONE:     /* Send CBW */
                                 ;     131         pipeno = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_OutPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",131
000001AE AB89                    		MOV.L 3CH[R0], R1
000001B0 B991                    		MOVU.W 0CH[R1], R1
000001B2 FDC51E                  		SHLL #05H, R1, R14
000001B5 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R15
000001BB 4BEF                    		ADD R14, R15
000001BD B88A                    		MOVU.W 06H[R0], R2
000001BF 6C22                    		SHLL #02H, R2
000001C1 4B2F                    		ADD R2, R15
000001C3 5CF2                    		MOVU.W [R15], R2
000001C5 05rrrrrr             A  		BSR _R_usb_hmsc_Information
000001C9 9081                    		MOV.W R1, 04H[R0]
000001CB                         L39:	; bb19.split
                                 ;     132         usb_ghmsc_OutPipe[ptr->ip][msgnum][1] = usb_ghmsc_TransData[ptr->ip][msgnum].pipectr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",132
000001CB AB89                    		MOV.L 3CH[R0], R1
000001CD B991                    		MOVU.W 0CH[R1], R1
000001CF FDC51E                  		SHLL #05H, R1, R14
000001D2 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R15
000001D8 4BEF                    		ADD R14, R15
000001DA B88A                    		MOVU.W 06H[R0], R2
000001DC FDC22E                  		SHLL #02H, R2, R14
000001DF 4BEF                    		ADD R14, R15
000001E1 76116001                		MUL #0160H, R1
000001E5 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R14
000001EB 4B1E                    		ADD R1, R14
000001ED 75122C                  		MUL #2CH, R2
000001F0 4B2E                    		ADD R2, R14
000001F2 D5EF1101                		MOV.W 22H[R14], 02H[R15]
000001F6                         L40:	; bb19.split1
                                 ;     133         return USB_HMSC_OK;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",133
000001F6 3D0100                  		MOV.W #0000H, 02H[R0]
000001F9 2Err                 B  		BRA L52
000001FB                         L41:	; bb59
                                 ;     134         break;
                                 ;     135     case USB_DATA_STALL:    /* Stall */
                                 ;     136         USB_PRINTF1("*** CBW Transfer STALL(drive:%d) !\n", drvnum);
                                 ;     137         usb_shmsc_Process[ptr->ip] = USB_MSG_HMSC_CBW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",137
000001FB AB89                    		MOV.L 3CH[R0], R1
000001FD B991                    		MOVU.W 0CH[R1], R1
000001FF FBE2rrrrrrrr            		MOV.L #_usb_shmsc_Process, R14
00000205 FBFA0605                		MOV.L #00000506H, R15
00000209 FE11EF                  		MOV.W R15, [R1,R14]
0000020C                         L42:	; bb59.split
                                 ;     138         usb_shmsc_StallErrSeq[ptr->ip] = USB_SEQ_0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",138
0000020C AB89                    		MOV.L 3CH[R0], R1
0000020E B991                    		MOVU.W 0CH[R1], R1
00000210 FBE2rrrrrrrr            		MOV.L #_usb_shmsc_StallErrSeq, R14
00000216 660F                    		MOV.L #00000000H, R15
00000218 FE11EF                  		MOV.W R15, [R1,R14]
0000021B                         L43:	; bb59.split2
                                 ;     139         mess.keyword = drvnum;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",139
0000021B D5001D07                		MOV.W 3AH[R0], 0EH[R0]
0000021F                         L44:	; bb59.split3
                                 ;     140 
                                 ;     141         mess.ip = ptr->ip;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",141
0000021F AB89                    		MOV.L 3CH[R0], R1
00000221 D510060A                		MOV.W 0CH[R1], 14H[R0]
00000225                         L45:	; bb59.split4
                                 ;     142         mess.ipp = ptr->ipp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",142
00000225 AB89                    		MOV.L 3CH[R0], R1
00000227 E5100204                		MOV.L 08H[R1], 10H[R0]
0000022B                         L46:	; bb59.split5
                                 ;     143         mess.msginfo = usb_shmsc_Process[ptr->ip];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",143
0000022B AB89                    		MOV.L 3CH[R0], R1
0000022D B991                    		MOVU.W 0CH[R1], R1
0000022F FBE2rrrrrrrr            		MOV.L #_usb_shmsc_Process, R14
00000235 FE51E1                  		MOV.W [R1,R14], R1
00000238 9181                    		MOV.W R1, 0CH[R0]
0000023A                         L47:	; bb59.split6
0000023A 710108                  		ADD #08H, R0, R1
                                 ;     144         usb_hmsc_SpecifiedPath(&mess);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",144
0000023D 05rrrrrr             A  		BSR _usb_hmsc_SpecifiedPath
00000241                         L48:	; bb59.split7
                                 ;     145         return USB_DATA_STALL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",145
00000241 3D0106                  		MOV.W #0006H, 02H[R0]
00000244 2Err                 B  		BRA L52
00000246                         L49:	; bb90
                                 ;     146         break;
                                 ;     147     case USB_DATA_TMO:      /* Timeout */
                                 ;     148         USB_PRINTF1("### CBW Transfer timeout ERROR(drive:%d) !\n", drvnum);
                                 ;     149         pipeno  = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_OutPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",149
00000246 AB89                    		MOV.L 3CH[R0], R1
00000248 B991                    		MOVU.W 0CH[R1], R1
0000024A FDC51E                  		SHLL #05H, R1, R14
0000024D FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R15
00000253 4BEF                    		ADD R14, R15
00000255 B88A                    		MOVU.W 06H[R0], R2
00000257 6C22                    		SHLL #02H, R2
00000259 4B2F                    		ADD R2, R15
0000025B 5CF2                    		MOVU.W [R15], R2
0000025D 05rrrrrr             A  		BSR _R_usb_hmsc_Information
00000261 9081                    		MOV.W R1, 04H[R0]
00000263                         L50:	; bb90.split
                                 ;     150         R_usb_hstd_TransferEnd(ptr, pipeno, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",150
00000263 B882                    		MOVU.W 04H[R0], R2
00000265 AB89                    		MOV.L 3CH[R0], R1
00000267 6693                    		MOV.L #00000009H, R3
00000269 05rrrrrr             A  		BSR _R_usb_hstd_TransferEnd
0000026D                         L51:	; bb112
                                 ;     151         break;
                                 ;     152     case USB_DATA_ERR:
                                 ;     153         USB_PRINTF1("### CBW Transfer ERROR(drive:%d) !\n", drvnum);
                                 ;     154         break;
                                 ;     155     default:
                                 ;     156         USB_PRINTF1("### CBW Transfer error(drive:%d) !\n", drvnum);
                                 ;     157         break;
                                 ;     158     }
                                 ;     159     return USB_HMSC_CBW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",159
0000026D F90901FEFF              		MOV.W #0FFFEH, 02H[R0]
00000272                         L52:	; bb114
00000272 D500011B                		MOV.W 02H[R0], 36H[R0]
                                 ;     160 }   /* eof usb_hmsc_SendCbwCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",160
00000276 BE89                    		MOVU.W 36H[R0], R1
00000278 6710                    		RTSD #40H
0000027A                         _usb_hmsc_GetData:
                                 		.STACK	_usb_hmsc_GetData=32
                                 ;     161 
                                 ;     162 /******************************************************************************
                                 ;     163 Function Name   : usb_hmsc_GetData
                                 ;     164 Description     : Receive Data request
                                 ;     165 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     166                 : uint8_t *buff             : Receive Data Buffer Address
                                 ;     167                 : uint32_t size             : Receive Data Size
                                 ;     168 Return value    : uint16_t                  : Error Code
                                 ;     169 ******************************************************************************/
                                 ;     170 uint16_t usb_hmsc_GetData(USB_UTR_t *ptr, uint16_t drvnum, uint8_t *buff, uint32_t size)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",170
0000027A 7100E4                  		ADD #0FFFFFFE4H, R0
0000027D A181                    		MOV.L R1, 18H[R0]
0000027F 928A                    		MOV.W R2, 16H[R0]
00000281 A103                    		MOV.L R3, 10H[R0]
00000283 A08C                    		MOV.L R4, 0CH[R0]
                                 ;     171 {
                                 ;     172     uint16_t    msgnum;
                                 ;     173     USB_ER_t    err;
                                 ;     174 
                                 ;     175     msgnum  = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",175
00000285 BA8A                    		MOVU.W 16H[R0], R2
00000287 A981                    		MOV.L 18H[R0], R1
00000289 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
0000028D 9009                    		MOV.W R1, 02H[R0]
0000028F                         L54:	; entry.split
                                 ;     176     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",176
0000028F B809                    		MOVU.W 02H[R0], R1
00000291 7701FFFF00              		CMP #0FFFFH, R1
00000296 18                   S  		BNE L56
00000297                         L55:	; bb10
                                 ;     177     {
                                 ;     178         USB_PRINTF1("### usb_hmsc_GetData [usb_hmsc_SmpDrive2Msgnum]error(drvnum:%d) !\n", drvnum);
                                 ;     179         return USB_HMSC_DAT_RD_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",179
00000297 F809FDFF                		MOV.W #0FFFDH, [R0]
0000029B 38rrrr               W  		BRA L64
0000029E                         L56:	; bb16
                                 ;     180     }
                                 ;     181     /* Device number */
                                 ;     182     usb_ghmsc_ReceiveData[ptr->ip][msgnum].keyword   = msgnum;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",182
0000029E A981                    		MOV.L 18H[R0], R1
000002A0 B991                    		MOVU.W 0CH[R1], R1
000002A2 76116001                		MUL #0160H, R1
000002A6 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
000002AC 4B12                    		ADD R1, R2
000002AE B809                    		MOVU.W 02H[R0], R1
000002B0 EF1E                    		MOV.L R1, R14
000002B2 751E2C                  		MUL #2CH, R14
000002B5 4BE2                    		ADD R14, R2
000002B7 90A9                    		MOV.W R1, 06H[R2]
000002B9                         L57:	; bb16.split
                                 ;     183     /* Transfer data address */
                                 ;     184     usb_ghmsc_ReceiveData[ptr->ip][msgnum].tranadr   = (void*)buff;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",184
000002B9 A981                    		MOV.L 18H[R0], R1
000002BB B991                    		MOVU.W 0CH[R1], R1
000002BD 76116001                		MUL #0160H, R1
000002C1 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
000002C7 4B12                    		ADD R1, R2
000002C9 B809                    		MOVU.W 02H[R0], R1
000002CB 75112C                  		MUL #2CH, R1
000002CE 4B12                    		ADD R1, R2
000002D0 E5020405                		MOV.L 10H[R0], 14H[R2]
000002D4                         L58:	; bb16.split1
                                 ;     185     /* Transfer data length */
                                 ;     186     usb_ghmsc_ReceiveData[ptr->ip][msgnum].tranlen   = size;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",186
000002D4 A981                    		MOV.L 18H[R0], R1
000002D6 B991                    		MOVU.W 0CH[R1], R1
000002D8 76116001                		MUL #0160H, R1
000002DC FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
000002E2 4B12                    		ADD R1, R2
000002E4 B809                    		MOVU.W 02H[R0], R1
000002E6 75112C                  		MUL #2CH, R1
000002E9 4B12                    		ADD R1, R2
000002EB E5020306                		MOV.L 0CH[R0], 18H[R2]
000002EF                         L59:	; bb16.split2
                                 ;     187     /* Not control transfer */
                                 ;     188     usb_ghmsc_ReceiveData[ptr->ip][msgnum].setup     = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",188
000002EF A981                    		MOV.L 18H[R0], R1
000002F1 B991                    		MOVU.W 0CH[R1], R1
000002F3 76116001                		MUL #0160H, R1
000002F7 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
000002FD 4B12                    		ADD R1, R2
000002FF B809                    		MOVU.W 02H[R0], R1
00000301 75112C                  		MUL #2CH, R1
00000304 4B12                    		ADD R1, R2
00000306 3E2700                  		MOV.L #00000000H, 1CH[R2]
00000309                         L60:	; bb16.split3
                                 ;     189     usb_ghmsc_ReceiveData[ptr->ip][msgnum].segment   = USB_TRAN_END;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",189
00000309 A981                    		MOV.L 18H[R0], R1
0000030B B991                    		MOVU.W 0CH[R1], R1
0000030D 76116001                		MUL #0160H, R1
00000311 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R14
00000317 4B1E                    		ADD R1, R14
00000319 B809                    		MOVU.W 02H[R0], R1
0000031B 75112C                  		MUL #2CH, R1
0000031E 4B1E                    		ADD R1, R14
00000320 F9E42580                		MOV.B #80H, 25H[R14]
00000324                         L61:	; bb16.split4
                                 ;     190     /* Call Back Function Info */
                                 ;     191     usb_ghmsc_ReceiveData[ptr->ip][msgnum].complete  = (USB_CB_t)&usb_cstd_DummyFunction;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",191
00000324 A981                    		MOV.L 18H[R0], R1
00000326 B991                    		MOVU.W 0CH[R1], R1
00000328 76116001                		MUL #0160H, R1
0000032C FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
00000332 4B12                    		ADD R1, R2
00000334 B809                    		MOVU.W 02H[R0], R1
00000336 75112C                  		MUL #2CH, R1
00000339 4B12                    		ADD R1, R2
0000033B FB12rrrrrrrr            		MOV.L #_usb_cstd_DummyFunction, R1
00000341 A121                    		MOV.L R1, 10H[R2]
00000343                         L62:	; bb16.split5
                                 ;     192 
                                 ;     193     err = usb_hmsc_Submitutr(ptr, (uint16_t)USB_DATA_OK, &usb_ghmsc_ReceiveData[ptr->ip][msgnum]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",193
00000343 A981                    		MOV.L 18H[R0], R1
00000345 B992                    		MOVU.W 0CH[R1], R2
00000347 B80C                    		MOVU.W 02H[R0], R4
00000349 76126001                		MUL #0160H, R2
0000034D FB32rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R3
00000353 4B23                    		ADD R2, R3
00000355 75142C                  		MUL #2CH, R4
00000358 4B43                    		ADD R4, R3
0000035A 6632                    		MOV.L #00000003H, R2
0000035C 39rrrr               W  		BSR _usb_hmsc_Submitutr
0000035F A009                    		MOV.L R1, 04H[R0]
00000361                         L63:	; bb16.split6
                                 ;     194     return (err);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",194
00000361 A809                    		MOV.L 04H[R0], R1
00000363 D301                    		MOV.W R1, [R0]
00000365                         L64:	; bb94
00000365 D40005                  		MOV.W [R0], 0AH[R0]
                                 ;     195 }   /* eof usb_hmsc_GetData() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",195
00000368 B909                    		MOVU.W 0AH[R0], R1
0000036A 6707                    		RTSD #1CH
0000036C                         _usb_hmsc_GetDataReq:
                                 		.STACK	_usb_hmsc_GetDataReq=32
                                 ;     196 
                                 ;     197 /******************************************************************************
                                 ;     198 Function Name   : usb_hmsc_GetDataReq
                                 ;     199 Description     : Get Data request
                                 ;     200 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     201                 : uint8_t *buff             : Not use
                                 ;     202                 : uint32_t size             : Not use
                                 ;     203 Return value    : uint16_t                  : Error Code
                                 ;     204 ******************************************************************************/
                                 ;     205 uint16_t usb_hmsc_GetDataReq(USB_UTR_t *ptr, uint16_t drvnum, uint8_t *buff, uint32_t size)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",205
0000036C 7100E4                  		ADD #0FFFFFFE4H, R0
0000036F A181                    		MOV.L R1, 18H[R0]
00000371 928A                    		MOV.W R2, 16H[R0]
00000373 A103                    		MOV.L R3, 10H[R0]
00000375 A08C                    		MOV.L R4, 0CH[R0]
                                 ;     206 {
                                 ;     207     USB_ER_t    err;
                                 ;     208     uint16_t    msgnum;
                                 ;     209 
                                 ;     210     msgnum  = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",210
00000377 BA8A                    		MOVU.W 16H[R0], R2
00000379 A981                    		MOV.L 18H[R0], R1
0000037B 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
0000037F 9101                    		MOV.W R1, 08H[R0]
00000381                         L66:	; entry.split
                                 ;     211     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",211
00000381 B901                    		MOVU.W 08H[R0], R1
00000383 7701FFFF00              		CMP #0FFFFH, R1
00000388 18                   S  		BNE L68
00000389                         L67:	; bb10
                                 ;     212     {
                                 ;     213         USB_PRINTF1("### usb_hmsc_GetDataReq [usb_hmsc_SmpDrive2Msgnum]error(drvnum:%d) !\n", drvnum);
                                 ;     214         return USB_HMSC_DAT_RD_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",214
00000389 F90901FDFF              		MOV.W #0FFFDH, 02H[R0]
0000038E 2Err                 B  		BRA L73
00000390                         L68:	; bb16
                                 ;     215     }
                                 ;     216 
                                 ;     217     /* Call Back Function Info */
                                 ;     218     usb_ghmsc_ReceiveData[ptr->ip][msgnum].complete  = &usb_hmsc_CheckResult;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",218
00000390 A981                    		MOV.L 18H[R0], R1
00000392 B991                    		MOVU.W 0CH[R1], R1
00000394 76116001                		MUL #0160H, R1
00000398 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
0000039E 4B12                    		ADD R1, R2
000003A0 B901                    		MOVU.W 08H[R0], R1
000003A2 75112C                  		MUL #2CH, R1
000003A5 4B12                    		ADD R1, R2
000003A7 FB12rrrrrrrr            		MOV.L #_usb_hmsc_CheckResult, R1
000003AD A121                    		MOV.L R1, 10H[R2]
000003AF                         L69:	; bb16.split
                                 ;     219 
                                 ;     220     err = usb_hmsc_SubmitutrReq(ptr, (uint16_t)USB_DATA_OK, &usb_ghmsc_ReceiveData[ptr->ip][msgnum]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",220
000003AF A981                    		MOV.L 18H[R0], R1
000003B1 B992                    		MOVU.W 0CH[R1], R2
000003B3 B904                    		MOVU.W 08H[R0], R4
000003B5 76126001                		MUL #0160H, R2
000003B9 FB32rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R3
000003BF 4B23                    		ADD R2, R3
000003C1 75142C                  		MUL #2CH, R4
000003C4 4B43                    		ADD R4, R3
000003C6 6632                    		MOV.L #00000003H, R2
000003C8 39rrrr               W  		BSR _usb_hmsc_SubmitutrReq
000003CB A009                    		MOV.L R1, 04H[R0]
000003CD                         L70:	; bb16.split1
                                 ;     221     if( err != USB_E_OK ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",221
000003CD A809                    		MOV.L 04H[R0], R1
000003CF 6101                    		CMP #00H, R1
000003D1 10                   S  		BEQ L72
000003D2                         L71:	; bb39
                                 ;     222     {
                                 ;     223         USB_PRINTF1("### Mass Storage Device Class submit error(drive:%d) !\n", drvnum);
                                 ;     224         return USB_HMSC_SUBMIT_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",224
000003D2 F90901F9FF              		MOV.W #0FFF9H, 02H[R0]
000003D7 08                   S  		BRA L73
000003D8                         L72:	; bb45
                                 ;     225     }
                                 ;     226     return (err);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",226
000003D8 A809                    		MOV.L 04H[R0], R1
000003DA 9009                    		MOV.W R1, 02H[R0]
000003DC                         L73:	; bb49
000003DC D5000105                		MOV.W 02H[R0], 0AH[R0]
                                 ;     227 }   /* eof usb_hmsc_GetDataReq() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",227
000003E0 B909                    		MOVU.W 0AH[R0], R1
000003E2 6707                    		RTSD #1CH
000003E4                         _usb_hmsc_GetDataCheck:
                                 		.STACK	_usb_hmsc_GetDataCheck=20
                                 ;     228 
                                 ;     229 /******************************************************************************
                                 ;     230 Function Name   : usb_hmsc_GetDataCheck
                                 ;     231 Description     : Check Get Data 
                                 ;     232 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     233                 : uint16_t hmsc_retval      : Return Value
                                 ;     234 Return value    : uint16_t                  : Error Code
                                 ;     235 ******************************************************************************/
                                 ;     236 uint16_t usb_hmsc_GetDataCheck(USB_UTR_t *ptr, uint16_t drvnum, uint16_t hmsc_retval)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",236
000003E4 7100F0                  		ADD #0FFFFFFF0H, R0
000003E7 A089                    		MOV.L R1, 0CH[R0]
000003E9 910A                    		MOV.W R2, 0AH[R0]
000003EB 9103                    		MOV.W R3, 08H[R0]
                                 ;     237 {
                                 ;     238     uint16_t pipeno, msgnum;
                                 ;     239     
                                 ;     240     msgnum  = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",240
000003ED B90A                    		MOVU.W 0AH[R0], R2
000003EF A889                    		MOV.L 0CH[R0], R1
000003F1 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
000003F5 9081                    		MOV.W R1, 04H[R0]
000003F7                         L75:	; entry.split
                                 ;     241     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",241
000003F7 B881                    		MOVU.W 04H[R0], R1
000003F9 7701FFFF00              		CMP #0FFFFH, R1
000003FE 18                   S  		BNE L77
000003FF                         L76:	; bb9
                                 ;     242     {
                                 ;     243         USB_PRINTF1("### usb_hmsc_GetDataCheck 1 [usb_hmsc_SmpDrive2Msgnum]error(drvnum:%d) !\n", drvnum);
                                 ;     244         return USB_HMSC_DAT_RD_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",244
000003FF F809FDFF                		MOV.W #0FFFDH, [R0]
00000403 38rrrr               W  		BRA L88
00000406                         L77:	; bb15
                                 ;     245     }
                                 ;     246 
                                 ;     247     /* NonOS */
                                 ;     248     switch( hmsc_retval ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",248
00000406 B901                    		MOVU.W 08H[R0], R1
00000408 6191                    		CMP #09H, R1
0000040A 20rr                    		BEQ L85
0000040C                         L78:	; bb15
0000040C 6161                    		CMP #06H, R1
0000040E 20rr                    		BEQ L83
00000410                         L79:	; bb15
00000410 6031                    		SUB #03H, R1
00000412 6111                    		CMP #01H, R1
00000414 25rr                  * 		BGTU L87
         38rrrr                  
00000419                         L80:	; bb18
                                 ;     249     {
                                 ;     250     case USB_DATA_SHT:
                                 ;     251         /* Continue */
                                 ;     252     case USB_DATA_OK:
                                 ;     253         pipeno = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_InPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",253
00000419 A889                    		MOV.L 0CH[R0], R1
0000041B B991                    		MOVU.W 0CH[R1], R1
0000041D FDC51E                  		SHLL #05H, R1, R14
00000420 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R15
00000426 4BEF                    		ADD R14, R15
00000428 B882                    		MOVU.W 04H[R0], R2
0000042A 6C22                    		SHLL #02H, R2
0000042C 4B2F                    		ADD R2, R15
0000042E 5CF2                    		MOVU.W [R15], R2
00000430 05rrrrrr             A  		BSR _R_usb_hmsc_Information
00000434 9009                    		MOV.W R1, 02H[R0]
00000436                         L81:	; bb18.split
                                 ;     254         usb_ghmsc_InPipe[ptr->ip][msgnum][1] = usb_ghmsc_ReceiveData[ptr->ip][msgnum].pipectr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",254
00000436 A889                    		MOV.L 0CH[R0], R1
00000438 B991                    		MOVU.W 0CH[R1], R1
0000043A FDC51E                  		SHLL #05H, R1, R14
0000043D FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R15
00000443 4BEF                    		ADD R14, R15
00000445 B882                    		MOVU.W 04H[R0], R2
00000447 FDC22E                  		SHLL #02H, R2, R14
0000044A 4BEF                    		ADD R14, R15
0000044C 76116001                		MUL #0160H, R1
00000450 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R14
00000456 4B1E                    		ADD R1, R14
00000458 75122C                  		MUL #2CH, R2
0000045B 4B2E                    		ADD R2, R14
0000045D D5EF1101                		MOV.W 22H[R14], 02H[R15]
00000461                         L82:	; bb18.split1
                                 ;     255         return  USB_HMSC_OK;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",255
00000461 F80500                  		MOV.W #0000H, [R0]
00000464 2Err                 B  		BRA L88
00000466                         L83:	; bb58
                                 ;     256         break;
                                 ;     257     case USB_DATA_STALL:
                                 ;     258         USB_PRINTF1("*** GetData Read STALL(drive:%d) !\n", drvnum);
                                 ;     259         R_usb_hmsc_ClearStall(ptr, (uint16_t)USB_DATA_OK, msgnum, (USB_CB_t)usb_hmsc_ClearStallCheck2);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",259
00000466 B883                    		MOVU.W 04H[R0], R3
00000468 A889                    		MOV.L 0CH[R0], R1
0000046A FB42rrrrrrrr            		MOV.L #_usb_hmsc_ClearStallCheck2, R4
00000470 6632                    		MOV.L #00000003H, R2
00000472 05rrrrrr             A  		BSR _R_usb_hmsc_ClearStall
00000476                         L84:	; bb58.split
                                 ;     260         return  USB_HMSC_STALL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",260
00000476 F809FFFF                		MOV.W #0FFFFH, [R0]
0000047A 2Err                 B  		BRA L88
0000047C                         L85:	; bb62
                                 ;     261         break;
                                 ;     262     case USB_DATA_TMO:
                                 ;     263         USB_PRINTF1("### hmsc_Data Read timeout ERROR(drive:%d) !\n", drvnum);
                                 ;     264         pipeno = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_InPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",264
0000047C A889                    		MOV.L 0CH[R0], R1
0000047E B991                    		MOVU.W 0CH[R1], R1
00000480 FDC51E                  		SHLL #05H, R1, R14
00000483 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R15
00000489 4BEF                    		ADD R14, R15
0000048B B882                    		MOVU.W 04H[R0], R2
0000048D 6C22                    		SHLL #02H, R2
0000048F 4B2F                    		ADD R2, R15
00000491 5CF2                    		MOVU.W [R15], R2
00000493 05rrrrrr             A  		BSR _R_usb_hmsc_Information
00000497 9009                    		MOV.W R1, 02H[R0]
00000499                         L86:	; bb62.split
                                 ;     265         R_usb_hstd_TransferEnd(ptr, pipeno, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",265
00000499 B80A                    		MOVU.W 02H[R0], R2
0000049B A889                    		MOV.L 0CH[R0], R1
0000049D 6693                    		MOV.L #00000009H, R3
0000049F 05rrrrrr             A  		BSR _R_usb_hstd_TransferEnd
000004A3                         L87:	; bb85
                                 ;     266         break;
                                 ;     267     case USB_DATA_ERR:
                                 ;     268         USB_PRINTF1("### hmsc_Data Read ERROR(drive:%d) !\n", drvnum);
                                 ;     269         break;
                                 ;     270     case USB_DATA_OVR:
                                 ;     271         USB_PRINTF1("### hmsc_Data receive over(drive:%d) !\n", drvnum);
                                 ;     272         break;
                                 ;     273     default:
                                 ;     274         USB_PRINTF1("### hmsc_Data Read error(drive:%d) !\n", drvnum);
                                 ;     275         break;
                                 ;     276     }
                                 ;     277     USB_PRINTF1("### usb_hmsc_GetDataCheck 2 [usb_hmsc_SmpDrive2Msgnum]error(drvnum:%d) !\n", drvnum);
                                 ;     278     return USB_HMSC_DAT_RD_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",278
000004A3 F809FDFF                		MOV.W #0FFFDH, [R0]
000004A7                         L88:	; bb87
000004A7 D40003                  		MOV.W [R0], 06H[R0]
                                 ;     279 }   /* eof usb_hmsc_GetDataCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",279
000004AA B889                    		MOVU.W 06H[R0], R1
000004AC 6704                    		RTSD #10H
000004AE                         _usb_hmsc_SendData:
                                 		.STACK	_usb_hmsc_SendData=32
                                 ;     280 
                                 ;     281 /******************************************************************************
                                 ;     282 Function Name   : usb_hmsc_SendData
                                 ;     283 Description     : Send Pipe Data
                                 ;     284 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     285                 : uint8_t  *buff            : Data Info Address
                                 ;     286                 : uint32_t size             : Data Size
                                 ;     287 Return value    : uint16_t                  : Error Code(USB_DONE)
                                 ;     288 ******************************************************************************/
                                 ;     289 uint16_t usb_hmsc_SendData(USB_UTR_t *ptr, uint16_t drvnum, uint8_t *buff, uint32_t size)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",289
000004AE 7100E4                  		ADD #0FFFFFFE4H, R0
000004B1 A181                    		MOV.L R1, 18H[R0]
000004B3 928A                    		MOV.W R2, 16H[R0]
000004B5 A103                    		MOV.L R3, 10H[R0]
000004B7 A08C                    		MOV.L R4, 0CH[R0]
                                 ;     290 {
                                 ;     291     uint16_t    msgnum;
                                 ;     292     USB_ER_t    err;
                                 ;     293 
                                 ;     294     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",294
000004B9 BA8A                    		MOVU.W 16H[R0], R2
000004BB A981                    		MOV.L 18H[R0], R1
000004BD 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
000004C1 9009                    		MOV.W R1, 02H[R0]
000004C3                         L90:	; entry.split
                                 ;     295     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",295
000004C3 B809                    		MOVU.W 02H[R0], R1
000004C5 7701FFFF00              		CMP #0FFFFH, R1
000004CA 18                   S  		BNE L92
000004CB                         L91:	; bb10
                                 ;     296     {
                                 ;     297         return USB_HMSC_DAT_WR_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",297
000004CB F809FCFF                		MOV.W #0FFFCH, [R0]
000004CF 38rrrr               W  		BRA L100
000004D2                         L92:	; bb16
                                 ;     298     }
                                 ;     299     /* Device number */
                                 ;     300     usb_ghmsc_TransData[ptr->ip][msgnum].keyword     = msgnum;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",300
000004D2 A981                    		MOV.L 18H[R0], R1
000004D4 B991                    		MOVU.W 0CH[R1], R1
000004D6 76116001                		MUL #0160H, R1
000004DA FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
000004E0 4B12                    		ADD R1, R2
000004E2 B809                    		MOVU.W 02H[R0], R1
000004E4 EF1E                    		MOV.L R1, R14
000004E6 751E2C                  		MUL #2CH, R14
000004E9 4BE2                    		ADD R14, R2
000004EB 90A9                    		MOV.W R1, 06H[R2]
000004ED                         L93:	; bb16.split
                                 ;     301     /* Transfer data address */
                                 ;     302     usb_ghmsc_TransData[ptr->ip][msgnum].tranadr     = (void*)buff;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",302
000004ED A981                    		MOV.L 18H[R0], R1
000004EF B991                    		MOVU.W 0CH[R1], R1
000004F1 76116001                		MUL #0160H, R1
000004F5 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
000004FB 4B12                    		ADD R1, R2
000004FD B809                    		MOVU.W 02H[R0], R1
000004FF 75112C                  		MUL #2CH, R1
00000502 4B12                    		ADD R1, R2
00000504 E5020405                		MOV.L 10H[R0], 14H[R2]
00000508                         L94:	; bb16.split1
                                 ;     303     /* Transfer data length */
                                 ;     304     usb_ghmsc_TransData[ptr->ip][msgnum].tranlen     = size;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",304
00000508 A981                    		MOV.L 18H[R0], R1
0000050A B991                    		MOVU.W 0CH[R1], R1
0000050C 76116001                		MUL #0160H, R1
00000510 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
00000516 4B12                    		ADD R1, R2
00000518 B809                    		MOVU.W 02H[R0], R1
0000051A 75112C                  		MUL #2CH, R1
0000051D 4B12                    		ADD R1, R2
0000051F E5020306                		MOV.L 0CH[R0], 18H[R2]
00000523                         L95:	; bb16.split2
                                 ;     305     /* Not control transfer */
                                 ;     306     usb_ghmsc_TransData[ptr->ip][msgnum].setup       = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",306
00000523 A981                    		MOV.L 18H[R0], R1
00000525 B991                    		MOVU.W 0CH[R1], R1
00000527 76116001                		MUL #0160H, R1
0000052B FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
00000531 4B12                    		ADD R1, R2
00000533 B809                    		MOVU.W 02H[R0], R1
00000535 75112C                  		MUL #2CH, R1
00000538 4B12                    		ADD R1, R2
0000053A 3E2700                  		MOV.L #00000000H, 1CH[R2]
0000053D                         L96:	; bb16.split3
                                 ;     307     usb_ghmsc_TransData[ptr->ip][msgnum].segment     = USB_TRAN_END;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",307
0000053D A981                    		MOV.L 18H[R0], R1
0000053F B991                    		MOVU.W 0CH[R1], R1
00000541 76116001                		MUL #0160H, R1
00000545 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R14
0000054B 4B1E                    		ADD R1, R14
0000054D B809                    		MOVU.W 02H[R0], R1
0000054F 75112C                  		MUL #2CH, R1
00000552 4B1E                    		ADD R1, R14
00000554 F9E42580                		MOV.B #80H, 25H[R14]
00000558                         L97:	; bb16.split4
                                 ;     308     /* Call Back Function Info */
                                 ;     309     usb_ghmsc_TransData[ptr->ip][msgnum].complete
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",309
00000558 A981                    		MOV.L 18H[R0], R1
0000055A B991                    		MOVU.W 0CH[R1], R1
0000055C 76116001                		MUL #0160H, R1
00000560 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
00000566 4B12                    		ADD R1, R2
00000568 B809                    		MOVU.W 02H[R0], R1
0000056A 75112C                  		MUL #2CH, R1
0000056D 4B12                    		ADD R1, R2
0000056F FB12rrrrrrrr            		MOV.L #_usb_cstd_DummyFunction, R1
00000575 A121                    		MOV.L R1, 10H[R2]
00000577                         L98:	; bb16.split5
                                 ;     310         = (USB_CB_t)&usb_cstd_DummyFunction;
                                 ;     311 
                                 ;     312     err = usb_hmsc_Submitutr(ptr, (uint16_t)USB_DATA_NONE
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",312
00000577 A981                    		MOV.L 18H[R0], R1
00000579 B992                    		MOVU.W 0CH[R1], R2
0000057B B80C                    		MOVU.W 02H[R0], R4
0000057D 76126001                		MUL #0160H, R2
00000581 FB32rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R3
00000587 4B23                    		ADD R2, R3
00000589 75142C                  		MUL #2CH, R4
0000058C 4B43                    		ADD R4, R3
0000058E 6612                    		MOV.L #00000001H, R2
00000590 39rrrr               W  		BSR _usb_hmsc_Submitutr
00000593 A009                    		MOV.L R1, 04H[R0]
00000595                         L99:	; bb16.split6
                                 ;     313         , &usb_ghmsc_TransData[ptr->ip][msgnum]);
                                 ;     314     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",314
00000595 A809                    		MOV.L 04H[R0], R1
00000597 D301                    		MOV.W R1, [R0]
00000599                         L100:	; bb94
00000599 D40005                  		MOV.W [R0], 0AH[R0]
                                 ;     315 }   /* eof usb_hmsc_SendData() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",315
0000059C B909                    		MOVU.W 0AH[R0], R1
0000059E 6707                    		RTSD #1CH
000005A0                         _usb_hmsc_SendDataReq:
                                 		.STACK	_usb_hmsc_SendDataReq=32
                                 ;     316 
                                 ;     317 /******************************************************************************
                                 ;     318 Function Name   : usb_hmsc_SendDataReq
                                 ;     319 Description     : Send Pipe Data
                                 ;     320 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     321                 : uint8_t  *buff            : Data Info Address
                                 ;     322                 : uint32_t size             : Data Size
                                 ;     323 Return value    : uint16_t                  : Error Code
                                 ;     324 ******************************************************************************/
                                 ;     325 uint16_t usb_hmsc_SendDataReq(USB_UTR_t *ptr, uint16_t drvnum, uint8_t *buff, uint32_t size)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",325
000005A0 7100E4                  		ADD #0FFFFFFE4H, R0
000005A3 A181                    		MOV.L R1, 18H[R0]
000005A5 928A                    		MOV.W R2, 16H[R0]
000005A7 A103                    		MOV.L R3, 10H[R0]
000005A9 A08C                    		MOV.L R4, 0CH[R0]
                                 ;     326 {
                                 ;     327     USB_ER_t    err;
                                 ;     328     uint16_t    msgnum;
                                 ;     329 
                                 ;     330     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",330
000005AB BA8A                    		MOVU.W 16H[R0], R2
000005AD A981                    		MOV.L 18H[R0], R1
000005AF 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
000005B3 9101                    		MOV.W R1, 08H[R0]
000005B5                         L102:	; entry.split
                                 ;     331     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",331
000005B5 B901                    		MOVU.W 08H[R0], R1
000005B7 7701FFFF00              		CMP #0FFFFH, R1
000005BC 18                   S  		BNE L104
000005BD                         L103:	; bb10
                                 ;     332     {
                                 ;     333         return USB_HMSC_DAT_WR_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",333
000005BD F90901FCFF              		MOV.W #0FFFCH, 02H[R0]
000005C2 2Err                 B  		BRA L109
000005C4                         L104:	; bb16
                                 ;     334     }
                                 ;     335     /* Call Back Function Info */
                                 ;     336     usb_ghmsc_TransData[ptr->ip][msgnum].complete    = &usb_hmsc_CheckResult;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",336
000005C4 A981                    		MOV.L 18H[R0], R1
000005C6 B991                    		MOVU.W 0CH[R1], R1
000005C8 76116001                		MUL #0160H, R1
000005CC FB22rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R2
000005D2 4B12                    		ADD R1, R2
000005D4 B901                    		MOVU.W 08H[R0], R1
000005D6 75112C                  		MUL #2CH, R1
000005D9 4B12                    		ADD R1, R2
000005DB FB12rrrrrrrr            		MOV.L #_usb_hmsc_CheckResult, R1
000005E1 A121                    		MOV.L R1, 10H[R2]
000005E3                         L105:	; bb16.split
                                 ;     337 
                                 ;     338     err = usb_hmsc_SubmitutrReq(ptr, (uint16_t)USB_DATA_NONE, &usb_ghmsc_TransData[ptr->ip][msgnum]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",338
000005E3 A981                    		MOV.L 18H[R0], R1
000005E5 B992                    		MOVU.W 0CH[R1], R2
000005E7 B904                    		MOVU.W 08H[R0], R4
000005E9 76126001                		MUL #0160H, R2
000005ED FB32rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R3
000005F3 4B23                    		ADD R2, R3
000005F5 75142C                  		MUL #2CH, R4
000005F8 4B43                    		ADD R4, R3
000005FA 6612                    		MOV.L #00000001H, R2
000005FC 39rrrr               W  		BSR _usb_hmsc_SubmitutrReq
000005FF A009                    		MOV.L R1, 04H[R0]
00000601                         L106:	; bb16.split1
                                 ;     339     if( err != USB_E_OK ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",339
00000601 A809                    		MOV.L 04H[R0], R1
00000603 6101                    		CMP #00H, R1
00000605 10                   S  		BEQ L108
00000606                         L107:	; bb39
                                 ;     340     {
                                 ;     341         USB_PRINTF1("### Mass Storage Device Class submit error(drive:%d) !\n", drvnum);
                                 ;     342         return USB_HMSC_SUBMIT_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",342
00000606 F90901F9FF              		MOV.W #0FFF9H, 02H[R0]
0000060B 08                   S  		BRA L109
0000060C                         L108:	; bb45
                                 ;     343     }
                                 ;     344     return (err);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",344
0000060C A809                    		MOV.L 04H[R0], R1
0000060E 9009                    		MOV.W R1, 02H[R0]
00000610                         L109:	; bb49
00000610 D5000105                		MOV.W 02H[R0], 0AH[R0]
                                 ;     345 }   /* eof usb_hmsc_SendDataReq() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",345
00000614 B909                    		MOVU.W 0AH[R0], R1
00000616 6707                    		RTSD #1CH
00000618                         _usb_hmsc_SendDataCheck:
                                 		.STACK	_usb_hmsc_SendDataCheck=20
                                 ;     346 
                                 ;     347 /******************************************************************************
                                 ;     348 Function Name   : usb_hmsc_SendDataCheck
                                 ;     349 Description     : Check Send Data
                                 ;     350 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     351                 : uint16_t hmsc_retval      : Return Value
                                 ;     352 Return value    : uint16_t                  : Error Code
                                 ;     353 ******************************************************************************/
                                 ;     354 uint16_t usb_hmsc_SendDataCheck(USB_UTR_t *ptr, uint16_t drvnum, uint16_t hmsc_retval)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",354
00000618 7100F0                  		ADD #0FFFFFFF0H, R0
0000061B A089                    		MOV.L R1, 0CH[R0]
0000061D 910A                    		MOV.W R2, 0AH[R0]
0000061F 9103                    		MOV.W R3, 08H[R0]
                                 ;     355 {
                                 ;     356     uint16_t    pipeno, msgnum;
                                 ;     357     
                                 ;     358     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",358
00000621 B90A                    		MOVU.W 0AH[R0], R2
00000623 A889                    		MOV.L 0CH[R0], R1
00000625 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
00000629 9081                    		MOV.W R1, 04H[R0]
0000062B                         L111:	; entry.split
                                 ;     359     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",359
0000062B B881                    		MOVU.W 04H[R0], R1
0000062D 7701FFFF00              		CMP #0FFFFH, R1
00000632 18                   S  		BNE L113
00000633                         L112:	; bb9
                                 ;     360     {
                                 ;     361         return USB_HMSC_DAT_WR_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",361
00000633 F809FCFF                		MOV.W #0FFFCH, [R0]
00000637 38rrrr               W  		BRA L124
0000063A                         L113:	; bb15
                                 ;     362     }
                                 ;     363 
                                 ;     364     switch( hmsc_retval ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",364
0000063A B901                    		MOVU.W 08H[R0], R1
0000063C 6191                    		CMP #09H, R1
0000063E 20rr                    		BEQ L121
00000640                         L114:	; bb15
00000640 6161                    		CMP #06H, R1
00000642 20rr                    		BEQ L119
00000644                         L115:	; bb15
00000644 6111                    		CMP #01H, R1
00000646 3Brrrr               W  		BNE L123
00000649                         L116:	; bb18
                                 ;     365     {
                                 ;     366     case USB_DATA_NONE:
                                 ;     367         pipeno = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_OutPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",367
00000649 A889                    		MOV.L 0CH[R0], R1
0000064B B991                    		MOVU.W 0CH[R1], R1
0000064D FDC51E                  		SHLL #05H, R1, R14
00000650 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R15
00000656 4BEF                    		ADD R14, R15
00000658 B882                    		MOVU.W 04H[R0], R2
0000065A 6C22                    		SHLL #02H, R2
0000065C 4B2F                    		ADD R2, R15
0000065E 5CF2                    		MOVU.W [R15], R2
00000660 05rrrrrr             A  		BSR _R_usb_hmsc_Information
00000664 9009                    		MOV.W R1, 02H[R0]
00000666                         L117:	; bb18.split
                                 ;     368         usb_ghmsc_OutPipe[ptr->ip][msgnum][1] = usb_ghmsc_TransData[ptr->ip][msgnum].pipectr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",368
00000666 A889                    		MOV.L 0CH[R0], R1
00000668 B991                    		MOVU.W 0CH[R1], R1
0000066A FDC51E                  		SHLL #05H, R1, R14
0000066D FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R15
00000673 4BEF                    		ADD R14, R15
00000675 B882                    		MOVU.W 04H[R0], R2
00000677 FDC22E                  		SHLL #02H, R2, R14
0000067A 4BEF                    		ADD R14, R15
0000067C 76116001                		MUL #0160H, R1
00000680 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_TransData, R14
00000686 4B1E                    		ADD R1, R14
00000688 75122C                  		MUL #2CH, R2
0000068B 4B2E                    		ADD R2, R14
0000068D D5EF1101                		MOV.W 22H[R14], 02H[R15]
00000691                         L118:	; bb18.split1
                                 ;     369         return USB_HMSC_OK;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",369
00000691 F80500                  		MOV.W #0000H, [R0]
00000694 2Err                 B  		BRA L124
00000696                         L119:	; bb58
                                 ;     370         break;
                                 ;     371     case USB_DATA_STALL:
                                 ;     372         USB_PRINTF1("*** hmsc_Data Write STALL(drive:%d) !\n", drvnum);
                                 ;     373         R_usb_hmsc_ClearStall(ptr, (uint16_t)USB_DATA_NONE, msgnum, (USB_CB_t)usb_hmsc_ClearStallCheck2);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",373
00000696 B883                    		MOVU.W 04H[R0], R3
00000698 A889                    		MOV.L 0CH[R0], R1
0000069A FB42rrrrrrrr            		MOV.L #_usb_hmsc_ClearStallCheck2, R4
000006A0 6612                    		MOV.L #00000001H, R2
000006A2 05rrrrrr             A  		BSR _R_usb_hmsc_ClearStall
000006A6                         L120:	; bb58.split
                                 ;     374         return USB_HMSC_STALL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",374
000006A6 F809FFFF                		MOV.W #0FFFFH, [R0]
000006AA 2Err                 B  		BRA L124
000006AC                         L121:	; bb62
                                 ;     375         break;
                                 ;     376     case USB_DATA_TMO:
                                 ;     377         USB_PRINTF1("### hmsc_Data Write timeout ERROR(drive:%d) !\n", drvnum);
                                 ;     378         pipeno  = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_OutPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",378
000006AC A889                    		MOV.L 0CH[R0], R1
000006AE B991                    		MOVU.W 0CH[R1], R1
000006B0 FDC51E                  		SHLL #05H, R1, R14
000006B3 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R15
000006B9 4BEF                    		ADD R14, R15
000006BB B882                    		MOVU.W 04H[R0], R2
000006BD 6C22                    		SHLL #02H, R2
000006BF 4B2F                    		ADD R2, R15
000006C1 5CF2                    		MOVU.W [R15], R2
000006C3 05rrrrrr             A  		BSR _R_usb_hmsc_Information
000006C7 9009                    		MOV.W R1, 02H[R0]
000006C9                         L122:	; bb62.split
                                 ;     379         R_usb_hstd_TransferEnd(ptr, pipeno, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",379
000006C9 B80A                    		MOVU.W 02H[R0], R2
000006CB A889                    		MOV.L 0CH[R0], R1
000006CD 6693                    		MOV.L #00000009H, R3
000006CF 05rrrrrr             A  		BSR _R_usb_hstd_TransferEnd
000006D3                         L123:	; bb84
                                 ;     380         break;
                                 ;     381     case USB_DATA_ERR:
                                 ;     382         USB_PRINTF1("### hmsc_Data Write ERROR(drive:%d) !\n", drvnum);
                                 ;     383         break;
                                 ;     384     default:
                                 ;     385         USB_PRINTF1("### hmsc_Data Write error(drive:%d) !\n", drvnum);
                                 ;     386         break;
                                 ;     387     }
                                 ;     388     return USB_HMSC_DAT_WR_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",388
000006D3 F809FCFF                		MOV.W #0FFFCH, [R0]
000006D7                         L124:	; bb86
000006D7 D40003                  		MOV.W [R0], 06H[R0]
                                 ;     389 }   /* eof usb_hmsc_SendDataCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",389
000006DA B889                    		MOVU.W 06H[R0], R1
000006DC 6704                    		RTSD #10H
000006DE                         _usb_hmsc_GetCsw:
                                 		.STACK	_usb_hmsc_GetCsw=20
                                 ;     390 
                                 ;     391 /******************************************************************************
                                 ;     392 Function Name   : usb_hmsc_GetCsw
                                 ;     393 Description     : Receive CSW
                                 ;     394 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     395 Return value    : uint16_t                  : Error Code
                                 ;     396 ******************************************************************************/
                                 ;     397 uint16_t usb_hmsc_GetCsw(USB_UTR_t *ptr, uint16_t drvnum)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",397
000006DE 7100F0                  		ADD #0FFFFFFF0H, R0
000006E1 A089                    		MOV.L R1, 0CH[R0]
000006E3 910A                    		MOV.W R2, 0AH[R0]
                                 ;     398 {
                                 ;     399     uint16_t    msgnum;
                                 ;     400     USB_ER_t    err;
                                 ;     401 
                                 ;     402     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",402
000006E5 B90A                    		MOVU.W 0AH[R0], R2
000006E7 A889                    		MOV.L 0CH[R0], R1
000006E9 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
000006ED 9009                    		MOV.W R1, 02H[R0]
000006EF                         L126:	; entry.split
                                 ;     403     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",403
000006EF B809                    		MOVU.W 02H[R0], R1
000006F1 7701FFFF00              		CMP #0FFFFH, R1
000006F6 18                   S  		BNE L128
000006F7                         L127:	; bb8
                                 ;     404     {
                                 ;     405         return USB_HMSC_CSW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",405
000006F7 F809FBFF                		MOV.W #0FFFBH, [R0]
000006FB 38rrrr               W  		BRA L136
000006FE                         L128:	; bb14
                                 ;     406     }
                                 ;     407 
                                 ;     408     /* Request */
                                 ;     409     /* Device number */
                                 ;     410     usb_ghmsc_ReceiveData[ptr->ip][msgnum].keyword   = msgnum;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",410
000006FE A889                    		MOV.L 0CH[R0], R1
00000700 B991                    		MOVU.W 0CH[R1], R1
00000702 76116001                		MUL #0160H, R1
00000706 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
0000070C 4B12                    		ADD R1, R2
0000070E B809                    		MOVU.W 02H[R0], R1
00000710 EF1E                    		MOV.L R1, R14
00000712 751E2C                  		MUL #2CH, R14
00000715 4BE2                    		ADD R14, R2
00000717 90A9                    		MOV.W R1, 06H[R2]
00000719                         L129:	; bb14.split
                                 ;     411     /* Transfer data address */
                                 ;     412     usb_ghmsc_ReceiveData[ptr->ip][msgnum].tranadr   = (void*)&usb_ghmsc_Csw[ptr->ip][msgnum];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",412
00000719 A889                    		MOV.L 0CH[R0], R1
0000071B B991                    		MOVU.W 0CH[R1], R1
0000071D EF1E                    		MOV.L R1, R14
0000071F 761E6001                		MUL #0160H, R14
00000723 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
00000729 4BE2                    		ADD R14, R2
0000072B B80B                    		MOVU.W 02H[R0], R3
0000072D EF3E                    		MOV.L R3, R14
0000072F 751E2C                  		MUL #2CH, R14
00000732 4BE2                    		ADD R14, R2
00000734 6C91                    		SHLL #09H, R1
00000736 FB42rrrrrrrr            		MOV.L #_usb_ghmsc_Csw, R4
0000073C 4B14                    		ADD R1, R4
0000073E 6C63                    		SHLL #06H, R3
00000740 4B34                    		ADD R3, R4
00000742 A12C                    		MOV.L R4, 14H[R2]
00000744                         L130:	; bb14.split1
                                 ;     413     /* Transfer data length */
                                 ;     414     usb_ghmsc_ReceiveData[ptr->ip][msgnum].tranlen   = (uint32_t)USB_MSC_CSW_LENGTH;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",414
00000744 A889                    		MOV.L 0CH[R0], R1
00000746 B991                    		MOVU.W 0CH[R1], R1
00000748 76116001                		MUL #0160H, R1
0000074C FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
00000752 4B12                    		ADD R1, R2
00000754 B809                    		MOVU.W 02H[R0], R1
00000756 75112C                  		MUL #2CH, R1
00000759 4B12                    		ADD R1, R2
0000075B 3E260D                  		MOV.L #0000000DH, 18H[R2]
0000075E                         L131:	; bb14.split2
                                 ;     415     /* Not control transfer */
                                 ;     416     usb_ghmsc_ReceiveData[ptr->ip][msgnum].setup     = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",416
0000075E A889                    		MOV.L 0CH[R0], R1
00000760 B991                    		MOVU.W 0CH[R1], R1
00000762 76116001                		MUL #0160H, R1
00000766 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
0000076C 4B12                    		ADD R1, R2
0000076E B809                    		MOVU.W 02H[R0], R1
00000770 75112C                  		MUL #2CH, R1
00000773 4B12                    		ADD R1, R2
00000775 3E2700                  		MOV.L #00000000H, 1CH[R2]
00000778                         L132:	; bb14.split3
                                 ;     417     usb_ghmsc_ReceiveData[ptr->ip][msgnum].segment   = USB_TRAN_END;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",417
00000778 A889                    		MOV.L 0CH[R0], R1
0000077A B991                    		MOVU.W 0CH[R1], R1
0000077C 76116001                		MUL #0160H, R1
00000780 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R14
00000786 4B1E                    		ADD R1, R14
00000788 B809                    		MOVU.W 02H[R0], R1
0000078A 75112C                  		MUL #2CH, R1
0000078D 4B1E                    		ADD R1, R14
0000078F F9E42580                		MOV.B #80H, 25H[R14]
00000793                         L133:	; bb14.split4
                                 ;     418     /* Call Back Function Info */
                                 ;     419     usb_ghmsc_ReceiveData[ptr->ip][msgnum].complete  = (USB_CB_t)&usb_cstd_DummyFunction;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",419
00000793 A889                    		MOV.L 0CH[R0], R1
00000795 B991                    		MOVU.W 0CH[R1], R1
00000797 76116001                		MUL #0160H, R1
0000079B FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
000007A1 4B12                    		ADD R1, R2
000007A3 B809                    		MOVU.W 02H[R0], R1
000007A5 75112C                  		MUL #2CH, R1
000007A8 4B12                    		ADD R1, R2
000007AA FB12rrrrrrrr            		MOV.L #_usb_cstd_DummyFunction, R1
000007B0 A121                    		MOV.L R1, 10H[R2]
000007B2                         L134:	; bb14.split5
                                 ;     420 
                                 ;     421     err = usb_hmsc_Submitutr(ptr, (uint16_t)USB_DATA_OK, &usb_ghmsc_ReceiveData[ptr->ip][msgnum]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",421
000007B2 A889                    		MOV.L 0CH[R0], R1
000007B4 B992                    		MOVU.W 0CH[R1], R2
000007B6 B80C                    		MOVU.W 02H[R0], R4
000007B8 76126001                		MUL #0160H, R2
000007BC FB32rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R3
000007C2 4B23                    		ADD R2, R3
000007C4 75142C                  		MUL #2CH, R4
000007C7 4B43                    		ADD R4, R3
000007C9 6632                    		MOV.L #00000003H, R2
000007CB 39rrrr               W  		BSR _usb_hmsc_Submitutr
000007CE A009                    		MOV.L R1, 04H[R0]
000007D0                         L135:	; bb14.split6
                                 ;     422     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",422
000007D0 A809                    		MOV.L 04H[R0], R1
000007D2 D301                    		MOV.W R1, [R0]
000007D4                         L136:	; bb100
000007D4 D40004                  		MOV.W [R0], 08H[R0]
                                 ;     423 }   /* eof usb_hmsc_GetCsw() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",423
000007D7 B901                    		MOVU.W 08H[R0], R1
000007D9 6704                    		RTSD #10H
000007DB                         _usb_hmsc_GetCswReq:
                                 		.STACK	_usb_hmsc_GetCswReq=24
                                 ;     424 
                                 ;     425 /******************************************************************************
                                 ;     426 Function Name   : usb_hmsc_GetCswReq
                                 ;     427 Description     : Request Receive CSW
                                 ;     428 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     429 Return value    : uint16_t                  : Error Code
                                 ;     430 ******************************************************************************/
                                 ;     431 uint16_t usb_hmsc_GetCswReq(USB_UTR_t *ptr, uint16_t drvnum)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",431
000007DB 7100EC                  		ADD #0FFFFFFECH, R0
000007DE A101                    		MOV.L R1, 10H[R0]
000007E0 918A                    		MOV.W R2, 0EH[R0]
                                 ;     432 {
                                 ;     433     USB_ER_t    err;
                                 ;     434     uint16_t    msgnum;
                                 ;     435 
                                 ;     436     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",436
000007E2 B98A                    		MOVU.W 0EH[R0], R2
000007E4 A901                    		MOV.L 10H[R0], R1
000007E6 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
000007EA 9109                    		MOV.W R1, 0AH[R0]
000007EC                         L138:	; entry.split
                                 ;     437     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",437
000007EC B909                    		MOVU.W 0AH[R0], R1
000007EE 7701FFFF00              		CMP #0FFFFH, R1
000007F3 18                   S  		BNE L140
000007F4                         L139:	; bb8
                                 ;     438     {
                                 ;     439         return USB_HMSC_CSW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",439
000007F4 F90901FBFF              		MOV.W #0FFFBH, 02H[R0]
000007F9 2Err                 B  		BRA L146
000007FB                         L140:	; bb14
                                 ;     440     }
                                 ;     441 
                                 ;     442     /* Transfer data length */
                                 ;     443     usb_ghmsc_ReceiveData[ptr->ip][msgnum].tranlen   = (uint32_t)USB_MSC_CSW_LENGTH;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",443
000007FB A901                    		MOV.L 10H[R0], R1
000007FD B991                    		MOVU.W 0CH[R1], R1
000007FF 76116001                		MUL #0160H, R1
00000803 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
00000809 4B12                    		ADD R1, R2
0000080B B909                    		MOVU.W 0AH[R0], R1
0000080D 75112C                  		MUL #2CH, R1
00000810 4B12                    		ADD R1, R2
00000812 3E260D                  		MOV.L #0000000DH, 18H[R2]
00000815                         L141:	; bb14.split
                                 ;     444     /* Call Back Function Info */
                                 ;     445     usb_ghmsc_ReceiveData[ptr->ip][msgnum].complete  = &usb_hmsc_CheckResult;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",445
00000815 A901                    		MOV.L 10H[R0], R1
00000817 B991                    		MOVU.W 0CH[R1], R1
00000819 76116001                		MUL #0160H, R1
0000081D FB22rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R2
00000823 4B12                    		ADD R1, R2
00000825 B909                    		MOVU.W 0AH[R0], R1
00000827 75112C                  		MUL #2CH, R1
0000082A 4B12                    		ADD R1, R2
0000082C FB12rrrrrrrr            		MOV.L #_usb_hmsc_CheckResult, R1
00000832 A121                    		MOV.L R1, 10H[R2]
00000834                         L142:	; bb14.split1
                                 ;     446 
                                 ;     447     err = usb_hmsc_SubmitutrReq(ptr, (uint16_t)USB_DATA_OK, &usb_ghmsc_ReceiveData[ptr->ip][msgnum]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",447
00000834 A901                    		MOV.L 10H[R0], R1
00000836 B992                    		MOVU.W 0CH[R1], R2
00000838 B90C                    		MOVU.W 0AH[R0], R4
0000083A 76126001                		MUL #0160H, R2
0000083E FB32rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R3
00000844 4B23                    		ADD R2, R3
00000846 75142C                  		MUL #2CH, R4
00000849 4B43                    		ADD R4, R3
0000084B 6632                    		MOV.L #00000003H, R2
0000084D 39rrrr               W  		BSR _usb_hmsc_SubmitutrReq
00000850 A009                    		MOV.L R1, 04H[R0]
00000852                         L143:	; bb14.split2
                                 ;     448     if( err != USB_E_OK ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",448
00000852 A809                    		MOV.L 04H[R0], R1
00000854 6101                    		CMP #00H, R1
00000856 10                   S  		BEQ L145
00000857                         L144:	; bb47
                                 ;     449     {
                                 ;     450         USB_PRINTF1("### Mass Storage Device Class submit error(drive:%d) !\n", drvnum);
                                 ;     451         return USB_HMSC_SUBMIT_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",451
00000857 F90901F9FF              		MOV.W #0FFF9H, 02H[R0]
0000085C 08                   S  		BRA L146
0000085D                         L145:	; bb53
                                 ;     452     }
                                 ;     453     return (err);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",453
0000085D A809                    		MOV.L 04H[R0], R1
0000085F 9009                    		MOV.W R1, 02H[R0]
00000861                         L146:	; bb57
00000861 D5000106                		MOV.W 02H[R0], 0CH[R0]
                                 ;     454 }   /* eof usb_hmsc_GetCswReq() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",454
00000865 B981                    		MOVU.W 0CH[R0], R1
00000867 6705                    		RTSD #14H
00000869                         _usb_hmsc_GetCswCheck:
                                 		.STACK	_usb_hmsc_GetCswCheck=20
                                 ;     455 
                                 ;     456 /******************************************************************************
                                 ;     457 Function Name   : usb_hmsc_GetCswCheck
                                 ;     458 Description     : Check Receive CSW
                                 ;     459 Arguments       : uint16_t drvnum           : Drive Number
                                 ;     460                 : uint16_t hmsc_retval      : Return Value
                                 ;     461 Return value    : uint16_t                  : Error Code
                                 ;     462 ******************************************************************************/
                                 ;     463 uint16_t usb_hmsc_GetCswCheck(USB_UTR_t *ptr, uint16_t drvnum, uint16_t hmsc_retval)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",463
00000869 7100F0                  		ADD #0FFFFFFF0H, R0
0000086C A089                    		MOV.L R1, 0CH[R0]
0000086E 910A                    		MOV.W R2, 0AH[R0]
00000870 9103                    		MOV.W R3, 08H[R0]
                                 ;     464 {
                                 ;     465     uint16_t        pipeno, msgnum;
                                 ;     466 
                                 ;     467     msgnum = usb_hmsc_SmpDrive2Msgnum(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",467
00000872 B90A                    		MOVU.W 0AH[R0], R2
00000874 A889                    		MOV.L 0CH[R0], R1
00000876 05rrrrrr             A  		BSR _usb_hmsc_SmpDrive2Msgnum
0000087A 9081                    		MOV.W R1, 04H[R0]
0000087C                         L148:	; entry.split
                                 ;     468     if( USB_ERROR == msgnum )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",468
0000087C B881                    		MOVU.W 04H[R0], R1
0000087E 7701FFFF00              		CMP #0FFFFH, R1
00000883 18                   S  		BNE L150
00000884                         L149:	; bb9
                                 ;     469     {
                                 ;     470         return USB_HMSC_CSW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",470
00000884 F809FBFF                		MOV.W #0FFFBH, [R0]
00000888 38rrrr               W  		BRA L160
0000088B                         L150:	; bb15
                                 ;     471     }
                                 ;     472 
                                 ;     473     switch( hmsc_retval ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",473
0000088B B901                    		MOVU.W 08H[R0], R1
0000088D 6191                    		CMP #09H, R1
0000088F 20rr                    		BEQ L157
00000891                         L151:	; bb15
00000891 6161                    		CMP #06H, R1
00000893 20rr                    		BEQ L156
00000895                         L152:	; bb15
00000895 6031                    		SUB #03H, R1
00000897 6111                    		CMP #01H, R1
00000899 25rr                  * 		BGTU L159
         38rrrr                  
0000089E                         L153:	; bb18
                                 ;     474     {
                                 ;     475     case USB_DATA_SHT:
                                 ;     476         /* Continue */
                                 ;     477     case USB_DATA_OK:
                                 ;     478         /* CSW Check */
                                 ;     479         pipeno = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_InPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",479
0000089E A889                    		MOV.L 0CH[R0], R1
000008A0 B991                    		MOVU.W 0CH[R1], R1
000008A2 FDC51E                  		SHLL #05H, R1, R14
000008A5 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R15
000008AB 4BEF                    		ADD R14, R15
000008AD B882                    		MOVU.W 04H[R0], R2
000008AF 6C22                    		SHLL #02H, R2
000008B1 4B2F                    		ADD R2, R15
000008B3 5CF2                    		MOVU.W [R15], R2
000008B5 05rrrrrr             A  		BSR _R_usb_hmsc_Information
000008B9 9009                    		MOV.W R1, 02H[R0]
000008BB                         L154:	; bb18.split
                                 ;     480         usb_ghmsc_InPipe[ptr->ip][msgnum][1] = usb_ghmsc_ReceiveData[ptr->ip][msgnum].pipectr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",480
000008BB A889                    		MOV.L 0CH[R0], R1
000008BD B991                    		MOVU.W 0CH[R1], R1
000008BF FDC51E                  		SHLL #05H, R1, R14
000008C2 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R15
000008C8 4BEF                    		ADD R14, R15
000008CA B882                    		MOVU.W 04H[R0], R2
000008CC FDC22E                  		SHLL #02H, R2, R14
000008CF 4BEF                    		ADD R14, R15
000008D1 76116001                		MUL #0160H, R1
000008D5 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_ReceiveData, R14
000008DB 4B1E                    		ADD R1, R14
000008DD 75122C                  		MUL #2CH, R2
000008E0 4B2E                    		ADD R2, R14
000008E2 D5EF1101                		MOV.W 22H[R14], 02H[R15]
000008E6                         L155:	; bb18.split1
                                 ;     481         return usb_hmsc_CheckCsw(ptr, drvnum);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",481
000008E6 B90A                    		MOVU.W 0AH[R0], R2
000008E8 A889                    		MOV.L 0CH[R0], R1
000008EA 05rrrrrr             A  		BSR _usb_hmsc_CheckCsw
000008EE D301                    		MOV.W R1, [R0]
000008F0 2Err                 B  		BRA L160
000008F2                         L156:	; bb61
                                 ;     482         break;
                                 ;     483     case USB_DATA_STALL:
                                 ;     484         /* Stall */
                                 ;     485         USB_PRINTF1("*** GetCSW Transfer STALL(drive:%d) !\n", drvnum);
                                 ;     486         return USB_MSG_HMSC_DATA_STALL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",486
000008F2 F8090705                		MOV.W #0507H, [R0]
000008F6 2Err                 B  		BRA L160
000008F8                         L157:	; bb63
                                 ;     487         break;
                                 ;     488     case USB_DATA_TMO:
                                 ;     489         /* Timeout */
                                 ;     490         USB_PRINTF1("### usb_hmscCSW Transfer timeout ERROR(drive:%d) !\n", drvnum);
                                 ;     491         pipeno = R_usb_hmsc_Information(ptr->ip, usb_ghmsc_InPipe[ptr->ip][msgnum][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",491
000008F8 A889                    		MOV.L 0CH[R0], R1
000008FA B991                    		MOVU.W 0CH[R1], R1
000008FC FDC51E                  		SHLL #05H, R1, R14
000008FF FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R15
00000905 4BEF                    		ADD R14, R15
00000907 B882                    		MOVU.W 04H[R0], R2
00000909 6C22                    		SHLL #02H, R2
0000090B 4B2F                    		ADD R2, R15
0000090D 5CF2                    		MOVU.W [R15], R2
0000090F 05rrrrrr             A  		BSR _R_usb_hmsc_Information
00000913 9009                    		MOV.W R1, 02H[R0]
00000915                         L158:	; bb63.split
                                 ;     492         R_usb_hstd_TransferEnd(ptr, pipeno, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",492
00000915 B80A                    		MOVU.W 02H[R0], R2
00000917 A889                    		MOV.L 0CH[R0], R1
00000919 6693                    		MOV.L #00000009H, R3
0000091B 05rrrrrr             A  		BSR _R_usb_hstd_TransferEnd
0000091F                         L159:	; bb86
                                 ;     493         break;
                                 ;     494     case USB_DATA_ERR:
                                 ;     495         USB_PRINTF1("### usb_hmscCSW Transfer ERROR(drive:%d) !\n"
                                 ;     496             , drvnum);
                                 ;     497         break;
                                 ;     498     case USB_DATA_OVR:
                                 ;     499         USB_PRINTF1("### usb_hmscCSW receive over(drive:%d) !\n", drvnum);
                                 ;     500         break;
                                 ;     501     default:
                                 ;     502         USB_PRINTF1("### usb_hmscCSW Transfer error(drive:%d) !\n", drvnum);
                                 ;     503         break;
                                 ;     504     }
                                 ;     505     return USB_HMSC_CSW_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",505
0000091F F809FBFF                		MOV.W #0FFFBH, [R0]
00000923                         L160:	; bb88
00000923 D40003                  		MOV.W [R0], 06H[R0]
                                 ;     506 }   /* eof usb_hmsc_GetCswCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",506
00000926 B889                    		MOVU.W 06H[R0], R1
00000928 6704                    		RTSD #10H
0000092A                         _usb_hmsc_GetStringInfoCheck:
                                 		.STACK	_usb_hmsc_GetStringInfoCheck=12
                                 ;     507 
                                 ;     508 /******************************************************************************
                                 ;     509 Function Name   : usb_hmsc_GetStringInfoCheck
                                 ;     510 Description     : Check Get string descriptor infomation
                                 ;     511 Arguments       : uint16_t devaddr          : Device Address
                                 ;     512 Return value    : uint16_t                  : Error Code
                                 ;     513 ******************************************************************************/
                                 ;     514 uint16_t usb_hmsc_GetStringInfoCheck(USB_UTR_t *ptr, uint16_t devaddr)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",514
0000092A 6080                    		SUB #08H, R0
0000092C A009                    		MOV.L R1, 04H[R0]
0000092E 900A                    		MOV.W R2, 02H[R0]
                                 ;     515 {
                                 ;     516 /* Condition compilation by the difference of useful function */
                                 ;     517  #ifdef USB_DEBUGPRINT_PP
                                 ;     518     uint32_t    j;
                                 ;     519     uint8_t     pdata[32];
                                 ;     520  #endif /* USB_DEBUGPRINT_PP */
                                 ;     521 
                                 ;     522     if( usb_ghmsc_ClassData[ptr->ip][0] < (uint8_t)(30 * 2 + 2) ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",522
00000930 A809                    		MOV.L 04H[R0], R1
00000932 B991                    		MOVU.W 0CH[R1], R1
00000934 6C91                    		SHLL #09H, R1
00000936 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_ClassData, R14
0000093C FECE1F                  		MOVU.B [R14,R1], R15
0000093F 4B1E                    		ADD R1, R14
00000941 755F3D                  		CMP #3DH, R15
00000944 2Arr                    		BGT L164
00000946                         L162:	; bb3
                                 ;     523     {
                                 ;     524         USB_PRINTF0("*** Serial Number short\n");
                                 ;     525         usb_ghmsc_ClassData[ptr->ip][0]  = (uint8_t)(usb_ghmsc_ClassData[ptr->ip][0] / 2);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",525
00000946 A809                    		MOV.L 04H[R0], R1
00000948 B991                    		MOVU.W 0CH[R1], R1
0000094A 6C91                    		SHLL #09H, R1
0000094C FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_ClassData, R15
00000952 FECF1F                  		MOVU.B [R15,R1], R15
00000955 681F                    		SHLR #01H, R15
00000957 C3EF                    		MOV.B R15, [R14]
00000959                         L163:	; bb3.split
                                 ;     526         usb_ghmsc_ClassData[ptr->ip][0]  = (uint8_t)(usb_ghmsc_ClassData[ptr->ip][0] - 1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",526
00000959 ED0E01                  		MOV.L 04H[R0], R14
0000095C 5DEE06                  		MOVU.W 0CH[R14], R14
0000095F 6C9E                    		SHLL #09H, R14
00000961 FBF2rrrrrrrr            		MOV.L #_usb_ghmsc_ClassData, R15
00000967 FECFE5                  		MOVU.B [R15,R14], R5
0000096A 6015                    		SUB #01H, R5
0000096C FE0FE5                  		MOV.B R5, [R15,R14]
0000096F 08                   S  		BRA L165
00000970                         L164:	; bb40
                                 ;     527     } 
                                 ;     528     else 
                                 ;     529     {
                                 ;     530         usb_ghmsc_ClassData[ptr->ip][0]  = 30;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",530
00000970 F8E41E                  		MOV.B #1EH, [R14]
00000973                         L165:	; bb59
                                 ;     531     }
                                 ;     532 /* Condition compilation by the difference of useful function */
                                 ;     533  #ifdef USB_DEBUGPRINT_PP
                                 ;     534     for( j = (uint16_t)0; j < usb_ghmsc_ClassData[ptr->ip][0]; j++ ) 
                                 ;     535     {
                                 ;     536         pdata[j]    = usb_ghmsc_ClassData[ptr->ip][j * (uint16_t)2 + (uint16_t)2];
                                 ;     537     }
                                 ;     538     pdata[usb_ghmsc_ClassData[ptr->ip][0]] = 0;
                                 ;     539     USB_PRINTF1("    Serial Number : %s\n", pdata);
                                 ;     540     if( usb_ghmsc_ClassData[ptr->ip][0] < (uint8_t)(12 * 2 + 2) ) 
                                 ;     541     {
                                 ;     542     }
                                 ;     543  #endif /* USB_DEBUGPRINT_PP */
                                 ;     544     return USB_DONE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",544
00000973 F80500                  		MOV.W #0000H, [R0]
00000976 DC01                    		MOV.W [R0], R1
00000978                         L166:	; bb59.split
                                 ;     545 }   /* eof usb_hmsc_GetStringInfoCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",545
00000978 5F11                    		MOVU.W R1, R1
0000097A 6702                    		RTSD #08H
0000097C                         _usb_hmsc_GetMaxUnitCheck:
                                 		.STACK	_usb_hmsc_GetMaxUnitCheck=16
                                 ;     546 
                                 ;     547 /******************************************************************************
                                 ;     548 Function Name   : usb_hmsc_GetMaxUnitCheck
                                 ;     549 Description     : Check Get Max LUN request
                                 ;     550 Argument        : uint16_t err              : Error Code
                                 ;     551 Return value    : USB_ER_t                 : Error Code
                                 ;     552 ******************************************************************************/
                                 ;     553 uint16_t usb_hmsc_GetMaxUnitCheck(USB_UTR_t *ptr, uint16_t err)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",553
0000097C 60C0                    		SUB #0CH, R0
0000097E A081                    		MOV.L R1, 08H[R0]
00000980 908A                    		MOV.W R2, 06H[R0]
                                 ;     554 {
                                 ;     555     if( err == (uint16_t)USB_DATA_STALL ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",555
00000982 6162                    		CMP #06H, R2
00000984 18                   S  		BNE L169
00000985                         L168:	; bb3
                                 ;     556     {
                                 ;     557         USB_PRINTF0("*** GetMaxUnit not support !\n");
                                 ;     558         return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",558
00000985 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
0000098A 2Err                 B  		BRA L175
0000098C                         L169:	; bb6
                                 ;     559     } 
                                 ;     560     else if( err == (uint16_t)USB_DATA_TMO ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",560
0000098C B889                    		MOVU.W 06H[R0], R1
0000098E 6191                    		CMP #09H, R1
00000990 21rr                    		BNE L172
00000992                         L170:	; bb7
                                 ;     561     {
                                 ;     562         USB_PRINTF0("*** GetMaxUnit not support(time out) !\n");
                                 ;     563         usb_hmsc_ControlEnd(ptr, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",563
00000992 A881                    		MOV.L 08H[R0], R1
00000994 6692                    		MOV.L #00000009H, R2
00000996 39rrrr               W  		BSR _usb_hmsc_ControlEnd
00000999                         L171:	; bb7.split
                                 ;     564         return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",564
00000999 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
0000099E 2Err                 B  		BRA L175
000009A0                         L172:	; bb11
                                 ;     565     } 
                                 ;     566     else if( err != (uint16_t)USB_CTRL_END ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",566
000009A0 B889                    		MOVU.W 06H[R0], R1
000009A2 6101                    		CMP #00H, R1
000009A4 10                   S  		BEQ L174
000009A5                         L173:	; bb12
                                 ;     567     {
                                 ;     568         USB_PRINTF1(
                                 ;     569             "### [GetMaxUnit] control transfer error(%d) !\n", err);
                                 ;     570         return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",570
000009A5 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
000009AA 2Err                 B  		BRA L175
000009AC                         L174:	; bb31
                                 ;     571     } 
                                 ;     572     else 
                                 ;     573     {
                                 ;     574     }
                                 ;     575     return (usb_ghmsc_Data[ptr->ip][0]);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",575
000009AC A881                    		MOV.L 08H[R0], R1
000009AE B991                    		MOVU.W 0CH[R1], R1
000009B0 76110014                		MUL #1400H, R1
000009B4 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_Data, R14
000009BA FECE11                  		MOVU.B [R14,R1], R1
000009BD 9009                    		MOV.W R1, 02H[R0]
000009BF                         L175:	; bb42
000009BF D5000102                		MOV.W 02H[R0], 04H[R0]
                                 ;     576 }   /* eof usb_hmsc_GetMaxUnitCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",576
000009C3 B881                    		MOVU.W 04H[R0], R1
000009C5 6703                    		RTSD #0CH
000009C7                         _usb_hmsc_MassStorageResetCheck:
                                 		.STACK	_usb_hmsc_MassStorageResetCheck=16
                                 ;     577 
                                 ;     578 /******************************************************************************
                                 ;     579 Function Name   : usb_hmsc_MassStorageResetCheck
                                 ;     580 Description     : Check Mass Strage Reset request
                                 ;     581 Argument        : uint16_t err              : Error Code
                                 ;     582 Return value    : USB_ER_t                 : Error Code
                                 ;     583 ******************************************************************************/
                                 ;     584 uint16_t usb_hmsc_MassStorageResetCheck(USB_UTR_t *ptr, uint16_t err)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",584
000009C7 60C0                    		SUB #0CH, R0
000009C9 A081                    		MOV.L R1, 08H[R0]
000009CB 908A                    		MOV.W R2, 06H[R0]
                                 ;     585 {
                                 ;     586     if( err == (uint16_t)USB_DATA_STALL ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",586
000009CD 6162                    		CMP #06H, R2
000009CF 18                   S  		BNE L178
000009D0                         L177:	; bb3
                                 ;     587     {
                                 ;     588         USB_PRINTF0("*** MassStorageReset not support !\n");
                                 ;     589         return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",589
000009D0 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
000009D5 2Err                 B  		BRA L184
000009D7                         L178:	; bb6
                                 ;     590     } 
                                 ;     591     else if( err == (uint16_t)USB_DATA_TMO ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",591
000009D7 B889                    		MOVU.W 06H[R0], R1
000009D9 6191                    		CMP #09H, R1
000009DB 21rr                    		BNE L181
000009DD                         L179:	; bb7
                                 ;     592     {
                                 ;     593         USB_PRINTF0("*** MassStorageReset not support(time out) !\n");
                                 ;     594         usb_hmsc_ControlEnd(ptr, (uint16_t)USB_DATA_TMO);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",594
000009DD A881                    		MOV.L 08H[R0], R1
000009DF 6692                    		MOV.L #00000009H, R2
000009E1 39rrrr               W  		BSR _usb_hmsc_ControlEnd
000009E4                         L180:	; bb7.split
                                 ;     595         return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",595
000009E4 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
000009E9 2Err                 B  		BRA L184
000009EB                         L181:	; bb11
                                 ;     596     } 
                                 ;     597     else if( err != (uint16_t)USB_CTRL_END ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",597
000009EB B889                    		MOVU.W 06H[R0], R1
000009ED 6101                    		CMP #00H, R1
000009EF 10                   S  		BEQ L183
000009F0                         L182:	; bb12
                                 ;     598     {
                                 ;     599         USB_PRINTF1("### [MassStorageReset] control transfer error(%d) !\n", err);
                                 ;     600         return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",600
000009F0 F90901FFFF              		MOV.W #0FFFFH, 02H[R0]
000009F5 08                   S  		BRA L184
000009F6                         L183:	; bb31
                                 ;     601     } 
                                 ;     602     else 
                                 ;     603     {
                                 ;     604     }
                                 ;     605     return USB_DONE;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",605
000009F6 3D0100                  		MOV.W #0000H, 02H[R0]
000009F9                         L184:	; bb33
000009F9 D5000102                		MOV.W 02H[R0], 04H[R0]
                                 ;     606 }   /* eof usb_hmsc_MassStorageResetCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",606
000009FD B881                    		MOVU.W 04H[R0], R1
000009FF 6703                    		RTSD #0CH
00000A01                         _usb_hmsc_ClearStall:
                                 		.STACK	_usb_hmsc_ClearStall=24
                                 ;     607 
                                 ;     608 /******************************************************************************
                                 ;     609 Function Name   : usb_hmsc_ClearStall
                                 ;     610 Description     : Clear Stall
                                 ;     611 Arguments       : uint16_t Pipe : 
                                 ;     612                 : USB_CB_t complete : 
                                 ;     613 Return value    : uint16_t
                                 ;     614 ******************************************************************************/
                                 ;     615 USB_ER_t usb_hmsc_ClearStall(USB_UTR_t *ptr, uint16_t Pipe, USB_CB_t complete)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",615
00000A01 7100EC                  		ADD #0FFFFFFECH, R0
00000A04 A101                    		MOV.L R1, 10H[R0]
00000A06 918A                    		MOV.W R2, 0EH[R0]
00000A08 A083                    		MOV.L R3, 08H[R0]
                                 ;     616 {
                                 ;     617     USB_ER_t    err;
                                 ;     618 
                                 ;     619     err = R_usb_hstd_ChangeDeviceState(ptr, (USB_CB_t)complete, USB_DO_CLR_STALL, Pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",619
00000A0A B98C                    		MOVU.W 0EH[R0], R4
00000A0C A901                    		MOV.L 10H[R0], R1
00000A0E FBEA0902                		MOV.L #00000209H, R14
00000A12 EF32                    		MOV.L R3, R2
00000A14 EFE3                    		MOV.L R14, R3
00000A16 05rrrrrr             A  		BSR _R_usb_hstd_ChangeDeviceState
00000A1A E301                    		MOV.L R1, [R0]
00000A1C                         L186:	; entry.split
                                 ;     620     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",620
00000A1C EC01                    		MOV.L [R0], R1
00000A1E A009                    		MOV.L R1, 04H[R0]
00000A20                         L187:	; entry.split1
                                 ;     621 }   /* eof usb_hmsc_ClearStall() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",621
00000A20 6705                    		RTSD #14H
00000A22                         _usb_hmsc_ClearStallCheck:
                                 		.STACK	_usb_hmsc_ClearStallCheck=12
                                 ;     622 
                                 ;     623 /******************************************************************************
                                 ;     624 Function Name   : usb_hmsc_ClearStallCheck
                                 ;     625 Description     : Clear Stall Check
                                 ;     626 Arguments       : uint16_t errcheck : 
                                 ;     627 Return value    : uint16_t
                                 ;     628 ******************************************************************************/
                                 ;     629 void usb_hmsc_ClearStallCheck(USB_UTR_t *ptr, uint16_t errcheck)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",629
00000A22 6080                    		SUB #08H, R0
00000A24 A009                    		MOV.L R1, 04H[R0]
00000A26 900A                    		MOV.W R2, 02H[R0]
                                 ;     630 {
                                 ;     631     uint16_t retval;
                                 ;     632 
                                 ;     633     retval = usb_hmsc_StdReqCheck(errcheck);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",633
00000A28 B809                    		MOVU.W 02H[R0], R1
00000A2A 05rrrrrr             A  		BSR _usb_hmsc_StdReqCheck
00000A2E D301                    		MOV.W R1, [R0]
00000A30                         L189:	; entry.split
                                 ;     634     if( retval == USB_DONE )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",634
00000A30 5C01                    		MOVU.W [R0], R1
00000A32 6101                    		CMP #00H, R1
00000A34 21rr                    		BNE L192
00000A36                         L190:	; bb5
                                 ;     635     {
                                 ;     636         /* Clear STALL */
                                 ;     637         usb_cstd_ClrStall(ptr, (uint16_t)USB_PIPE0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",637
00000A36 A809                    		MOV.L 04H[R0], R1
00000A38 6602                    		MOV.L #00000000H, R2
00000A3A 05rrrrrr             A  		BSR _usb_cstd_ClrStall
00000A3E                         L191:	; bb5.split
                                 ;     638 
                                 ;     639         /* SQCLR */
                                 ;     640         R_usb_hstd_ChangeDeviceState(ptr, (USB_CB_t)&usb_cstd_DummyFunction, USB_DO_CLR_SQTGL, (uint16_t)USB_PIPE0 );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",640
00000A3E A809                    		MOV.L 04H[R0], R1
00000A40 6604                    		MOV.L #00000000H, R4
00000A42 FB3A0B02                		MOV.L #0000020BH, R3
00000A46 FB22rrrrrrrr            		MOV.L #_usb_cstd_DummyFunction, R2
00000A4C 05rrrrrr             A  		BSR _R_usb_hstd_ChangeDeviceState
00000A50 6702                    		RTSD #08H
00000A52                         L192:	; return
                                 ;     641     }
                                 ;     642 }   /* eof usb_hmsc_ClearStallCheck() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",642
00000A52 6702                    		RTSD #08H
00000A54                         _usb_hmsc_ClearStallCheck2:
                                 		.STACK	_usb_hmsc_ClearStallCheck2=12
                                 ;     643 
                                 ;     644 /******************************************************************************
                                 ;     645 Function Name   : usb_hmsc_ClearStallCheck2
                                 ;     646 Description     : Clear Stall Check 2
                                 ;     647 Arguments       : USB_UTR_t *mess : 
                                 ;     648 Return value    : none
                                 ;     649 ******************************************************************************/
                                 ;     650 void usb_hmsc_ClearStallCheck2(USB_UTR_t *mess)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",650
00000A54 6080                    		SUB #08H, R0
00000A56 A009                    		MOV.L R1, 04H[R0]
                                 ;     651 {
                                 ;     652     uint16_t errcheck;
                                 ;     653 
                                 ;     654     errcheck = mess->status;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",654
00000A58 D5101001                		MOV.W 20H[R1], 02H[R0]
00000A5C                         L194:	; entry.split
                                 ;     655     usb_hmsc_ClearStallCheck(mess, errcheck);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",655
00000A5C B80A                    		MOVU.W 02H[R0], R2
00000A5E A809                    		MOV.L 04H[R0], R1
00000A60 39rrrr               W  		BSR _usb_hmsc_ClearStallCheck
00000A63                         L195:	; entry.split1
                                 ;     656 
                                 ;     657     mess->msginfo = usb_shmsc_Process[mess->ip];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",657
00000A63 A809                    		MOV.L 04H[R0], R1
00000A65 B992                    		MOVU.W 0CH[R1], R2
00000A67 FBE2rrrrrrrr            		MOV.L #_usb_shmsc_Process, R14
00000A6D FE52E2                  		MOV.W [R2,R14], R2
00000A70 9092                    		MOV.W R2, 04H[R1]
00000A72                         L196:	; entry.split2
                                 ;     658     usb_hmsc_SpecifiedPath((USB_CLSINFO_t *)mess);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",658
00000A72 A809                    		MOV.L 04H[R0], R1
00000A74 05rrrrrr             A  		BSR _usb_hmsc_SpecifiedPath
00000A78 6702                    		RTSD #08H
00000A7A                         _usb_hmsc_Submitutr:
                                 		.STACK	_usb_hmsc_Submitutr=36
                                 ;     659 }   /* eof usb_hmsc_ClearStallCheck2() */
                                 ;     660 
                                 ;     661 /******************************************************************************
                                 ;     662 Function Name   : usb_hmsc_Submitutr
                                 ;     663 Description     : Data transfer request
                                 ;     664 Argument        : uint16_t type             : Data Transmit/Data Receive
                                 ;     665                 : USB_UTR_t *utr_table     : Information Table
                                 ;     666 Return value    : USB_ER_t                 : Error Code
                                 ;     667 ******************************************************************************/
                                 ;     668 USB_ER_t usb_hmsc_Submitutr(USB_UTR_t *ptr, uint16_t type, USB_UTR_t *utr_table)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",668
00000A7A 7100E0                  		ADD #0FFFFFFE0H, R0
00000A7D A189                    		MOV.L R1, 1CH[R0]
00000A7F 930A                    		MOV.W R2, 1AH[R0]
00000A81 A10B                    		MOV.L R3, 14H[R0]
                                 ;     669 {
                                 ;     670     uint16_t    msgnum, pipeno, offset2;
                                 ;     671     USB_ER_t    err;
                                 ;     672 
                                 ;     673     usb_shmsc_MsgNum[ptr->ip] = utr_table->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",673
00000A83 A989                    		MOV.L 1CH[R0], R1
00000A85 B991                    		MOVU.W 0CH[R1], R1
00000A87 98BA                    		MOV.W 06H[R3], R2
00000A89 FBE2rrrrrrrr            		MOV.L #_usb_shmsc_MsgNum, R14
00000A8F FE11E2                  		MOV.W R2, [R1,R14]
00000A92                         L198:	; entry.split
                                 ;     674 
                                 ;     675     switch( type ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",675
00000A92 BB09                    		MOVU.W 1AH[R0], R1
00000A94 6131                    		CMP #03H, R1
00000A96 3Arrrr               W  		BEQ L210
00000A99                         L199:	; entry.split
00000A99 6111                    		CMP #01H, R1
00000A9B 3Brrrr               W  		BNE L220
00000A9E                         L200:	; bb18
                                 ;     676     {
                                 ;     677     case USB_CTRL_END:                      /* Control transfer */
                                 ;     678         break;
                                 ;     679     case USB_DATA_NONE:                     /* Data transmit */
                                 ;     680         msgnum              = utr_table->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",680
00000A9E A909                    		MOV.L 14H[R0], R1
00000AA0 D5100303                		MOV.W 06H[R1], 06H[R0]
00000AA4                         L201:	; bb18.split
                                 ;     681         offset2             = usb_ghmsc_OutPipe[ptr->ip][msgnum][0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",681
00000AA4 A989                    		MOV.L 1CH[R0], R1
00000AA6 B991                    		MOVU.W 0CH[R1], R1
00000AA8 6C51                    		SHLL #05H, R1
00000AAA FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R14
00000AB0 4B1E                    		ADD R1, R14
00000AB2 B889                    		MOVU.W 06H[R0], R1
00000AB4 6C21                    		SHLL #02H, R1
00000AB6 4B1E                    		ADD R1, R14
00000AB8 D4E005                  		MOV.W [R14], 0AH[R0]
00000ABB                         L202:	; bb18.split1
                                 ;     682         if( USB_NOPORT == offset2 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",682
00000ABB B909                    		MOVU.W 0AH[R0], R1
00000ABD 7701FFFF00              		CMP #0FFFFH, R1
00000AC2 18                   S  		BNE L204
00000AC3                         L203:	; bb35
                                 ;     683         {
                                 ;     684             USB_PRINTF3("### USB_NOPORT error IP[%d] MSGNUM[%d] OFFSET[%x]\n", ptr->ip, msgnum, offset2 );
                                 ;     685             return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",685
00000AC3 F80EFFFF00              		MOV.L #0000FFFFH, [R0]
00000AC8 38rrrr               W  		BRA L221
00000ACB                         L204:	; bb41
                                 ;     686         }
                                 ;     687         pipeno              = R_usb_hmsc_Information(ptr->ip, offset2);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",687
00000ACB A989                    		MOV.L 1CH[R0], R1
00000ACD B991                    		MOVU.W 0CH[R1], R1
00000ACF B90A                    		MOVU.W 0AH[R0], R2
00000AD1 05rrrrrr             A  		BSR _R_usb_hmsc_Information
00000AD5 9101                    		MOV.W R1, 08H[R0]
00000AD7                         L205:	; bb41.split
                                 ;     688         if( USB_PIPE5 < pipeno )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",688
00000AD7 B901                    		MOVU.W 08H[R0], R1
00000AD9 6161                    		CMP #06H, R1
00000ADB 23rr                    		BLTU L207
00000ADD                         L206:	; bb48
                                 ;     689         {
                                 ;     690             USB_PRINTF1("### PIPE No. error[%d]\n", pipeno);
                                 ;     691             return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",691
00000ADD F80EFFFF00              		MOV.L #0000FFFFH, [R0]
00000AE2 38rrrr               W  		BRA L221
00000AE5                         L207:	; bb55
                                 ;     692         }
                                 ;     693         utr_table->keyword  = pipeno;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",693
00000AE5 9901                    		MOV.W 08H[R0], R1
00000AE7 A90A                    		MOV.L 14H[R0], R2
00000AE9 90A9                    		MOV.W R1, 06H[R2]
00000AEB                         L208:	; bb55.split
                                 ;     694         R_usb_hstd_SetPipeInfo((uint16_t*)&usb_ghmsc_DefEpTbl[0], (uint16_t*)&usb_ghmsc_PipeTable[ptr->ip][offset2], 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",694
00000AEB A989                    		MOV.L 1CH[R0], R1
00000AED B991                    		MOVU.W 0CH[R1], R1
00000AEF 6C21                    		SHLL #02H, R1
00000AF1 FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_PipeTable, R14
00000AF7 4B1E                    		ADD R1, R14
00000AF9 B90A                    		MOVU.W 0AH[R0], R2
00000AFB 6C12                    		SHLL #01H, R2
00000AFD 0688E2                  		ADD [R14].L, R2
00000B00 6663                    		MOV.L #00000006H, R3
00000B02 FB12rrrrrrrr            		MOV.L #_usb_ghmsc_DefEpTbl, R1
00000B08 05rrrrrr             A  		BSR _R_usb_hstd_SetPipeInfo
00000B0C                         L209:	; bb55.split2
                                 ;     695             (uint16_t)USB_EPL);
                                 ;     696         err = R_usb_hstd_SetPipeRegistration(ptr, (uint16_t*)&usb_ghmsc_DefEpTbl, pipeno);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",696
00000B0C B903                    		MOVU.W 08H[R0], R3
00000B0E A989                    		MOV.L 1CH[R0], R1
00000B10 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_DefEpTbl, R2
00000B16 05rrrrrr             A  		BSR _R_usb_hstd_SetPipeRegistration
00000B1A A089                    		MOV.L R1, 0CH[R0]
00000B1C 2Err                 B  		BRA L220
00000B1E                         L210:	; bb71
                                 ;     697         break;
                                 ;     698     case USB_DATA_OK:                           /* Data recieve */
                                 ;     699         msgnum              = utr_table->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",699
00000B1E A909                    		MOV.L 14H[R0], R1
00000B20 D5100303                		MOV.W 06H[R1], 06H[R0]
00000B24                         L211:	; bb71.split
                                 ;     700         offset2             = usb_ghmsc_InPipe[ptr->ip][msgnum][0];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",700
00000B24 A989                    		MOV.L 1CH[R0], R1
00000B26 B991                    		MOVU.W 0CH[R1], R1
00000B28 6C51                    		SHLL #05H, R1
00000B2A FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R14
00000B30 4B1E                    		ADD R1, R14
00000B32 B889                    		MOVU.W 06H[R0], R1
00000B34 6C21                    		SHLL #02H, R1
00000B36 4B1E                    		ADD R1, R14
00000B38 D4E005                  		MOV.W [R14], 0AH[R0]
00000B3B                         L212:	; bb71.split3
                                 ;     701         if( USB_NOPORT == offset2 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",701
00000B3B B909                    		MOVU.W 0AH[R0], R1
00000B3D 7701FFFF00              		CMP #0FFFFH, R1
00000B42 18                   S  		BNE L214
00000B43                         L213:	; bb88
                                 ;     702         {
                                 ;     703             USB_PRINTF3("### USB_NOPORT error IP[%d] MSGNUM[%d] OFFSET[%x]\n", ptr->ip, msgnum, offset2 );
                                 ;     704             return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",704
00000B43 F80EFFFF00              		MOV.L #0000FFFFH, [R0]
00000B48 2Err                 B  		BRA L221
00000B4A                         L214:	; bb95
                                 ;     705         }
                                 ;     706         pipeno              = R_usb_hmsc_Information(ptr->ip, offset2);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",706
00000B4A A989                    		MOV.L 1CH[R0], R1
00000B4C B991                    		MOVU.W 0CH[R1], R1
00000B4E B90A                    		MOVU.W 0AH[R0], R2
00000B50 05rrrrrr             A  		BSR _R_usb_hmsc_Information
00000B54 9101                    		MOV.W R1, 08H[R0]
00000B56                         L215:	; bb95.split
                                 ;     707         if( USB_PIPE5 < pipeno )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",707
00000B56 B901                    		MOVU.W 08H[R0], R1
00000B58 6161                    		CMP #06H, R1
00000B5A 23rr                    		BLTU L217
00000B5C                         L216:	; bb102
                                 ;     708         {
                                 ;     709             USB_PRINTF1("### PIPE No. error[%d]\n", pipeno);
                                 ;     710             return USB_ERROR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",710
00000B5C F80EFFFF00              		MOV.L #0000FFFFH, [R0]
00000B61 2Err                 B  		BRA L221
00000B63                         L217:	; bb109
                                 ;     711         }
                                 ;     712         utr_table->keyword  = pipeno;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",712
00000B63 9901                    		MOV.W 08H[R0], R1
00000B65 A90A                    		MOV.L 14H[R0], R2
00000B67 90A9                    		MOV.W R1, 06H[R2]
00000B69                         L218:	; bb109.split
                                 ;     713         R_usb_hstd_SetPipeInfo((uint16_t*)&usb_ghmsc_DefEpTbl[0], (uint16_t*)&usb_ghmsc_PipeTable[ptr->ip][offset2], 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",713
00000B69 A989                    		MOV.L 1CH[R0], R1
00000B6B B991                    		MOVU.W 0CH[R1], R1
00000B6D 6C21                    		SHLL #02H, R1
00000B6F FBE2rrrrrrrr            		MOV.L #_usb_ghmsc_PipeTable, R14
00000B75 4B1E                    		ADD R1, R14
00000B77 B90A                    		MOVU.W 0AH[R0], R2
00000B79 6C12                    		SHLL #01H, R2
00000B7B 0688E2                  		ADD [R14].L, R2
00000B7E 6663                    		MOV.L #00000006H, R3
00000B80 FB12rrrrrrrr            		MOV.L #_usb_ghmsc_DefEpTbl, R1
00000B86 05rrrrrr             A  		BSR _R_usb_hstd_SetPipeInfo
00000B8A                         L219:	; bb109.split4
                                 ;     714             (uint16_t)USB_EPL);
                                 ;     715         err = R_usb_hstd_SetPipeRegistration(ptr, (uint16_t*)&usb_ghmsc_DefEpTbl, pipeno);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",715
00000B8A B903                    		MOVU.W 08H[R0], R3
00000B8C A989                    		MOV.L 1CH[R0], R1
00000B8E FB22rrrrrrrr            		MOV.L #_usb_ghmsc_DefEpTbl, R2
00000B94 05rrrrrr             A  		BSR _R_usb_hstd_SetPipeRegistration
00000B98 A089                    		MOV.L R1, 0CH[R0]
00000B9A                         L220:	; bb126
                                 ;     716         break;
                                 ;     717     default:
                                 ;     718         break;
                                 ;     719     }
                                 ;     720     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",720
00000B9A E10003                  		MOV.L 0CH[R0], [R0]
00000B9D                         L221:	; bb129
00000B9D EC01                    		MOV.L [R0], R1
00000B9F A101                    		MOV.L R1, 10H[R0]
                                 ;     721 }   /* eof usb_hmsc_Submitutr() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",721
00000BA1 6708                    		RTSD #20H
00000BA3                         _usb_hmsc_SubmitutrReq:
                                 		.STACK	_usb_hmsc_SubmitutrReq=32
                                 ;     722 
                                 ;     723 /******************************************************************************
                                 ;     724 Function Name   : usb_hmsc_SubmitutrReq
                                 ;     725 Description     : Data transfer request
                                 ;     726 Argument        : uint16_t type             : Data Transmit/Data Receive
                                 ;     727                 : USB_UTR_t *utr_table      : Information Table
                                 ;     728 Return value    : USB_ER_t                  : Error Code
                                 ;     729 ******************************************************************************/
                                 ;     730 USB_ER_t usb_hmsc_SubmitutrReq(USB_UTR_t *ptr, uint16_t type, USB_UTR_t *utr_table)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",730
00000BA3 7100E4                  		ADD #0FFFFFFE4H, R0
00000BA6 A181                    		MOV.L R1, 18H[R0]
00000BA8 928A                    		MOV.W R2, 16H[R0]
00000BAA A103                    		MOV.L R3, 10H[R0]
                                 ;     731 {
                                 ;     732     uint16_t    msgnum, pipeno;
                                 ;     733     uint16_t    toggle;
                                 ;     734     USB_ER_t    err;
                                 ;     735 
                                 ;     736     msgnum = usb_shmsc_MsgNum[ptr->ip];
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",736
00000BAC A981                    		MOV.L 18H[R0], R1
00000BAE B991                    		MOVU.W 0CH[R1], R1
00000BB0 FBE2rrrrrrrr            		MOV.L #_usb_shmsc_MsgNum, R14
00000BB6 FE51E1                  		MOV.W [R1,R14], R1
00000BB9 9009                    		MOV.W R1, 02H[R0]
00000BBB                         L223:	; entry.split
                                 ;     737 
                                 ;     738     utr_table->ip = ptr->ip;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",738
00000BBB A981                    		MOV.L 18H[R0], R1
00000BBD A902                    		MOV.L 10H[R0], R2
00000BBF D5120606                		MOV.W 0CH[R1], 0CH[R2]
00000BC3                         L224:	; entry.split1
                                 ;     739     utr_table->ipp = ptr->ipp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",739
00000BC3 A981                    		MOV.L 18H[R0], R1
00000BC5 A902                    		MOV.L 10H[R0], R2
00000BC7 E5120202                		MOV.L 08H[R1], 08H[R2]
00000BCB                         L225:	; entry.split2
                                 ;     740 
                                 ;     741     switch( type ) 
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",741
00000BCB BA89                    		MOVU.W 16H[R0], R1
00000BCD 6131                    		CMP #03H, R1
00000BCF 20rr                    		BEQ L235
00000BD1                         L226:	; entry.split2
00000BD1 6111                    		CMP #01H, R1
00000BD3 20rr                    		BEQ L229
00000BD5                         L227:	; entry.split2
00000BD5 6101                    		CMP #00H, R1
00000BD7 3Brrrr               W  		BNE L241
00000BDA                         L228:	; bb
                                 ;     742     {
                                 ;     743     case USB_CTRL_END:                      /* Control transfer */
                                 ;     744         err = R_usb_hstd_TransferStart(utr_table);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",744
00000BDA A901                    		MOV.L 10H[R0], R1
00000BDC 05rrrrrr             A  		BSR _R_usb_hstd_TransferStart
00000BE0 A081                    		MOV.L R1, 08H[R0]
00000BE2 38rrrr               W  		BRA L242
00000BE5                         L229:	; bb30
                                 ;     745         break;
                                 ;     746     case USB_DATA_NONE:                     /* Data transmit */
                                 ;     747         pipeno = utr_table->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",747
00000BE5 A901                    		MOV.L 10H[R0], R1
00000BE7 D5100302                		MOV.W 06H[R1], 04H[R0]
00000BEB                         L230:	; bb30.split
                                 ;     748 
                                 ;     749         if( (USB_SQMON & usb_ghmsc_OutPipe[ptr->ip][msgnum][1]) == USB_SQMON )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",749
00000BEB A981                    		MOV.L 18H[R0], R1
00000BED B991                    		MOVU.W 0CH[R1], R1
00000BEF 6C51                    		SHLL #05H, R1
00000BF1 FB22rrrrrrrr            		MOV.L #_usb_ghmsc_OutPipe, R2
00000BF7 4B12                    		ADD R1, R2
00000BF9 B809                    		MOVU.W 02H[R0], R1
00000BFB 6C21                    		SHLL #02H, R1
00000BFD 4B12                    		ADD R1, R2
00000BFF B829                    		MOVU.W 02H[R2], R1
00000C01 752140                  		AND #40H, R1
00000C04 755140                  		CMP #40H, R1
00000C07 18                   S  		BNE L232
00000C08                         L231:	; bb35
                                 ;     750         {
                                 ;     751             toggle = USB_SQ_DATA1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",751
00000C08 3D0301                  		MOV.W #0001H, 06H[R0]
00000C0B 08                   S  		BRA L233
00000C0C                         L232:	; bb36
                                 ;     752         }
                                 ;     753         else
                                 ;     754         {
                                 ;     755             toggle = USB_SQ_DATA0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",755
00000C0C 3D0300                  		MOV.W #0000H, 06H[R0]
00000C0F                         L233:	; bb53
                                 ;     756         }
                                 ;     757         usb_hmsc_DoSqtgl(utr_table, pipeno, toggle);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",757
00000C0F B88B                    		MOVU.W 06H[R0], R3
00000C11 B882                    		MOVU.W 04H[R0], R2
00000C13 A901                    		MOV.L 10H[R0], R1
00000C15 39rrrr               W  		BSR _usb_hmsc_DoSqtgl
00000C18                         L234:	; bb53.split
                                 ;     758         err = R_usb_hstd_TransferStart(utr_table);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",758
00000C18 A901                    		MOV.L 10H[R0], R1
00000C1A 05rrrrrr             A  		BSR _R_usb_hstd_TransferStart
00000C1E A081                    		MOV.L R1, 08H[R0]
00000C20 2Err                 B  		BRA L242
00000C22                         L235:	; bb59
                                 ;     759         break;
                                 ;     760     case USB_DATA_OK:                       /* Data recieve */
                                 ;     761         pipeno = utr_table->keyword;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",761
00000C22 A901                    		MOV.L 10H[R0], R1
00000C24 D5100302                		MOV.W 06H[R1], 04H[R0]
00000C28                         L236:	; bb59.split
                                 ;     762 
                                 ;     763         if( (USB_SQMON & usb_ghmsc_InPipe[ptr->ip][msgnum][1]) == USB_SQMON )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",763
00000C28 A981                    		MOV.L 18H[R0], R1
00000C2A B991                    		MOVU.W 0CH[R1], R1
00000C2C 6C51                    		SHLL #05H, R1
00000C2E FB22rrrrrrrr            		MOV.L #_usb_ghmsc_InPipe, R2
00000C34 4B12                    		ADD R1, R2
00000C36 B809                    		MOVU.W 02H[R0], R1
00000C38 6C21                    		SHLL #02H, R1
00000C3A 4B12                    		ADD R1, R2
00000C3C B829                    		MOVU.W 02H[R2], R1
00000C3E 752140                  		AND #40H, R1
00000C41 755140                  		CMP #40H, R1
00000C44 18                   S  		BNE L238
00000C45                         L237:	; bb64
                                 ;     764         {
                                 ;     765             toggle = USB_SQ_DATA1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",765
00000C45 3D0301                  		MOV.W #0001H, 06H[R0]
00000C48 08                   S  		BRA L239
00000C49                         L238:	; bb65
                                 ;     766         }
                                 ;     767         else
                                 ;     768         {
                                 ;     769             toggle = USB_SQ_DATA0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",769
00000C49 3D0300                  		MOV.W #0000H, 06H[R0]
00000C4C                         L239:	; bb83
                                 ;     770         }
                                 ;     771         usb_hmsc_DoSqtgl(utr_table, pipeno, toggle);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",771
00000C4C B88B                    		MOVU.W 06H[R0], R3
00000C4E B882                    		MOVU.W 04H[R0], R2
00000C50 A901                    		MOV.L 10H[R0], R1
00000C52 39rrrr               W  		BSR _usb_hmsc_DoSqtgl
00000C55                         L240:	; bb83.split
                                 ;     772         err = R_usb_hstd_TransferStart(utr_table);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",772
00000C55 A901                    		MOV.L 10H[R0], R1
00000C57 05rrrrrr             A  		BSR _R_usb_hstd_TransferStart
00000C5B A081                    		MOV.L R1, 08H[R0]
00000C5D 08                   S  		BRA L242
00000C5E                         L241:	; bb89
                                 ;     773         break;
                                 ;     774     default:
                                 ;     775         USB_PRINTF0("### submit error\n");
                                 ;     776         err = USB_HMSC_SUBMIT_ERR;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",776
00000C5E F90E02F9FF00            		MOV.L #0000FFF9H, 08H[R0]
00000C64                         L242:	; bb90
                                 ;     777         break;
                                 ;     778     }
                                 ;     779     return err;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",779
00000C64 A881                    		MOV.L 08H[R0], R1
00000C66 A089                    		MOV.L R1, 0CH[R0]
00000C68                         L243:	; bb90.split
                                 ;     780 }   /* eof usb_hmsc_SubmitutrReq() */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",780
00000C68 6707                    		RTSD #1CH
00000C6A                         _usb_hmsc_DoSqtgl:
                                 		.STACK	_usb_hmsc_DoSqtgl=16
                                 ;     781 
                                 ;     782 
                                 ;     783 /******************************************************************************
                                 ;     784 Function Name   : usb_hmsc_DoSqtgl
                                 ;     785 Description     : Set SQSET bit or SQCLR bit for Pipe control regstor(PIPEnCTR).
                                 ;     786 Argument        : USB_UTR_t *ptr        : The app's USB Comm. Structure.
                                 ;     787                 : uint16_t Pipe         : Pipe No.
                                 ;     788                 : uint16_t toggle       : Sequence Toggle bit(DATA0/DATA1)
                                 ;     789 Return value    : none
                                 ;     790 ******************************************************************************/
                                 ;     791 void usb_hmsc_DoSqtgl(USB_UTR_t *ptr, uint16_t Pipe, uint16_t toggle)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",791
00000C6A 60C0                    		SUB #0CH, R0
00000C6C A081                    		MOV.L R1, 08H[R0]
00000C6E 908A                    		MOV.W R2, 06H[R0]
00000C70 9083                    		MOV.W R3, 04H[R0]
                                 ;     792 {
                                 ;     793     uint16_t msginfo;
                                 ;     794 
                                 ;     795     if( toggle == USB_SQ_DATA1 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",795
00000C72 6113                    		CMP #01H, R3
00000C74 18                   S  		BNE L246
00000C75                         L245:	; bb5
                                 ;     796     {
                                 ;     797         msginfo = USB_DO_SET_SQTGL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",797
00000C75 F909010A02              		MOV.W #020AH, 02H[R0]
00000C7A 08                   S  		BRA L247
00000C7B                         L246:	; bb6
                                 ;     798     }
                                 ;     799     else
                                 ;     800     {
                                 ;     801         msginfo = USB_DO_CLR_SQTGL;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",801
00000C7B F909010B02              		MOV.W #020BH, 02H[R0]
00000C80                         L247:	; bb10
                                 ;     802     }
                                 ;     803 
                                 ;     804     R_usb_hstd_ChangeDeviceState(ptr, (USB_CB_t)&usb_cstd_DummyFunction, msginfo, Pipe);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",804
00000C80 B88C                    		MOVU.W 06H[R0], R4
00000C82 B80B                    		MOVU.W 02H[R0], R3
00000C84 A881                    		MOV.L 08H[R0], R1
00000C86 FB22rrrrrrrr            		MOV.L #_usb_cstd_DummyFunction, R2
00000C8C 05rrrrrr             A  		BSR _R_usb_hstd_ChangeDeviceState
00000C90 6703                    		RTSD #0CH
00000C92                         _usb_hmsc_ControlEnd:
                                 		.STACK	_usb_hmsc_ControlEnd=12
                                 ;     805 }   /* eof usb_hmsc_DoSqtgl() */
                                 ;     806 
                                 ;     807 /******************************************************************************
                                 ;     808 Function Name   : usb_hmsc_ControlEnd
                                 ;     809 Description     : Control end function
                                 ;     810 Argument        : uint16_t  sts             : Status
                                 ;     811 Return value    : none
                                 ;     812 ******************************************************************************/
                                 ;     813 void usb_hmsc_ControlEnd(USB_UTR_t *ptr, uint16_t sts)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",813
00000C92 6080                    		SUB #08H, R0
00000C94 A009                    		MOV.L R1, 04H[R0]
00000C96 900A                    		MOV.W R2, 02H[R0]
                                 ;     814 {
                                 ;     815         R_usb_hstd_TransferEnd(ptr, USB_PIPE0, sts);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\r_usb_hmsc\src\r_usb_hmsc_hci.c",815
00000C98 B80B                    		MOVU.W 02H[R0], R3
00000C9A A809                    		MOV.L 04H[R0], R1
00000C9C 6602                    		MOV.L #00000000H, R2
00000C9E 05rrrrrr             A  		BSR _R_usb_hstd_TransferEnd
00000CA2 6702                    		RTSD #08H
                                 ;     816 }   /* eof usb_hmsc_ControlEnd() */
                                 ;     817 
                                 ;     818 /******************************************************************************
                                 ;     819 End  Of File
                                 ;     820 ******************************************************************************/
                                 ;     821 
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     02603   LINES

Section List

Attr         Size               Name
CODE     0000003236(00000CA4H)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx124\$ccrx\r_usb_hmsc_hci.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01_master\MT01_build\r_usb_hmsc_hci.lst
-output=C:\Workspace\e2studio\git\MT01_master\MT01_build\r_usb_hmsc\src\r_usb_hmsc_hci.obj
