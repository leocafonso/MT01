* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Mon Mar 20 17:54:17 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  20-Mar-2017 17:54:17
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=u8g_pb.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx,C:\Workspace\e2studio\git\MT01_master\r_lvd_rx\src,C:/Workspace/e2studio/
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=u8g_pb.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=1,MOBILE=0,FREE_RTOS_PP
                                 ;u8g_pb.c
                                 
                                 		.glb	_u8g_pb_Clear
                                 		.glb	_u8g_pb_IsYIntersection
                                 		.glb	_u8g_pb_IsXIntersection
                                 		.glb	_u8g_pb_IsIntersection
                                 		.glb	_u8g_pb_GetPageBox
                                 		.glb	_u8g_pb_Is8PixelVisible
                                 		.glb	_u8g_pb_WriteBuffer
                                 		.glb	_u8g_WriteSequence
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _u8g_pb_Clear:
                                 		.STACK	_u8g_pb_Clear=16
                                 ;       1 /*
                                 ;       2 
                                 ;       3   u8g_pb.c
                                 ;       4   
                                 ;       5   common procedures for the page buffer
                                 ;       6 
                                 ;       7   Universal 8bit Graphics Library
                                 ;       8   
                                 ;       9   Copyright (c) 2011, olikraus@gmail.com
                                 ;      10   All rights reserved.
                                 ;      11 
                                 ;      12   Redistribution and use in source and binary forms, with or without modification, 
                                 ;      13   are permitted provided that the following conditions are met:
                                 ;      14 
                                 ;      15   * Redistributions of source code must retain the above copyright notice, this list 
                                 ;      16     of conditions and the following disclaimer.
                                 ;      17     
                                 ;      18   * Redistributions in binary form must reproduce the above copyright notice, this 
                                 ;      19     list of conditions and the following disclaimer in the documentation and/or other 
                                 ;      20     materials provided with the distribution.
                                 ;      21 
                                 ;      22   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND 
                                 ;      23   CONTRIBUTORS "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, 
                                 ;      24   INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF 
                                 ;      25   MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE 
                                 ;      26   DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR 
                                 ;      27   CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, 
                                 ;      28   SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT 
                                 ;      29   NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; 
                                 ;      30   LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER 
                                 ;      31   CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, 
                                 ;      32   STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) 
                                 ;      33   ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
                                 ;      34   ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.  
                                 ;      35   
                                 ;      36   
                                 ;      37 */
                                 ;      38 
                                 ;      39 #include "u8g.h"
                                 ;      40 
                                 ;      41 void u8g_pb_Clear(u8g_pb_t *b)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",41
00000000 60C0                    		SUB #0CH, R0
00000002 A081                    		MOV.L R1, 08H[R0]
                                 ;      42 {
                                 ;      43   uint8_t *ptr = (uint8_t *)b->buf;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",43
00000004 E11002                  		MOV.L 08H[R1], [R0]
00000007                         L11:	; entry.split
                                 ;      44   uint8_t *end_ptr = ptr;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",44
00000007 E40001                  		MOV.L [R0], 04H[R0]
0000000A                         L12:	; entry.split1
                                 ;      45   end_ptr += b->width;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",45
0000000A A881                    		MOV.L 08H[R0], R1
0000000C B119                    		MOVU.B 05H[R1], R1
0000000E 06890101                		ADD 04H[R0].L, R1
00000012 A009                    		MOV.L R1, 04H[R0]
00000014                         L13:	; bb
                                 ;      46   do
                                 ;      47   {
                                 ;      48     *ptr++ = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",48
00000014 EC01                    		MOV.L [R0], R1
00000016 F81400                  		MOV.B #00H, [R1]
00000019 EC01                    		MOV.L [R0], R1
0000001B 6211                    		ADD #01H, R1
0000001D E301                    		MOV.L R1, [R0]
0000001F                         L14:	; bb.split
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",46
0000001F EC01                    		MOV.L [R0], R1
00000021 06850101                		CMP 04H[R0].L, R1
00000025 21rr                    		BNE L13
00000027                         L15:	; return
                                 ;      49   } while( ptr != end_ptr );
                                 ;      50 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",50
00000027 6703                    		RTSD #0CH
00000029                         _u8g_pb_IsYIntersection:
                                 		.STACK	_u8g_pb_IsYIntersection=16
                                 ;      51 
                                 ;      52 /* the following procedure does not work. why? Can be checked with descpic */
                                 ;      53 /*
                                 ;      54 void u8g_pb_Clear(u8g_pb_t *b)
                                 ;      55 {
                                 ;      56   uint8_t *ptr = (uint8_t *)b->buf;
                                 ;      57   uint8_t cnt = b->width;
                                 ;      58   do
                                 ;      59   {
                                 ;      60     *ptr++ = 0;
                                 ;      61     cnt--;
                                 ;      62   } while( cnt != 0 );
                                 ;      63 }
                                 ;      64 */
                                 ;      65 
                                 ;      66 /*
                                 ;      67   intersection assumptions:
                                 ;      68     a1 <= a2 is always true    
                                 ;      69 */
                                 ;      70   /*
                                 ;      71     minimized version
                                 ;      72     ---1----0 1             b1 <= a2 && b1 > b2
                                 ;      73     -----1--0 1             b2 >= a1 && b1 > b2
                                 ;      74     ---1-1--- 1             b1 <= a2 && b2 >= a1
                                 ;      75   */
                                 ;      76 /*
                                 ;      77 uint8_t u8g_pb8v1_IsYIntersection___Old(u8g_pb_t *b, u8g_uint_t v0, u8g_uint_t v1)
                                 ;      78 {
                                 ;      79   uint8_t c0, c1, c;
                                 ;      80   c0 = v0 <= b->p.page_y1;
                                 ;      81   c1 = v1 >= b->p.page_y0;
                                 ;      82   c = v0 > v1;
                                 ;      83   if ( c0 && c1 ) return 1;
                                 ;      84   if ( c0 && c ) return 1;
                                 ;      85   if ( c1 && c ) return 1;
                                 ;      86   return 0;
                                 ;      87 }
                                 ;      88 */
                                 ;      89 
                                 ;      90 uint8_t u8g_pb_IsYIntersection(u8g_pb_t *pb, u8g_uint_t v0, u8g_uint_t v1)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",90
00000029 60C0                    		SUB #0CH, R0
0000002B A081                    		MOV.L R1, 08H[R0]
0000002D 818A                    		MOV.B R2, 07H[R0]
0000002F 8183                    		MOV.B R3, 06H[R0]
                                 ;      91 {
                                 ;      92   uint8_t c1, c2, c3, tmp;
                                 ;      93   c1 = v0 <= pb->p.page_y1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",93
00000031 A881                    		MOV.L 08H[R0], R1
00000033 B18A                    		MOVU.B 07H[R0], R2
00000035 451203                  		CMP 03H[R1].UB, R2
00000038 FCD10B01                		SCLE.B 01H[R0]
0000003C                         L17:	; entry.split
                                 ;      94   c2 = v1 >= pb->p.page_y0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",94
0000003C A881                    		MOV.L 08H[R0], R1
0000003E B182                    		MOVU.B 06H[R0], R2
00000040 451202                  		CMP 02H[R1].UB, R2
00000043 FCD10802                		SCGE.B 02H[R0]
00000047                         L18:	; entry.split1
                                 ;      95   c3 = v0 > v1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",95
00000047 B189                    		MOVU.B 07H[R0], R1
00000049 450106                  		CMP 06H[R0].UB, R1
0000004C FCD10A03                		SCGT.B 03H[R0]
00000050                         L19:	; entry.split2
                                 ;      96   /*
                                 ;      97   if ( c1 && c2 )
                                 ;      98     return 1;
                                 ;      99   if ( c1 && c3 )
                                 ;     100     return 1;
                                 ;     101   if ( c2 && c3 )
                                 ;     102     return 1;
                                 ;     103   return 0;
                                 ;     104   */
                                 ;     105   
                                 ;     106   tmp = c1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",106
00000050 C5000104                		MOV.B 01H[R0], 04H[R0]
00000054                         L20:	; entry.split3
                                 ;     107   c1 &= c2;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",107
00000054 B009                    		MOVU.B 01H[R0], R1
00000056 510102                  		AND 02H[R0].UB, R1
00000059 8009                    		MOV.B R1, 01H[R0]
0000005B                         L21:	; entry.split4
                                 ;     108   c2 &= c3;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",108
0000005B B081                    		MOVU.B 02H[R0], R1
0000005D 510103                  		AND 03H[R0].UB, R1
00000060 8081                    		MOV.B R1, 02H[R0]
00000062                         L22:	; entry.split5
                                 ;     109   c3 &= tmp;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",109
00000062 B089                    		MOVU.B 03H[R0], R1
00000064 510104                  		AND 04H[R0].UB, R1
00000067 8089                    		MOV.B R1, 03H[R0]
00000069                         L23:	; entry.split6
                                 ;     110   c1 |= c2;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",110
00000069 B009                    		MOVU.B 01H[R0], R1
0000006B 550102                  		OR 02H[R0].UB, R1
0000006E 8009                    		MOV.B R1, 01H[R0]
00000070                         L24:	; entry.split7
                                 ;     111   c1 |= c3;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",111
00000070 B009                    		MOVU.B 01H[R0], R1
00000072 550103                  		OR 03H[R0].UB, R1
00000075 8009                    		MOV.B R1, 01H[R0]
00000077                         L25:	; entry.split8
                                 ;     112   return c1 & 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",112
00000077 B009                    		MOVU.B 01H[R0], R1
00000079 6411                    		AND #01H, R1
0000007B 8109                    		MOV.B R1, 05H[R0]
0000007D B109                    		MOVU.B 05H[R0], R1
0000007F                         L26:	; entry.split9
                                 ;     113 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",113
0000007F 5B11                    		MOVU.B R1, R1
00000081 6703                    		RTSD #0CH
00000083                         _u8g_pb_IsXIntersection:
                                 		.STACK	_u8g_pb_IsXIntersection=20
                                 ;     114 
                                 ;     115 
                                 ;     116 uint8_t u8g_pb_IsXIntersection(u8g_pb_t *b, u8g_uint_t v0, u8g_uint_t v1)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",116
00000083 7100F0                  		ADD #0FFFFFFF0H, R0
00000086 A089                    		MOV.L R1, 0CH[R0]
00000088 828A                    		MOV.B R2, 0BH[R0]
0000008A 8283                    		MOV.B R3, 0AH[R0]
                                 ;     117 {
                                 ;     118   uint8_t /*c0, c1, */ c2, c3;
                                 ;     119   /*
                                 ;     120     conditions: b->p.page_y0 < b->p.page_y1
                                 ;     121     there are no restriction on v0 and v1. If v0 > v1, then warp around unsigned is assumed
                                 ;     122   */
                                 ;     123   /*
                                 ;     124   c0 = v0 < 0;
                                 ;     125   c1 = v1 < 0;
                                 ;     126   */
                                 ;     127   c2 = v0 > b->width;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",127
0000008C A889                    		MOV.L 0CH[R0], R1
0000008E B28A                    		MOVU.B 0BH[R0], R2
00000090 451205                  		CMP 05H[R1].UB, R2
00000093 FCD10A07                		SCGT.B 07H[R0]
00000097                         L28:	; entry.split
                                 ;     128   c3 = v1 > b->width;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",128
00000097 A889                    		MOV.L 0CH[R0], R1
00000099 B282                    		MOVU.B 0AH[R0], R2
0000009B 451205                  		CMP 05H[R1].UB, R2
0000009E FCD10A08                		SCGT.B 08H[R0]
000000A2                         L29:	; entry.split1
                                 ;     129   /*if ( c0 && c1 ) return 0;*/
                                 ;     130   if ( c2 && c3 ) return 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",130
000000A2 B189                    		MOVU.B 07H[R0], R1
000000A4 6101                    		CMP #00H, R1
000000A6 18                   S  		BNE L31
000000A7 2Err                 B  		BRA L33
000000A9                         L30:	; bb24
000000A9 3C0600                  		MOV.B #00H, 06H[R0]
000000AC 2Err                 B  		BRA L36
000000AE                         L31:	; bb30
000000AE B201                    		MOVU.B 08H[R0], R1
000000B0 6101                    		CMP #00H, R1
000000B2 10                   S  		BEQ L33
000000B3                         L32:	; bb35
000000B3 F80601                  		MOV.L #00000001H, [R0]
000000B6 08                   S  		BRA L34
000000B7                         L33:	; bb36
000000B7 F80600                  		MOV.L #00000000H, [R0]
000000BA                         L34:	; bb37
000000BA EC01                    		MOV.L [R0], R1
000000BC 6101                    		CMP #00H, R1
000000BE 21rr                    		BNE L30
000000C0                         L35:	; bb41
                                 ;     131   /*if ( c1 && c2 ) return 0;*/
                                 ;     132   return 1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",132
000000C0 3C0601                  		MOV.B #01H, 06H[R0]
000000C3                         L36:	; bb43
000000C3 C5000609                		MOV.B 06H[R0], 09H[R0]
                                 ;     133 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",133
000000C7 B209                    		MOVU.B 09H[R0], R1
000000C9 6704                    		RTSD #10H
000000CB                         _u8g_pb_IsIntersection:
                                 		.STACK	_u8g_pb_IsIntersection=16
                                 ;     134 
                                 ;     135 uint8_t u8g_pb_IsIntersection(u8g_pb_t *pb, u8g_dev_arg_bbx_t *bbx)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",135
000000CB 60C0                    		SUB #0CH, R0
000000CD A081                    		MOV.L R1, 08H[R0]
000000CF A00A                    		MOV.L R2, 04H[R0]
                                 ;     136 {
                                 ;     137   u8g_uint_t tmp;
                                 ;     138 
                                 ;     139   tmp = bbx->y;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",139
000000D1 C5200102                		MOV.B 01H[R2], 02H[R0]
000000D5                         L38:	; entry.split
                                 ;     140   tmp += bbx->h;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",140
000000D5 A809                    		MOV.L 04H[R0], R1
000000D7 B099                    		MOVU.B 03H[R1], R1
000000D9 490102                  		ADD 02H[R0].UB, R1
000000DC 8081                    		MOV.B R1, 02H[R0]
000000DE                         L39:	; entry.split1
                                 ;     141   tmp--;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",141
000000DE B081                    		MOVU.B 02H[R0], R1
000000E0 6011                    		SUB #01H, R1
000000E2 8081                    		MOV.B R1, 02H[R0]
000000E4                         L40:	; entry.split2
                                 ;     142   
                                 ;     143   if ( u8g_pb_IsYIntersection(pb, bbx->y, tmp) == 0 )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",143
000000E4 A809                    		MOV.L 04H[R0], R1
000000E6 B01A                    		MOVU.B 01H[R1], R2
000000E8 B083                    		MOVU.B 02H[R0], R3
000000EA A881                    		MOV.L 08H[R0], R1
000000EC 39rrrr               W  		BSR _u8g_pb_IsYIntersection
000000EF 6101                    		CMP #00H, R1
000000F1 18                   S  		BNE L42
000000F2                         L41:	; bb18
                                 ;     144     return 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",144
000000F2 3C0100                  		MOV.B #00H, 01H[R0]
000000F5 2Err                 B  		BRA L46
000000F7                         L42:	; bb29
                                 ;     145   
                                 ;     146   /* maybe this one can be skiped... probability is very high to have an intersection, so it would be ok to always return 1 */
                                 ;     147   tmp = bbx->x;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",147
000000F7 A809                    		MOV.L 04H[R0], R1
000000F9 C41002                  		MOV.B [R1], 02H[R0]
000000FC                         L43:	; bb29.split
                                 ;     148   tmp += bbx->w;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",148
000000FC A809                    		MOV.L 04H[R0], R1
000000FE B091                    		MOVU.B 02H[R1], R1
00000100 490102                  		ADD 02H[R0].UB, R1
00000103 8081                    		MOV.B R1, 02H[R0]
00000105                         L44:	; bb29.split3
                                 ;     149   tmp--;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",149
00000105 B081                    		MOVU.B 02H[R0], R1
00000107 6011                    		SUB #01H, R1
00000109 8081                    		MOV.B R1, 02H[R0]
0000010B                         L45:	; bb29.split4
                                 ;     150     
                                 ;     151   return u8g_pb_IsXIntersection(pb, bbx->x, tmp);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",151
0000010B A809                    		MOV.L 04H[R0], R1
0000010D 5812                    		MOVU.B [R1], R2
0000010F B083                    		MOVU.B 02H[R0], R3
00000111 A881                    		MOV.L 08H[R0], R1
00000113 39rrrr               W  		BSR _u8g_pb_IsXIntersection
00000116 8009                    		MOV.B R1, 01H[R0]
00000118                         L46:	; bb50
00000118 C5000103                		MOV.B 01H[R0], 03H[R0]
                                 ;     152 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",152
0000011C B089                    		MOVU.B 03H[R0], R1
0000011E 6703                    		RTSD #0CH
00000120                         _u8g_pb_GetPageBox:
                                 		.STACK	_u8g_pb_GetPageBox=12
                                 ;     153 
                                 ;     154 void u8g_pb_GetPageBox(u8g_pb_t *pb, u8g_box_t *box)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",154
00000120 6080                    		SUB #08H, R0
00000122 A009                    		MOV.L R1, 04H[R0]
00000124 E302                    		MOV.L R2, [R0]
                                 ;     155 {
                                 ;     156   box->x0 = 0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",156
00000126 F82400                  		MOV.B #00H, [R2]
00000129                         L48:	; entry.split
                                 ;     157   box->y0 = pb->p.page_y0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",157
00000129 A809                    		MOV.L 04H[R0], R1
0000012B EC02                    		MOV.L [R0], R2
0000012D C5120201                		MOV.B 02H[R1], 01H[R2]
00000131                         L49:	; entry.split1
                                 ;     158   box->x1 = pb->width;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",158
00000131 A809                    		MOV.L 04H[R0], R1
00000133 EC02                    		MOV.L [R0], R2
00000135 C5120502                		MOV.B 05H[R1], 02H[R2]
00000139                         L50:	; entry.split2
                                 ;     159   box->x1--;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",159
00000139 EC01                    		MOV.L [R0], R1
0000013B B092                    		MOVU.B 02H[R1], R2
0000013D 6012                    		SUB #01H, R2
0000013F 8092                    		MOV.B R2, 02H[R1]
00000141                         L51:	; entry.split3
                                 ;     160   box->y1 = pb->p.page_y1;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",160
00000141 A809                    		MOV.L 04H[R0], R1
00000143 EC02                    		MOV.L [R0], R2
00000145 C5120303                		MOV.B 03H[R1], 03H[R2]
00000149 6702                    		RTSD #08H
0000014B                         _u8g_pb_Is8PixelVisible:
                                 		.STACK	_u8g_pb_Is8PixelVisible=16
                                 ;     161 }
                                 ;     162 
                                 ;     163 
                                 ;     164 uint8_t u8g_pb_Is8PixelVisible(u8g_pb_t *b, u8g_dev_arg_pixel_t *arg_pixel)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",164
0000014B 60C0                    		SUB #0CH, R0
0000014D A081                    		MOV.L R1, 08H[R0]
0000014F A00A                    		MOV.L R2, 04H[R0]
                                 ;     165 {
                                 ;     166   u8g_uint_t v0, v1;
                                 ;     167   v0 = arg_pixel->y;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",167
00000151 C5200101                		MOV.B 01H[R2], 01H[R0]
00000155                         L53:	; entry.split
                                 ;     168   v1 = v0;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",168
00000155 C5000102                		MOV.B 01H[R0], 02H[R0]
00000159                         L54:	; entry.split1
                                 ;     169   switch( arg_pixel->dir )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",169
00000159 A809                    		MOV.L 04H[R0], R1
0000015B B099                    		MOVU.B 03H[R1], R1
0000015D 6131                    		CMP #03H, R1
0000015F 20rr                    		BEQ L57
00000161                         L55:	; entry.split1
00000161 6111                    		CMP #01H, R1
00000163 21rr                    		BNE L58
00000165                         L56:	; bb13
                                 ;     170   {
                                 ;     171     case 0:
                                 ;     172       break;
                                 ;     173     case 1:  
                                 ;     174       v1 += 8;          /* this is independent from the page height */
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",174
00000165 B081                    		MOVU.B 02H[R0], R1
00000167 6281                    		ADD #08H, R1
00000169 8081                    		MOV.B R1, 02H[R0]
0000016B 08                   S  		BRA L58
0000016C                         L57:	; bb19
                                 ;     175       break;
                                 ;     176     case 2:  
                                 ;     177       break;
                                 ;     178     case 3: 
                                 ;     179       v0 -= 8;
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",179
0000016C B009                    		MOVU.B 01H[R0], R1
0000016E 6081                    		SUB #08H, R1
00000170 8009                    		MOV.B R1, 01H[R0]
00000172                         L58:	; bb24
                                 ;     180       break;
                                 ;     181   }
                                 ;     182   return u8g_pb_IsYIntersection(b, v0, v1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",182
00000172 B083                    		MOVU.B 02H[R0], R3
00000174 B00A                    		MOVU.B 01H[R0], R2
00000176 A881                    		MOV.L 08H[R0], R1
00000178 39rrrr               W  		BSR _u8g_pb_IsYIntersection
0000017B 8089                    		MOV.B R1, 03H[R0]
0000017D B089                    		MOVU.B 03H[R0], R1
0000017F                         L59:	; bb24.split
                                 ;     183 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",183
0000017F 5B11                    		MOVU.B R1, R1
00000181 6703                    		RTSD #0CH
00000183                         _u8g_pb_WriteBuffer:
                                 		.STACK	_u8g_pb_WriteBuffer=20
                                 ;     184 
                                 ;     185 
                                 ;     186 
                                 ;     187 uint8_t u8g_pb_WriteBuffer(u8g_pb_t *b, u8g_t *u8g, u8g_dev_t *dev)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",187
00000183 7100F0                  		ADD #0FFFFFFF0H, R0
00000186 A089                    		MOV.L R1, 0CH[R0]
00000188 A082                    		MOV.L R2, 08H[R0]
0000018A A00B                    		MOV.L R3, 04H[R0]
                                 ;     188 {
                                 ;     189   return u8g_WriteSequence(u8g, dev, b->width, b->buf);  
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",189
0000018C A889                    		MOV.L 0CH[R0], R1
0000018E A894                    		MOV.L 08H[R1], R4
00000190 B11D                    		MOVU.B 05H[R1], R5
00000192 A881                    		MOV.L 08H[R0], R1
00000194 EF32                    		MOV.L R3, R2
00000196 EF53                    		MOV.L R5, R3
00000198 05rrrrrr             A  		BSR _u8g_WriteSequence
0000019C 8089                    		MOV.B R1, 03H[R0]
0000019E B089                    		MOVU.B 03H[R0], R1
000001A0                         L61:	; entry.split
                                 ;     190 }
                                 		.LINE  "C:\Workspace\e2studio\git\MT01_master\src\Display\u8g_pb.c",190
000001A0 5B11                    		MOVU.B R1, R1
000001A2 6704                    		RTSD #10H
                                 ;     191 
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00520   LINES

Section List

Attr         Size               Name
CODE     0000000420(000001A4H)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx4D06\$ccrx\u8g_pb.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01_master\MT01_build\u8g_pb.lst
-output=C:\Workspace\e2studio\git\MT01_master\MT01_build\src\Display\u8g_pb.obj
