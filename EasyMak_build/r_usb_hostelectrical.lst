* RX FAMILY ASSEMBLER V2.03.00.01 [24 Oct 2014] *  SOURCE LIST  Sun Feb 19 10:49:13 2017

LOC.     OBJ.              0XMDA SOURCE STATEMENT

                                 ;RX Family C/C++ Compiler (V2.03.00.03 [04 Dec 2014])  19-Feb-2017 10:49:12
                                 
                                 ;*** CPU TYPE ***
                                 
                                 ;-ISA=RXV1
                                 
                                 ;*** COMMAND PARAMETER ***
                                 
                                 ;-output=src=r_usb_hostelectrical.src
                                 ;-lang=c99
                                 ;-include=C:\PROGRA~2\Renesas\RX\2_3_0/include,C:\Workspace\e2studio\git\MT01\r_lvd_rx,C:\Workspace\e2studio\git\MT01\r_lvd_rx\src,C:/Workspace/e2studio/git/MT01/r_tfa
                                 ;-debug
                                 ;-show=source,conditionals,definitions,expansions
                                 ;-listfile=r_usb_hostelectrical.lst
                                 ;-isa=rxv1
                                 ;-optimize=0
                                 ;-fpu
                                 ;-alias=noansi
                                 ;-nologo
                                 ;-nomessage
                                 ;-define=__RX,COMPACTAXP=0,EASYMAK=1,MOBILE=0,FREE_RTOS_PP
                                 ;r_usb_hostelectrical.c
                                 
                                 		.glb	_usb_hstd_TestStop
                                 		.glb	_usb_hstd_SetUact
                                 		.glb	_usb_hstd_TestSignal
                                 		.glb	_usb_hstd_TestUactControl
                                 		.glb	_usb_hreg_set_uact
                                 		.glb	_usb_hreg_clr_uact
                                 		.glb	_usb_cpu_DelayXms
                                 		.glb	_usb_hstd_TestVbusControl
                                 		.glb	_usb_creg_set_vbout
                                 		.glb	_usb_creg_clr_vbout
                                 		.glb	_usb_hstd_TestBusReset
                                 		.glb	_usb_creg_rmw_dvstctr
                                 		.glb	_usb_creg_clr_dvstctr
                                 		.glb	_usb_cpu_Delay1us
                                 		.glb	_usb_hstd_TestSuspend
                                 		.glb	_usb_hstd_TestResume
                                 		.glb	_usb_hreg_set_resume
                                 		.glb	_usb_hreg_clr_resume
                                 ;LineNo. C-SOURCE STATEMENT
                                 
                                 		.SECTION	P,CODE
00000000                         _usb_hstd_TestStop:
                                 		.STACK	_usb_hstd_TestStop=12
                                 ;       1 /***********************************************************************************************************************
                                 ;       2 * DISCLAIMER
                                 ;       3 * This software is supplied by Renesas Electronics Corporation and is only intended for use with Renesas products. No
                                 ;       4 * other uses are authorized. This software is owned by Renesas Electronics Corporation and is protected under all
                                 ;       5 * applicable laws, including copyright laws.
                                 ;       6 * THIS SOFTWARE IS PROVIDED "AS IS" AND RENESAS MAKES NO WARRANTIES REGARDING
                                 ;       7 * THIS SOFTWARE, WHETHER EXPRESS, IMPLIED OR STATUTORY, INCLUDING BUT NOT LIMITED TO WARRANTIES OF MERCHANTABILITY,
                                 ;       8 * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. ALL SUCH WARRANTIES ARE EXPRESSLY DISCLAIMED. TO THE MAXIMUM
                                 ;       9 * EXTENT PERMITTED NOT PROHIBITED BY LAW, NEITHER RENESAS ELECTRONICS CORPORATION NOR ANY OF ITS AFFILIATED COMPANIES
                                 ;      10 * SHALL BE LIABLE FOR ANY DIRECT, INDIRECT, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES FOR ANY REASON RELATED TO THIS
                                 ;      11 * SOFTWARE, EVEN IF RENESAS OR ITS AFFILIATES HAVE BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES.
                                 ;      12 * Renesas reserves the right, without notice, to make changes to this software and to discontinue the availability of
                                 ;      13 * this software. By using this software, you agree to the additional terms and conditions found by accessing the
                                 ;      14 * following link:
                                 ;      15 * http://www.renesas.com/disclaimer
                                 ;      16 *
                                 ;      17 * Copyright (C) 2014(2015) Renesas Electronics Corporation. All rights reserved.
                                 ;      18 ***********************************************************************************************************************/
                                 ;      19 /***********************************************************************************************************************
                                 ;      20 * File Name    : r_usb_hostelectrical.c
                                 ;      21 * Description  : USB Host Electrical Test code
                                 ;      22 ***********************************************************************************************************************/
                                 ;      23 /**********************************************************************************************************************
                                 ;      24 * History : DD.MM.YYYY Version Description
                                 ;      25 *         : 04.01.2014 1.00 First Release
                                 ;      26 *         : 30.01.2015 1.01    Added RX71M.
                                 ;      27 ***********************************************************************************************************************/
                                 ;      28 
                                 ;      29 
                                 ;      30 /******************************************************************************
                                 ;      31 Includes   <System Includes> , "Project Includes"
                                 ;      32 ******************************************************************************/
                                 ;      33 #include "r_usb_basic_if.h"
                                 ;      34 #include "r_usb_reg_access.h"
                                 ;      35 
                                 ;      36 #if (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP)
                                 ;      37 
                                 ;      38 /******************************************************************************
                                 ;      39 Function Name   : usb_hstd_TestStop
                                 ;      40 Description     : Host electrical test stop
                                 ;      41 Arguments       : USB_UTR_t *ptr  : USB internal structure. Selects USB channel.
                                 ;      42                 : uint16_t port   : port number.
                                 ;      43 Return value    : none
                                 ;      44 ******************************************************************************/
                                 ;      45 void usb_hstd_TestStop(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",45
00000000 6080                    		SUB #08H, R0
00000002 A009                    		MOV.L R1, 04H[R0]
00000004 900A                    		MOV.W R2, 02H[R0]
                                 ;      46 {
                                 ;      47     /* USBRST=0, RESUME=0, UACT=1 */
                                 ;      48     usb_hstd_SetUact(ptr, port);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",48
00000006 B80A                    		MOVU.W 02H[R0], R2
00000008 A809                    		MOV.L 04H[R0], R1
0000000A 05rrrrrr             A  		BSR _usb_hstd_SetUact
0000000E 6702                    		RTSD #08H
00000010                         _usb_hstd_TestSignal:
                                 		.STACK	_usb_hstd_TestSignal=12
                                 ;      49 }/* eof usb_hstd_TestStop() */
                                 ;      50 
                                 ;      51 /******************************************************************************
                                 ;      52 Function Name   : usb_hstd_TestSignal
                                 ;      53 Description     : Host electrical test signal control.
                                 ;      54 Arguments       : USB_UTR_t *ptr   : USB internal structure. Selects USB channel.
                                 ;      55                 : uint16_t port    : port number
                                 ;      56                 : uint16_t command          : command
                                 ;      57 Return value    : none
                                 ;      58 ******************************************************************************/
                                 ;      59 void usb_hstd_TestSignal(USB_UTR_t *ptr, uint16_t port, uint16_t command)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",59
00000010 6080                    		SUB #08H, R0
00000012 A009                    		MOV.L R1, 04H[R0]
00000014 900A                    		MOV.W R2, 02H[R0]
00000016 D303                    		MOV.W R3, [R0]
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",84
00000018 6702                    		RTSD #08H
0000001A                         _usb_hstd_TestUactControl:
                                 		.STACK	_usb_hstd_TestUactControl=12
                                 ;      60 {
                                 ;      61 /* Condition compilation by the difference of user define */
                                 ;      62 #if ((( USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) && (USB0_IPTYPE_PP == USB_HS_PP))\
                                 ;      63    ||(( USB_FUNCSEL_USBIP1_PP == USB_HOST_PP) && (USB1_IPTYPE_PP == USB_HS_PP)))
                                 ;      64     uint16_t    buff;
                                 ;      65 
                                 ;      66     switch( command )
                                 ;      67     {
                                 ;      68     case 1: buff = USB_H_TST_J;         break;
                                 ;      69     case 2: buff = USB_H_TST_K;         break;
                                 ;      70     case 3: buff = USB_H_TST_SE0_NAK;   break;
                                 ;      71     case 4: buff = USB_H_TST_PACKET;    break;
                                 ;      72 
                                 ;      73     default:
                                 ;      74         buff = USB_H_TST_NORMAL;
                                 ;      75         usb_creg_set_utst( ptr, buff );
                                 ;      76         usb_cstd_SwReset(ptr);
                                 ;      77         break;
                                 ;      78     }
                                 ;      79 
                                 ;      80     usb_hstd_TestUactControl(ptr, port, (uint16_t)USB_UACTOFF);
                                 ;      81     usb_creg_set_utst( ptr, buff );
                                 ;      82     usb_hstd_TestUactControl(ptr, port, (uint16_t)USB_UACTON);
                                 ;      83 #endif  /* USB0_IPTYPE_PP == USB_HS_PP || USB1_IPTYPE_PP == USB_HS_PP */
                                 ;      84 }/* eof usb_hstd_TestSignal() */
                                 ;      85 
                                 ;      86 /******************************************************************************
                                 ;      87 Function Name   : usb_hstd_TestUactControl
                                 ;      88 Description     : Host electrical test SOF control.
                                 ;      89 Arguments       : USB_UTR_t *ptr   : USB internal structure. Selects USB channel.
                                 ;      90                 : uint16_t port    : port number
                                 ;      91                 : uint16_t command          : USB_UACTON / OFF
                                 ;      92 Return value    : none
                                 ;      93 ******************************************************************************/
                                 ;      94 void usb_hstd_TestUactControl(USB_UTR_t *ptr, uint16_t port, uint16_t command)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",94
0000001A 6080                    		SUB #08H, R0
0000001C A009                    		MOV.L R1, 04H[R0]
0000001E 900A                    		MOV.W R2, 02H[R0]
00000020 D303                    		MOV.W R3, [R0]
                                 ;      95 {
                                 ;      96 
                                 ;      97     if( command == USB_UACTON )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",97
00000022 6113                    		CMP #01H, R3
00000024 980A                    		MOV.W 02H[R0], R2
00000026 A809                    		MOV.L 04H[R0], R1
00000028 18                   S  		BNE L14
00000029                         L13:	; bb4
                                 ;      98     {
                                 ;      99         /* SOF out disable */
                                 ;     100         usb_hreg_set_uact( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",100
00000029 5F22                    		MOVU.W R2, R2
0000002B 05rrrrrr             A  		BSR _usb_hreg_set_uact
0000002F 08                   S  		BRA L15
00000030                         L14:	; bb6
                                 ;     101     }
                                 ;     102     else
                                 ;     103     {
                                 ;     104         /* SOF out disable */
                                 ;     105         usb_hreg_clr_uact( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",105
00000030 5F22                    		MOVU.W R2, R2
00000032 05rrrrrr             A  		BSR _usb_hreg_clr_uact
00000036                         L15:	; bb13
00000036 6611                    		MOV.L #00000001H, R1
                                 ;     106     }
                                 ;     107     /* Wait 1ms */
                                 ;     108     usb_cpu_DelayXms((uint16_t)1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",108
00000038 05rrrrrr             A  		BSR _usb_cpu_DelayXms
0000003C 6702                    		RTSD #08H
0000003E                         _usb_hstd_TestVbusControl:
                                 		.STACK	_usb_hstd_TestVbusControl=12
                                 ;     109 }/* eof usb_hstd_TestUactControl() */
                                 ;     110 
                                 ;     111 /******************************************************************************
                                 ;     112 Function Name   : usb_hstd_TestVbusControl
                                 ;     113 Description     : Host electrical test VBUS control.
                                 ;     114 Arguments       : USB_UTR_t *ptr   : USB internal structure. Selects USB channel.
                                 ;     115                 : uint16_t port    : port number
                                 ;     116                 : uint16_t command          : USB_UACTON / OFF
                                 ;     117 Return value    : none
                                 ;     118 ******************************************************************************/
                                 ;     119 void usb_hstd_TestVbusControl(USB_UTR_t *ptr, uint16_t port, uint16_t command)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",119
0000003E 6080                    		SUB #08H, R0
00000040 A009                    		MOV.L R1, 04H[R0]
00000042 900A                    		MOV.W R2, 02H[R0]
00000044 D303                    		MOV.W R3, [R0]
                                 ;     120 {
                                 ;     121     if( command == USB_VBON )
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",121
00000046 6103                    		CMP #00H, R3
00000048 980A                    		MOV.W 02H[R0], R2
0000004A A809                    		MOV.L 04H[R0], R1
0000004C 18                   S  		BNE L18
0000004D                         L17:	; bb4
                                 ;     122     {
                                 ;     123         /* VBUS on */
                                 ;     124         usb_creg_set_vbout( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",124
0000004D 5F22                    		MOVU.W R2, R2
0000004F 05rrrrrr             A  		BSR _usb_creg_set_vbout
00000053 08                   S  		BRA L19
00000054                         L18:	; bb6
                                 ;     125     }
                                 ;     126     else
                                 ;     127     {
                                 ;     128         /* VBUS off */
                                 ;     129         usb_creg_clr_vbout( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",129
00000054 5F22                    		MOVU.W R2, R2
00000056 05rrrrrr             A  		BSR _usb_creg_clr_vbout
0000005A                         L19:	; bb13
0000005A 6611                    		MOV.L #00000001H, R1
                                 ;     130     }
                                 ;     131     /* Wait 1ms */
                                 ;     132     usb_cpu_DelayXms((uint16_t)1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",132
0000005C 05rrrrrr             A  		BSR _usb_cpu_DelayXms
00000060 6702                    		RTSD #08H
00000062                         _usb_hstd_TestBusReset:
                                 		.STACK	_usb_hstd_TestBusReset=12
                                 ;     133 }/* eof usb_hstd_TestVbusControl() */
                                 ;     134 
                                 ;     135 /******************************************************************************
                                 ;     136 Function Name   : usb_hstd_TestBusReset
                                 ;     137 Description     : Host electrical test USB-reset signal control.
                                 ;     138 Arguments       : USB_UTR_t *ptr   : USB internal structure. Selects USB channel.
                                 ;     139                 : uint16_t port    : port number
                                 ;     140 Return value    : none
                                 ;     141 ******************************************************************************/
                                 ;     142 void usb_hstd_TestBusReset(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",142
00000062 6080                    		SUB #08H, R0
00000064 A009                    		MOV.L R1, 04H[R0]
00000066 900A                    		MOV.W R2, 02H[R0]
                                 ;     143 {
                                 ;     144     /* USBRST=1, UACT=0 */
                                 ;     145     usb_creg_rmw_dvstctr( ptr, port, USB_USBRST, (USB_USBRST | USB_UACT) );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",145
00000068 B80A                    		MOVU.W 02H[R0], R2
0000006A A809                    		MOV.L 04H[R0], R1
0000006C 754450                  		MOV.L #00000050H, R4
0000006F 754340                  		MOV.L #00000040H, R3
00000072 05rrrrrr             A  		BSR _usb_creg_rmw_dvstctr
00000076                         L21:	; entry.split
00000076 754132                  		MOV.L #00000032H, R1
                                 ;     146 
                                 ;     147     /* Wait 50ms */
                                 ;     148     usb_cpu_DelayXms((uint16_t)50);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",148
00000079 05rrrrrr             A  		BSR _usb_cpu_DelayXms
0000007D                         L22:	; entry.split1
                                 ;     149     /* USBRST=0 */
                                 ;     150     usb_creg_clr_dvstctr( ptr, USB_PORT0, USB_USBRST ); //for UTMI
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",150
0000007D A809                    		MOV.L 04H[R0], R1
0000007F 754340                  		MOV.L #00000040H, R3
00000082 6602                    		MOV.L #00000000H, R2
00000084 05rrrrrr             A  		BSR _usb_creg_clr_dvstctr
00000088                         L23:	; entry.split2
00000088 FB1A2C01                		MOV.L #0000012CH, R1
                                 ;     151     usb_cpu_Delay1us( 300 );                            //for UTMI
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",151
0000008C 05rrrrrr             A  		BSR _usb_cpu_Delay1us
00000090                         L24:	; entry.split3
                                 ;     152 
                                 ;     153     /* USBRST=0, RESUME=0, UACT=1 */
                                 ;     154     usb_hstd_SetUact(ptr, port);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",154
00000090 B80A                    		MOVU.W 02H[R0], R2
00000092 A809                    		MOV.L 04H[R0], R1
00000094 05rrrrrr             A  		BSR _usb_hstd_SetUact
00000098                         L25:	; entry.split4
00000098 754114                  		MOV.L #00000014H, R1
                                 ;     155     /* Wait 10ms or more (USB reset recovery) */
                                 ;     156     usb_cpu_DelayXms((uint16_t)20);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",156
0000009B 05rrrrrr             A  		BSR _usb_cpu_DelayXms
0000009F 6702                    		RTSD #08H
000000A1                         _usb_hstd_TestSuspend:
                                 		.STACK	_usb_hstd_TestSuspend=12
                                 ;     157 }/* eof usb_hstd_TestBusReset() */
                                 ;     158 
                                 ;     159 /******************************************************************************
                                 ;     160 Function Name   : usb_hstd_TestSuspend
                                 ;     161 Description     : Host electrical test suspend control.
                                 ;     162 Arguments       : USB_UTR_t *ptr   : USB internal structure. Selects USB channel.
                                 ;     163                 : uint16_t port    : port number
                                 ;     164 Return value    : none
                                 ;     165 ******************************************************************************/
                                 ;     166 void usb_hstd_TestSuspend(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",166
000000A1 6080                    		SUB #08H, R0
000000A3 A009                    		MOV.L R1, 04H[R0]
000000A5 900A                    		MOV.W R2, 02H[R0]
                                 ;     167 {
                                 ;     168     /* SOF out disable */
                                 ;     169     usb_hreg_clr_uact( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",169
000000A7 B80A                    		MOVU.W 02H[R0], R2
000000A9 A809                    		MOV.L 04H[R0], R1
000000AB 05rrrrrr             A  		BSR _usb_hreg_clr_uact
000000AF                         L27:	; entry.split
000000AF 6611                    		MOV.L #00000001H, R1
                                 ;     170     /* Wait 1ms */
                                 ;     171     usb_cpu_DelayXms((uint16_t)1);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",171
000000B1 05rrrrrr             A  		BSR _usb_cpu_DelayXms
000000B5 6702                    		RTSD #08H
000000B7                         _usb_hstd_TestResume:
                                 		.STACK	_usb_hstd_TestResume=12
                                 ;     172 }/* eof usb_hstd_TestSuspend() */
                                 ;     173 
                                 ;     174 /******************************************************************************
                                 ;     175 Function Name   : usb_hstd_TestResume
                                 ;     176 Description     : Host electrical test resume control.
                                 ;     177 Arguments       : USB_UTR_t *ptr   : USB internal structure. Selects USB channel.
                                 ;     178                 : uint16_t port    : port number
                                 ;     179 Return value    : none
                                 ;     180 ******************************************************************************/
                                 ;     181 void usb_hstd_TestResume(USB_UTR_t *ptr, uint16_t port)
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",181
000000B7 6080                    		SUB #08H, R0
000000B9 A009                    		MOV.L R1, 04H[R0]
000000BB 900A                    		MOV.W R2, 02H[R0]
                                 ;     182 {
                                 ;     183     /* RESUME bit on */
                                 ;     184     usb_hreg_set_resume( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",184
000000BD B80A                    		MOVU.W 02H[R0], R2
000000BF A809                    		MOV.L 04H[R0], R1
000000C1 05rrrrrr             A  		BSR _usb_hreg_set_resume
000000C5                         L29:	; entry.split
000000C5 754114                  		MOV.L #00000014H, R1
                                 ;     185     /* Wait */
                                 ;     186     usb_cpu_DelayXms((uint16_t)20);
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",186
000000C8 05rrrrrr             A  		BSR _usb_cpu_DelayXms
000000CC                         L30:	; entry.split1
                                 ;     187     /* RESUME bit off */
                                 ;     188     usb_hreg_clr_resume( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",188
000000CC B80A                    		MOVU.W 02H[R0], R2
000000CE A809                    		MOV.L 04H[R0], R1
000000D0 05rrrrrr             A  		BSR _usb_hreg_clr_resume
000000D4                         L31:	; entry.split2
                                 ;     189     /* SOF on */
                                 ;     190     usb_hreg_set_uact( ptr, port );
                                 		.LINE  "C:\Workspace\e2studio\git\MT01\r_usb_basic\src\HW\host\r_usb_hostelectrical.c",190
000000D4 B80A                    		MOVU.W 02H[R0], R2
000000D6 A809                    		MOV.L 04H[R0], R1
000000D8 05rrrrrr             A  		BSR _usb_hreg_set_uact
000000DC 6702                    		RTSD #08H
                                 ;     191 }/* eof usb_hstd_TestResume() */
                                 ;     192 
                                 ;     193 #endif  /* (USB_FUNCSEL_USBIP0_PP == USB_HOST_PP) || (USB_FUNCSEL_USBIP1_PP == USB_HOST_PP) */
                                 ;     194 
                                 ;     195 /******************************************************************************
                                 ;     196 End of file
                                 ;     197 ******************************************************************************/
                                 		.END

Information List

TOTAL ERROR(S)    00000
TOTAL WARNING(S)  00000
TOTAL LINE(S)     00390   LINES

Section List

Attr         Size               Name
CODE     0000000222(000000DEH)  P

Cpu Type

-ISA=RXV1 -FPU

Command Parameter

-subcommand=C:\Users\LAFONS~1\AppData\Local\Temp\$ccrx7E87\$ccrx\r_usb_hostelectrical.src.cmd
    -nologo
    -isa=rxv1
    -fpu
    -show=conditionals,definitions,expansions
    -define=__RXV1=1
    -fint_register=0
    -debug
    -endian=little
-listfile=C:\Workspace\e2studio\git\MT01\EasyMak_build\r_usb_hostelectrical.lst
-output=C:\Workspace\e2studio\git\MT01\EasyMak_build\r_usb_basic\src\HW\host\r_usb_hostelectrical.obj
